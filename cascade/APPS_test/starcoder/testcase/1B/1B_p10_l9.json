[
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 5, \"Your solution is incorrect\"\nassert solution(8) == 5, \"Your solution is incorrect\"\nassert solution(9) == 5, \"Your solution is incorrect\"\nassert solution(10) == 5, \"Your solution is incorrect\"\nassert solution(11) == 3, \"Your solution is incorrect\"\nassert solution(12) == 4, \"Your solution is incorrect\"\nassert solution(13) == 6, \"Your solution is incorrect\"\nassert solution(14) == 6, \"Your solution is incorrect\"\nassert solution(15) == 7, \"Your solution is incorrect\"\nassert solution(16) == 8, \"Your solution is incorrect\"\nassert solution(17) == 8, \"Your solution is incorrect\"\nassert solution(18) == 8, \"Your solution is incorrect\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, f\"Your solution is incorrect. \\nExpected: {expected_solution}\\nGot: {solution}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''5\n1 8 6'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Solution is {solution}, but expected output is {expected_output}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\") == \"Output\\n5\\n1 8 6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5\\n1 6\") == \"3\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5\\n1 6\\n3 9\\n2 8\") == \"1\\n3 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5\\n1 6\\n3 9\\n2 8\\n2 9\") == \"3\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5\\n1 6\\n3 9\\n2 8\\n2 9\\n1 7\") == \"2\\n3 8 6\"",
        "num_ids_2": 114,
        "num_ids_4": 263
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"0\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"0\"",
        "num_ids_2": 106,
        "num_ids_4": 193
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\\n\") == \"20 8\"\nprint(\"Test Passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == (output, )\n\ninput_ = \"\"\"\n10\n10 2 8 1 2 4 1 20 4 5\n\"\"\"\n\noutput = \"20 8\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8\\n'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5\\n5 7 11 13 17 19') == '17 19\\n'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5\\n') == '20 8'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '20 8', 'Your solution is not correct.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"20 8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"20 8\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\nprint(\"All tests passed!\")",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4) == 24\nassert solution(5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6) == 56\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == 24\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == 56\nassert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == 24\n",
        "num_ids_2": 110,
        "num_ids_4": 151
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"24\"\n\nassert solution() == \"56\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example_input()) == \"24\", \"The correct output is not provided.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3,4,3) == 24\nassert solution(5,5,4) == 56",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1\"\nassert solution(4) == \"1\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"\nassert solution(7) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input '{input()}' does not match expected output '{output()}'.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 4 3 2') == '4'\nassert solution('1 2 4 3 2') == '4'\nassert solution('1 2 4 3 2') == '4'\nassert solution('1 2 4 3 2') == '4'\nassert solution('1 2 4 3 2') == '4'\nassert solution('1 2 4 3 2') == '4'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == '4\\nLRRR'\nassert solution(7) == '6\\nLRLRRR'\nassert solution(3) == '1\\nR'\nassert solution(4) == '4\\nLLRR'",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, \"1 2 4 3 2\") == \"4\"\nassert solution(7, \"1 3 5 6 5 4 2\") == \"6\"\nassert solution(3, \"2 2 2\") == \"1\"\nassert solution(4, \"1 2 4 3\") == \"4\"",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 116
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"LRRR\"\nassert solution(input()) == \"LRLRRR\"\nassert solution(input()) == \"R\"\nassert solution(input()) == \"LLRR\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 116
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 3\nassert solution(2) == 3\nassert solution(3) == 3\nassert solution(4) == -1\nassert solution(5) == 3\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 3",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input()) == expected_output, \\\n    f\"The solution is not correct. \\nExpected: {expected_output} \\nOutput: {solution(read_input())}\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\") == \"3\\n\", \"Test 1\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\\n\", \"Test 2\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\\n\", \"Test 3\"\nassert solution(\"2\\n2 8\") == \"3\\n\", \"Test 4\"\nprint(\"All tests passed\")",
        "num_ids_2": 58,
        "num_ids_4": 106
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == -1\nassert solution(\"\") == -1\nassert solution(\"1 2 3\\n\") == -1\nassert solution(\"2 3 4 5\\n\") == -1\nassert solution(\"1 1 1 1 1\\n\") == -1\nassert solution(\"1 1 1 1\\n\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\\n\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == -1\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 16,
        "num_ids_4": 48
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n\\n5\\n2 2 5 2 5\\n\\n4\\n1 3 3 7\\n\\n2\\n2 8\\n') == '3'\nassert solution('5\\n1 4 4 7 4 1\\n\\n5\\n2 2 5 2 5\\n\\n4\\n1 3 3 7\\n\\n2\\n2 8\\n') == '3'\nassert solution('4\\n1 3 3 7\\n\\n2\\n2 8\\n') == '-1'\nassert solution('2\\n2 8\\n') == '3'",
        "num_ids_2": 130,
        "num_ids_4": 178
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 4 4 7 4 1') == '3'\nassert solution('5\\n2 2 5 2 5') == '3'\nassert solution('4\\n1 3 3 7') == '-1'\nassert solution('2\\n2 8') == '3'\n",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"[2, 8]\") == \"3\"\nassert solution(\"[1, 4, 7, 7]\") == \"3\"\nassert solution(\"[1, 4, 7, 7, 4]\") == \"3\"\nassert solution(\"[1, 4, 7, 7, 4, 1, 5]\") == \"3\"\nassert solution(\"[1, 4, 7, 7, 4, 1, 5, 2]\") == \"3\"\nassert solution(\"[]\") == \"-1\"\nassert solution(\"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\") == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 82
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"The output should be 3\"\nassert solution(\"Input\") == 3, \"The output should be 3\"\nassert solution(\"Input\") == 3, \"The output should be 3\"\nassert solution(\"Input\") == -1, \"The output should be -1\"\nassert solution(\"Input\") == 3, \"The output should be 3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\\n3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\\n5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\\n0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 301,
        "num_ids_4": 484
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"YES\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\\n\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\\n\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\\n\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 194
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"\nassert solution(\"10 10 10 10\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\\n0 0 1 1\") == \"YES\"\n\nassert solution(\"2 2 4 4\\n2 2 6 6\\n4 4 8 8\\n4 4 10 10\") == \"NO\"\nassert solution(\"2 2 4 4\\n2 2 5 5\\n4 4 8 8\\n4 4 10 10\") == \"YES\"\nassert solution(\"0 0 499999 1000000\\n0 0 499999 1000000\\n1000000 0 1000000 1000000\\n1000000 0 1000000 1000000\") == \"NO\"\nassert solution(\"0 0 1000000 1000000\\n0 0 1000000 1000000\\n0 0 1000000 1000000\\n0 0 1000000 1000000\") == \"YES\"\n\nassert solution(\"5 2 10 5\\n1 1 6 7\\n1 1 8 9\\n1 1 11 12\\n1 1 13 14\\n1 1 15 16\\n1 1 17 18\\n1 1 19 20\\n1 1 21 22\") == \"NO\"\nassert solution(\"5 2 10 5\\n1 1 7 8\\n1 1 9 10\\n1 1 11 12\\n1 1 13 14\\n1 1 15 16\\n1 1 17 18\\n1 1 19 20\\n1 1 21 22\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1098) == 20, \"The number of different numbers that are reachable from 1098 is incorrect.\"\nassert solution(10) == 19, \"The number of different numbers that are reachable from 10 is incorrect.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19\n\nassert solution(10) == 19\nassert solution(1000) == 1001\nassert solution(100000) == 100001\nassert solution(10000000) == 10000001\nassert solution(1000000000) == 1000000001\nassert solution(100000000000) == 100000000001\nassert solution(10000000000000) == 10000000000001\nassert solution(1000000000000000) == 1000000000000001\nassert solution(100000000000000000) == 100000000000000001\nassert solution(10000000000000000000) == 10000000000000000001\nassert solution(10000000000000000000000) == 100000000000000000001\nassert solution(1000000000000000000000000) == 100000000000000000000000001\nassert solution(100000000000000000000000000000) == 100000000000000000000000000001\nassert solution(100000000000000000000000000000000) == 10000000000000000000000000000001\nassert solution(10000000000000000000000000000000000) == 1000000000000000000000000000000001\nassert solution(10000000000000000000000000000000000000) == 100000000000000000000000000000000001\nassert solution(1000000000000000000000000000000000000000) == 10000000000000000000000000000000000001\nassert solution(100000000000000000000000000000000000000000) == 10000000000000000000000000000000000000001\nassert solution(10000000000000000000000000000000000000000000) == 100000000000000000000000000000000000000001\nassert solution(1000000000000000000000000000000000",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1098) == 20, \"The given solution is incorrect.\"\nassert solution(10) == 19, \"The given solution is incorrect.\"\nassert solution(5) == 5, \"The given solution is incorrect.\"",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1098\") == \"20\", \"The output is incorrect.\"\nassert solution(\"10\") == \"19\", \"The output is incorrect.\"\nassert solution(\"1\") == \"20\", \"The output is incorrect.\"\nassert solution(\"1000000000\") == \"2341874293183573083363385953951042605045601237731162080820718339658956551143623433435436737474948740962271982832607442718276436287368879736897265398149897649818912615662694746339877906548963061814001727929429313000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 38,
        "num_ids_4": 1027
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1098) == 20, \"Expected output: 20, actual output: {}\".format(solution(1098))\nassert solution(10) == 19, \"Expected output: 19, actual output: {}\".format(solution(10))\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1098\") == 20\nassert solution(\"10\") == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1098) == 20, \"1098 should be reachable from 1098\"\nassert solution(10) == 19, \"10 should be reachable from 10\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"5 3 1 2 4\n7 3 2 1 4 5 6\n7 4 2 3 6 5 1\n2 1 4 5 3\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4 \\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6 \\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1 \\n\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3 \\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4 \\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6 \\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1 \\n\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3 \\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\\n7\\n7 0 0 1 4 0 6\\n\\n7\\n7 4 0 3 0 5 1\\n\\n5\\n2 1 0 0 0\\n\") == \"5 3 1 2 4\\n7 3 2 1 4 5 6\\n7 4 2 3 6 5 1\\n2 1 4 5 3\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4 \"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6 \"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1 \"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '7 3 2 1 4 5 6 \\n'\nassert solution(open('input_1.txt', 'r')) == '7 4 2 3 6 5 1 \\n'\nassert solution(open('input_2.txt', 'r')) == '2 1 4 5 3 \\n'\nassert solution(open('input_3.txt', 'r')) == '5 3 1 2 4 \\n'\nassert solution(open('input_4.txt', 'r')) == '5 3 1 2 4 \\n'",
        "num_ids_2": 64,
        "num_ids_4": 122
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4 \\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6 \\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1 \\n\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3 \\n\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"5 3 1 2 4\"\nassert solution(7) == \"7 3 2 1 4 5 6\"\nassert solution(7) == \"7 4 2 3 6 5 1\"\nassert solution(5) == \"2 1 4 5 3\"\nassert solution(5) == \"5 3 1 2 4\"\nassert solution(7) == \"7 3 2 1 4 5 6\"\nassert solution(7) == \"7 4 2 3 6 5 1\"\nassert solution(5) == \"2 1 4 5 3\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"1\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"13\") == \"1\"\nassert solution(\"14\") == \"1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"16\") == \"1\"\nassert solution(\"17\") == \"1\"\nassert solution(\"18\") == \"1\"\nassert solution(\"19\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"21\") == \"1\"\nassert solution(\"22\") == \"1\"\nassert solution(\"23\") == \"1\"\nassert solution(\"24\") == \"1\"\nassert solution(\"25\") == \"1\"\nassert solution(\"26\") == \"1\"\nassert solution(\"27\") == \"1\"\nassert solution(\"28\") == \"1\"\nassert solution(\"29\") == \"1\"\nassert solution(\"30\") == \"1\"\nassert solution(\"31\") == \"1\"\nassert solution(\"32\") == \"1\"\nassert solution(\"33\") == \"1\"\nassert solution(\"34\") == \"1\"\nassert solution(\"35\") == \"1\"\nassert solution(\"36\") == \"1\"\nassert solution(\"37\") == \"1\"\nassert solution(\"38\") == \"1\"\nassert solution(\"39\") == \"1\"\nassert solution(\"40\") == \"1\"\nassert solution(\"41\") == \"1\"\nassert solution(\"42\") == \"1\"\nassert solution(\"43\") == \"1\"\nassert solution(\"44\") == \"1\"\nassert solution(\"45\") == \"1\"\nassert solution(\"46\") == \"1\"\nassert solution(\"47\") == \"1\"\nassert solution(\"48\") == \"1\"\nassert solution(\"49\") == \"1\"\nassert solution(\"50\") == \"1\"\nassert solution(\"51\") == \"1\"\nassert solution(\"52\") == \"1\"\nassert solution(\"53\") == \"1\"\nassert solution(\"54\") == \"1\"\nassert solution(\"55\") == \"1\"\nassert solution(\"56\") == \"1\"\nassert solution(\"57\") == \"1\"\nassert solution(\"58\") == \"1\"\nassert solution(\"59\") == \"1\"\nassert solution(\"60\") == \"1\"\nassert solution(\"61\") == \"1\"\nassert solution(\"62\") == \"1\"\nassert solution(\"63\") == \"1\"\nassert solution(\"64\") == \"1\"\nassert solution(\"65\") == \"1\"\nassert solution(\"66\") == \"1\"\nassert solution(\"67\") == \"1\"\nassert solution(\"68\") == \"1\"\nassert solution(\"69\") == \"1\"\nassert solution(\"70\") == \"1\"\nassert solution(\"71\") == \"1\"\nassert solution(\"72\") == \"1\"\nassert solution(\"73\") == \"1\"\nassert solution(\"74\") == \"1\"\nassert solution(\"75\") == \"1\"\nassert solution(\"76\") == \"1\"\nassert solution(\"77\") == \"1\"\nassert solution(\"78\") == \"1\"\nassert solution(\"79\") == \"1\"\nassert solution(\"80\") == \"1\"\nassert solution(\"81\") == \"1\"\nassert solution(\"82\") == \"1\"\nassert solution(\"83\") == \"1\"\nassert solution(\"84\") == \"1\"\nassert solution(\"85\") == \"1\"\nassert solution(\"86\") == \"1\"\nassert solution(\"87\") == \"1\"\nassert solution(\"88\") == \"1\"\nassert solution(\"89\") == \"1\"\nassert solution(\"90\") == \"1\"\nassert solution(\"91\") == \"1\"\nassert solution(\"92\") == \"1\"\nassert solution(\"93\") == \"1\"\nassert solution(\"94\")",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but instead returned {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\n1 1 2 2\\nYES\\n2 1 1 2 1\\nNO'\nassert solution() == 'YES\\n1 1 2 2\\nYES\\n2 1 1 2 1\\nNO'\nassert solution() == 'YES\\n1 1 2 2\\nYES\\n2 1 1 2 1\\nNO'",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4 2\\n1 2 2 3\\n\\nOutput\\nYES\\n1 1 2 2\\n\\nInput\\n5 2\\n3 2 1 2 3\\n\\nOutput\\nYES\\n2 1 1 2 1\\n\\nInput\\n5 2\\n2 1 1 2 1\\n\\nOutput\\nNO\\n\\nNote\\n\\nIn the first example the answer 2 1 2 1 is also acceptable.\\n\\nIn the second example the answer 1 1 1 2 2 is also acceptable.\\n\\nThere exist other acceptable answers for both examples.\\n\") == \"YES\\n1 1 2 2\\n\\nYES\\n2 1 1 2 1\\n\\nNO\\n\\nIn the first example the answer 2 1 2 1 is also acceptable.\\n\\nIn the second example the answer 1 1 1 2 2 is also acceptable.\\n\\nThere exist other acceptable answers for both examples.\"",
        "num_ids_2": 259,
        "num_ids_4": 259
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"4 2\\n1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 1 1 2 1\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"4 2\\n1 2 2 3\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\") == \"NO\"",
        "num_ids_2": 64,
        "num_ids_4": 121
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n3 2 1 2 3\\n2 1 1 2 1\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"4 2\\n1 2 2 3\\n1 1 1 1 1\") == \"NO\"\nassert solution(\"5 2\\n2 1 1 2 1\\n2 1 1 2 1\\n2 1 1 2 1\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n2 1 1 2 1\\n2 1 1 2 1\\n2 1 1 2 1\") == \"YES\\n1 1 1 2 1\"",
        "num_ids_2": 77,
        "num_ids_4": 200
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 5 0\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 1, 2, 1, 3]) == 'YES'\nassert solution([1, 2, 1]) == 'YES'\nassert solution([2, 3, 2, 2]) == 'YES'\nassert solution([1, 1, 2]) == 'YES'\nassert solution([10, 100, 10]) == 'NO'\nassert solution([1, 2, 2, 1]) == 'YES'\nassert solution([1, 3, 2, 2, 3, 1]) == 'YES'\nassert solution([1234]) == 'YES'",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=stdin) == expected, f\"Output does not match expected result: {solution(stdin=stdin)}!= {expected}\"\n\nexpected = \"YES\"\nstdin = \"\"\"\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 1, 2, 1, 5]) == 'YES'\nassert solution([1, 2, 2, 3, 2, 3]) == 'YES'\nassert solution([1, 1, 2, 1, 1, 1, 1, 1]) == 'NO'\nassert solution([10, 100, 10]) == 'NO'\nassert solution([1, 2, 2, 3, 1, 2, 2, 3, 1]) == 'YES'\nassert solution([2, 3, 2, 2, 2, 1]) == 'NO'\nassert solution([2, 1, 1, 2, 3]) == 'YES'\nassert solution([1, 1, 1, 1, 1, 2, 2, 1, 1]) == 'YES'\nassert solution([1, 1, 2, 2, 1, 2, 2, 2, 1]) == 'NO'\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 2]) == 'YES'\nassert solution([1, 1, 2, 2, 2, 2, 1, 2, 2]) == 'YES'\nassert solution([1, 1, 1, 1, 1, 2, 2, 2, 2]) == 'NO'\nassert solution([1, 1, 1, 1, 1, 1, 2, 2, 2]) == 'YES'\nassert solution([1, 1, 1, 1, 1, 2, 2, 2, 2]) == 'YES'\nassert solution([1, 1, 1, 1, 1, 2, 2, 2, 2]) == 'YES'\nassert solution([1, 1, 1, 1, 1, 2, 2, 2, 2]) == 'NO'",
        "num_ids_2": 47,
        "num_ids_4": 98
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\n",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Solution returned {solution(input)}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"\"\"5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\"\"\") == \"YES\\nYES\\nNO\\nYES\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\", \"Incorrect solution\"\nassert solution(stdin) == \"YES\", \"Incorrect solution\"\nassert solution(stdin) == \"NO\", \"Incorrect solution\"\nassert solution(stdin) == \"YES\", \"Incorrect solution\"\nassert solution(stdin) == \"NO\", \"Incorrect solution\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed\"\nfor test_case in range(int(stdin)):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    palindromes = []\n    for i in range(n):\n        for j in range(i+3, n+1):\n            if a[i:j] == a[i:j][::-1]:\n                palindromes.append(a[i:j])\n    if palindromes:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '1557'\nassert solution(5) == '99999'\nassert solution(2) == '33'",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"4\\n1337\\n1 2 5 4 6 6 3 1 9\\n\") == 1557\nassert solution(stdin=\"5\\n11111\\n9 8 7 6 5 4 3 2 1\\n\") == 99999\nassert solution(stdin=\"2\\n33\\n1 1 1 1 1 1 1 1 1\\n\") == 33",
        "num_ids_2": 84,
        "num_ids_4": 121
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"\"  # Test with None\nassert solution(\"\") == \"\"  # Test with an empty string\nassert solution(\"1337\") == \"1553\"  # Test with a long decimal number\nassert solution(\"11111\") == \"99999\"  # Test with a string with only digits\nassert solution(\"33\") == \"33\"  # Test with a string with only digits and no repetitions",
        "num_ids_2": 26,
        "num_ids_4": 77
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1337\") == \"1553\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"33\") == \"33\"",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1337\") == \"1553\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"33\") == \"33\"",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1337\\n1 2 5 4 6 6 3 1 9\") == \"1553\"\nassert solution(\"11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\"\nassert solution(\"33\\n1 1 1 1 1 1 1 1 1 1\") == \"33\"",
        "num_ids_2": 72,
        "num_ids_4": 105
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1337\") == \"1557\", \"Test 1 failed\"\nassert solution(\"11111\") == \"99999\", \"Test 2 failed\"\nassert solution(\"33\") == \"33\", \"Test 3 failed\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 64
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1337\") == \"1553\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"33\") == \"33\"",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'\nassert solution('2') == '33'",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n\nfor i in range(t):\n    a, b, c = map(int, input().split())\n    res = solution(f'{a} {b} {c}')\n    print(res)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"res\\n1\"\nassert solution(input()) == \"res\\n2\\n114 228 456\"\nassert solution(input()) == \"res\\n3\"\nassert solution(input()) == \"res\\n4\\n6 24 48\"",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"res\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '102'\nassert solution(open('input.txt', 'r')) == '114 228 456'\nassert solution(open('input.txt', 'r')) == '4'\nassert solution(open('input.txt', 'r')) == '6'\nassert solution(open('input.txt', 'r')) == '18 18 18'\nassert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input.txt', 'r')) == '100 100 100'\nassert solution(open('input.txt', 'r')) == '7'\nassert solution(open('input.txt', 'r')) == '1 22 22'\nassert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input.txt', 'r')) == '1 19 38'\nassert solution(open('input.txt', 'r')) == '8'\nassert solution(open('input.txt', 'r')) == '6 24 48'\n",
        "num_ids_2": 34,
        "num_ids_4": 80
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 188,
        "num_ids_4": 188
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n1 1 3\\n102\"\n\nassert solution() == \"1\\n1 1 3\"\n\nassert solution() == \"1\\n1 1 3\"\n\nassert solution() == \"1\\n4 8 16\"\n\nassert solution() == \"1\\n6 24 48\"",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n1 1 3\\n102'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\nassert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\nassert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\nassert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\nassert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\nassert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"",
        "num_ids_2": 196,
        "num_ids_4": 392
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\", \"Incorrect output for test case 1\"\nassert solution(input()) == \"1 1 3\", \"Incorrect output for test case 2\"\nassert solution(input()) == \"102\", \"Incorrect output for test case 3\"\nassert solution(input()) == \"114 228 456\", \"Incorrect output for test case 4\"\nassert solution(input()) == \"4\", \"Incorrect output for test case 5\"\nassert solution(input()) == \"6\", \"Incorrect output for test case 6\"\nassert solution(input()) == \"18 18 18\", \"Incorrect output for test case 7\"\nassert solution(input()) == \"1\", \"Incorrect output for test case 8\"\nassert solution(input()) == \"100 100 100\", \"Incorrect output for test case 9\"\nassert solution(input()) == \"7\", \"Incorrect output for test case 10\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\", \"Your solution is incorrect.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 3 7\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n\") == \"0\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()} and expected output {output()}\"\n\ninput_arr = list(map(int, input().split()))\nn = len(input_arr)\n\na = input_arr\n\ni = 0\nmin_instability = float('inf')\n\nwhile i < n:\n    a[i] = a[i+1]\n    i += 1\n    min_instability = min(min_instability, a[i] - a[i-1])\n\nprint(min_instability)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n0\\n\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 45
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4\\n1 3 3 7\\nOutput\\n2\\nInput\\n2\\n1 100000\\nOutput\\n0') == 'Output\\n2\\nInput\\n2\\n1 100000\\nOutput\\n0\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\\n\") == \"2\"\nassert solution(\"2\\n1 100000\\n0\\n\") == \"0\"\nassert solution(\"3\\n1 3 2 7\\n0 1 2\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n0 1 2 3 4\\n\") == \"0\"\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 2\n    1 3 1\n    1 5 1\n    \n''') == '''\n1 2 3 0 3 \n'''\n\nassert solution('''\n    3 2\n    1 3 1\n    1 2 1\n    \n''') == '''\n-1\n'''\n\nassert solution('''\n    10 3\n    4 7 2\n    1 10 3\n    8 9 1\n    \n''') == '''\n2 2 2 1 1 0 4 3 4 4 \n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3 \\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1 \\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4 \\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output.\\nExpected: {expected_output}\\nReceived: {solution(stdin)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 2\n    1 3 1\n    1 5 1\n    ''') == '1 2 3 0 3'\n\nassert solution('''\n    3 2\n    1 3 1\n    1 2 1\n    ''') == '-1'\n\nassert solution('''\n    10 3\n    4 7 2\n    1 10 3\n    8 9 1\n    ''') == '2 2 2 1 1 0 4 3 4 4'\n\nassert solution('''\n    1 1 1 1 1 1 1 1 1 1\n    ''') == '1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''\n    1 1 1 1 1 1 1 1 1 1\n    ''') == '1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''\n    1 1 1 1 1 1 1 1 1 1\n    ''') == '1 1 1 1 1 1 1 1 1 1'\n\nassert solution('''\n    1 1 1 1 1 1 1 1 1 1\n    ''') == '1 1 1 1 1 1 1 1 1 1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, \"The solution is not correct.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '1 2 3 0 3 \\n'\nassert solution('3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '-1 \\n'\nassert solution('10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n') == '2 2 2 1 1 0 4 3 4 4 \\n'",
        "num_ids_2": 149,
        "num_ids_4": 206
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is {solution(input())}, but the expected output is {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(test_cases, expected_outputs)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"120 51840\") == \"7\", \"The expected output is 7, but got: \" + solution(\"120 51840\")\nassert solution(\"42 42\") == \"0\", \"The expected output is 0, but got: \" + solution(\"42 42\")\nassert solution(\"48 72\") == \"-1\", \"The expected output is -1, but got: \" + solution(\"48 72\")",
        "num_ids_2": 78,
        "num_ids_4": 113
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120, 51840) == 7\nassert solution(42, 42) == 0\nassert solution(48, 72) == -1\n",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='120 51840') == '7'\nassert solution(stdin='42 42') == '0'\nassert solution(stdin='48 72') == '-1'\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\\n\"\nassert solution(\"42 42\") == \"0\\n\"\nassert solution(\"48 72\") == \"-1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\\n\" # Correct output\nprint(\"OK\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"120 51840\") == \"7\", \"Test failed\"\nassert solution(\"42 42\") == \"0\", \"Test failed\"\nassert solution(\"48 72\") == \"-1\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"10\"\nassert solution(1) == \"0\"\nassert solution(42) == \"0\"\nassert solution(48) == \"-1\"\nassert solution(120) == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(['aba', 'cat']) == 'ababababa'\nassert solution(['cat', 'dog', 'bat']) == 'catdogbat'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ababababa\"\nassert solution(input()) == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"For input {stdin}, expected output {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == \"ababababa\"\nassert solution(3, 2) == \"catcat\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"2\" # Input 4\nassert solution(2) == \"3\" # Input 2\nassert solution(5) == \"0\" # Input 5",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\\n\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4 \\n\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 79
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\\n') == '3\\n4 1 5\\n2\\n'\nassert solution('5\\n2 1 2 4 3\\n0\\n') == '0\\n'\nassert solution('4\\n8 3 5 2\\n0\\n') == '2\\n'",
        "num_ids_2": 92,
        "num_ids_4": 118
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\nassert solution('') == '0'\n",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"2\\n5 3\") == \"1\\n2\"",
        "num_ids_2": 52,
        "num_ids_4": 91
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n\") == \"3\\n4 1 5\\n\"\nassert solution(\"4\\n8 3 5 2\\n\") == \"2\\n1 4\\n\"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 85
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 233",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"4\\n\"\nassert solution(\"5 6\") == \"15\\n\"\nassert solution(\"5 7\") == \"-1\\n\"\nassert solution(\"10 100\") == \"233\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"\n",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}\\nExpected output: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"",
        "num_ids_2": 46,
        "num_ids_4": 77
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 116,
        "num_ids_4": 152
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(dedent('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''')) == 'YES\\n2 1\\n2 3\\n3 4'\n\nassert solution(dedent('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''')) == 'YES\\n1 2\\n1 3\\n4 1'\n\nassert solution(dedent('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''')) == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n4 1'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO'",
        "num_ids_2": 112,
        "num_ids_4": 148
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"\n",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10:00\\n11:00') == '10:30'\nassert solution('11:10\\n11:12') == '11:11'\nassert solution('01:02\\n03:02') == '02:02'",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"test.in\", \"r\").read()) == \"10:30\\n11:11\\n02:02\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == '1'\nassert solution(4) == '2'\nassert solution(27) == '5'\nassert solution(42) == '6'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1, \"Solution 1 failed.\"\nassert solution(4) == 2, \"Solution 2 failed.\"\nassert solution(27) == 5, \"Solution 3 failed.\"\nassert solution(42) == 6, \"Solution 4 failed.\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1, \"Input 2, expected output 1\"\nassert solution(4) == 2, \"Input 4, expected output 2\"\nassert solution(27) == 5, \"Input 27, expected output 5\"\nassert solution(42) == 6, \"Input 42, expected output 6\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"1\"\nassert solution(4) == \"2\"\nassert solution(27) == \"5\"\nassert solution(42) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(42) == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"1\"\nassert solution() == \"2\\n\", \"2\"\nassert solution() == \"0\\n\", \"0\"\nassert solution() == \"7\\n\", \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"\nassert solution(\"5\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"4\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"4\\n1 3\\n2 6\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match. Expected: {expected_output}, Received: {solution(input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1\nassert solution(2) == 2\nassert solution(1) == 1\nassert solution(10) == 7\nassert solution(5) == 2\nassert solution(100) == 0\nassert solution(101) == 1\nassert solution(102) == 2",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n2\\n10 10\\n') == 'NO\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'",
        "num_ids_2": 76,
        "num_ids_4": 97
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"For example {stdin}, expected {expected}, but got {solution(stdin)}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\nYES') == 'YES'\nassert solution('3\\n4 5 3\\n\\n2\\n10 10\\n\\nNO') == 'NO'\nassert solution('2\\n10 10\\n\\nYES') == 'YES'",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n') == 'YES'\nassert solution('3\\n4 5 3\\n\\n2\\n10 10\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'",
        "num_ids_2": 78,
        "num_ids_4": 97
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5\\n2 1 1 2 5\\n\\nOutput\\nYES\\n\\nInput\\n3\\n4 5 3\\n\\nOutput\\nNO\\n\\nInput\\n2\\n10 10\\n\\nOutput\\nYES') == 'YES\\nYES\\nYES\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n') == 'YES'\nassert solution('3\\n4 5 3\\n\\n2\\n10 10\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'",
        "num_ids_2": 78,
        "num_ids_4": 97
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"2 1 1 2 5\") == \"YES\"\nassert solution(\"3 4 5 3\") == \"NO\"\nassert solution(\"2 10 10\") == \"YES\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\nasdf\\n') == 4\nassert solution('5 6\\naaaaa\\n') == 15\nassert solution('5 7\\naaaaa\\n') == -1\nassert solution('10 100\\najihiushda\\n') == 233",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\naaaaa') == 15, \"Expected 15, got {solution('5 6\\naaaaa')}\"\nassert solution('5 7\\naaaaa') == -1, \"Expected -1, got {solution('5 7\\naaaaa')}\"\nassert solution('10 100\\najihiushda') == 233, \"Expected 233, got {solution('10 100\\najihiushda')}\"",
        "num_ids_2": 70,
        "num_ids_4": 118
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\naaaaa') == 15, \"Incorrect output for example 1\"\nassert solution('5 7\\naaaaa') == -1, \"Incorrect output for example 2\"\nassert solution('10 100\\najihiushda') == 233, \"Incorrect output for example 3\"",
        "num_ids_2": 49,
        "num_ids_4": 80
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\nanaaa\") == \"15\"\nassert solution(\"5 7\\nanaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 31,
        "num_ids_4": 69
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n4 5\\nasdf\\n\\nOutput\\n4\\n\\nInput\\n5 6\\naaaaa\\n\\nOutput\\n15\\n\\nInput\\n5 7\\naaaaa\\n\\nOutput\\n-1\\n\\nInput\\n10 100\\ajihiushda\\n\\nOutput\\n233\\n\\n\\n-----Examples-----\\nInput\\n4 5\\nasdf\\n\\nOutput\\n4\\n\\nInput\\n5 6\\naaaaa\\n\\nOutput\\n15\\n\\nInput\\n5 7\\naaaaa\\n\\nOutput\\n-1\\n\\nInput\\n10 100\\ajihiushda\\n\\nOutput\\n233\\n\\n\\n-----Note-----\\n\\nIn the first example we can generate S = { \"asdf\", \"asd\", \"adf\", \"asf\", \"sdf\" }. The cost of the first element in S is 0 and the cost of the others is 1. So the total cost of S is 4.\\ndef solution(stdin: str) -> int:\n    pass",
        "num_ids_2": 278,
        "num_ids_4": 278
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'4 5\\nasdf') == '4'\nassert solution(b'5 6\\nanaaa') == '15'\nassert solution(b'5 7\\nanaaa') == '-1'\nassert solution(b'10 100\\najihiushda') == '233'",
        "num_ids_2": 35,
        "num_ids_4": 77
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\nasdf') == '4'\nassert solution('5 6\\naaaaa') == '15'\nassert solution('5 7\\naaaaa') == '-1'\nassert solution('10 100\\najihiushda') == '233'",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"233\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()} and expected output {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}!= {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"4\\n\"\nassert solution(\"3 2 2\") == \"7\\n\"\nassert solution(\"1 100 1\") == \"3\\n\"\nassert solution(\"30 20 10\") == \"39\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\") == \"4\\n\"\nassert solution(\"3 2 2\\n1 100 1\\n30 20 10\") == \"7\\n\"\nassert solution(\"1 100 1\\n30 20 10\") == \"3\\n\"\nassert solution(\"30 20 10\") == \"39\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 125
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"4\\n\"\nassert solution(\"3 2 2\") == \"7\\n\"\nassert solution(\"1 100 1\") == \"3\\n\"\nassert solution(\"30 20 10\") == \"39\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"4\\n\", \"Expected output: 4\\n, but got: {}\".format(solution(\"2 1 1\"))\nassert solution(\"3 2 2\") == \"7\\n\", \"Expected output: 7\\n, but got: {}\".format(solution(\"3 2 2\"))\nassert solution(\"1 100 1\") == \"3\\n\", \"Expected output: 3\\n, but got: {}\".format(solution(\"1 100 1\"))\nassert solution(\"30 20 10\") == \"39\\n\", \"Expected output: 39\\n, but got: {}\".format(solution(\"30 20 10\"))",
        "num_ids_2": 78,
        "num_ids_4": 168
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\") == \"4\"\nassert solution(\"3 2 2\\n1 100 1\\n30 20 10\") == \"7\"\nassert solution(\"1 100 1\\n30 20 10\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 73,
        "num_ids_4": 117
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\") == \"4\"\nassert solution(\"3 2 2\\n1 100 1\\n30 20 10\") == \"7\"\nassert solution(\"1 100 1\\n30 20 10\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 73,
        "num_ids_4": 117
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case_num} failed\"\nfor test_case_num, input_str in enumerate(test_cases):\n    expected_output = 'YES' if solution(input_str) == 'YES' else 'NO'\n    assert expected_output == solution(input_str), f\"Test case {test_case_num} failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\", \"Incorrect answer\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1",
        "num_ids_2": 296,
        "num_ids_4": 592
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1",
        "num_ids_2": 296,
        "num_ids_4": 592
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n') == 'NO'",
        "num_ids_2": 290,
        "num_ids_4": 586
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\\n\"",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\" # correct",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 163,
        "num_ids_4": 163
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == '1', \"Test case 5 failed\"\nassert solution(6) == '1', \"Test case 6 failed\"\nassert solution(3) == '0', \"Test case 3 failed\"\nassert solution(5) == '1', \"Test case 5 failed\"\nassert solution(6) == '1', \"Test case 6 failed\"\nassert solution(3) == '0', \"Test case 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"1\" # The answer is 1\nassert solution(6) == \"1\" # The answer is 1\nassert solution(3) == \"0\" # The answer is 0\nassert solution(2) == \"1\" # The answer is 1",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n()))()\\n') == '5\\n'\nassert solution('3\\n(()\\n') == '4\\n'\nassert solution('2\\n(((\\n') == '0\\n'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n())()\\n3\\n(()\\n2\\n(((\\n\") == 5\nassert solution(\"5\\n())()\\n3\\n(())\\n2\\n(()\\n2\\n(()\\n\") == 4\nassert solution(\"3\\n(())\\n2\\n(()\\n2\\n(()\\n\") == 0",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 5\nassert solution(3) == 4\nassert solution(2) == 0",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5\n()))()\n''') == 5\nassert solution('''\n3\n(()\n''') == 4\nassert solution('''\n2\n(((\n''') == 0",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\nprint(\"All test cases pass\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n()))()\\n\") == 5\nassert solution(\"3\\n(()\\n\") == 4\nassert solution(\"2\\n(((\\n\") == 0\n\nprint(f\"All test cases pass. Solution: {solution('5\\n()))()\\n\")",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n()())\\n3\\n(()\\n2\\n(((\\n\\n0\") == 5\nassert solution(\"5\\n()())\\n3\\n(()\\n2\\n(((\\n\\n1000000007\") == 5\nassert solution(\"5\\n()())\\n3\\n(()\\n2\\n(((\\n\\n1000000008\") == 0",
        "num_ids_2": 69,
        "num_ids_4": 108
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n(())()\\n3\\n(()\\n2\\n(((\\n')) == 5\nassert solution('3\\n(())()\\n3\\n(())()\\n2\\n(())()\\n2\\n(())()\\n3\\n(())()\\n3\\n(())()\\n') == 4\nassert solution('2\\n(())()\\n2\\n(())()\\n2\\n(())()\\n2\\n(())()\\n') == 0",
        "num_ids_2": 70,
        "num_ids_4": 102
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n()))()\\n3\\n(()\\n2\\n(((\\n\") == 5\nassert solution(\"3\\n(())\\n()()\\n()()\\n(())()\\n()()\\n(())()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()()\\n(())()\\n()",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"((()))\") == \"4\"\nassert solution(\"(()())\") == \"4\"\nassert solution(\"((()()))()\") == \"4\"\nassert solution(\"()((()))()\") == \"4\"\nassert solution(\"()))()\") == \"5\"\nassert solution(\"()\")) == \"1\"\nassert solution(\"()(())())()\") == \"1\"\nassert solution(\"()(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())\")) == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\nassert solution(\"((()))\") == \"0\"\nassert solution(\"(())()\") == \"0\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"())()\") == \"0\"\nassert solution(\"()))()\") == \"0\"\nassert solution(\"())()))\") == \"1\"\nassert solution(\"())(())())()\") == \"1\"\nassert solution(\"())(())())(())()\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5071) == 4, \"Expected 4, got {}\".format(solution(5071))\nassert solution(705) == 1, \"Expected 1, got {}\".format(solution(705))\nassert solution(1241367) == -1, \"Expected -1, got {}\".format(solution(1241367))\n\nfrom typing import List\n",
        "num_ids_2": 56,
        "num_ids_4": 91
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5071) == 4, \"Expected: 4, Got: {}\".format(solution(5071))\nassert solution(705) == 1, \"Expected: 1, Got: {}\".format(solution(705))\nassert solution(1241367) == -1, \"Expected: -1, Got: {}\".format(solution(1241367))",
        "num_ids_2": 60,
        "num_ids_4": 97
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5071) == 4, \"Test case 1 failed\"\nassert solution(705) == 1, \"Test case 2 failed\"\nassert solution(1241367) == -1, \"Test case 3 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 62
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"8\\naaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"7\\nabcdedc\") == \"3\\n1 1 1 1 1 2 3\"\nassert solution(\"5\\nabcde\") == \"1\\n1 1 1 1 1 1\"\n",
        "num_ids_2": 66,
        "num_ids_4": 123
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"The output is wrong. Expected {output()}, but got {solution(input())}.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(9) == 2\nassert solution(8) == 2\nassert solution(7) == 3\nassert solution(5) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abcde') == '1 1 1 1 1 1'\nassert solution('aabbb') == '1 1 2 1 1'\nassert solution('abcdef') == '1 1 1 1 1 2'\nassert solution('abcabc') == '1 1 1 1 1 2'\nassert solution('aabbbc') == '1 1 1 2 1 1'\nassert solution('abcdeabcd') == '1 1 1 1 1 1 1 1 1 2 1 1 1'\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1 1 2 1 2 1 2 1 2\"\nassert solution(3) == \"1 1 1 1 1 2 3\"\nassert solution(4) == \"1 1 1 1 1 1 1\"\nassert solution(5) == \"1 1 1 1 1 1 1 1\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacbecfd\") == \"1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"1 1 1 1 1 2 3\"\nassert solution(\"abcde\") == \"1 1 1 1 1 1\"",
        "num_ids_2": 55,
        "num_ids_4": 100
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\nabacbecfd\\n\") == \"2\\n1 1 2 1 2 1 2 1 2 \"\nassert solution(\"8\\naabbcbb\\n\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"7\\nabcdedc\\n\") == \"3\\n1 1 1 1 1 2 3 \"\nassert solution(\"5\\nabcde\\n\") == \"1\\n1 1 1 1 1 1\"\n\nfrom typing import List",
        "num_ids_2": 69,
        "num_ids_4": 130
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3 \"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\"",
        "num_ids_2": 61,
        "num_ids_4": 112
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcdedc\") == \"def\"\nassert solution(\"aaabbcbb\") == \"123\"\nassert solution(\"abacbecfd\") == \"2\"\nassert solution(\"abcde\") == \"123\"\nassert solution(\"abc\") == \"123\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin.readline())) == \"YES\"\nassert solution(solution(stdin.readline())) == \"YES\"\nassert solution(solution(stdin.readline())) == \"YES\"\nassert solution(solution(stdin.readline())) == \"YES\"\nassert solution(solution(stdin.readline())) == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"YES\"\nassert solution(\"abcd\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"abcde\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"YES\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a') == 'YES'\nassert solution('aba') == 'YES'\nassert solution('abacaba') == 'YES'\nassert solution('ba') == 'NO'\nassert solution('aba') == 'YES'\nassert solution('abab') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\"\n\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabab\"\nassert solution(\"a\\naba\\nabacaba\\nba\\naba\\n\") == \"NO\"\nassert solution(\"a\\naba\\nabacaba\\nba\\naba\\nabab\") == \"YES\\nabacaba\\naba\\nba\\naba\\nabab\"",
        "num_ids_2": 64,
        "num_ids_4": 106
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\na\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\"\nassert solution(\"5\\na\\nabacaba\\nba\\naba\\nabab\\n\") == \"NO\"\nassert solution(\"3\\nqwerty\\nwert\\nerty\\n\") == \"YES\\nqwerty\\nwert\\nerty\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 103
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"YES\\na\"\nassert solution(\"aba\") == \"YES\\naba\"\nassert solution(\"abacaba\") == \"YES\\nabacaba\"\nassert solution(\"ba\") == \"YES\\nba\"\nassert solution(\"aba\") == \"YES\\naba\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\\nbaba\\naba\\nba\\nbaba\\n\") == \"YES\\na\\nba\\nbaba\\nbaba\\n\"\nassert solution(\"a\\nbaba\\naba\\nba\\nbaba\\n\") == \"YES\\na\\nba\\nbaba\\nbaba\\n\"\nassert solution(\"a\\nbaba\\naba\\nba\\nbaba\\n\") == \"NO\\na\\nba\\nbaba\\nbaba\\n\"\nassert solution(\"a\\nbaba\\naba\\nba\\nbaba\\n\") == \"YES\\na\\nba\\nbaba\\nbaba\\n\"\nassert solution(\"a\\nbaba\\naba\\nba\\nbaba\\n\") == \"NO\\na\\nba\\nbaba\\nbaba\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, f\"Expected {output_string}, got {solution(input_string)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()})!= output({output})\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output', 'Your solution is not correct. Please check the examples and check the input.'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n3 1 2 1 3\\n\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\\n\") == \"5\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5', \"The solution is incorrect. Please fix it.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == 5, \"Your code is wrong\"\nassert solution(\"5 2\\n3 1 2 1 3\") == 0, \"Your code is wrong\"\nassert solution(\"5 100\\n12 34 55 43 21\") == 5, \"Your code is wrong\"",
        "num_ids_2": 64,
        "num_ids_4": 100
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\\n\"\nassert solution(\"3 9\") == \"14\\n\"\nassert solution(\"9 3\") == \"14\\n\"\nassert solution(\"3 6\") == \"12\\n\"\nassert solution(\"506 2708\") == \"3218\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4,4) == 12\nassert solution(3,9) == 14\nassert solution(9,3) == 14\nassert solution(3,6) == 12\nassert solution(506,2708) == 3218",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4,4) == 12\nassert solution(3,9) == 14\nassert solution(9,3) == 14\nassert solution(3,6) == 12\nassert solution(506,2708) == 3218",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"The output is '{output()}' but should be '{output()}'.\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect. Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 4) == 12, \"Example 1\"\nassert solution(3, 9) == 14, \"Example 2\"\nassert solution(3, 6) == 12, \"Example 3\"\nassert solution(506, 2708) == 3218, \"Example 4\"\nassert solution(9, 3) == 14, \"Example 5\"",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\nabcde\") == \"YES\\n00000def\"\nassert solution(\"8\\naaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\\nabcdedc\") == \"NO\"\nassert solution(\"5\\nabcde\") == \"YES\\n00000\"",
        "num_ids_2": 47,
        "num_ids_4": 83
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"NO\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"NO\"\nassert solution(4) == \"YES\\n01011011\"\nassert solution(5) == \"YES\\n00000\"\nassert solution(6) == \"NO\"\nassert solution(7) == \"NO\"\nassert solution(8) == \"YES\\n01011011\"\nassert solution(9) == \"YES\\n001010101\"",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\n001010101\"\nassert solution(input()) == \"YES\\n01011011\"\nassert solution(input()) == \"YES\\n00000\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7abcdedc\") == \"NO\"\nassert solution(\"5abcde\") == \"YES\\n00000\"",
        "num_ids_2": 48,
        "num_ids_4": 80
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\", \"abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\", \"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\", \"abcdedc\") == \"NO\"\nassert solution(\"5\", \"abcde\") == \"YES\\n00000def\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\\n00000\"",
        "num_ids_2": 46,
        "num_ids_4": 76
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(8) == \"YES\\n01011011\"\nassert solution(7) == \"NO\"\nassert solution(5) == \"YES\\n00000\"",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(7) == \"NO\"\nassert solution(5) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9') == 'YES\\n001010101'\nassert solution('8') == 'YES\\n01011011'\nassert solution('7') == 'NO'\nassert solution('5') == 'YES\\n00000def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaabbcbb') == 'YES\\n01011011'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"10 5\") == \"25\"\nassert solution(\"100 200\") == \"25\"\nassert solution(\"1 5\") == -1\nassert solution(\"5 10\") == -1\nassert solution(\"1 0\") == -1\nprint(\"All test cases passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == 25\nprint(\"Correct!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 4\") == \"25\"\nassert solution(\"2 3\") == \"25\"\nassert solution(\"5 6\") == \"-1\"\nassert solution(\"1 2\") == \"25\"\nassert solution(\"10 30\") == \"25\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"10 1\") == -1\nassert solution(\"2 4\") == \"25\"\nassert solution(\"2 5\") == \"25\"\n",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == 25",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == 25\nassert solution(\"4 2\") == 20\nassert solution(\"2 4\") == -1\nassert solution(\"0 4\") == -1\nassert solution(\"2 0\") == -1\nassert solution(\"2 0.0001\") == 25\nassert solution(\"4 0.1\") == 20\nassert solution(\"2 0.1\") == 25\nassert solution(\"2 0.00001\") == 25\nassert solution(\"2 0.0000001\") == 25",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 2\") == \"25\"\nassert solution(\"4 2\") == \"-1\"\nassert solution(\"2 3\") == \"25\"\nassert solution(\"2 4\") == \"-1\"\nassert solution(\"2 5\") == \"-1\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == 25\nassert solution(\"1 3\") == -1\nassert solution(\"2 2 3\") == 26\nassert solution(\"5 10\") == -1\nassert solution(\"10 5\") == -1\nassert solution(\"1 100\") == -1\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"5 5\") == \"25\"\nassert solution(\"6 7\") == \"25\"\nassert solution(\"8 9\") == \"25\"\nassert solution(\"1 10\") == \"25\"\nassert solution(\"20 20\") == \"25\"\nassert solution(\"100 100\") == \"25\"\nassert solution(\"10 0\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n1 2 4 5 6 8\\nYES\\n1 1\\nYES\\n9 4\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8 \"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1 \"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1 \"\nassert solution(\"9 4\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected: '{expected}', but got: '{solution(stdin)}'.\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"TODO: implement solution\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\n1 2 4 5 6 8 \"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\\n1\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\\n1 1\"\nassert solution(stdin) == \"YES\\n2 3 5\"",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n1 2 4 5 6 8\\nYES\\n1\\nYES\\n9 4\\nNO\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8 \"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1 \"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES\\n1'\nassert solution('9 4') == 'NO'",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123') == '3\\n'",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\"",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\"",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\"",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"\n",
        "num_ids_2": 80,
        "num_ids_4": 119
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n\nassert solution(\"10\") == \"YES\\n10\"",
        "num_ids_2": 121,
        "num_ids_4": 176
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\n\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 129,
        "num_ids_4": 190
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n'\nassert solution('3\\n1 1 1 1 1 3 3 3 3\\n') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n') == 'NO\\n'\nassert solution('1\\n10\\n') == 'YES\\n10\\n'",
        "num_ids_2": 135,
        "num_ids_4": 204
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('3\\n1 1 1 1 1 3 3 3 3') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1') == 'NO'\nassert solution('1\\n10') == 'YES\\n10'",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"10\") == \"YES\\n10\"",
        "num_ids_2": 121,
        "num_ids_4": 176
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('3\\n1 1 1 1 1 3 3 3 3') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1') == 'NO'\nassert solution('1\\n10') == 'YES\\n10'",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(input()) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n10\"",
        "num_ids_2": 77,
        "num_ids_4": 101
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\n",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4) == \"YES\"\nassert solution(3, 5) == \"YES\"\nassert solution(4, 4) == \"YES\"\nassert solution(4, 5) == \"YES\"\nassert solution(3, 10) == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n3 4\\n4 6\\n10 -2\\n8 -1\\n\\nInput\\n3 5\\n4 -5\\n4 -2\\n1 3\\n\\nInput\\n4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\\nInput\\n3 10\\n10 0\\n10 -10\\n30 0\\n\\nOutput\\nYES\\n\\nOutput\\nNO') == 'YES\\nNO'",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\\nYES\\nYES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\\nYES\\nYES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\") == \"YES\\nYES\\nYES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\\nNO\\nNO\"",
        "num_ids_2": 67,
        "num_ids_4": 143
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"\n",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_result, f\"Solution should be {expected_result}, but it is {solution}.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Test failed for the given input {input} and expected output {expected}\"\nfor i in range(len(input)):\n    assert a[i] == expected[i], f\"Test failed for the given input {input} and expected output {expected}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Received output: {solution}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3 2\\n1 2 1') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11\\n1') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('10 1 5\\n2') == 'YES\\n0 0 0 0 1 1 0 0 0 0'",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''YES\n0 1 0 2 2 0 3 '''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7 3 2\n1 2 1\n\"\"\") == \"YES\\n0 1 0 2 2 0 3\"\n\nassert solution(\"\"\"\n10 1 11\n1\n\"\"\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\n\nassert solution(\"\"\"\n10 1 5\n2\n\"\"\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"aa\") == 1\nassert solution(\"bbbbb\") == 2\nassert solution(\"cc\") == 1\nassert solution(\"aaabbbccc\") == 3\nassert solution(\"abc\") == 1\nassert solution(\"bb\") == 2\nassert solution(\"aabb\") == 3\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaa\") == 2\nassert solution(\"aabaa\") == 3\nassert solution(\"a\") == 1\nassert solution(\"a\") == 1\nassert solution(\"a\") == 1\nassert solution(\"ab\") == 1\nassert solution(\"aaab\") == 2\nassert solution(\"aaabbb\") == 3\nassert solution(\"aaabbbccc\") == 3\nassert solution(\"aaabbbb\") == 3\nassert solution(\"aaaaaaa\") == 3\nassert solution(\"aaaabaaa\") == 3\nassert solution(\"aaaabaa\") == 2\nassert solution(\"aaaabaaaabaaa\") == 3\nassert solution(\"aaabaa\") == 2\nassert solution(\"aaabaaa\") == 3\nassert solution(\"aabaa\") == 2\nassert solution(\"aabaa\") == 2\nassert solution(\"aabaa\") == 2\nassert solution(\"aabb\") == 3\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaaabb\") == 2\nassert solution(\"aaa",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"test\") == 3\nassert solution(\"tst\") == 3\nassert solution(\"tt\") == 3\nassert solution(\"et\") == 3\nassert solution(\"\") == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"aaabaa\") == 2",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('aaaa') == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3 2'\nassert solution(input()) == '10 3'\nassert solution(input()) == '9 9'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1.200000') == '3 2', \"Test 1\"\nassert solution('2.572479') == '10 3', \"Test 2\"\nassert solution('4.024922') == '9 9', \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"Test 1\"\nassert solution(\"2.572479\") == \"10 3\", \"Test 2\"\nassert solution(\"4.024922\") == \"9 9\", \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"A\"\nassert solution(\"2.572479\") == \"10 3\", \"A\"\nassert solution(\"4.024922\") == \"9 9\", \"A\"",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution should be {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"\nassert solution(\"8 5 3\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 222
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num} failed: {solution(input())}!= {expected_output}\"\ntest_num += 1",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected output: '{expected}', got: '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3'",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\"\nassert solution(stdin) == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 45,
        "num_ids_4": 143
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 47,
        "num_ids_4": 124
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 2 1\") == \"1100\"\nassert solution(stdin=\"3 3 3\") == \"101100\"\nassert solution(stdin=\"5 3 6\") == \"01010100\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"2 2 1\"\nassert solution(\"3 3 3\") == \"101100\", \"3 3 3\"\nassert solution(\"5 3 6\") == \"01010100\", \"5 3 6\"",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abc') == 'abc'\nassert solution('abcd') == 'YES'\nassert solution('abcba') == 'YES'\nassert solution('abacc') == 'YES'\nassert solution('aa') == 'NO'\nassert solution('bb') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"aa\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"\nassert solution(\"ac\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ab') == 'acbbac'\nassert solution('bc') == 'cacbacbab'\nassert solution('aa') == 'cacbacbab'\nassert solution('cb') == 'abc'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"YES\\nacbbac\"\nassert solution(\"3\") == \"YES\\ncacbacbab\"\nassert solution(\"1\") == \"YES\\nabc\"",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"YES\\nacbbac\"\nassert solution(\"bc\") == \"YES\\ncacbacbab\"\nassert solution(\"aa\") == \"YES\\ncacbacbab\"\nassert solution(\"cb\") == \"YES\\nabc\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"aa\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"\nassert solution(\"ac\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"YES\\nacbbac\"\nassert solution(\"bc\") == \"YES\\nacbbac\"\nassert solution(\"aa\") == \"YES\\ncacbacbab\"\nassert solution(\"cb\") == \"YES\\nabc\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"aa\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aa\") == \"YES\\nacbac\"\nassert solution(\"ab\") == \"YES\\nabacc\"\nassert solution(\"abacc\") == \"YES\\nabacc\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"abba\") == \"NO\"\nassert solution(\"abc\") == \"YES\\nabc\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"YES\\nacbbac\"\nassert solution(\"2\\nab\\nbc\\ncd\\n\") == \"YES\\nabc\"\nassert solution(\"3\\naa\\nbc\\ncd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"YES\\ncacbacbab\"\nassert solution(\"1\\ncb\\nac\\n\") == \"YES\\nabc\"",
        "num_ids_2": 91,
        "num_ids_4": 181
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3 1 2\"\nassert solution(5) == \"1 2 3 4 5\"\nassert solution(4) == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3 1 2 \"\nassert solution(5) == \"1 2 3 4 5\"\nassert solution(4) == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2 '\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5 '\nassert solution('4\\n-1 2 2\\n') == '-1'",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2 1\\n\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\\n\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 1\\n\") == \"3 1 2 \\n\"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5 \\n\"\nassert solution(\"4\\n-1 2 2\\n\") == \"-1 \\n\"",
        "num_ids_2": 55,
        "num_ids_4": 77
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2 '\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5 '\nassert solution('4\\n-1 2 2\\n') == '-1'",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    1 2\n    ''') == '3 1 2 '\n\nassert solution('''\n    5\n    1 1 1 1\n    ''') == '1 2 3 4 5 '\n\nassert solution('''\n    4\n    1 -2 -2\n    ''') == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3 1 2\"\nassert solution(5) == \"1 2 3 4 5\"\nassert solution(4) == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3 1 2 \"\nassert solution(5) == \"1 2 3 4 5 \"\nassert solution(4) == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\") == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n'\nassert solution('5\\n2 2 2 3 3\\n') == '2\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 4",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n(2,5) can be reached in five moves.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"5\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n\") == \"5\\n(2,5) can be reached in five moves.\"\nprint(\"All test cases passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n\") == \"5\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"5\\n(2,5) can be reached in five moves.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '5\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n\") == \"5\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n\") == \"5\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5\", \"Your code is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\\n15\\n5 5 5\\n5 5 5\\n\\n3\\n0 0 3\\n3 0 0\\n\\n686\\n479 178 29\\n11 145 530\\n\\n319\\n10 53 256\\n182 103 34\\n\") == \"0 1\\n0 15\"\nassert solution(\"1\\n0 0 1\\n0 0 1\\n\") == \"0 2\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\\n100\\n50 10 20\\n50 10 20\\n\") == \"3 3\"\nassert solution(\"32\\n30 22 40\\n10 15 30\\n15 12 20\\n\") == \"16 16\"\nassert solution(\"3\\n0 0 3\\n0 0 2\\n\") == \"0 3\"",
        "num_ids_2": 162,
        "num_ids_4": 264
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0 1\\n\", \"The correct output is 0 1, not: {}.\".format(solution())",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0 1\"\nassert solution(input()) == \"0 15\"\nassert solution(input()) == \"3 3\"\nassert solution(input()) == \"22 334\"\nassert solution(input()) == \"119 226\"\nassert solution(input()) == \"22 334\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 1 1\\nA\\nB\\nA\") == \"0 1\\n\", \"The first example should result in '0 1'.\"\nassert solution(\"15\\n5 5 5\\nA\\nA\\nA\") == \"0 15\\n\", \"The second example should result in '0 15'.\"\nassert solution(\"3\\n0 0 3\\nA\\nB\\nA\") == \"3 3\\n\", \"The third example should result in '3 3'.\"\nassert solution(\"686\\n479 178 29\\nA\\nA\\nA\") == \"22 334\\n\", \"The fourth example should result in '22 334'.\"\nassert solution(\"319\\n10 53 256\\nA\\nA\\nA\") == \"119 226\\n\", \"The fifth example should result in '119 226'.\"",
        "num_ids_2": 83,
        "num_ids_4": 176
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3 3\"\nassert solution(5) == \"0 15\"\nassert solution(15) == \"0 15\"\nassert solution(111) == \"22 334\"\nassert solution(479) == \"119 226\"\nassert solution(178) == \"119 226\"",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0\\n') == '0 1\\n'\nassert solution('15\\n5 5 5\\n5 5 5\\n') == '0 15\\n'\nassert solution('3\\n0 0 3\\n3 0 0\\n') == '3 3\\n'\nassert solution('686\\n479 178 29\\n11 145 530\\n') == '22 334\\n'\nassert solution('319\\n10 53 256\\n182 103 34\\n') == '119 226\\n'",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"example1.txt\").read()) == \"0 1\\n\"\nassert solution(open(\"example2.txt\").read()) == \"0 15\\n\"\nassert solution(open(\"example3.txt\").read()) == \"3 3\\n\"\nassert solution(open(\"example4.txt\").read()) == \"22 334\\n\"\nassert solution(open(\"example5.txt\").read()) == \"119 226\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\"",
        "num_ids_2": 58,
        "num_ids_4": 129
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3 3\"\nassert solution(15) == \"0 15\"\nassert solution(686) == \"22 334\"\nassert solution(319) == \"119 226\"",
        "num_ids_2": 26,
        "num_ids_4": 61
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 1 1 1\") == \"4\"\n",
        "num_ids_2": 55,
        "num_ids_4": 73
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3\\n') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '2\\n3 4\\n1 1\\n'\nassert solution('4\\n1 1 1 1\\n') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'\n",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(f\"{' '.join(map(str, output))}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n7\\n4 1 2 2 1 5 3\\n\\nOutput\\n3\\n7 7\\n2 3\\n4 5\\n\\nInput\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\nOutput\\n2\\n3 4\\n1 1\\n\\nInput\\n4\\n1 1 1 1\\n\\nOutput\\n4\\n4 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"Input\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\nOutput\\n2\\n3 4\\n1 1\\n\\nInput\\n4\\n1 1 1 1\\n\\nOutput\\n4\\n4 4\\n1 1\\n2 2\\n3 3\\n\") == \"2\\n3 4\\n1 1\\n\"",
        "num_ids_2": 279,
        "num_ids_4": 279
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3\\n4 5'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1'\nassert solution('4\\n1 1 1 1') == '4\\n4 4\\n1 1\\n2 2\\n3 3'",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"got '{solution(input())}' instead of '{expected}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3\\n4 5\\n'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2\\n3 4\\n1 1\\n'\nassert solution('4\\n1 1 1 1') == '4\\n4 4\\n1 1\\n2 2\\n3 3\\n'",
        "num_ids_2": 89,
        "num_ids_4": 130
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. \\nExpected output: {output} \\nActual output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n1\\n2 3\") == \"NO\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\") == \"YES\\n\", \"Test 1 failed\"\nassert solution(\"3\\n3 1 2\\n3\\n2 1 3\") == \"NO\\n\", \"Test 2 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == 'YES\\n', 'Expected output: \"YES\"\\n'\nassert solution('3\\n3 1 2') == 'NO\\n', 'Expected output: \"NO\"\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"\nassert solution(open(\"input2.txt\").read()) == \"NO\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\\n\"\nassert solution(\"3\\n3 1 2\") == \"NO\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n3\\n3 1 2\\n') == 'YES'\nassert solution('3\\n3 1 2\\n') == 'NO'\nassert solution('3\\n1 2 3\\n2\\n') == 'YES'",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\nabcdef\\nabdfec\\n') == 4\nassert solution('4\\nabcd\\naccd\\n') == 0\nassert solution('1\\nabcdef\\n') == 1\nassert solution('10000\\n' * 10000 + '\\n') == -1",
        "num_ids_2": 35,
        "num_ids_4": 75
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\\n\") == \"4\\n3 5 4 5 \"\nassert solution(\"4\\nabcd\\naccd\\n\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"abdce\"\nassert solution(\"abdc\") == \"abdfce\"\nassert solution(\"abcdef\") == \"abdfce\"\nassert solution(\"abcdefg\") == \"abdfce\"\nassert solution(\"abcdefghi\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabdef\\nabdef\\n4\\nabcd\\nabcd\\n\") == \"4\\n3 5 4 5\\n\"\nassert solution(\"4\\abcd\\abcd\\n\") == \"-1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\\n\") == \"4\\n3 5 4 5\\n\"\nassert solution(\"4\\nabcd\\naccd\\n\") == \"-1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"0\"\nassert solution(\"6\\nabcdef\\nabdfec\") == \"4\"",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"6\\nabcdef\\nabdfec\\n\") == -1\nassert solution(\"4\\nabcd\\naccd\\n\") == -1\n\nfor n in range(1, 51):\n    s = input()\n    t = input()\n    \n    moves = []\n    i, j = 0, 0\n    while i < len(s) and j < len(t):\n        if s[i] == t[j]:\n            moves.append(i)\n            i += 1\n            j += 1\n        elif i < len(s) and s[i] < t[j]:\n            moves.append(i)\n            i += 1\n        else:\n            moves.append(i)\n            j += 1\n    \n    moves.sort()\n    k = len(moves)\n    if k == 0:\n        print(0)\n        continue\n    \n    print(k)\n    for i in range(k):\n        print(moves[i])",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output. Got: {solution(stdin)}, expected: {expected}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"SPSPSPS\"\nassert solution(input()) == \"PPSS\"\nassert solution(input()) == \"PS\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"PPSS\"\nassert solution(input()) == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"SPPSPSPS\"\nassert solution(3) == \"PPSS\"\nassert solution(2) == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nab\\nabba\\nab\") == \"SPPSPSPS\\n\", \"Ivan can guess the string 'ababa' or 'aaa' or 'abba'.\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\\n\", \"Ivan can guess the string 'aa' or 'ac' or 'ca'.\"\nassert solution(\"2\\na\\nc\") == \"PS\\n\", \"Ivan can guess the string 'a' or 'c'.\"",
        "num_ids_2": 96,
        "num_ids_4": 127
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"PPSS\"\nassert solution(input()) == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\na\\naa\\na\\n\") == \"PS\"\nassert solution(\"5\\nba\\n\\n\\na\\nabab\\n\\na\\naba\\n\\nbaba\\n\\nab\\naba\\nab\\n\") == \"SPPSPSPS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 68,
        "num_ids_4": 84
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nba\\na\\nabab\\na\\nab\\nbaba\\nab\\nab\\n\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\\n\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"\nassert solution(\"4\\nb\\nc\\nd\\ne\\n\") == \"PPSSPPSS\"",
        "num_ids_2": 58,
        "num_ids_4": 97
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nba\\na\\abab\\na\\aba\\baba\\ab\\aba\\n\") == \"SPPSPSPS\\n\"\nassert solution(\"3\\na\\aa\\aa\\a\\n\") == \"PPSS\\n\"\nassert solution(\"2\\na\\c\\n\") == \"PS\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 77
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"The correct solution is 1.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1', \"The solution should return 1.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"The correct output is 1.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 1, \"Expected 1, but got {}\".format(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == '1', 'The solution for the given input should be 1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Expected 1, got {}\".format(solution(\"2 4 6 8 10\"))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 6 8 10') == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 6 8 10') == '1\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\", \"Solution is not correct.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(3) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(0)) == '2', \"The solution is incorrect.\"\nassert solution(str(10) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(0)) == '2', \"The solution is incorrect.\"\nassert solution(str(5) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(0)) == '0', \"The solution is incorrect.\"\nassert solution(str(4) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' + str(1) +'' +",
        "num_ids_2": 261,
        "num_ids_4": 906
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 61,
        "num_ids_4": 84
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2, \"The correct output is 2.\"\nassert solution(4) == 0, \"The correct output is 0.\"\nassert solution(10) == 2, \"The correct output is 2.\"\nassert solution(5) == 0, \"The correct output is 0.\"\nassert solution(4) == 0, \"The correct output is 0.\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([2, 4, 6, 2, 10]) == 1, \"Your code is incorrect. The number of common divisors of the given array should be 1.\"\n\nassert solution([6, 90, 12, 18, 30, 18]) == 4, \"Your code is incorrect. The number of common divisors of the given array should be 4.\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"6\\n6 90 12 18 30 18\\n\") == \"4\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"The solution is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: expected {output}, got {solution(input())}\"\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    output = 1\n    for num in a:\n        if num % num not in range(num, n + 1, num):\n            output *= 0\n        else:\n            output //= num\n\n    print(output)",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 2 3 4 5\n    6\n    6 90 12 18 30 18\n    \"\"\"\n) == 4",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output\", solution(stdin)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 1, \"Incorrect output\"\nassert solution(6) == 4, \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5\\n\\n6\\n6 90 12 18 30 18\\n\\n') == '1\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('6\\n6 90 12 18 30 18\\n\\n') == '4\\n'\nassert solution('10\\n') == '0\\n'",
        "num_ids_2": 64,
        "num_ids_4": 113
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\\n\"\nassert solution(\"1\\n100\\n\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n\\n1\\n100') == '2\\n'\nassert solution('1\\n100') == '1\\n'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution()) == 1, \"The solution should return 1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output. Please check your code.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '2\\n'\nassert solution('100\\n') == '1\\n'\nassert solution('1\\n100\\n') == '1\\n'",
        "num_ids_2": 45,
        "num_ids_4": 64
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'6 2\\n0 1 1 0 0 1') == 3\nassert solution(r'5 3\\n1 0 0 0 1') == 2\nassert solution(r'5 10\\n0 0 0 0 0') == -1\nassert solution(r'10 3\\n0 0 1 1 0 1 0 0 0 1') == 3",
        "num_ids_2": 50,
        "num_ids_4": 110
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n5 3\\n1 0 0 0 1\\n5 10\\n0 0 0 0 0\\n10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\\n5 10\\n0 0 0 0 0\\n10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\\n10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == 3\n",
        "num_ids_2": 154,
        "num_ids_4": 241
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3\\n'\nassert solution('5 3\\n1 0 0 0 1') == '2\\n'\nassert solution('5 10\\n0 0 0 0 0') == '-1\\n'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '3\\n'",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5) + \" \" + str(2)) == \"3\"\nassert solution(str(5) + \" \" + str(3)) == \"2\"\nassert solution(str(5) + \" \" + str(10)) == \"-1\"\nassert solution(str(10) + \" \" + str(3)) == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\nassert solution(\"6 2\\n0 1 1 0 0 1\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == 3",
        "num_ids_2": 31,
        "num_ids_4": 76
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3)) == '3\\n'\nassert solution(str(2)) == '2\\n'\nassert solution(str(1)) == '-1\\n'\nassert solution(str(0)) == '-1\\n'\nassert solution(str(10)) == '3\\n'\nassert solution(str(3)) == '3\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == 3",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\\n\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\\n\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\\n\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\\n\"\n\nassert solution(\"\") == \"-1\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"",
        "num_ids_2": 48,
        "num_ids_4": 106
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('5 3\\n1 0 0 0 1') == 2\nassert solution('5 10\\n0 0 0 0 0') == -1\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == 3\nassert solution('6 3\\n0 0 1 1 0 1 0 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6 2\\n0 1 1 0 0 1') == 3\nassert solution('6",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter a positive integer: \")) == \"3\"\nassert solution(input(\"Enter a positive integer: \")) == \"3\"\nassert solution(input(\"Enter a positive integer: \")) == \"3\"\nassert solution(input(\"Enter a positive integer: \")) == \"3\"\nassert solution(input(\"Enter a positive integer: \")) == \"3\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"Incorrect answer. Expected: 3, got: \" + solution(input())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"3\\n\" # Test case 1\nassert solution(\"10\\n\") == \"10\\n\" # Test case 2\nassert solution
        "num_ids_2": 40,
        "num_ids_4": 1027
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\\n\"\nassert solution(\"5\") == \"0\\n\"\nassert solution(\"10\") == \"3\\n\"\nassert solution(\"1000000\") == \"0\\n\"\nassert solution(\"0\") == \"0\\n\"\nassert solution(\"5000000\") == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\", \"Test failed: Given N = 3, expected answer: 3\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6\n(((())\n''') == '3'\n\nassert solution('''6\n()()()\n''') == '0'\n\nassert solution('''1\n)\n''') == '0'\n\nassert solution('''8\n)))(((((\n''') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n(((())\\n\") == \"3\"\nassert solution(\"6\\n()()()\\n\") == \"0\"\nassert solution(\"1\\n)()\\n\") == \"0\"\nassert solution(\"8\\n)))(((((\\n\") == \"0\")",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n(((())\\n') == 3\nassert solution('6\\n()()()\\n') == 0\nassert solution('1\\n) \\n') == 0\nassert solution('8\\n)))(((((\\n') == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('(((())') == 3\nassert solution('()()()') == 0\nassert solution(')(') == 0\nassert solution(')))(((((') == 0",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n(((())\\n\\n1\\n)\\n\\n8\\n)))(((((') == 3)\nassert solution('6\\n()()()\\n\\n1\\n)\\n\\n8\\n)))(((((') == 0)\nassert solution('1\\n)()\\n\\n8\\n)))(((((') == 0)",
        "num_ids_2": 62,
        "num_ids_4": 85
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('()') == '()()(())'\nassert solution('(())') == '()()()(())'\nassert solution('((()))') == '()()(())()()'\nassert solution('()()()') == '()()(())()()'\nassert solution(')(') == '()()(())'\nassert solution('(())') == '()()(())'\nassert solution('())(') == '()()(())'\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(((())\") == 3\nassert solution(\"()()()\") == 0\nassert solution(\"()()((()))\") == 1\nassert solution(\"((())()())\") == 0\nassert solution(\"()())()\") == 0\nassert solution(\"()()\") == 0",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n(((())\\n\") == 3\nassert solution(\"6\\n()()()\\n\") == 0\nassert solution(\"1\\n) \\n\") == 0\nassert solution(\"8\\n)))(((((\\n\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, \"(((())\") == 3\nassert solution(6, \"()()()\") == 0\nassert solution(1, \")\") == 0\nassert solution(8, \")))(((((\") == 0",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nprint(\"All test cases passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"-1 -2 -3 -4\") == \"2\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"100 50 30 10\") == \"50\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Solution is not correct\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"3 2 2 1\") == \"1\"\nassert solution(\"4 2 1 4\") == \"2\"\nassert solution(\"1 5 3 1\") == \"2\"\nassert solution(\"10 10 10 10\") == \"1000000000\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\\n\"\nassert solution(\"3 3 1 1\") == \"2\\n\"\nassert solution(\"-1 2 1 1\") == \"2\\n\"\nassert solution(\"1 -2 1 1\") == \"2\\n\"\nassert solution(\"1 1 -2 1\") == \"2\\n\"\nassert solution(\"1 1 1 -2\") == \"2\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 3 1 2\") == \"3\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"1 3 1 2\") == \"3\"\nassert solution(\"2 3 1 1\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"Solution should return 2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 3 2 2\") == \"3\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"2 3 1 2\") == \"3\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"2 2 2 2\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\\n\"\nassert solution(\"2 1 1 2\") == \"2\\n\"\nassert solution(\"1 2 2 1\") == \"2\\n\"\nassert solution(\"1 1 1 2\") == \"1\\n\"\nassert solution(\"1 2 1 2\") == \"2\\n\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\\n\", \"The answer should be 2.\"\nassert solution(\"4\\n9 1 4 4 6 7\") == \"1\\n\", \"The answer should be 1.\"\nassert solution(\"5\\n9 1 4 4 6 7\") == \"2\\n\", \"The answer should be 2.\"\nassert solution(\"7\\n9 1 4 4 6 7\") == \"3\\n\", \"The answer should be 3.\"\nassert solution(\"3\\n9 1 4 4 6 7\") == \"2\\n\", \"The answer should be 2.\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"3\\n\", \"The answer should be 3.\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"10\\n5 3 2 1 4\") == \"2\\n\"\nassert solution(\"10\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"6\\n5 5 5 5 5\") == \"2\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 96
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\"\nassert solution(6) == \"2\"\nassert solution(7) == \"1\"\nassert solution(8) == \"1\"\nassert solution(9) == \"1\"\nassert solution(10) == \"1\"\nassert solution(11) == \"1\"\nassert solution(12) == \"1\"\nassert solution(13) == \"2\"\nassert solution(14) == \"2\"\nassert solution(15) == \"2\"\nassert solution(16) == \"2\"\nassert solution(17) == \"2\"\nassert solution(18) == \"2\"\nassert solution(19) == \"1\"\nassert solution(20) == \"1\"\nassert solution(21) == \"1\"\nassert solution(22) == \"2\"\nassert solution(23) == \"2\"\nassert solution(24) == \"2\"\nassert solution(25) == \"2\"\nassert solution(26) == \"1\"\nassert solution(27) == \"2\"\nassert solution(28) == \"1\"\nassert solution(29) == \"1\"\nassert solution(30) == \"2\"\nassert solution(31) == \"2\"\nassert solution(32) == \"2\"\nassert solution(33) == \"2\"\nassert solution(34) == \"2\"\nassert solution(35) == \"2\"\nassert solution(36) == \"2\"\nassert solution(37) == \"2\"\nassert solution(38) == \"2\"\nassert solution(39) == \"2\"\nassert solution(40) == \"1\"\nassert solution(41) == \"1\"\nassert solution(42) == \"2\"\nassert solution(43) == \"2\"\nassert solution(44) == \"2\"\nassert solution(45) == \"2\"\nassert solution(46) == \"2\"\nassert solution(47) == \"2\"\nassert solution(48) == \"2\"\nassert solution(49) == \"2\"\nassert solution(50) == \"1\"\nassert solution(51) == \"2\"\nassert solution(52) == \"2\"\nassert solution(53) == \"2\"\nassert solution(54) == \"2\"\nassert solution(55) == \"2\"\nassert solution(56) == \"2\"\nassert solution(57) == \"2\"\nassert solution(58) == \"2\"\nassert solution(59) == \"2\"\nassert solution(60) == \"2\"\nassert solution(61) == \"2\"\nassert solution(62) == \"2\"\nassert solution(63) == \"2\"\nassert solution(64) == \"2\"\nassert solution(65) == \"2\"\nassert solution(66) == \"2\"\nassert solution(67) == \"2\"\nassert solution(68) == \"2\"\nassert solution(69) == \"2\"\nassert solution(70) == \"2\"\nassert solution(71) == \"2\"\nassert solution(72) == \"1\"\nassert solution(73) == \"2\"\nassert solution(74) == \"2\"\nassert solution(75) == \"2\"\nassert solution(76) == \"2\"\nassert solution(77) == \"2\"\nassert solution(78) == \"2\"\nassert solution(79) == \"2\"\nassert solution(80) == \"2\"\nassert solution(81) == \"2\"\nassert solution(82) == \"2\"\nassert solution(83) == \"2\"\nassert solution(84) == \"2\"\nassert solution(85) == \"2\"\nassert solution(86) == \"2\"\nassert solution(87) == \"2\"\nassert solution(88) == \"2\"\nassert solution(89) == \"2\"\nassert solution(90) == \"2\"\nassert solution(91) == \"2\"\nassert solution(92) == \"2\"\nassert solution(93) == \"2\"\nassert solution(94) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Please implement the solution function\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3 1 2\\n6\\n4 6\\n7 5 3') == '2'\nassert solution('5\\n1 5\\n3 2 5\\n4 5\\n2 2 6') == '1'\n\nfrom typing import List",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n",
        "num_ids_2": 84,
        "num_ids_4": 170
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input {input()} and Output {output()} are not the same.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, got: {solution}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output\", \"Your solution is incorrect. Please check the provided example.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 3\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example) == 3, \"Expected output: 3, Actual output: {}.\".format(solution(example))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"4 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 14 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"4 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 14 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"7 14 21 23\\n16 17 14 20 20 11 22\") == \"3\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 4\nassert solution(5) == 1\nassert solution(6) == 3",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution(stdin='5\\n2 10 50 110 250') == '1'\nassert solution(stdin='6\\n4 7 12 100 150 199') == '3'",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"1\\n1 2\") == \"1\"",
        "num_ids_2": 64,
        "num_ids_4": 109
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output\nprint(f\"Test Passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 1\nassert solution(4) == 3\nassert solution(3) == 2\nassert solution(2) == 2\nassert solution(1) == 1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Expected output:\\n{}\\nGot output:\\n{}\".format(output(), solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"The provided solution is '{solution}', but it should be '{expected_output}'.\"\nfor i in range(1, len(problems) + 1):\n    for j in range(i):\n        if problems[i - 1][2] < problems[j][2] or (problems[i - 1][2] == problems[j][2] and problems[i - 1][1] > problems[j][1]):\n            return i",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"No output expected\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 8 3 6') == '1 2\\n'\nassert solution('5\\n5 2 11 3 7') == '2 4\\n'\nassert solution('6\\n2 5 10 1 10 2') == '1 4\\n'",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2\\n2 4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\\n\"\nassert solution(\"5\\n5 2 11 3 7\\n\") == \"2 4\\n\"\nassert solution(\"6\\n2 5 10 1 10 2\\n\") == \"1 4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 86
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(20) == 4\nassert solution(5) == 1\nassert solution(5) == 2\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\\n\"\nassert solution(\"5\\n5 2 11 3 7\") == \"2 4\\n\"\nassert solution(\"6\\n2 5 10 1 10 2\") == \"1 4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\") == \"1 2\\n2 4\"\nassert solution(\"5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\") == \"2 4\"\nassert solution(\"6\\n2 5 10 1 10 2\") == \"1 4\"",
        "num_ids_2": 103,
        "num_ids_4": 130
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, \"2 4 8 3 6\") == \"1 2\\n\"\nassert solution(5, \"5 2 11 3 7\") == \"2 4\\n\"\nassert solution(6, \"2 5 10 1 10 2\") == \"1 4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5]) == \"1 2\\n\"\nassert solution([5]) == \"1 2\\n\"\nassert solution([5]) == \"1 2\\n\"\nassert solution([5]) == \"1 2\\n\"\nassert solution([5]) == \"1 2\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 2\\n2 4\"\nassert solution(input()) == \"1 4\"\nassert solution(input()) == \"2 4\"",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"1 2\"\nassert solution(5) == \"2 4\"\nassert solution(6) == \"1 4\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n121\\n') == '021'\nassert solution('6\\n000000\\n') == '001122'\nassert solution('6\\n211200\\n') == '211200'\nassert solution('6\\n120110\\n') == '120120'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n121') == '021'\nassert solution('6\\n000000') == '001122'\nassert solution('6\\n211200') == '211200'\nassert solution('6\\n120110') == '120120'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '021'\nassert solution(6) == '001122'\nassert solution(6) == '211200'\nassert solution(6) == '120120'",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\nassert solution('6') == '120110'",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n121\\n') == '021'\nassert solution('6\\n000000\\n') == '001122'\nassert solution('6\\n211200\\n') == '211200'\nassert solution('6\\n120110\\n') == '120120'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\\n\"\nassert solution(\"6\\n000000\\n\") == \"001122\\n\"\nassert solution(\"6\\n211200\\n\") == \"211200\\n\"\nassert solution(\"6\\n120110\\n\") == \"120120\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n121\\n') == '021'\nassert solution('6\\n000000\\n') == '001122'\nassert solution('6\\n211200\\n') == '211200'\nassert solution('6\\n120110\\n') == '120120'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\", \"The solution is incorrect\"\n\ninput_data = [int(x) for x in stdin.split()]\nN, M = input_data\na = [int(x) for x in input_data[1:]]\n\ncount = 0\n\nfor i in range(1, N+1):\n    count += a[i-1]\n\ncount %= 1000000007\n\nprint(count)",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n3\\n') == '4\\n'\nassert solution('3 3\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n') == '1\\n'\nassert solution('5 1\\n1\\n') == '2\\n'\nassert solution('1 2\\n1\\n') == '2\\n'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"5 10\\n10\\n\") == \"15\"\nassert solution(\"5 5\\n1\\n2\\n3\\n\") == \"1\"\nassert solution(\"5 20\\n3\\n\") == \"10\"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(\"6 3\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, \"Test failed. Expected: {}. Got: {}\".format(output_str, solution(input_str))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6 1\\n3\\n\") == \"4\\n\"\nassert solution(stdin=\"6 1\\n5\\n\") == \"13\\n\"\nassert solution(stdin=\"6 1\\n6\\n\") == \"21\\n\"\nassert solution(stdin=\"6 1\\n7\\n\") == \"130\\n\"\nassert solution(stdin=\"6 1\\n8\\n\") == \"1000000000\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\"\nassert solution(\"1 2 3\") == \"3\\n\"\nassert solution(\"4 5 6\") == \"6\\n\"\nassert solution(\"1 -1 2\") == \"1\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"The minimum possible absolute value of the coordinate of the destination is not 2.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 5 3\") == \"3\"\nassert solution(\"6 5 1\") == \"1\"\nassert solution(\"4 7 6\") == \"3\"\nassert solution(\"7 8 9\") == \"4\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == \"2\", \"Error: 11 is not equal to 2\"\nassert solution(14) == \"0\", \"Error: 14 is not equal to 0\"\nassert solution(61441) == \"2\", \"Error: 61441 is not equal to 2\"\nassert solution(571576) == \"10\", \"Error: 571576 is not equal to 10\"\nassert solution(2128506) == \"3\", \"Error: 2128506 is not equal to 3\"",
        "num_ids_2": 48,
        "num_ids_4": 112
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"2\", \"Error: Incorrect output for example 1\"\nassert solution(\"14\") == \"0\", \"Error: Incorrect output for example 2\"\nassert solution(\"61441\") == \"2\", \"Error: Incorrect output for example 3\"\nassert solution(\"571576\") == \"10\", \"Error: Incorrect output for example 4\"\nassert solution(\"2128506\") == \"3\", \"Error: Incorrect output for example 5\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"10\"\nassert solution(2128506) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 2, \"Error: The expected output is 2, but the function returns {}\".format(solution(11))\nassert solution(14) == 0, \"Error: The expected output is 0, but the function returns {}\".format(solution(14))\nassert solution(61441) == 2, \"Error: The expected output is 2, but the function returns {}\".format(solution(61441))\nassert solution(571576) == 10, \"Error: The expected output is 10, but the function returns {}\".format(solution(571576))\nassert solution(2128506) == 3, \"Error: The expected output is 3, but the function returns {}\".format(solution(2128506))",
        "num_ids_2": 66,
        "num_ids_4": 148
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == 2, \"Test failed. The output should be 2, but got {}\".format(solution(11))\nassert solution(14) == 0, \"Test failed. The output should be 0, but got {}\".format(solution(14))\nassert solution(61441) == 2, \"Test failed. The output should be 2, but got {}\".format(solution(61441))\nassert solution(571576) == 10, \"Test failed. The output should be 10, but got {}\".format(solution(571576))\nassert solution(2128506) == 3, \"Test failed. The output should be 3, but got {}\".format(solution(2128506))",
        "num_ids_2": 64,
        "num_ids_4": 144
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 2, \"Solution should return 2 for input 11.\"\nassert solution(14) == 0, \"Solution should return 0 for input 14.\"\nassert solution(61441) == 2, \"Solution should return 2 for input 61441.\"\nassert solution(571576) == 10, \"Solution should return 10 for input 571576.\"\nassert solution(2128506) == 3, \"Solution should return 3 for input 2128506.\"",
        "num_ids_2": 46,
        "num_ids_4": 108
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 27\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 27, \"Solution should return 27 for input 3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 27, \"The expected output is 27, but it is not\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 27, \"Test failed for input 3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 27, \"The solution should return 27\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 27, \"Solution not correct\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 27\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 27, \"Incorrect output: solution(3) should return 27\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == 1, \"Input 13 should output 1\"\nassert solution(927) == 1, \"Input 927 should output 1\"\nassert solution(48) == 0, \"Input 48 should output 0\"",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == 1, \"Solution should return 1\"\nassert solution(927) == 1, \"Solution should return 1\"\nassert solution(48) == 0, \"Solution should return 0\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == '1', \"Test case 1 failed\"\nassert solution(927) == '1', \"Test case 2 failed\"\nassert solution(48) == '0', \"Test case 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == 1, \"Input 13 is incorrect. Expected output 1, actual output: {}\".format(solution(13))\nassert solution(927) == 1, \"Input 927 is incorrect. Expected output 1, actual output: {}\".format(solution(927))\nassert solution(48) == 0, \"Input 48 is incorrect. Expected output 0, actual output: {}\".format(solution(48))",
        "num_ids_2": 73,
        "num_ids_4": 108
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == 1, \"Test 1 Failed\"\nassert solution(927) == 1, \"Test 2 Failed\"\nassert solution(48) == 0, \"Test 3 Failed\"\n\nSolution:\n\nThe solution consists of a single assert statement that checks if the output of the solution function is equal to 1. If it is, it means that the function is working correctly. Otherwise, it outputs 0.",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\") == 1, \"The solution should return 1 for input 13.\"\nassert solution(\"927\") == 1, \"The solution should return 1 for input 927.\"\nassert solution(\"48\") == 0, \"The solution should return 0 for input 48.\"\n",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 4, \"Output: \" + str(4)\nassert solution(input()) == \"def solution(stdin: str) -> str:\", \"Output: \" + str(\"def solution(stdin: str) -> str:\")\nassert solution(input()) == \"DO YOU EXPECT ME TO FIND THIS OUT?\", \"Output: \" + str(\"DO YOU EXPECT ME TO FIND THIS OUT?\")\nassert solution(input()) == \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\", \"Output: \" + str(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\")\nassert solution(input()) == \"DON'T BYTE OF MORE THAN YOU CAN CHEW\", \"Output: \" + str(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\")\nassert solution(input()) == \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\", \"Output: \" + str(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\")\nassert solution(input()) == \"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\", \"Output: \" + str(\"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\")\nassert solution(input()) == \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\", \"Output: \" + str(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\")\nassert solution(input()) == \"I HAVE NO ARRAY AND I MUST SCREAM\", \"Output: \" + str(\"I HAVE NO ARRAY AND I MUST SCREAM\")\nassert solution(input()) == \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\", \"Output: \" + str(\"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\")",
        "num_ids_2": 54,
        "num_ids_4": 126
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution(5) == \"DON'T BYTE OF MORE THAN YOU CAN CHEW\", \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution(6) == \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\", \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution(7) == \"SAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\", \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution(8) == \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\", \"SAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution(9) == \"I HAVE NO ARRAY AND I MUST SCREAM\", \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"",
        "num_ids_2": 56,
        "num_ids_4": 151
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\" + \"def\") == \"abcdef\"\nassert solution(\"xyz\" * 4) == \"xyzxyzxyz\"\nassert solution(\"abcd\" + \"EFGH\") == \"abcdEFGH\"\nassert solution(\"a\" * 1000000) == \"a\" * 1000000\nassert solution(\"12345678901234567890\" * 1000000) == \"12345678901234567890\" * 1000000",
        "num_ids_2": 30,
        "num_ids_4": 76
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 4",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n2 5 3 1\") == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution(stdin=\"5\\n2 5 3 1\") == 5, \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution(stdin=\"7\\n2 5 3 1\") == 7, \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution(stdin=\"3\\n2 5 3 1\") == 3, \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution(stdin=\"4\\n2 5 3 1\") == 4, \"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution(stdin=\"7\\n2 5 3 1\") == 7, \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\nassert solution(stdin=\"8\\n2 5 3 1\") == 8, \"I HAVE NO ARRAY AND I MUST SCREAM\"\nassert solution(stdin=\"11\\n2 5 3 1\") == 11, \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 65,
        "num_ids_4": 142
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5 3 1') == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution('ABRACADABRA') == 'NO', \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution('DON\\'T BYTE OF MORE THAN YOU CAN CHEW') == 'YES', \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution('YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR') == 'YES', \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution('SAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON\\'T DO YOU ANY GOOD') == 'YES', \"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution('THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!') == 'YES', \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\nassert solution('I HAVE NO ARRAY AND I MUST SCREAM') == 'YES', \"I HAVE NO ARRAY AND I MUST SCREAM\"\nassert solution('ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE') == 'YES', \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\"",
        "num_ids_2": 54,
        "num_ids_4": 138
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\n\nassert solution(2, 5, 3, 1) == 4, \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\n\nassert solution(4, 4) == 10, \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\n\nassert solution(10, 10, 10) == 0, \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\n\nassert solution(\"ABRACADABRA\") == 0, \"SAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\n\nassert solution(\"LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\") == 0, \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\n\nassert solution(\"I HAVE NO ARRAY AND I MUST SCREAM\") == 0, \"ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\"",
        "num_ids_2": 52,
        "num_ids_4": 120
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4\\n2 5 3 1\") == 4\nassert solution(stdin=\"4\\n2 5 3 1 2 5 3 1\") == 5\nassert solution(stdin=\"4\\n2 5 3 1 2 5 3 1 2 5 3 1\") == 6\nassert solution(stdin=\"4\\n2 5 3 1 2 5 3 1 2 5 3 1 2 5 3 1\") == 6\nassert solution(stdin=\"4\\n2 5 3 1 2 5 3 1 2 5 3 1 2 5 3 1\") == 6\n\nprint(\"All tests passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 128
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\nassert solution(4, 2, 5, 3, 1) == 4, \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\nassert solution(4, 2, 5, 3, 1) == 4, \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\nassert solution(4, 2, 5, 3, 1) == 4, \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\"\nassert solution(4, 2, 5, 3, 1) == 4, \"SAYING \\\"ABRACADABRA\\\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\nassert solution(4, 2, 5, 3, 1) == 4, \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\nassert solution(4, 2, 5, 3, 1) == 4, \"I HAVE NO ARRAY AND I MUST SCREAM\"",
        "num_ids_2": 55,
        "num_ids_4": 134
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 5 3 1\") == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n1\\n3\\n2\") == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 49,
        "num_ids_4": 123
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"The solution is {solution(input())}, but the output is {output()}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n8\\n1\\n999999733\\n1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2\\n8'\nassert solution() == '2\\n1'\nassert solution() == '999999733\\n1'",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 7\") == \"2\"\nassert solution(\"8 1\") == \"8\"\nassert solution(\"6 10\") == \"1\"\nassert solution(\"999999733 999999732\") == \"999999733\"\nassert solution(\"999999733 999999733\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 73
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5)<|im_sep|>",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 130
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\", \"Invalid output.\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\\n\", \"Invalid output.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n'\nassert solution('2 2\\n2 1 2\\n1 2\\n0 1\\n') == '1\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n', \"The number of combinations of 'on' and 'off' states of the switches that light all the bulbs is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == 1\nprint(\"All test cases pass\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr'''\n2 2\n2 1 2\n1 2\n0 1\n'''\n) == '1\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"1 1\\n2 1\\n1 0\\n0 0\") == \"1\\n\"\nassert solution(\"2 2\\n3 3\\n1 1\\n0 0\") == \"0\\n\"\nassert solution(\"2 3\\n3 2\\n1 1\\n1 0\\n0 0\") == \"1\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 123
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000', \"The answer is not as expected\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5.00000000000000000000\"\nprint(\"All tests passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\\n\", \"Test failed\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9 0\") == \"5.0000000000000000000000\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\", \"Test 1\"\nassert solution(\"6 4 9 0\") == \"10.0000000000000000000\", \"Test 2\"\nassert solution(\"2 4 9 0\") == \"5.00000000000000000000\", \"Test 3\"\nassert solution(\"1 4 9 0\") == \"10.00000000000000000000\", \"Test 4\"\nassert solution(\"5 4 9 0\") == \"15.0000000000000000000\", \"Test 5\"",
        "num_ids_2": 84,
        "num_ids_4": 169
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5.00000000000000000000\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8\\n'\nassert solution('3 1\\n1 1 1') == '6\\n'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97\\n'\n\nfrom typing import List",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect. Please see the example inputs and outputs.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution.py) == '''\n8\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\\n3 1\\n1 1 1\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\\n15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 373,
        "num_ids_4": 537
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\"",
        "num_ids_2": 43,
        "num_ids_4": 82
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 6\nassert solution == 7\nassert solution == 0\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n2\\n1 4\"\nassert solution(stdin) == \"7\\n2\\n3 2\"\nassert solution(stdin) == \"0\\n0\"",
        "num_ids_2": 36,
        "num_ids_4": 49
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n2\\n1 4\"\nassert solution() == \"7\\n2\\n3 2\"\nassert solution() == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor i in range(1, int(input()) + 1):\n    input_ = input().split()\n    n, m = map(int, input_)\n    a = list(map(int, input_))\n    l = list(map(int, input_))\n    r = list(map(int, input_))\n\n    segments = [set(map(int, input().split())) for _ in range(m)]\n\n    def max_min(arr, segments):\n        max_val = arr[0]\n        min_val = arr[0]\n        for i in range(1, n):\n            for segment in segments:\n                if arr[i] >= segment[0] and arr[i] <= segment[1]:\n                    max_val = max(max_val, arr[i] - min_val)\n                    min_val = min(min_val, arr[i] - min_val)\n        return max_val\n\n    def apply_segment(arr, segments):\n        if not segments:\n            return arr\n        min_val = float('inf')\n        min_idx = None\n        for i in range(n):\n            for segment in segments:\n                if arr[i] >= segment[0] and arr[i] <= segment[1]:\n                    min_val = min(min_val, arr[i] - min_val)\n                    if min_idx is None or arr[i] < min_idx:\n                        min_idx = arr[i]\n        return apply_segment(arr[:min_idx] + arr[min_idx+1:], segments[1:])\n\n    def max_possible(arr, segments):\n        return max_min(arr, segments) - min_val\n\n    def get_max_possible(arr, segments):\n        max_possible(arr, segments)\n        return arr\n\n    a_b = apply_segment(a, segments)\n    a_b = [i for i in a_b if i!= a[0]]\n    d = max_possible(a_b, segments)\n    q = len(segments)\n    c_indices = []\n    for i in range(m):\n        c_indices.extend(segments[i])\n    print(' '.join(map(str, [d, q,''.join(map(str, c_indices))])))",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"TODO\" # Add your solution here.",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n1 4\\n7\\n2\\n3 2\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2\\n'\nassert solution('1 0\\n1000000') == '0\\n0'",
        "num_ids_2": 117,
        "num_ids_4": 141
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n2\\n1 4\"\nassert solution() == \"7\\n2\\n3 2 \"\nassert solution() == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2\\n\"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"Yes\"\nassert solution(\"aa\") == \"Yes\"\nassert solution(\"bad\") == \"Yes\"\nassert solution(\"babc\") == \"Yes\"\nassert solution(\"def\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"z\") == \"No\"\nassert solution(\"Aa\") == \"No\"\nassert solution(\"Aa\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"defg\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\na\\nz\\naa\\nbad\\nc\\na\\nb\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\nassert solution('aa') == 'No'\nassert solution('bad') == 'No'\nassert solution('babc') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"The function should return the correct output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The function should return the correct output.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"fced\\nxyz\\nr\\nbad\\naa\\nbabc\") == \"Yes\\Yes\\Yes\\Yes\\No\\No\\No\\No\"\nassert solution(\"az\\na\\nbbad\") == \"No\\No\\No\"\nassert solution(\"abcde\") == \"No\"\n",
        "num_ids_2": 58,
        "num_ids_4": 69
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8) == 'Yes'\nassert solution(9) == 'No'\nassert solution(10) == 'No'\nassert solution(11) == 'No'\nassert solution(12) == 'Yes'\nassert solution(13) == 'Yes'\nassert solution(14) == 'Yes'\nassert solution(15) == 'Yes'\nassert solution(16) == 'Yes'\nassert solution(17) == 'No'\nassert solution(18) == 'No'\nassert solution(19) == 'No'\nassert solution(20) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"\nassert solution(\"\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"fced\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"xyz\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"r\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"dabcef\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"az\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"aa\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"bad\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"babc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 63,
        "num_ids_4": 126
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n4 1'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2'\nassert solution('1 0\\n1000000') == '0\\n0'",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The solution is {solution(input())}, but it should be {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6\\n2\\n4 1 '",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6\nassert solution() == 7\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6\\n2\\n4 1 \\n'\n\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7\\n2\\n3 2 \\n'\n\nassert solution('''\n1 0\n1000000\n''') == '0\\n0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 4\n    2 -2 3 1 2\n    1 3\n    4 5\n    2 5\n    1 3\n''') == '6'\n\nassert solution('''\n    5 4\n    2 -2 3 1 4\n    3 5\n    3 4\n    2 4\n    2 5\n''') == '7'\n\nassert solution('''\n    1 0\n    1000000\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1 \"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2 \"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"\n",
        "num_ids_2": 104,
        "num_ids_4": 128
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2\\n\"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5') == '4\\nLRRR'\nassert solution('7') == '7\\nLRLRLLL'\nassert solution('3') == '3\\nLLL'\nassert solution('4') == '4\\nLLRL'",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([5, 2, 1, 5, 4, 3]) == \"4\"\nassert solution([7, 1, 3, 5, 6, 7, 4, 2]) == \"7\"\nassert solution([3, 1, 2, 3]) == \"3\"\nassert solution([4, 1, 2, 4, 3]) == \"4\"\n",
        "num_ids_2": 56,
        "num_ids_4": 97
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 5 4 3\\n7\\n1 3 5 6 7 4 2\\n3\\n1 2 3\\n4\\n1 2 4 3\\n') == '4\\nLRRR\\n7\\nLRLRLLL\\n3\\nLLL\\n4\\nLLRL\\n'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([5, 2, 1, 5, 4, 3]) == 4\nassert solution([7, 1, 3, 5, 6, 7, 4, 2]) == 7\nassert solution([3, 1, 2, 3]) == 3\nassert solution([4, 1, 2, 4, 3]) == 4\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 93
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\"",
        "num_ids_2": 61,
        "num_ids_4": 109
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\\nLRLRLLL\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\nLLL\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRL\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 117
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 1 5 4 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n7\n1 3 5 6 7 4 2\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 2 4 3\n\"\"\") == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"1\\nLRRR\"\n\nassert solution(solution(solution)) == \"2\\nRRRL\"\n\nassert solution(solution(solution(solution)))) == \"3\\nRRRRRR\"\n\nassert solution(solution(solution(solution(solution)))))) == \"4\\nRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution)))))) == \"5\\nRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution)))))) == \"6\\nRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution)))))) == \"7\\nRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution)))))) == \"8\\nRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution)))))) == \"9\\nRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution)))))) == \"10\\nRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution(solution)))))) == \"11\\nRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution(solution)))))) == \"12\\nRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution(solution)))))) == \"13\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution(solution)))))) == \"14\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution)))))) == \"15\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution(solution(solution)))))) == \"16\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution(solution)))))) == \"17\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution(solution)))))) == \"18\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution)))) == \"19\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"\n\nassert solution(solution(solution(solution)))) == \"20\\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\"",
        "num_ids_2": 31,
        "num_ids_4": 72
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\") == \"4\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 73
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())} but expected {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 5 3 4\\n') == '4\\n'\nassert solution('2\\n1 2\\n') == '2\\n'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2\\n'",
        "num_ids_2": 44,
        "num_ids_4": 73
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5\\n1 2 5 3 4\\n\\nOutput\\n4\\n\\nInput\\n2\\n1 2\\n\\nOutput\\n2\\n\\nInput\\n7\\n6 5 4 3 2 4 3\\n\\nOutput\\n2\\n') == '4\\n2\\n'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4\nassert solution(2) == 2\nassert solution(5) == 4\nassert solution(1) == 1\nassert solution(6) == 3\nassert solution(7) == 2",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\") == \"4\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\\n\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 1\nassert solution(8) == 2\nassert solution(9) == 3\nassert solution(10) == 3\nassert solution(11) == 4\nassert solution(12) == 4\nassert solution(13) == 5\nassert solution(14) == 5\nassert solution(15) == 5\nassert solution(16) == 5\nassert solution(17) == 5\nassert solution(18) == 5\nassert solution(19) == 6\nassert solution(20) == 6\nassert solution(21) == 6\nassert solution(22) == 6\nassert solution(23) == 6\nassert solution(24) == 6\nassert solution(25) == 6\nassert solution(26) == 6\nassert solution(27) == 7\nassert solution(28) == 7\nassert solution(29) == 7\nassert solution(30) == 7\nassert solution(31) == 7\nassert solution(32) == 7\nassert solution(33) == 7\nassert solution(34) == 7\nassert solution(35) == 7\nassert solution(36) == 7\nassert solution(37) == 8\nassert solution(38) == 8\nassert solution(39) == 8\nassert solution(40) == 8\nassert solution(41) == 8\nassert solution(42) == 8\nassert solution(43) == 8\nassert solution(44) == 8\nassert solution(45) == 8\nassert solution(46) == 8\nassert solution(47) == 8\nassert solution(48) == 9\nassert solution(49) == 9\nassert solution(50) == 9\nassert solution(51) == 9\nassert solution(52) == 9\nassert solution(53) == 9\nassert solution(54) == 10\nassert solution(55) == 10\nassert solution(56) == 10\nassert solution(57) == 10\nassert solution(58) == 10\nassert solution(59) == 10\nassert solution(60) == 10\nassert solution(61) == 10\nassert solution(62) == 11\nassert solution(63) == 11\nassert solution(64) == 11\nassert solution(65) == 11\nassert solution(66) == 11\nassert solution(67) == 11\nassert solution(68) == 11\nassert solution(69) == 11\nassert solution(70) == 11\nassert solution(71) == 11\nassert solution(72) == 11\nassert solution(73) == 11\nassert solution(74) == 11\nassert solution(75) == 11\nassert solution(76) == 11\nassert solution(77) == 12\nassert solution(78) == 12\nassert solution(79) == 12\nassert solution(80) == 12\nassert solution(81) == 12\nassert solution(82) == 12\nassert solution(83) == 12\nassert solution(84) == 12\nassert solution(85) == 12\nassert solution(86) == 12\nassert solution(87) == 12\nassert solution(88) == 12\nassert solution(89) == 12\nassert solution(90) == 12\nassert solution(91) == 12\nassert solution(92) == 12\nassert solution(93) == 12\nassert solution(94) == 13\nassert solution(95) == 13\nassert solution(96) == 13\nassert solution(97) == 13\nassert solution(98) == 13\nassert solution(99) == 13\nassert solution(100) == 13\nassert solution(10",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n5 3\\n1 2 2 4 5\\n\\nOutput\\n1\\n\\nInput\\n5 3\\n1 2 3 4 5\\n\\nOutput\\n2\\n\\nInput\\n5 3\\n1 2 3 3 3\\n\\nOutput\\n0') == 'Output\\n1\\n\\nInput\\n5 3\\n1 2 3 4 5\\n\\nOutput\\n2\\n\\nInput\\n5 3\\n1 2 3 3 3\\n\\nOutput\\n0'",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"The output should be 1.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 3) == 1, \"Test 1 failed\"\nassert solution(5, 2) == 2, \"Test 2 failed\"\nassert solution(5, 1) == 2, \"Test 3 failed\"\nassert solution(5, 4) == 0, \"Test 4 failed\"\nassert solution(5, 5) == 0, \"Test 5 failed\"\nassert solution(5, 6) == 0, \"Test 6 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Output is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"Test 1: Correct solution\"\nassert solution(\"100 100 100\") == \"100\\n\", \"Test 2: Correct solution\"\nassert solution
        "num_ids_2": 56,
        "num_ids_4": 1027
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"9 3 4\") == \"4\"\nassert solution(\"10 3 4\") == \"3\"\nassert solution(\"11 3 4\") == \"3\"\nassert solution(\"12 3 4\") == \"2\"\nassert solution(\"13 3 4\") == \"1\"\nassert solution(\"14 3 4\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 100 100\") == \"100\"\nassert solution(\"5 2 5\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1000 1000 1000\") == \"1000\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"2 0 1\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 68
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Wrong output: {solution(stdin)}\\nExpected output: {expected_output}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"48\\n4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n') == '48'\nassert solution('1 2\\n1 3\\n') == -1\nassert solution('1\\n2\\n3\\n') == '48'\nassert solution('1\\n2\\n') == -1\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '48'",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '48\\n4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '48'\nassert solution(open('input.txt', 'r')) == -1",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"48\\n4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test case failed.\"\nfor _ in range(test_cases):\n    n, *divisors = map(int, input().split())\n    x = min(divisors)\n    if x == 1:\n        print(-1)\n    else:\n        print(x)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"answer\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_id} failed: got '{solution(stdin)}', expected '{expected_output}'\"\n\ntest_case_id = 1\nexpected_output = 48\nassert solution(test_case_id) == expected_output, f\"Test case {test_case_id} failed: got '{solution(test_case_id)}', expected '{expected_output}'\"\n\ntest_case_id = 2\nexpected_output = -1\nassert solution(test_case_id) == expected_output, f\"Test case {test_case_id} failed: got '{solution(test_case_id)}', expected '{expected_output}'\"\n\ntest_case_id = 3\nexpected_output = 4\nassert solution(test_case_id) == expected_output, f\"Test case {test_case_id} failed: got '{solution(test_case_id)}', expected '{expected_output}'\"\n\ntest_case_id = 4\nexpected_output = 12\nassert solution(test_case_id) == expected_output, f\"Test case {test_case_id} failed: got '{solution(test_case_id)}', expected '{expected_output}'\"\n\ntest_case_id = 5\nexpected_output = 8\nassert solution(test_case_id) == expected_output, f\"Test case {test_case_id} failed: got '{solution(test_case_id)}', expected '{expected_output}'\"",
        "num_ids_2": 84,
        "num_ids_4": 176
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\") == \"3\\n5 6 1\\n2\\n2 4\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4 '\nassert solution('5\\n6 6 6 6 6') == '1\\n6 '\n\nassert solution('6\\n1 5 5 1 6 1') == '3\\n5 6 1'\nassert solution('5\\n2 4 2 4 4') == '2\\n2 4 '\nassert solution('5\\n6 6 6 6 6') == '1\\n6 '",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\\n\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\\n\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3\\n5 6 1'\n\nassert solution('''\n5\n2 4 2 4 4\n''') == '2\\n2 4'\n\nassert solution('''\n5\n6 6 6 6 6\n''') == '1\\n6'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\"\n",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"\n",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(432) == \"435\", \"Test failed\"\nassert solution(99) == \"103\", \"Test failed\"\nassert solution(237) == \"237\", \"Test failed\"\nassert solution(42) == \"44\", \"Test failed\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'abac'\nassert solution('abba') == 'aba'\nassert solution('ecoosdcefr') == 'aba'\nassert solution('38 13 24 14 11 5 3 24 17 0') == 'aba'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"01\") == \"01\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"00\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"00\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"aac\") == \"aac\"\nassert solution(\"b\") == \"b\"\nassert solution(\"aba\") == \"aba\"\nassert solution(\"codeforces\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"abba\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abac\") == \"aac\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"a\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"10\") == \"aba\"\nassert solution(\"38 13 24 14 11 5 3 24 17 0\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"aac\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2\") == \"b\", \"Expected output is 'b', but got '{}'.\".format(solution(stdin=\"2\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"b\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"b\", \"Test case 1 failed\"\nassert solution(\"1\") == \"a\", \"Test case 2 failed\"\nassert solution(\"1000000000000001\") == \"zz\", \"Test case 3 failed\"\nassert solution(\"10000000000000000\") == \"aaa\", \"Test case 4 failed\"\nassert solution(\"10000000000000000\") == \"aaaa\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 99
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2\\n') == 'b\\n'\nassert solution(stdin='3\\n') == 'aa\\n'\nassert solution(stdin='4\\n') == 'zz\\n'\nassert solution(stdin='5\\n') == 'aaaa\\n'\nassert solution(stdin='6\\n') == 'zzz\\n'\nassert solution(stdin='7\\n') == 'aaaaa\\n'\nassert solution(stdin='8\\n') == 'zzzz\\n'\nassert solution(stdin='9\\n') == 'zzzzz\\n'\nassert solution(stdin='10\\n') == 'aaaz\\n'\nassert solution(stdin='11\\n') == 'aaaab\\n'\nassert solution(stdin='12\\n') == 'aaaabc\\n'\nassert solution(stdin='13\\n') == 'aaaaab\\n'\nassert solution(stdin='14\\n') == 'aaaaac\\n'\nassert solution(stdin='15\\n') == 'aaaaad\\n'\nassert solution(stdin='16\\n') == 'aaaaae\\n'\nassert solution(stdin='17\\n') == 'aaaaaf\\n'\nassert solution(stdin='18\\n') == 'aaaaag\\n'\nassert solution(stdin='19\\n') == 'aaaaah\\n'\nassert solution(stdin='20\\n') == 'aaaaai\\n'\nassert solution(stdin='21\\n') == 'aaaaaj\\n'\nassert solution(stdin='22\\n') == 'aaaaak\\n'\nassert solution(stdin='23\\n') == 'aaaaal\\n'\nassert solution(stdin='24\\n') == 'aaaaam\\n'\nassert solution(stdin='25\\n') == 'aaaaan\\n'\nassert solution(stdin='26\\n') == 'aaaaao\\n'\nassert solution(stdin='27\\n') == 'aaaaap\\n'\nassert solution(stdin='28\\n') == 'aaaaaq\\n'\nassert solution(stdin='29\\n') == 'aaaaar\\n'\nassert solution(stdin='30\\n') == 'aaaaas\\n'\nassert solution(stdin='31\\n') == 'aaaaat\\n'\nassert solution(stdin='32\\n') == 'aaaaau\\n'\nassert solution(stdin='33\\n') == 'aaaaav\\n'\nassert solution(stdin='34\\n') == 'aaaaaw\\n'\nassert solution(stdin='35\\n') == 'aaaaax\\n'\nassert solution(stdin='36\\n') == 'aaaaay\\n'\nassert solution(stdin='37\\n') == 'aaaaaz\\n'\nassert solution(stdin='38\\n') == 'aaaaba\\n'\nassert solution(stdin='39\\n') == 'aaaabb\\n'\nassert solution(stdin='40\\n') == 'aaaabc\\n'\nassert solution(stdin='41\\n') == 'aaaabd\\n'\nassert solution(stdin='42\\n') == 'aaaabe\\n'\nassert solution(stdin='43\\n') == 'aaaabf\\n'\nassert solution(stdin='44\\n') == 'aaaabg\\n'\nassert solution(stdin='45\\n') == 'aaaabh\\n'\nassert solution(stdin='46\\n') == 'aaaabi\\n'\nassert solution(stdin='47\\n') == 'aaaabj\\n'\nassert solution(stdin='48\\n') == 'aaaabk\\n'\nassert solution(stdin='49\\n') == 'aaaabl\\n'\nassert solution(stdin='50\\n') == 'aaaabm\\n'\nassert solution(stdin='51\\n') == 'aaaabn\\n'\nassert solution(stdin='52\\n') == 'aaaabo\\n'\nassert solution(stdin='53\\n') == 'aaaabp\\n'\nassert solution(stdin='54\\n') == 'aaaabq\\n'\nassert solution(stdin='55\\n') == 'aaaabr\\n'\nassert solution(stdin='56\\n') == 'aaaabs\\n'\nassert solution(stdin='57\\n') == 'aaaabt\\n'\nassert solution(stdin='58\\n') == 'aaaabu\\n'\nassert solution(stdin='59\\n') == 'aaaa",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"b\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of dogs: \")) == \"b\", \"Incorrect output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'b'\nprint(\"Test case passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\\n\"\n\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\\n\"\n\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\\n\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\\n\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"13\"\nassert solution(stdin) == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\\n\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\\n\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nto be or not to be\\n\\n10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\\n6\\naa bb aa aa bb bb\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 85,
        "num_ids_4": 104
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"to be or not to be\") == \"12\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\"\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\\n\"\nassert solution(\"10\\nab ab ab ab ab ab ab ab ab c\\n\") == \"13\\n\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nto be or not to be\\n10\\na ab a a b ab a a b c\\n6\\naa bb aa aa bb bb\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n10\\nto be or not to be\") == \"11\"\nassert solution(\"6\\nto be or not to be\\n6\\nto be or not to be\\n6\\nto be or not to be\") == \"12\"",
        "num_ids_2": 76,
        "num_ids_4": 117
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"to be or not to be\") == \"12\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\n\" + \"a ab a a b ab a a b c\" + \"\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n4 2\n1 2000 2000 2\n''') == '4000'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected: \\n{}\\nReceived: \\n{}\".format(output(), solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '20'\nassert solution(stdin) == '3 2 3'\nassert solution(stdin) == '1'\nassert solution(stdin) == '5'",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"",
        "num_ids_2": 63,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\\"8 3\\n5 4 2 6 5 1 9 2\\\") == \\\"20\\\"\\nassert solution(\\\"5 1\\n1 1 1 1 1\\\") == \\\"1\\\"\\nassert solution(\\\"4 2\\n1 2000 2000 2\\\") == \\\"4000\\\"\\n\\n# Examples\\nassert solution(\\\"8 3\\n5 4 2 6 5 1 9 2\\\") == \\\"20\\\"\\nassert solution(\\\"5 1\\n1 1 1 1 1\\\") == \\\"1\\\"\\nassert solution(\\\"4 2\\n1 2000 2000 2\\\") == \\\"4000\\\"\\n\"",
        "num_ids_2": 200,
        "num_ids_4": 200
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\\n20\\n3 2 3\\n\\n5 1\\n1 1 1 1 1\\n\\n4 2\\n1 2000 2000 2\\n\\n4000\\n2 2\") == \"20\\n3 2 3\\n5\\n1\\n4 2\\n2 2\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\\n1\\n5\\n\") == \"1\\n5\\n\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\\n4000\\n2 2\") == \"4000\\n2 2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 157,
        "num_ids_4": 205
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"20\\n3 2 3\"\nassert solution(stdin) == \"1\\n5\"\nassert solution(stdin) == \"4000\\n2 2\"",
        "num_ids_2": 31,
        "num_ids_4": 49
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    8 3\n    5 4 2 6 5 1 9 2\n    \"\"\"\n) == \"20\\n3 2 3\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1 1 1 1\n    \"\"\"\n) == \"1\\n5\"\n\nassert solution(\n    \"\"\"\n    4 2\n    1 2000 2000 2\n    \"\"\"\n) == \"4000\\n2 2\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"",
        "num_ids_2": 53,
        "num_ids_4": 83
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 -5 3 2\n''') == '1'\n\nassert solution('''\n5\n4 -2 3 -9 2\n''') == '0'\n\nassert solution('''\n9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n\nassert solution('''\n8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n-5 3 2') == '1\\n'\nassert solution('5\\n4 -2 3 -9 2') == '0\\n'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6\\n'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3\\n'",
        "num_ids_2": 43,
        "num_ids_4": 108
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test cases do not match\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(4)) == \"1\"\nassert solution(str(5)) == \"0\"\nassert solution(str(9)) == \"6\"\nassert solution(str(8)) == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3, \"Your solution is incorrect. Please check the provided examples and the input constraints.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 -5 3 2') == '1\\n'\nassert solution('5\\n4 -2 3 -9 2') == '0\\n'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6\\n'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3\\n'",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed for the given input\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2, \"Incorrect solution\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"2\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"2\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"2\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"2\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"2\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n10000",
        "num_ids_2": 190,
        "num_ids_4": 380
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed: expected output {} but got {}\".format(output(), solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\\n\", \"Test failed\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n2\\n10\\n1000000000\\n2000000000\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1, 100]) == 0\nassert solution([2, 0]) == 2\nassert solution([0, 2, 0, 3, 0]) == 10\nassert solution([1, 3, 2, 5, 5, 0]) == 11\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5]) == 100\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 0\nassert solution([1, 0, -1, 2, 3, -2, 4, -3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) ==",
        "num_ids_2": 26,
        "num_ids_4": 73
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"4\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output {solution(input())} is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\"\n\nassert solution(\"99\") == \"-1\"\n\nassert solution(\"11\") == \"-1\"\n\nassert solution(\"1000000000\") == \"-1\"",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"\") == \"-1\"\nassert solution(\"100\") == \"-1\"\nassert solution(\"5\") == \"-1\"\nassert solution(\"0\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"4\"\nprint(\"-1\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"789\") == -1",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"42\") == \"-1\"\nassert solution(\"20\") == \"-1\"\nassert solution(\"1010\") == \"4\"\nassert solution(\"1200\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('101') == 4, 'Takahashi loves the number 7 and multiples of K.'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"4\", \"Takahashi loves the number 7 and multiples of K. Where is the first occurrence of a multiple of K in the sequence 7,77,777,\\ldots?\"\nassert solution(\"200\") == \"-1\", \"If the sequence contains no multiples of K, print -1 instead.\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"\") == \"-1\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"7\"\nassert solution(\"6\") == \"7\"\nassert solution(\"7\") == \"7\"\nassert solution(\"8\") == \"7\"\nassert solution(\"9\") == \"14\"\nassert solution(\"10\") == \"14\"\nassert solution(\"11\") == \"14\"\nassert solution(\"12\") == \"14\"\nassert solution(\"13\") == \"21\"\nassert solution(\"14\") == \"21\"\nassert solution(\"15\") == \"21\"\nassert solution(\"16\") == \"21\"\nassert solution(\"17\") == \"28\"\nassert solution(\"18\") == \"28\"\nassert solution(\"19\") == \"28\"\nassert solution(\"20\") == \"28\"\nassert solution(\"21\") == \"35\"\nassert solution(\"22\") == \"35\"\nassert solution(\"23\") == \"35\"\nassert solution(\"24\") == \"35\"\nassert solution(\"25\") == \"42\"\nassert solution(\"26\") == \"42\"\nassert solution(\"27\") == \"42\"\nassert solution(\"28\") == \"42\"\nassert solution(\"29\") == \"49\"\nassert solution(\"30\") == \"49\"\nassert solution(\"31\") == \"49\"\nassert solution(\"32\") == \"49\"\nassert solution(\"33\") == \"56\"\nassert solution(\"34\") == \"56\"\nassert solution(\"35\") == \"56\"\nassert solution(\"36\") == \"56\"\nassert solution(\"37\") == \"63\"\nassert solution(\"38\") == \"63\"\nassert solution(\"39\") == \"63\"\nassert solution(\"40\") == \"63\"\nassert solution(\"41\") == \"70\"\nassert solution(\"42\") == \"70\"\nassert solution(\"43\") == \"70\"\nassert solution(\"44\") == \"70\"\nassert solution(\"45\") == \"77\"\nassert solution(\"46\") == \"77\"\nassert solution(\"47\") == \"77\"\nassert solution(\"48\") == \"77\"\nassert solution(\"49\") == \"84\"\nassert solution(\"50\") == \"84\"\nassert solution(\"51\") == \"84\"\nassert solution(\"52\") == \"84\"\nassert solution(\"53\") == \"91\"\nassert solution(\"54\") == \"91\"\nassert solution(\"55\") == \"91\"\nassert solution(\"56\") == \"91\"\nassert solution(\"57\") == \"98\"\nassert solution(\"58\") == \"98\"\nassert solution(\"59\") == \"98\"\nassert solution(\"60\") == \"98\"\nassert solution(\"61\") == \"105\"\nassert solution(\"62\") == \"105\"\nassert solution(\"63\") == \"105\"\nassert solution(\"64\") == \"105\"\nassert solution(\"65\") == \"112\"\nassert solution(\"66\") == \"112\"\nassert solution(\"67\") == \"112\"\nassert solution(\"68\") == \"112\"\nassert solution(\"69\") == \"119\"\nassert solution(\"70\") == \"119\"\nassert solution(\"71\") == \"119\"\nassert solution(\"72\") == \"119\"\nassert solution(\"73\") == \"126\"\nassert solution(\"74\") == \"126\"\nassert solution(\"75\") == \"126\"\nassert solution(\"76\") == \"126\"\nassert solution(\"77\") == \"133\"\nassert solution(\"78\") == \"133\"\nassert solution(\"79\") == \"133\"\nassert solution(\"80\") == \"133\"\nassert solution(\"81\") == \"140\"\nassert solution(\"82\") == \"140\"\nassert solution(\"83\") == \"140\"\nassert solution(\"8",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\\n\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\") == \"48\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n') == '48'",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"The correct solution is not given.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"The solution {solution} does not match the expected output {expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == 4\nassert solution('5 5\\n1 2 3 4 5') == 1\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == 48",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output: 4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4\nassert solution() == 2\nassert solution() == 1\nassert solution() == -1\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"\n",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n5 8\\n2 3 1 1 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\\n5 15\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\\n5 15\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\") == \"-1\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 315
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(stdin)) == 4\nassert solution(solution(stdin)) == 2\nassert solution(solution(stdin)) == -1",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n24 21 14 10\\n\\nOutput\\n3\\n\\nInput\\n2\\n500 500\\n\\nOutput\\n0\\n\\nInput\\n3\\n14 5 1\\n\\nOutput\\n-1\\n\\nInput\\n5\\n1 3 6 9 12\\n\\nOutput\\n1\") == \"3\\n\\n0\\n-1\\n1\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"3\\n14 5 1\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"3\\n14 5 1\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\") == \"0\"\nassert solution(\"3\\n14 5 1\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"0\"\nassert solution(3) == \"0\"\nassert solution(4) == \"0\"\nassert solution(5) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3', \"Test case 1 failed\"\nassert solution(stdin) == '3', \"Test case 2 failed\"\nassert solution(stdin) == '0', \"Test case 3 failed\"\nassert solution(stdin) == '-1', \"Test case 4 failed\"\nassert solution(stdin) == '1', \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"24 21 14 10\") == \"3\"\nassert solution(\"500 500\") == \"0\"\nassert solution(\"14 5 1\") == \"-1\"\nassert solution(\"1 3 6 9 12\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 56
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, output: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\", \"Test Case 3 failed.\"\nassert solution(stdin) == \"0\", \"Test Case 4 failed.\"\nassert solution(stdin) == \"-1\", \"Test Case 5 failed.\"\nassert solution(stdin) == \"1\", \"Test Case 6 failed.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == 5\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == 2\nassert solution(\"4 4\\n1 10 100 1000\\n\") == 4",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5\\n'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2\\n'\nassert solution('4 4\\n1 10 100 1000\\n') == '4\\n'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 2\n    1 2 15 15 15\n    ''') == 5\n\nassert solution('''\n    6 1\n    36 4 1 25 9 16\n    ''') == 2\n\nassert solution('''\n    4 4\n    1 10 100 1000\n    ''') == 4",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"Invalid input\"\nassert solution(\"\") == \"Invalid input\"\nassert solution(\"5 2\") == \"Invalid input\"\nassert solution(\"5 10\") == \"Invalid input\"\nassert solution(\"5 -1\") == \"Invalid input\"\nassert solution(\"6 1\") == \"Invalid input\"\nassert solution(\"4 4\") == \"Invalid input\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\") == 5\nassert solution(\"6 1\\n36 4 1 25 9 16\") == 2\nassert solution(\"4 4\\n1 10 100 1000\") == 4",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\", \"Incorrect output\"\nassert solution(stdin) == \"2\", \"Incorrect output\"\nassert solution(stdin) == \"4\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == 5\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == 2\nassert solution(\"4 4\\n1 10 100 1000\\n\") == 4",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n5 2\\n1 2 15 15 15\\n\\nOutput\\n5\\n\\nInput\\n6 1\\n36 4 1 25 9 16\\n\\nOutput\\n2\\n\\nInput\\n4 4\\n1 10 100 1000\\n\\nOutput\\n4\\ndef solution(stdin: str) -> str:\\n    pass') == '5\\n\\n2\\n\\n4\\n'",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"1 2 3\\n4 5 6\") == \"4\"\nassert solution(\"0 0 0\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 60
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"4 10 5\\n2 8 5 7\\n\") == \"3\\n\"\nassert solution(\"5 10 7\\n10 10 10 10\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n10 10 10 10\\n5 5 5 5\\n\") == \"3\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 130
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"10 10 10\") == \"10\\n\"\nassert solution(\"10 10 5\") == \"-1\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6 8\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6 8\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6 8\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6 8\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6 8\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6 8\\n\") == \"8\"",
        "num_ids_2": 66,
        "num_ids_4": 144
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"3 2 1 3\\n1\\n\") == \"-1\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 6\\n8 10 3 6\\n8 10 3 6\\n\") == \"-1\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 127
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n') == '8'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 7\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 7\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n8 10 3 7\\n8 10 3 8\") == \"-1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 138
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'5 10 7\\n8 10 3 6\\n') == '8\\n'\nassert solution(b'5 10 7\\n8 10 3\\n') == '-1\\n'\nassert solution(b'5 10 7\\n8 10\\n') == '-1\\n'\nassert solution(b'5 10 7\\n8 10 3 6\\n9 10 3 6\\n') == '5\\n'\nassert solution(b'5 10 7\\n8 10 3\\n10 10 3 6\\n') == '5\\n'\nassert solution(b'5 10 7\\n8 10 3\\n11 10 3 6\\n') == '-1\\n'\nassert solution(b'5 10 7\\n8 10 3\\n12 10 3 6\\n') == '-1\\n'\nassert solution(b'5 10 7\\n8 10 3\\n13 10 3 6\\n14 10 3 6\\n') == '-1\\n'",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n1\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n1\\n\") == \"Yes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 174
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"10 10 10\\n1\\n1\\n1\\n1\\n\") == \"Yes\\nYes\\nYes\\nYes\\nYes\\n\"\nassert solution(\"5 1 2\\n1\\n2\\n1\\n1\\n\") == \"No\\nYes\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 129
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''\n4 2 1\n1\n1\n1\n2\n''') == 'Yes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''\n2 2 1\n1\n1\n1\n2\n''') == 'No\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('''\n3 1 1\n1\n1\n1\n2\n''') == 'No\\nYes\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n5\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"5 1 3\\n2\\n1\\n3\\n4\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"4 2 1\\n1\\n2\\n3\\n4\\n\") == \"Yes\\nNo\\nNo\\nNo\\nNo\\n\"\nassert solution(\"1 1 1 1 1\\n5\\n4\\n3\\n2\\n1\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 85,
        "num_ids_4": 169
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"1 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"1 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Test failed: expected '{expected}', got '{solution(input)}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"YES\\n00\\n10\\n\\nYES\\n010\\n0000\\n\\nNO\") == \"YES\\n00\\n10\\n\\nYES\\n010\\n0000\\n\\nNO\"\nassert solution(\"YES\\n010\\n0000\\n\\nNO\") == \"YES\\n00\\n10\\n\\nYES\\n010\\n0000\\n\\nNO\"\nassert solution(\"YES\\n00\\n10\\n\\nYES\\n010\\n0000\\n\\nNO\") == \"YES\\n00\\n10\\n\\nYES\\n010\\n0000\\n\\nNO\"",
        "num_ids_2": 123,
        "num_ids_4": 191
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"YES\"\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n010\\n0000\\n\"\nassert solution() == \"NO\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\\n\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\\n010\\n0000\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 136
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES\\n00\\n10'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES\\n010\\n0000'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0') == 'NO'\n",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\n5 5\\n0 0 0 0 0\\n0 0 0 1 1\\n0 0 1 1 1\\n0 0 1 1 1\\n1 1 0 1 1\\n1 1 1 0 1\\n1 1 1 1 0\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\n5 5\\n0 0 0 0 0\\n0 0 0 1 1\\n0 0 1 1 1\\n0 0 1 1 1\\n1 1 0 1 1\\n1 1 1 0 1\\n1 1 1 1 0\\n\\n2 2\\n1 1\\n0 1\\n\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\n5 5\\n0 0 0 0 0\\n0 0 0 1 1\\n0 0 1 1 1\\n0 0 1 1 1\\n1 1 0 1 1\\n1 1 1 0 1\\n1 1 1 1 0\\n\\n2 2\\n1 1\\n0 1\\n\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\n5 5\\n0 0 0 0 0\\n0 0 0 1 1\\n0 0 1 1 1\\n0 0 1 1 1\\n1 1 0 1 1\\n1 1 1 0 1\\n1 1 1 1 0\\n\\n2 2\\n1 1\\n0 1\\n\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\n5 5\\n0 0 0 0 0\\n0 0 0 1 1\\n0 0 1 1 1\\n0 0 1 1 1\\n1 1 0 1 1\\n1 1 1 0 1\\n1 1 1 1 0') == 'YES\\n010\\n0000\\nYES\\n010\\n0000\\nYES\\n0011\\n0101\\nYES\\n0110\\n0101\\nYES\\n1011\\n0101\\nYES\\n1001\\n0101\\nYES\\n1010\\n0101\\nYES\\n0110\\n0101\\nYES\\n0101\\n0101\\nYES\\n0110\\n0101\\nYES\\n0101\\n0101\\nYES\\n0110\\n0101\\nYES\\n0101\\n0101\\nYES\\n0110\\n0101\\nYES\\n0101\\n0101\\nYES\\n0110\\n0101\\nYES\\n0101\\n0101\\nYES\\n0110",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n2 2\\n1 1\\n0 1\\n\\nOutput\\nYES\\n00\\n10\\n\\nInput\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\nOutput\\nYES\\n010\\n0000\\n\\nInput\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\nOutput\\nNO\\ndef solution(stdin: str) -> str:\\n    pass') == 'YES\\n010\\n0000\\n'\nassert solution('Input\\n2 2\\n1 1\\n0 1\\n\\nOutput\\nYES\\n00\\n10\\n\\nInput\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\nOutput\\nYES\\n010\\n0000\\n\\nInput\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\\nOutput\\nNO\\ndef solution(stdin: str) -> str:\\n    pass') == 'NO'",
        "num_ids_2": 313,
        "num_ids_4": 313
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('373') == 'Yes', \"Your solution should output 'Yes' for the given example input\"\nassert solution('121') == 'No', \"Your solution should output 'No' for the given example input\"\nassert solution('436') == 'Yes', \"Your solution should output 'Yes' for the given example input\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"373\") == \"Yes\", \"Output: 'Yes', Input: '373'\"\nassert solution(\"121\") == \"No\", \"Output: 'No', Input: '121'\"\nassert solution(\"436\") == \"Yes\", \"Output: 'Yes', Input: '436'\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test failed: '373' should be equal to 'Yes'\"\nassert solution(\"121\") == \"No\", \"Test failed: '121' should be equal to 'No'\"\nassert solution(\"436\") == \"Yes\", \"Test failed: '436' should be equal to 'Yes'\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\", \"Incorrect output\"\nassert solution(\"121\") == \"No\", \"Incorrect output\"\nassert solution(\"436\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"373\") == \"Yes\", \"Test failed\"\nassert solution(\"121\") == \"No\", \"Test failed\"\nassert solution(\"436\") == \"Yes\", \"Test failed\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is incorrect. Please check your code and try again.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution '{solution(input())}' is incorrect. Expected output: '{expected_output}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == # Your solution here",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == 5\nassert solution('6 2 1\\n1 0 0 1 0 1') == 3\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"5\"\nassert solution(solution) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"Test 1\"\nassert solution(\"2+2\") == \"-46\", \"Test 2\"\nassert solution(\"112-37\") == \"375\", \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == 4, \"The reference solution should return 4\"\nassert solution('2+2') == -46, \"The reference solution should return -46\"\nassert solution('112-37') == 375, \"The reference solution should return 375\"",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\n",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The reference solution should evaluate to 4, but it evaluates to {}.\".format(solution(\"8-7+6-5+4-3+2-1-0\"))\nassert solution(\"2+2\") == -46, \"The reference solution should evaluate to -46, but it evaluates to {}.\".format(solution(\"2+2\"))\nassert solution(\"112-37\") == 375, \"The reference solution should evaluate to 375, but it evaluates to {}.\".format(solution(\"112-37\"))",
        "num_ids_2": 102,
        "num_ids_4": 148
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The expected output is 4, but the actual output is {solution('8-7+6-5+4-3+2-1-0')}\"\n\nassert solution(\"2+2\") == -46, \"The expected output is -46, but the actual output is {solution('2+2')}\"\n\nassert solution(\"112-37\") == 375, \"The expected output is 375, but the actual output is {solution('112-37')}\"",
        "num_ids_2": 96,
        "num_ids_4": 139
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\n",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_color_choosing.txt\", \"r\").read()) == \"YES\\n1 3\\n3 1\\n3 2\\n2 3\"\nassert solution(open(\"test_color_choosing.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"test_color_choosing_no_suitable_choice.txt\", \"r\").read()) == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 3\\n3 2\\n2 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\\n1 1\\n1 4\\n1 3\\n1 2\\n1 4\\n3 1\\n2 3\\n4 2\\n3 3\\n2 1\\n4 3\\n3 4\") == \"NO\"",
        "num_ids_2": 160,
        "num_ids_4": 233
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution(b'10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution(b'13 4') == 'NO'",
        "num_ids_2": 99,
        "num_ids_4": 114
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nNO\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n1 3\\n1 2\\n1 3\\n2 3\\nYES\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\\nYES\"\nassert solution(",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 103,
        "num_ids_4": 128
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(open(\"input2.txt\", \"r\")) == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(open(\"input3.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input4.txt\", \"r\")) == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\n",
        "num_ids_2": 105,
        "num_ids_4": 191
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n2 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n4 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution() == \"YES\\n3 1\\n1 3\\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3\\n1 1\\n1 3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"YES\\n1 3\"\nassert solution(4) == \"YES\\n1 3\\n2 1\\n3 2\\n4 3\"\nassert solution(10) == \"YES\\n1 3\\n2 1\\n3 4\\n4 2\"\nassert solution(13) == \"NO\"",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == 18\nassert solution('6 1 5') == -1\nassert solution('4 3 1') == 100\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, 2, 3) == 18\nassert solution(6, 1, 5) == -1\nassert solution(4, 3, 1) == 100\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: '{solution(input())}'!= '{output()}' for input '{input()}'\\nInput: {input()}, Output: {output()}\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100'",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"18\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution() == \"21\"\nassert solution() == \"4\"\nassert solution() == \"15\"",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('11 6\\n000010000010') == '14'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '15'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '21'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\n\nprint('All test cases passed!')",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\\n\"\nassert solution(\"aaaa\\nbbbb\") == \"No\\n\"\nassert solution(\"abc\\ndef\") == \"Yes\\n\"\nassert solution(\"abcdefg\\nhijklmn\") == \"No\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('azzel\\napple') == 'Yes', 'Test failed'\nassert solution('hello\\nworld') == 'Yes', 'Test failed'\nassert solution('abcdefghij') == 'No', 'Test failed'\nassert solution('abcde') == 'No', 'Test failed'\nassert solution('hello') == 'No', 'Test failed'",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'azzel\\napple') == 'Yes'\nassert solution(b'abc') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('azzel\\napple\\n') == 'Yes'\nassert solution('abcde\\nabcde\\n') == 'No'\nassert solution('abcde\\nxyz\\n') == 'No'\nassert solution('abcde\\nxyz\\n') == 'No'\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'Yes\\n'\nassert solution('apple') == 'Yes\\n'\nassert solution('banana') == 'No\\n'\nassert solution('racecar') == 'No\\n'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"azzel\") == \"Yes\\n\", \"Expected: Yes\\nActual: \" + solution(\"azzel\")\nassert solution(\"apple\") == \"Yes\\n\", \"Expected: Yes\\nActual: \" + solution(\"apple\")\nassert solution(\"banana\") == \"No\\n\", \"Expected: No\\nActual: \" + solution(\"banana\")\nassert solution(\"hello\") == \"No\\n\", \"Expected: No\\nActual: \" + solution(\"hello\")",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"azzel\") == \"Yes\\napple\\n\"\nassert solution(\"apple\") == \"No\\nNo\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\\n\", \"Test Case 1 failed\"\nassert solution(\"apple\") == \"No\\n\", \"Test Case 2 failed\"\nassert solution(\"abc\") == \"No\\n\", \"Test Case 3 failed\"\nassert solution(\"abac\") == \"No\\n\", \"Test Case 4 failed\"\nassert solution(\"hello\") == \"No\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 16496.0\nassert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 16496.0\nassert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 16496.0\nassert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 16496.0\nassert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 16496.0",
        "num_ids_2": 398,
        "num_ids_4": 796
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed to achieve the objective is $225.00\"\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed to achieve the objective is $70.00\"",
        "num_ids_2": 411,
        "num_ids_4": 411
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Solution is achievable.\\nMinimum amount of money needed: 25 yen.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Solution is unachievable.\\nMinimum amount of money needed: -1 yen.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Solution is unachievable.\\nMinimum amount of money needed: -1 yen.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Solution is unachievable.\\nMinimum amount of money needed: -1 yen.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable",
        "num_ids_2": 424,
        "num_ids_4": 848
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\\n1\\n5\\n10\\n10\\n20\") == \"30\"\nassert solution(\"0\\n1\\n5\\n10\\n10\\n20\") == \"30\"\nassert solution(\"0\\n1\\n5\\n10\\n10\\n20\") == \"30\"\nassert solution(\"0\\n1\\n5\\n10\\n10\\n20\") == \"30\"\nassert solution(\"0\\n1\\n5\\n10\\n10\\n20\") == \"30\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Minimum amount of money needed to achieve the objective is 50 yen.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Minimum amount of money needed to achieve the objective is 100 yen.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initial understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen. If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to",
        "num_ids_2": 733,
        "num_ids_4": 1025
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\"",
        "num_ids_2": 760,
        "num_ids_4": 760
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Minimum amount required to achieve the objective is 40000 yen.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Minimum amount required to achieve the objective is 80000 yen.\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.",
        "num_ids_2": 796,
        "num_ids_4": 1025
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"60 yen\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"45 yen\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"20 yen\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"10 yen\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"0 yen\"",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 100\") == \"1\"\nassert solution(\"3 100\") == \"1\"\nassert solution(\"5 100\") == \"1\"\nassert solution(\"3 200\") == \"2\"\nassert solution(\"5 200\") == \"2\"\nassert solution(\"3 500\") == \"3\"\nassert solution(\"5 500\") == \"3\"\nassert solution(\"3 700\") == \"4\"\nassert solution(\"5 700\") == \"4\"\nassert solution(\"3 1000\") == \"5\"\nassert solution(\"5 1000\") == \"5\"\nassert solution(\"3 1500\") == \"6\"\nassert solution(\"5 1500\") == \"6\"\nassert solution(\"3 2000\") == \"7\"\nassert solution(\"5 2000\") == \"7\"\nassert solution(\"3 2500\") == \"8\"\nassert solution(\"5 2500\") == \"8\"\nassert solution(\"3 3000\") == \"9\"\nassert solution(\"5 3000\") == \"9\"\nassert solution(\"3 3500\") == \"10\"\nassert solution(\"5 3500\") == \"10\"\nassert solution(\"3 4000\") == \"11\"\nassert solution(\"5 4000\") == \"11\"\nassert solution(\"3 4500\") == \"12\"\nassert solution(\"5 4500\") == \"12\"\nassert solution(\"3 5000\") == \"13\"\nassert solution(\"5 5000\") == \"13\"\nassert solution(\"3 5500\") == \"14\"\nassert solution(\"5 5500\") == \"14\"\nassert solution(\"3 6000\") == \"15\"\nassert solution(\"5 6000\") == \"15\"\nassert solution(\"3 6500\") == \"16\"\nassert solution(\"5 6500\") == \"16\"\nassert solution(\"3 7000\") == \"17\"\nassert solution(\"5 7000\") == \"17\"\nassert solution(\"3 7500\") == \"18\"\nassert solution(\"5 7500\") == \"18\"\nassert solution(\"3 8000\") == \"19\"\nassert solution(\"5 8000\") == \"19\"\nassert solution(\"3 8500\") == \"20\"\nassert solution(\"5 8500\") == \"20\"\nassert solution(\"3 9000\") == \"21\"\nassert solution(\"5 9000\") == \"21\"\nassert solution(\"3 9500\") == \"22\"\nassert solution(\"5 9500\") == \"22\"\nassert solution(\"3 10000\") == \"23\"\nassert solution(\"5 10000\") == \"23\"\nassert solution(\"3 10500\") == \"24\"\nassert solution(\"5 10500\") == \"24\"\nassert solution(\"3 11000\") == \"25\"\nassert solution(\"5 11000\") == \"25\"\nassert solution(\"3 11500\") == \"26\"\nassert solution(\"5 11500\") == \"26\"\nassert solution(\"3 12000\") == \"27\"\nassert solution(\"5 12000\") == \"27\"\nassert solution(\"3 12500\") == \"28\"\nassert solution(\"5 12500\") == \"28\"\nassert solution(\"3 13000\") == \"29\"\nassert solution(\"5 13000\") == \"29\"\nassert solution(\"3 13500\") == \"30\"\nassert solution(\"5 13500\") == \"30\"\nassert solution(\"3 14000\") == \"31\"\nassert solution(\"5 14000\") == \"31\"\n",
        "num_ids_2": 42,
        "num_ids_4": 70
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('2 1000\\n3 500\\n5 800') == '3'\nassert solution('1 100\\n2 500\\n3 800\\n4 900\\n5 1000') == '3'\nassert solution('1 100\\n2 500\\n3 800\\n4 900\\n5 1000') == '4'\nassert solution('2 200\\n3 1000\\n4 500\\n5 800') == '4'\nassert solution('2 200\\n3 1000\\n4 500\\n5 800') == '5'\nassert solution('1 100\\n2 500\\n3 800\\n4 900\\n5 1000') == '5'",
        "num_ids_2": 57,
        "num_ids_4": 143
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\", \"Expected output: 3\"\nassert solution(\"1 100\\n2 100\\n3 100\") == \"3\\n\", \"Expected output: 3\"\nassert solution(\"1 100\\n2 500\\n3 100\\n4 500\") == \"4\\n\", \"Expected output: 4\"\nassert solution(\"1 100\\n2 100\\n3 500\\n4 100\\n5 500\") == \"5\\n\", \"Expected output: 5\"\nassert solution(\"1 100\\n2 500\\n3 500\\n4 100\\n5 500\") == \"5\\n\", \"Expected output: 5\"\nassert solution(\"1 100\\n2 100\\n3 500\\n4 100\\n5 500\") == \"5\\n\", \"Expected output: 5\"",
        "num_ids_2": 74,
        "num_ids_4": 169
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 700\\n3 500\\n5 800\\n') == '3\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"100 1000000000000\") == \"1000000000000\\n\"\nassert solution(\"10 10\") == \"1\\n\"\nassert solution(\"1000000000000 1000000000000\") == \"1000000000000\\n\"\nassert solution(\"20000000000000 20000000000000\") == \"20000000000000\\n\"\nassert solution(\"1 1000000000000\") == \"1\\n\"\nassert solution
        "num_ids_2": 70,
        "num_ids_4": 136
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 100\\n2 200\\n3 300\\n4 400\\n5 500\\n6 600\\n7 700\\n8 800\\n9 900\\n10 1000\\n11 1100\\n12 1200\\n13 1300\\n14 1400\\n15 1500\\n16 1600\\n17 1700\\n18 1800\\n19 1900\\n20 2000\") == \"6\"",
        "num_ids_2": 197,
        "num_ids_4": 197
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"10 100\\n50 200\\n100 300\\n150 400\\n200 500\\n\") == \"4\"\nassert solution(\"10 100\\n100 1000000\\n100 1000000\\n100 1000000\\n100 1000000\\n\") == \"11\"",
        "num_ids_2": 80,
        "num_ids_4": 150
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"2\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\\n\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\\n\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2\\n'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '2\\n'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3\\n'",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == 2\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == 2\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == 3\n",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == 2\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == 2\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2\nassert solution(10) == 3\nassert solution(10) == 2\nassert solution(10) == 1",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 89
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == 2\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == 2\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 3) == 18\nassert solution(6, 1, 5) == -1\nassert solution(4, 3, 1) == 100",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\") == \"18\\n\"\nassert solution(\"6 1 5\") == \"-1\\n\"\nassert solution(\"4 3 1\") == \"100\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}, expected output {expected_output}, got {solution(stdin)}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 2 3\\n\"\n    \"5 1 3 10 1\\n\"\n) == \"18\\n\"\n\nassert solution(\n    \"6 1 5\\n\"\n    \"10 30 30 70 10 10\\n\"\n) == \"-1\\n\"\n\nassert solution(\n    \"4 3 1\\n\"\n    \"1 100 1 1\\n\"\n) == \"100\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 2 3\n    5 1 3 10 1\n    \"\"\"\n) == \"18\"\n\nassert solution(\n    \"\"\"\n    6 1 5\n    10 30 30 70 10 10\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    4 3 1\n    1 100 1 1\n    \"\"\"\n) == \"100\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"5 2 3\n    5 1 3 10 1\n    \"\"\"\n) == \"18\"\n\nassert solution(\n    \"\"\"6 1 5\n    10 30 30 70 10 10\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"4 3 1\n    1 100 1 1\n    \"\"\"\n) == \"100\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 18\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n\") == \"Yes\"\nassert solution(\"3\\n\") == \"No\"\nassert solution(\"1\\n\") == \"No\"\nassert solution(\"20\\n\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"Yes\", \"Incorrect output.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"15\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"25\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"Yes\\n\"\nassert solution(\"10\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"Yes\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"Yes\", \"Solution is not correct\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"4\\n5 1 3\\n1 2 4\\n1 3 2\\n4 1 5\") == \"5 1 3\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"2\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"3\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nassert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"0 0 0\"",
        "num_ids_2": 45,
        "num_ids_4": 59
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '''2 2 6'''\n\nassert solution('''5\n1 2 3 4 5''') == '''1 1 1 1 1'''\n\nassert solution('''3\n5 4 3''') == '''3 3 3'''",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nprint('All tests passed!')",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Takahashi loves palindromes. Non-palindromic strings are unacceptable to him.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"hello\") == \"2\"\nassert solution(\"aa\") == \"1\"\nassert solution(\"racecar\") == \"2\"\nassert solution(\"hello\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"1\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == 1\nassert solution(\"racecar\") == 2\nassert solution(\"hello\") == 1\nassert solution(\"abc\") == 1\nassert solution(\"abba\") == 2",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\", \"The correct output is '1', but it's actually '\"+solution(\"redcoder\")+\"'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"12\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"100\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"No\"\nassert solution(2) == \"Yes\"\nassert solution(3) == \"No\"\nassert solution(4) == \"Yes\"\nassert solution(5) == \"No\"\nassert solution(6) == \"Yes\"\nassert solution(7) == \"No\"\nassert solution(8) == \"Yes\"\nassert solution(9) == \"No\"\nassert solution(10) == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes' or solution(input()) == 'No', \"Test Case #1\"\nassert solution(input()) == 'Yes' or solution(input()) == 'No', \"Test Case #2\"\nassert solution(input()) == 'Yes' or solution(input()) == 'No', \"Test Case #3\"\nassert solution(input()) == 'Yes' or solution(input()) == 'No', \"Test Case #4\"\nassert solution(input()) == 'Yes' or solution(input()) == 'No', \"Test Case #5\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"101\") == \"No\"\nassert solution(\"110\") == \"Yes\"\nassert solution(\"123\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10') == 'Yes\\n10 can be represented as, for example, 2 \\times 5.\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(100) == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"N: \")) == \"Yes\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"5\\n1 2 3\\n4 5 6\") == \"5\\n\"\nassert solution(\"5\\n1 1 2\\n2 3 4\") == \"5\\n\"\nassert solution(\"5\\n1 1 2\\n2 2 3\") == \"5\\n\"\nassert solution(\"5\\n1 1 1\\n1 2 1\") == \"5\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 101
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"  # This should pass the sample test",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"5\\n\"\nassert solution(open(\"input.txt\").read()) == \"5\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 122
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 6\") == \"0\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"12\\n\"\nassert solution(\"5\\n1 1 2 2 3\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 4 9 7 5\\n\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5\\n\") == \"120\"\nassert solution(\"20\\n1 1 1 1 1\\n\") == \"1200\"\nassert solution(\"100\\n1 1 1 1 1\\n\") == \"130520\"\nassert solution(\"500\\n1 1 1 1 1\\n\") == \"130520000\"",
        "num_ids_2": 49,
        "num_ids_4": 106
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 5",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\\n2 5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\\n2 5 = 10.\"\nassert solution(\"4 7\") == \"-1\\n4 7 = -1.\"\nassert solution(\"8 15\") == \"-1\\n8 15 = -1.\"\nassert solution(\"16 31\") == \"105\\n16 31 = 105.\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 4\") == -1\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\nassert solution(\"\") == \"-1\\n\"\nassert solution(\"10 5\") == \"-1\\n\"\nassert solution(\"10 0\") == \"-1\\n\"\nassert solution(\"5 2\") == \"-1\\n\"\nassert solution(\"9 8\") == \"-1\\n\"\nassert solution(\"10 2\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\\n\", \"The given solution is incorrect.\"\n\nassert solution(\"1 1\") == \"-1\\n\", \"The given solution is incorrect.\"\n\nassert solution(\"0 0\") == \"-1\\n\", \"The given solution is incorrect.\"\n\nassert solution(\"1 9\") == \"10\\n\", \"The given solution is incorrect.\"\n\nassert solution(\"10 10\") == \"10\\n\", \"The given solution is incorrect.\"",
        "num_ids_2": 54,
        "num_ids_4": 97
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\", \"Takahashi cannot calculate 2 \\times 5\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\nassert solution(\"4 8\") == \"-1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\nassert solution(\"3 5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1 3\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1 1\\n1 2 3 4 5\") == \"1\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5\\n', \"Incorrect output for sample input.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5\\n10 12 1 2 14\\n') == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\nassert solution(\"1 1 2\") == \"1\\n\"\nassert solution(\"5\") == \"5\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 56
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('1 2 3 4 5\\n6 7 8 9 10') == '1'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20') == '20'\nassert solution
        "num_ids_2": 56,
        "num_ids_4": 1027
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"1 5\\n2 3 1 2 14\") == \"7\"\nassert solution(\"5 5\\n1 1 1 2 14\") == \"11\"\nassert solution(\"1 5\\n1 1 1 1 14\") == \"14\"\nassert solution(\"1 5\\n1 2 3 1 14\") == \"18\"\nassert solution(\"2 3\\n1 1 1 2 14\") == \"23\"\nassert solution(\"1 5\\n1 2 3 1 13\") == \"27\"\nassert solution(\"1 3\\n1 1 1 2 14\") == \"31\"\nassert solution(\"2 2\\n1 1 1 2 14\") == \"35\"\nassert solution(\"2 4\\n1 1 1 2 14\") == \"39\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n1110\\n1011'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n') == '2\\n1110\\n1011\\n'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '1\\n101001\\n'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2\\n111100\\n110110\\n'",
        "num_ids_2": 106,
        "num_ids_4": 170
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 5\\n3 5\\n4 5\\n\") == \"1\\n101001\\n110110\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n5 6\\n\") == \"2\\n111100\\n110110\\n\"\n",
        "num_ids_2": 139,
        "num_ids_4": 213
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\\n110110\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n111100\\n110110\"",
        "num_ids_2": 126,
        "num_ids_4": 186
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n2\n1110\n1011\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n') == '2\\n1110\\n1011\\n'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n') == '1\\n101001\\n'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n') == '2\\n111100\\n110110\\n'",
        "num_ids_2": 106,
        "num_ids_4": 170
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n111100\\n110110\"",
        "num_ids_2": 118,
        "num_ids_4": 178
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"1\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 5\\n3 4\\n3 5\") == \"1\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\"",
        "num_ids_2": 103,
        "num_ids_4": 147
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"1\\n101001\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n111100\\n110110\"\n",
        "num_ids_2": 108,
        "num_ids_4": 168
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\nYES\\nYES\\nNO\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\nYES\\nNO\"\nassert solution(\"2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\\nYES\\nYES\"\nassert solution(\"3\\n1 2 3\\n\") == \"YES\\nNO\"",
        "num_ids_2": 117,
        "num_ids_4": 176
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 'YES'\nassert solution(3) == 'YES'\nassert solution(2) == 'YES'\nassert solution(3) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 2 5\") == \"YES\"\nassert solution(\"3 4 5 3\") == \"YES\"\nassert solution(\"2 10 10\") == \"YES\"\nassert solution(\"3 1 2 3\") == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 102,
        "num_ids_4": 152
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n5\\n2 1 1 2 5\\n\\nOutput\\nYES\\n\\nInput\\n3\\n4 5 3\\n\\nOutput\\nYES\\n\\nInput\\n2\\n10 10\\n\\nOutput\\nYES\\n\\nInput\\n3\\n1 2 3\\n\\nOutput\\nNO\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2 3\\n\\nOutput\\nNO\") == \"NO\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\") == \"YES\\n\"\nassert solution(\"2\\n10 10\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\") == \"NO\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1000 6\n    -100 -200 -300 125 77 -4\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    1000000000000 5\n    -1 0 0 0 0\n    \"\"\"\n) == \"4999999999996\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    -3 -6 5 4\n    \"\"\"\n) == \"-1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '-1'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"Output\", \"Expected output but got: \" + solution(stdin: str)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1000 6\n-100 -200 -300 125 77 -4\n''') == '9\\n'\nassert solution('''\n1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996\\n'\nassert solution('''\n10 4\n-3 -6 5 4\n''') == '-1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\\n\"\nassert solution(stdin) == \"4999999999996\\n\"\nassert solution(stdin) == \"-1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 48
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"\n",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"\n",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"AB\") == \"AB\"\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nA\\nA\\nB\\nB\\nA\\nA\") == \"A\"\nassert solution(\"5\\nA\\nAAA\") == \"ZZ\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"AB\"\nassert solution(stdin=\"7\\nABACABA\") == \"AB\"\nassert solution(stdin=\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\nD\\nE\\n\") == \"A\"\nassert solution(\"2\\nAA\\nAB\\n\") == \"AB\"\nassert solution(\"5\\nZZZAA\\n\") == \"ZZ\"\nassert solution(\"7\\nABACABA\\n\") == \"AB\"",
        "num_ids_2": 43,
        "num_ids_4": 78
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BAABABABBABBB\") == \"AB\"\nassert solution(\"ABABABABAB\") == \"AB\"\nassert solution(\"BBAABBBA\") == \"BB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\nassert solution(\"ZZZ\") == \"ZZ\"",
        "num_ids_2": 29,
        "num_ids_4": 54
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"test\") == \"est\", \"Expected result: est, got: \" + solution(\"test\")\nassert solution(\"west\") == \"here\", \"Expected result: here, got: \" + solution(\"west\")\nassert solution(\"codeforces\") == \"es\", \"Expected result: es, got: \" + solution(\"codeforces\")\nassert solution(\"yes\") == \"es\", \"Expected result: es, got: \" + solution(\"yes\")\nassert solution(\"b\") == \"ab\", \"Expected result: ab, got: \" + solution(\"b\")",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"test\") == \"est\"\nassert solution(\"\") == \"\"\nassert solution(\"test\") == \"est\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"b\"\nassert solution(\"ab\") == \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"3 3\\n1 1 11\") == \"2\"\nassert solution(\"3 3\\n1 7 11 1\") == \"2\"\nassert solution(\"3 3\\n1 1 11 1\") == \"2\"\nassert solution(\"3 3\\n1 7 11 1 1\") == \"2\"\nassert solution(\"3 3\\n1 1 11 1 1\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"2 2\\n1 3 4\") == \"1\\n\"\nassert solution(\"4 4\\n5 6 7\") == \"1\\n\"\nassert solution(\"5 5\\n1 2 3\") == \"2\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n'\nprint('All test cases passed')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '2\\n' # Replace with the correct output\nassert solution(stdin='3 3\\n1 7 11') == '2\\n'\nassert solution(stdin='2') == '2\\n'",
        "num_ids_2": 44,
        "num_ids_4": 58
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"A man, a plan, a canal: Panama\") == \"No\"\nassert solution(\"23412341234\") == \"No\"\nassert solution(\"abac\") == \"No\"\nassert solution(\"hello\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 64
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes', \"Expected Yes, but got %s\" % solution('akasaka')\nassert solution('hello') == 'No', \"Expected No, but got %s\" % solution('hello')\nassert solution('racecar') == 'No', \"Expected No, but got %s\" % solution('racecar')\nassert solution('abcde') == 'No', \"Expected No, but got %s\" % solution('abcde')\nassert solution('abc') == 'No', \"Expected No, but got %s\" % solution('abc')\nassert solution('abcd') == 'No', \"Expected No, but got %s\" % solution('abcd')",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Test failed for the given input.\"\nassert solution(\"hello\") == \"No\", \"Test failed for the given input.\"\nassert solution(\"\") == \"No\", \"Test failed for the given input.\"\nassert solution(\"racecar\") == \"No\", \"Test failed for the given input.\"\nassert solution(\"A man, a plan, a canal: Panama\") == \"Yes\", \"Test failed for the given input.\"",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('akasaka') == 'Yes', 'Sample Input: akasaka, Expected Output: Yes'\nassert solution('racecar') == 'No', 'Sample Input: racecar, Expected Output: No'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"A\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"hello\") == \"Yes\"\nassert solution(\"pqr\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"aba\") == \"No\"\nassert solution(\"pqrstuvwxyz\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"The given string is not a strong palindrome.\"\nassert solution(\"elephant\") == \"No\", \"The given string is a strong palindrome.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Test Case 1\"\nassert solution(\"racecar\") == \"No\", \"Test Case 2\"\nassert solution(\"hello\") == \"No\", \"Test Case 3\"\nassert solution(\"amanaplanacanalpanama\") == \"No\", \"Test Case 4\"\nassert solution(\"A man, a plan, a canal: Panama\") == \"No\", \"Test Case 5\"",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"abracadabra\") == \"Yes\"\nassert solution(\"A\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"The answer should be 217\"\nassert solution(\"198 1.11\") == \"218\", \"The answer should be 218\"\nassert solution(\"198 1.1\") == \"218\", \"The answer should be 218\"\nassert solution(\"198 1.01\") == \"218\", \"The answer should be 218\"\nassert solution(\"198 0.01\") == \"218\", \"The answer should be 218\"",
        "num_ids_2": 58,
        "num_ids_4": 115
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"20 2.50\") == \"50\"\nassert solution(\"1.1 1.10\") == \"2\"\nassert solution(\"0 0.000001\") == \"0\"\nassert solution
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198.1\") == \"217\"\nassert solution(\"198.9\") == \"217\"\nassert solution(\"198.99\") == \"217\"\nassert solution(\"198.999\") == \"217\"\nassert solution(\"198.9999\") == \"217\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"3.14 1.23\") == \"314\"\nassert solution(\"1.23 1.23\") == \"123\"\nassert solution
        "num_ids_2": 39,
        "num_ids_4": 1027
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Test case 1\"\nassert solution(\"22 2.20\") == \"44.4\", \"Test case 2\"\nassert solution(\"123.456 789.0123\") == \"5721.516\", \"Test case 3\"\nassert solution(\"1.1 1.1\") == \"2\", \"Test case 4\"\nassert solution(\"0.1 0.1\") == \"0\", \"Test case 5\"",
        "num_ids_2": 50,
        "num_ids_4": 110
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"198 1.10\") == \"217\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"217\", \"Solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"198 1.10\") == \"217\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"198 1.10\") == \"217\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '3'\nassert solution(2) == '0'\nassert solution(1) == '0'\nassert solution(1000000000) == '1'\nassert solution(763243547) == '999999999'\nassert solution(1000000000) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output {output} does not match the expected output {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == 3\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 1\nassert solution(2000000000) == 0\nassert solution(763243547) == 0\nassert solution(10000000000) == 1\nassert solution(10000000001) == 999999999\nassert solution(10000000002) == 381621773\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n2\\n2\\n3\\n2000000000\\n763243547\\n\") == \"1\\n0\\n1\\n2\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n0\\n2\\n3\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n1\\n3\\n2\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n2\\n1\\n3\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n3\\n2\\n1\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n4\\n3\\n2\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n5\\n4\\n3\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n6\\n5\\n4\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n7\\n6\\n5\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n8\\n7\\n6\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n9\\n8\\n7\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"0\\n10\\n9\\n8\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\",
        "num_ids_2": 156,
        "num_ids_4": 312
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but it returns {solution(input())}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(10) == \"0\"\nassert solution(1) == \"0\"\nassert solution(2) == \"1\"\nassert solution(1000000000) == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 4 5\n1 2\n2 3\n3 4\n4 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 4 5\n1 2\n2 3\n3 4\n4 1\n\"\"\") == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\n\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\\nInput\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\\nOutput\\n3\\n\\nInput\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\\nOutput\\n1\\n\\nInput\\n\\nOutput\\n0\\n\\nInput\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n133 134\\n135 136\\n137 138\\n139 140\\n141 142\\n143 144\\n145 146\\n147 148\\n149 150\\n151 152\\n153 154\\n155 156\\n157 158\\n159 160\\n161 162\\n163 164\\n165 166\\n167 168\\n169 170\\n171 172\\n173 174\\n175 176\\n177 178\\n179 180\\n181 182\\n183 184\\n185 186\\n187 188\\n189 190\\n191 192\\n193 194\\n195 196\\n197 198\\n199 200\\n201 202\\n203 204\\n205 206\\n207 208\\n209 210\\n211 212\\n213 214\\n215 216\\n217 21",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input {input()} is not equal to output {output}\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(9, 9, 1) == 3\nassert solution(5, 4, 5) == 1",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4\\n'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5\\n'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == example_output, f\"The output is incorrect. Please check the given example {example_input}.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\"\n\n```python\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 3\nassert solution(6) == 4\nassert solution(7) == 5\nassert solution(8) == 6\nassert solution(9) == 7\nassert solution(10) == 7\nassert solution(11) == 8\nassert solution(12) == 9\nassert solution(13) == 10\nassert solution(14) == 11\nassert solution(15) == 12\nassert solution(16) == 13\nassert solution(17) == 14\nassert solution(18) == 15\nassert solution(19) == 16\nassert solution(20) == 17\nassert solution(21) == 18\nassert solution(22) == 19\nassert solution(23) == 20\nassert solution(24) == 21\nassert solution(25) == 22\nassert solution(26) == 23\nassert solution(27) == 24\nassert solution(28) == 25\nassert solution(29) == 26\nassert solution(30) == 27\nassert solution(31) == 28\nassert solution(32) == 29\nassert solution(33) == 30\nassert solution(34) == 31\nassert solution(35) == 32\nassert solution(36) == 33\nassert solution(37) == 34\nassert solution(38) == 35\nassert solution(39) == 36\nassert solution(40) == 37\nassert solution(41) == 38\nassert solution(42) == 39\nassert solution(43) == 40\nassert solution(44) == 41\nassert solution(45) == 42\nassert solution(46) == 43\nassert solution(47) == 44\nassert solution(48) == 45\nassert solution(49) == 46\nassert solution(50) == 47\nassert solution(51) == 48\nassert solution(52) == 49\nassert solution(53) == 50\nassert solution(54) == 51\nassert solution(55) == 52\nassert solution(56) == 53\nassert solution(57) == 54\nassert solution(58) == 55\nassert solution(59) == 56\nassert solution(60) == 57\nassert solution(61) == 58\nassert solution(62) == 59\nassert solution(63) == 60\nassert solution(64) == 61\nassert solution(65) == 62\nassert solution(66) == 63\nassert solution(67) == 64\nassert solution(68) == 65\nassert solution(69) == 66\nassert solution(70) == 67\nassert solution(71) == 68\nassert solution(72) == 69\nassert solution(73) == 70\nassert solution(74) == 71\nassert solution(75) == 72\nassert solution(76) == 73\nassert solution(77) == 74\nassert solution(78) == 75\nassert solution(79) == 76\nassert solution(80) == 77\nassert solution(81) == 78\nassert solution(82) == 79\nassert solution(83) == 80\nassert solution(84) == 81\nassert solution(85) == 82\nassert solution(86) == 83\nassert solution(87) == 84\nassert solution(88) == 85\nassert solution(89) == 86\nassert solution(90) == 87\nassert solution(91) == 88\nassert solution(92) == 89\nassert solution(93) == 90\nassert solution(94) == 91\nassert solution(95) == 92\nassert solution",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed\"\nprint(\"Test case passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is {solution(stdin)}, while the expected output is {expected_output}.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 2 4 1\\n6\\n1 1 1 4 4 4\\n\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\\n\") == \"5\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 4\nassert solution(6) == 5",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 4\nassert solution(6) == 5",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is '{solution(input())}', but expected '{output}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\n000001000002\n000002000001\n000001000001\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001\\n'\n\nN, M = map(int, stdin.split())\nprefectures = list(map(int, stdin.split()))\ncity_ids = []\n\nfor i in range(N):\n    prefecture = prefectures[i]\n    year = prefectures[i+1]\n    for j in range(M):\n        city = f'{prefecture}{j+1}'\n        id_number = int(city[:6])\n        city_ids.append(id_number)\n\ncity_ids.sort()\n\nprint('\\n'.join(map(str, city_ids)))",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 3\n1 32\n2 63\n1 12\"\"\") == \"\"\"000001000002\n000002000001\n000001000001\"\"\"\n\nassert solution(\"\"\"3 2\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\"\"\") == \"\"\"000001000001\n000002000002\n000003000003\n000004000004\n000005000005\n000006000006\n000007000007\n000008000008\n000009000009\n000010000010\n000011000011\n000012000012\"\"\"\n\nassert solution(\"\"\"5 3\n1 100\n2 200\n3 300\n4 400\n5 500\"\"\") == \"\"\"000001000001\n000002000002\n000003000003\n000004000004\n000005000005\n000006000006\n000007000007\n000008000008\n000009000009\n000010000010\n000011000011\n000012000012\n000013000013\n000014000014\n000015000015\n000016000016\n000017000017\n000018000018\n000019000019\n000020000020\n000021000021\n000022000022\n000023000023\n000024000024\n000025000025\n000026000026\n000027000027\n000028000028\n000029000029\n000030000030\n000031000031\n000032000032\n000033000033\n000034000034\n000035000035\n000036000036\n000037000037\n000038000038\n000039000039\n000040000040\n000041000041\n000042000042\n000043000043\n000044000044\n000045000045\n000046000046\n000047000047\n000048000048\n000049000049\n000050000050\n000051000051\n000052000052\n000053000053\n000054000054\n00",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 3\n1 32\n2 63\n1 12\n\"\"\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"\"\"2 3\n1 32\n2 63\n\"\"\") == \"000001000002\\n000002000001\"\nassert solution(\"\"\"2 3\n\"\"\") == \"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 3\n1 32\n2 63\n1 12\"\"\") == \"\"\"000001000002\n000002000001\n000001000001\"\"\"\n\nassert solution(\"\"\"10 20\n1 2010\n2 2020\n3 2030\n4 2040\n5 2050\"\"\") == \"\"\"000000000001\n000000000002\n000000000003\n000000000004\n000000000005\"\"\"\n\nassert solution(\"\"\"1 1\n1 2\n2 3\n3 4\n4 5\n5 6\"\"\") == \"\"\"000001\n000002\n000003\n000004\n000005\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\nassert solution(\"4 5\\n1 3\\n2 10\\n3 20\") == \"000001000002\\n000002000003\\n000001000004\\n\"",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\\n\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"5\\n10 50 30 60 70\") == \"50\\n\"\nassert solution(\"10\\n10 20 30 40 50 60 70 80 90\") == \"10\\n\"\nassert solution(\"20\\n20 40 60 80 100 120 140 160 180 200\") == \"140\\n\"\nassert solution(\"100\\n1000 2000 3000 4000 5000\") == \"1000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 146
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"3\\n1 10 50\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 8 40\") == \"2\", \"Your code is incorrect. The minimum possible final health of the last monster alive is 2.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10\\n8\\n40\") == \"2\\n\"\nassert solution(\"4\\n2\\n10\\n8\\n40\") == \"2\\n\"\nassert solution(\"4\\n2\\n10\\n8\\n30\") == \"30\\n\"\nassert solution(\"4\\n2\\n10\\n8\\n40\") == \"2\\n\"\nassert solution(\"4\\n2\\n10\\n8\\n20\") == \"40\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 102
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\", \"Test case 1\"\nassert solution(\"3\\n1 1000000000 1000000000 1000000000\") == \"1000000000\\n\", \"Test case 2\"\nassert solution(\"2\\n1 2\\n2 1\\n\") == \"2\\n\", \"Test case 3\"\nassert solution(\"4\\n5 1000000000 1000000000 1000000000\\n\") == \"1000000000\\n\", \"Test case 4\"\n\nfrom typing import List",
        "num_ids_2": 92,
        "num_ids_4": 187
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10\\n8\\n40\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"4\\n2\\n10\\n8\\n40\") == \"2\\n\", \"Test Case 2\"\nassert solution(\"10\\n4\\n2\\n10\\n8\\n40\") == \"2\\n\", \"Test Case 3\"\nassert solution(\"4\\n2\\n20\\n10\\n8\\n40\") == \"2\\n\", \"Test Case 4\"\nassert solution(\"10\\n4\\n2\\n20\\n10\\n8\\n40\") == \"2\\n\", \"Test Case 5\"",
        "num_ids_2": 61,
        "num_ids_4": 133
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"2\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"3\\n\"\n\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"4\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"4\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"5\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"5\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"6\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"6\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"7\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"7\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"8\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"8\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"9\\n\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"9\\n\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"10\\n\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"10\\n\"\nassert solution(\"25\\n1 2 3 4 5 6 7 8 9 ",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0\\n'\n",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Test failed\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n') == '3\\n'\nassert solution('Input\\n3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '5\\n'\nassert solution('Input\\n3 4 10000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n') == '0\\n'",
        "num_ids_2": 93,
        "num_ids_4": 160
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == 3\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == 5\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == 0\n",
        "num_ids_2": 77,
        "num_ids_4": 135
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\" # expected output: 3\nassert solution(3, 4, 1000000000000000000) == \"3\" # expected output: 3\n\nassert solution(3, 3, 11) == \"3\" # expected output: 3\nassert solution(2, 1, 5) == \"2\" # expected output: 2\nassert solution(7, 10, 0) == \"5\" # expected output: 5\nassert solution(12, 6, 4) == \"5\" # expected output: 5\n\nassert solution(3, 4, 2) == \"5\" # expected output: 5\nassert solution(1, 3, 3, 3) == \"1\" # expected output: 1\nassert solution(0, 3, 3, 2) == \"1\" # expected output: 1\nassert solution(3, 0, 1, 1) == \"1\" # expected output: 1",
        "num_ids_2": 56,
        "num_ids_4": 101
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == 3\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == 5\nassert solution(\"3 4 1000000000000000000\") == 0",
        "num_ids_2": 77,
        "num_ids_4": 108
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 79,
        "num_ids_4": 143
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 3, \"Your solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 'codeforces'\nassert solution(16) == 'thisisexampletwo'\nassert solution(1) == 'z'",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nrocesfedoc\") == \"codeforces\", \"Test failed.\"\nassert solution(\"16\\nplmaetwoxesisiht\") == \"thisisexampletwo\", \"Test failed.\"\nassert solution(\"1\\nz\") == \"z\", \"Test failed.\"",
        "num_ids_2": 54,
        "num_ids_4": 70
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"codeforces\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\", \"The solution should return 'codeforces'.\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\", \"The solution should return 'thisisexampletwo'.\"\nassert solution(\"z\") == \"z\", \"The solution should return 'z'.\"",
        "num_ids_2": 64,
        "num_ids_4": 83
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\", \"rocesfedoc\") == \"codeforces\"\nassert solution(\"16\", \"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"1\", \"z\") == \"z\"",
        "num_ids_2": 46,
        "num_ids_4": 59
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 14\") == \"19\", \"Output: 19\"\nassert solution(\"381 492\") == \"873\", \"Output: 873\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == \"19\", \"The sum of the given integers is incorrect.\"\nassert solution(\"381 492\") == \"873\", \"The sum of the given integers is incorrect.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 14\") == 19, \"Test failed\"\nassert solution(\"381 492\") == 873, \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == 19, \"Test failed\"\nassert solution(\"381 492\") == 873, \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 14\") == 19\nassert solution(\"381 492\") == 873",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\", \"The correct output for example 1 should be 19.\"\nassert solution(\"381 492\") == \"873\", \"The correct output for example 2 should be 873.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\", \"Test failed\"\nassert solution(\"381 492\") == \"873\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 14\") == 19\nassert solution(\"381 492\") == 873",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2+3\\n\") == \"++>+++>+++>+++>+++>++>\\n\"\nassert solution(\"9-7\\n\") == \"++++++++++>++++++++++>++++++++++>++++++++++>++++++++++>\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2+3\\n
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>+++>+[<+>-]<\"\nassert solution(\"9-7\") == \"+++++++++>+++++++>+[<->-]<\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"+\\n\"\nassert solution(\"9-7\") == \"-\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"+++>\"\nassert solution(\"9-7\") == \"+++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"+++>\n+++>\n<[<+>-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n\n+++++++++>\n+++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\"\", \"Test 1\"\n\nassert solution(input()) == \"\"\"++++++>\n+++++++>\n<[<+>-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n\n++++++++++++>\n++++++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\"\", \"Test 2\"\n\nassert solution(input()) == \"\"\"+++++++>\n++++++++++>\n<[<+>-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n\n++++++++++++++>\n+++++++++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\"\", \"Test 3\"\n\nassert solution(input()) == \"\"\"++++++>>\n+++++++>\n<[<+>-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n\n++++++++++++++>>\n+++++++++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\"\", \"Test 4\"\n\nassert solution(input()) == \"\"\"++++++>>\n++++++>>\n<[<+>-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\n\n++++++++++++++>>\n++++++++++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\"\", \"Test 5\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\"\nassert solution(\"10000000\") == \"\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n8\\n2\\n4\\n1\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"112123123412345\") == \"1\"\nassert solution(\"11212312341234512345612345671234567812345678912345678910\") == \"0\"\nassert solution(\"1121231234123456\") == \"2\"\nassert solution(\"112123123412345612345671234567812345678912345678910\") == \"2\"\nassert solution(\"11212312341234561234567812345678912345678910\") == \"8\"\nassert solution(\"112123123412345612345678912345678910\") == \"8\"\nassert solution(\"11212312341234561234567891234567891234567891012345678910\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 124
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n2\\n5\\n2\\n0\\n\", \"Expected output: 1, 2, 5, 2, 0\\nGot: \" + solution(input())\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\"\n",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n99999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"\n\nsolution = lambda stdin: \"\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"\nassert solution(\"5\") == \"0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"4\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 160
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1\n    3\n    20\n    38\n    56\n    \"\"\"\n) == \"1\\n2\\n5\\n2\\n0\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    2132\n    506\n    999999999999999999\n    1000000000000000000\n    \"\"\"\n) == \"8\\n2\\n4\\n1\\n\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(575) == '4'\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(575) == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"4\", \"The output should be 4, but it is {}\".format(solution(\"575\")) # True\nassert solution(\"576\") == \"0\", \"The output should be 0, but it is {}\".format(solution(\"576\")) # False\nassert solution(\"0\") == \"0\", \"The output should be 0, but it is {}\".format(solution(\"0\")) # True",
        "num_ids_2": 68,
        "num_ids_4": 98
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(575) == \"4\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(575) == \"4\\n\", \"The output does not match.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == \"4\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == \"4\"\n\nThe solution provided satisfies the given constraints and test case. The solution is straightforward and can be used to count the number of Shichi-Go-San numbers between 1 and N (inclusive).",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"001\") == \"2\"\nassert solution(\"010\") == \"2\"\nassert solution(\"011\") == \"3\"\nassert solution(\"100\") == \"3\"\nassert solution(\"101\") == \"4\"\nassert solution(\"110\") == \"4\"\nassert solution(\"111\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"001\") == \"2\"\nassert solution(\"010\") == \"2\"\nassert solution(\"011\") == \"2\"\nassert solution(\"100\") == \"1\"\nassert solution(\"101\") == \"3\"\nassert solution(\"110\") == \"3\"\nassert solution(\"111\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\", \"Test failed\"\nassert solution(\"010\") == \"1\", \"Test failed\"\nassert solution(\"100\") == \"1\", \"Test failed\"\nassert solution(\"101\") == \"2\", \"Test failed\"\nassert solution(\"110\") == \"3\", \"Test failed\"\nassert solution(\"111\") == \"3\", \"Test failed\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('000') == '1'\n\nThe condition can be satisfied by repainting the middle tile white. The tiles are arranged in a row from left to right. The initial color of each tile is represented by a string S of length N.\nWe need to repaint the middle tile white to satisfy the condition.\n\nTo do this, we need to modify the tiles in such a way that any two adjacent tiles have different colors.\n\nHere's one way to solve the problem:\n\n1. Take input as S from standard input.\n2. Initialize an empty list to store the modified tiles.\n3. Iterate through each character in S.\n4. If the character is 0, add the tile to the modified tiles list.\n5. If the character is 1, modify the color of the tile with the same index as the middle element of the modified tiles list.\n6. Return the length of the modified tiles list.\n\nHere's the Python code to implement this approach:",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"011\") == \"2\"\nassert solution(\"111\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"010\") == \"2\"\nassert solution(\"101\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"4\\n1 2 3 4\") == \"DENIED\"\nassert solution(\"6\\n6 12 28 16 40\") == \"APPROVED\"",
        "num_ids_2": 44,
        "num_ids_4": 70
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\"\nassert solution(\"5\\n6 10 7 9 31\\n\") == \"DENIED\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'APPROVED', \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    6 7 9 10 31\n    \"\"\"\n) == \"APPROVED\"\n\nassert solution(\n    \"\"\"\n    3\n    3 4 5 6 7\n    \"\"\"\n) == \"APPROVED\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2 3 4 5\n    \"\"\"\n) == \"DENIED\"\n\nassert solution(\n    \"\"\"\n    3\n    2 3 4 5\n    \"\"\"\n) == \"APPROVED\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 3 4\n    \"\"\"\n) == \"DENIED\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2 3\n    \"\"\"\n) == \"DENIED\"\n\nassert solution(\n    \"\"\"\n    1\n    1\n    \"\"\"\n) == \"DENIED\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2 3 4 5\n    3 4 5 6 7\n    10 11 12 13 14\n    20 21 22 23 24\n    30 31 32 33 34\n    40 41 42 43 44\n    50 51 52 53 54\n    60 61 62 63 64\n    70 71 72 73 74\n    80 81 82 83 84\n    90 91 92 93 94\n    100 101 102 103 104\n    \"\"\"\n) == \"APPROVED\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nA_1 6\\nA_2 7\\nA_3 9\\nA_4 10\\nA_5 31') == 'APPROVED'\nassert solution('5\\nA_1 6\\nA_2 7\\nA_3 9\\nA_4 10\\nA_5 31\\nA_6 32\\nA_7 33\\nA_8 34\\nA_9 35\\nA_10 36') == 'DENIED'",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"APPROVED\"\nassert solution(\"6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1 2 3 4 5\") == \"APPROVED\"\nassert solution(\"1 1 2 2 3\") == \"DENIED\"\nassert solution(\"3 6 9 12\") == \"DENIED\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'APPROVED'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n\nassert solution(\"RUDULDR\") == \"No\"\n\nassert solution(\"RDLUDUR\") == \"No\"\n\nassert solution(\"RDULUDL\") == \"No\"\n\nassert solution(\"RUDLUUD\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"\n\nassert solution(\"RUDRDLU\") == \"No\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is not easily playable.\"\n\nassert solution(\"DLRUDRU\") == \"No\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is not easily playable.\"\n\nassert solution(\"LURDUDR\") == \"No\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is not easily playable.\"\n\nassert solution(\"RUDLUUD\") == \"No\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is not easily playable.\"",
        "num_ids_2": 177,
        "num_ids_4": 355
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nprint(\"All test cases passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('UDULDR') == 'No'\nassert solution('ULDRDU') == 'Yes'\nassert solution('URDLDU') == 'No'\nassert solution('LDRDUC') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"\nassert solution(\"UUDURDL\") == \"No\"\nassert solution(\"RUDDLU\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 101,
        "num_ids_4": 178
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\", \"Takahashi will do a tap dance. The dance is described by a string S where each character is L, R, U, or D. These characters indicate the positions on which Takahashi should step. He will follow these instructions one by one in order, starting with the first character. S is said to be easily playable if and only if it satisfies both of the following conditions: - Every character in an odd position (1-st, 3-rd, 5-th, \\ldots) is R, U, or D. - Every character in an even position (2-nd, 4-th, 6-th, \\ldots) is L, U, or D. Your task is to print Yes if S is easily playable, and No otherwise.\"\n\nfrom typing import List\n",
        "num_ids_2": 181,
        "num_ids_4": 181
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDULDR\") == \"No\"\nassert solution(\"LUDRUD\") == \"No\"\nassert solution(\"DUDUDU\") == \"No\"\nassert solution(\"LUUDLD\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\\n\"\nassert solution(stdin=\"5\\n1\\n2\\n3\\n4\\n\") == \"10\\n\"\nassert solution(stdin=\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\\n\"\nassert solution(stdin=\"5\\n1\\n2\\n3\\n4\\n\") == \"10\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Solution mismatch.\\nExpected output: {output_data}\\nActual output: {solution(input_data)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n10\\n20\\n30\\n40\\n50\") == \"105\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 107
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n\nOne possible solution for this problem is as follows:\n\n```python\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect Output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"7\"\nassert solution(\"7\") == \"8\"\nassert solution(\"8\") == \"9\"\nassert solution(\"9\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\nprint(mod(9**7 + 7))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '2\\n'\nassert solution('4\\n') == '3\\n'\nassert solution('5\\n') == '2\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"  # 2 sequences {0,9} and {9,0} satisfy all conditions\n\nfrom typing import List\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\nGot: \" + solution(input())\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='20') == '23\\n', \"Invalid output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(20) == '23', \"The minimum prime number greater than or equal to 20 is 23.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"23\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"23\", \"The minimum prime number greater than or equal to 20 is 23\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(20) == \"23\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(20) == \"23\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"23\" # sample output",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(20) == \"23\"\nprint(\"Test Passed!\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '23', 'Test Failed'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(20) == '23'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n2 1 2 3 1') == '2'\nassert solution('6\\n4 3 4 2 2 1') == '2'\nassert solution('7\\n5 4 5 3 3 2') == '2'\nassert solution('8\\n6 5 6 4 4 3') == '2'\nassert solution('9\\n7 6 7 5 5 4') == '2'\nassert solution('10\\n8 7 8 6 6 5') == '2'",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n3 1 3 2') == '1\\n'\nassert solution('5\\n4 3 1 3 2') == '2\\n'\nassert solution('6\\n5 4 3 1 3') == '4\\n'\nassert solution('7\\n6 5 4 3 1') == '6\\n'\nassert solution('8\\n7 6 5 4 3') == '8\\n'\nassert solution('9\\n8 7 6 5 4') == '10\\n'\nassert solution('10\\n9 8 7 6 5') == '12\\n'",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'\\n4\\n3 1 3 2') == '1\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"4\\n3 1 2 2\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 1 3 2\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"5\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"7\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"8\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"9\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\") == \"10\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"11\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"12\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"13\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"14\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"15\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"16\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"17\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"18\\n\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"19\\n\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"20\\n\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 2",
        "num_ids_2": 48,
        "num_ids_4": 104
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n') == '23'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"23\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"98\") == \"23\"\nassert solution(\"40\") == \"23\"\nassert solution(\"30\") == \"23\"\nassert solution(\"21\") == \"23\"\nassert solution(\"80\") == \"23\"",
        "num_ids_2": 33,
        "num_ids_4": 57
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"98\") == \"23\"\nassert solution(\"40\") == \"10\"\nassert solution(\"30\") == \"10\"\nassert solution(\"21\") == \"1\"\nassert solution(\"80\") == \"10\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 57
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\", \"Your solution is incorrect.\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n70\") == \"24\\n\", \"Your solution is incorrect.\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n20\") == \"22\\n\", \"Your solution is incorrect.\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n100\") == \"105\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 98,
        "num_ids_4": 198
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"1\\nABC\") == \"ABC\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'CDEZAB', 'The solution is incorrect.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"5\\nABCDEF\") == \"ABCDEF\"\nassert solution(\"3\\nA\") == \"A\"\nassert solution(\"4\\n\") == \"\"",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nXYZABC\") == \"ABDCEF\"\nassert solution(\"10\\n\") == \"AAAAAAAA\"",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nXYZABCD\") == \"BDFHJLCPRTXVZ\"\nassert solution(\"4\\nABCDEF\") == \"GHJKLMNPQRSTWXYZ\"\nassert solution(\"5\\nZYXWVT\") == \"UYWOIFXAYBCPDRH\"\nassert solution(\"6\\nHIJKLM\") == \"VWXYZ\"",
        "num_ids_2": 39,
        "num_ids_4": 84
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"1\\nABC\") == \"ABC\"\nassert solution(\"3\\nXYZ\") == \"IYZ\"\nassert solution(\"4\\nHIJ\") == \"KHIJ\"\nassert solution(\"5\\n\") == \" \"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nABCXYZ\") == \"ADBCZ\"\nassert solution(\"4\\nABCXYZ\") == \"BCDEA\"\nassert solution(\"5\\nABCXYZ\") == \"CDEFZ\"\nassert solution(\"6\\nABCXYZ\") == \"DEFAG\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 5, 2, 3, 2, 4) == \"3 4 2 \"\nassert solution(1, 2750131, 199999) == \"199999 \"\nassert solution(1, 3, 6) == \"6\"\n",
        "num_ids_2": 61,
        "num_ids_4": 77
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 5 2 3 2 4') == '3 4 2 '\nassert solution('1\\n2750131 199999') == '199999 \nassert solution('1\\n3 6') == '6'",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 5, 2, 3, 2, 4]) == [3, 4, 2, 2, 3, 4]\nassert solution([1, 2750131, 199999]) == [199999, 2750131, 3]\nassert solution([1, 3, 6]) == [3, 6, 1]",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3 4 2 \"\nassert solution() == \"199999 \"\nassert solution() == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 33
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"\nassert solution(\"\") == \" \"",
        "num_ids_2": 58,
        "num_ids_4": 80
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [3, 4, 2]\nassert solution(1) == [199999, 199999]\nassert solution(1) == [3, 6]",
        "num_ids_2": 39,
        "num_ids_4": 52
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 5, 2, 3, 2, 4) == [3, 4, 2]\nassert solution(1, 2750131, 199999) == [199999, 199998, 199997, 199996, 199995, 199994, 199993, 199992, 199991, 199990, 199989, 199988, 199987, 199986, 199985, 199984, 199983, 199982, 199981, 199980, 199979, 199978, 199977, 199976, 199975, 199974, 199973, 199972, 199971, 199970, 199969, 199968, 199967, 199966, 199965, 199964, 199963, 199962, 199961, 199960, 199959, 199958, 199957, 199956, 199955, 199954, 199953, 199952, 199951, 199950, 199949, 199948, 199947, 199946, 199945, 199944, 199943, 199942, 199941, 199940, 199939, 199938, 199937, 199936, 199935, 199934, 199933, 199932, 199931, 199930, 199929, 199928, 199927, 199926, 199925, 199924, 199923, 199922, 199921, 199920, 199919, 199918, 199917, 199916, 199915, 199914, 199913, 199912, 199911, 199910, 199909, 199908, 199907, 199906, 199905, 199904, 199903, 199902, 199901, 199900, 199899, 199898, 199897, 199896, 199895, 199894, 199893, 199892, 199891, 199890, 199889, 199888, 199887, 199886, 199885, 199884, 199883, 199882, 199881, 199880, 199879, 199",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3 4 2 \"\nassert solution(1) == \"199999 199999 \"\nassert solution(1) == \"6\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\\n2750131\\n199999\") == \"199999 2750131\"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 50,
        "num_ids_4": 65
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4') == '22111\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122\\n'\nassert solution('5 1\\n2 4 5 3 1') == '21112\\n'\n",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"11111\", \"Please implement the solution as per the problem statement\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4') == '22111\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122\\n'\nassert solution('5 1\\n2 4 5 3 1') == '21112\\n'",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"11111\"\nassert solution() == \"22111\"\nassert solution() == \"1121122\"\nassert solution() == \"21112\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111\\n'\nassert solution('5 1\\n2 1 3 5 4') == '22111\\n'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122\\n'\nassert solution('5 1\\n2 4 5 3 1') == '21112\\n'\n",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\\n\") == \"21112\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 2, \"Expected 2, got {}\".format(solution(2))  # Example 2\nassert solution(4) == 4, \"Expected 4, got {}\".format(solution(4))  # Example 4",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n\\n2\\n100 1\\n\\n4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n100 1\\n\\n4\\n1 3 3 7\") == \"2\"\nassert solution(\"4\\n1 3 3 7\") == \"4\"",
        "num_ids_2": 78,
        "num_ids_4": 97
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The output should be 2, but it is {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n\\n2\\n100 1\\n\\n4\\n1 3 3 7\\n\") == \"2\\n\"\nassert solution(\"2\\n100 1\\n\\n4\\n1 3 3 7\\n\") == \"2\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"4\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nassert solution() == 2\nassert solution() == 4",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 2 3\") == 2\nassert solution(\"100 1\") == 2\nassert solution(\"1 3 3 7\") == 4",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '4\\n'\nassert solution(stdin) == '4\\n'\nassert solution(stdin) == '4\\n'\nassert solution(stdin) == '4\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 16\") == \"1\"\nassert solution(\"4 1 1 1023\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"\nassert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"1\"\nassert solution(str(input())) == \"2\"\nassert solution(str(input())) == \"1\"\nassert solution(str(input())) == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7 1 5 4 9\") == \"1\"\nassert solution(\"5 1 2 3 4 5\") == \"2\"\nassert solution(\"1 16\") == \"1\"\nassert solution(\"4 1 1 1023\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"The output should be 1.\"\nassert solution(stdin) == \"2\", \"The output should be 2.\"\nassert solution(stdin) == \"1\", \"The output should be 1.\"\nassert solution(stdin) == \"0\", \"The output should be 0.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test {index+1} failed. Expected: {output_str}, but got {solution(input_str)}.\" for index, input_str, output_str in enumerate(test_cases)",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0011') == '4'\nassert solution('0111') == '3'\nassert solution('1111') == '2'\nassert solution('0001') == '1'\nassert solution('0010') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1101\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1011\") == \"2\"\nassert solution(\"0111\") == \"4\"\nassert solution(\"1001\") == \"4\"\nassert solution(\"0110\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0011') == '4'\nprint('All four cubes can be removed, by performing the operation as follows:')\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\", \"Test case failed\"\nassert solution(\"1110\") == \"3\", \"Test case failed\"\nassert solution(\"1101\") == \"4\", \"Test case failed\"\nassert solution(\"1011\") == \"4\", \"Test case failed\"\nassert solution(\"1010\") == \"5\", \"Test case failed\"\nassert solution(\"0000\") == \"5\", \"Test case failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0011') == '4', \"Test case 1 failed\"\nassert solution('1111') == '1', \"Test case 2 failed\"\nassert solution('1110') == '3', \"Test case 3 failed\"\nassert solution('0000') == '0', \"Test case 4 failed\"\nassert solution('1011') == '1', \"Test case 5 failed\"\nassert solution('1010') == '2', \"Test case 6 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0011\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"1111\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"0000\") == \"0\\n\", \"Test case 3 failed\"\nassert solution(\"1011\") == \"2\\n\", \"Test case 4 failed\"\nassert solution(\"1010\") == \"2\\n\", \"Test case 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\\n\"\nassert solution(\"5 3\\n1 4\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n2 3\\n3 2\") == \"1\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nprint(\"Correct!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 4\\n1 2\\n2 3\") == \"0\"\nassert solution(\"4 2\\n3 1\\n2 4\") == \"2\"\nassert solution(\"3 4\\n2 1\\n2 3\") == \"1\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"5 3\\n1 4\\n2 5\\n3 6\") == \"2\"\nassert solution(\"6 4\\n1 5\\n2 6\\n3 7\\n4 8\") == \"2\"\nassert solution(\"7 5\\n1 6\\n2 7\\n3 8\\n4 9\\n5 10\") == \"3\"\nassert solution(\"8 6\\n1 7\\n2 8\\n3 9\\n4 10\\n5 11\\n6 12\") == \"3\"\nassert solution(\"9 7\\n1 8\\n2 9\\n3 10\\n4 11\\n5 12\\n6 13\\n7 14\") == \"3\"\nassert solution(\"10 8\\n1 9\\n2 10\\n3 11\\n4 12\\n5 13\\n6 14\\n7 15\\n8 16\") == \"4\"\nassert solution(\"11 9\\n1 10\\n2 11\\n3 12\\n4 13\\n5 14\\n6 15\\n7 16\\n8 17\\n9 18\") == \"4\"\nassert solution(\"12 10\\n1 11\\n2 12\\n3 13\\n4 14\\n5 15\\n6 16\\n7 17\\n8 18\\n9 19\\n10 20\") == \"4\"\nassert solution(\"13 11\\n1 12\\n2 13\\n3 14\\n4 15\\n5 16\\n6 17\\n7 18\\n8 19\\n9 20\\n10 21\\n11 22\") == \"5\"\nassert solution(\"14 12\\n1 13\\n2 14\\n3 15\\n4 16\\n5 17\\n6 18\\n7 19\\n8 20\\n9 21\\n10 22\\n11 23\\n12 24\") == \"5\"\nassert solution(\"15 13\\n1 14\\n2 15\\n3 16\\n4 17\\n5 18\\n6 19\\n7 20\\n8 21\\n9 22\\n10 23\\n11 24\\n12 25\\n13 26\") == \"6\"\nassert solution(\"16 14\\n1 15\\n2 16\\n3 17\\n4 18\\n5 19\\n6 20\\n7 21\\n8 22\\n9 23\\n10 24\\n11 25\\n12 26\\n13 27\\n14 28\") == \"6\"\nassert solution(\"17 15\\n1 16\\n2 17\\n3 18\\n4 19\\n5 20\\n6 21\\n7 22\\n8 23\\n9 24\\n10 25\\n11 26\\n12 27\\n13 28\\n14 29\\n15 30\") == \"7\"\nassert solution(\"18 16\\n1 17\\n2 18\\n3 19\\n4 20\\n5 21\\n6 22\\n7 23\\n8 24\\n9 25\\n10 26\\n11 27\\n12 28\\n13 29\\n14 30\\n15 31\\n16 32\") == \"7\"\nassert solution(\"19 17\\n1",
        "num_ids_2": 49,
        "num_ids_4": 119
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\\n\"\nassert solution(\"5 2\\n1 3\\n2 4\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"6 3\\n2 4\\n1 3\") == \"3\"\nassert solution(\"1 1\\n1 2\") == \"2\"\nassert solution(\"5 4\\n1 3\\n2 4\\n3 5\") == \"4\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 5\") == \"4\"\n\nassert solution(\"6 3\\n2 4\\n1 3\") == \"3\"\nassert solution(\"1 1\\n1 2\") == \"2\"\nassert solution(\"5 4\\n1 3\\n2 4\\n3 5\") == \"4\"\nassert solution(\"4 2\\n1 3\\n2 4\\n3 5\") == \"4\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\n\nprint(\"Two ID cards allow us to pass all the gates alone, as follows:\")\nprint(\" - The first ID card does not allow us to pass the second gate.\")\nprint(\" - The second ID card allows us to pass all the gates.\")\nprint(\" - The third ID card allows us to pass all the gates.\")\nprint(\" - The fourth ID card does not allow us to pass the first gate.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n1 4\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 5\\n2 4\") == \"1\"\nassert solution(\"4 2\\n1 2\\n2 5\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 1\\n\") == \"2\"\n\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 2 1') == '2\\n'\nassert solution('5\\n3 1 2 3 1') == '3\\n'\nassert solution('10\\n1 2 2 1 1 1 1 1 1') == '5\\n'",
        "num_ids_2": 44,
        "num_ids_4": 76
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"5\\n1 2 2 1 3\\n1 3 3 1 3\") == \"3\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"3\\n1 1 2 2\\n2 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2 1\\n1 3\") == \"2\"",
        "num_ids_2": 43,
        "num_ids_4": 76
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 2 2 1\") == \"2\\n\"\nassert solution(\"4\\n1 2 2 1\") == \"2\\n\"\nassert solution(\"3\\n2 3 2 1\") == \"3\\n\"\nassert solution(\"4\\n3 4 5 1\") == \"4\\n\"\nassert solution(\"2\\n1 2 2 1\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('5\\n1 2 2 1') == '3'\nassert solution('6\\n1 2 2 1') == '2'\nassert solution('7\\n1 2 2 1') == '4'\nassert solution('8\\n1 2 2 1') == '3'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == 3\nassert solution(\"2 4\\n-1 1\\n\") == 4\nassert solution(\"4 10\\n2 4 1 2\\n\") == 2",
        "num_ids_2": 39,
        "num_ids_4": 62
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5\\na 2 -3\\na 3 0\\na 4 1\\na 5 2\\na 6 3\\na 7 4') == '3'\nassert solution('2 4\\na -1 1\\na 0 0\\na 0 1') == '4'\nassert solution('4 10\\na 2 4 1 2') == '2'",
        "num_ids_2": 78,
        "num_ids_4": 101
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Input: {input_data}, Output: {output_data}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\n2 1 -3') == '3\\n'\nassert solution('2 4\\n-1 1') == '4\\n'\nassert solution('4 10\\n2 4 1 2') == '2\\n'",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\", \"Expected output is 3, but got {} instead.\".format(solution())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\\n\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\\n\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"\nassert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"",
        "num_ids_2": 124,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n4 8 6 3 12 9\\n') == '9 3 6 12 4 8'\nassert solution('4\\n42 28 84 126\\n') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    6\n    4 8 6 3 12 9\n''') == '''\n    9 3 6 12 4 8\n'''\n\nassert solution('''\n    4\n    42 28 84 126\n''') == '''\n    126 42 84 28 \n'''\n\nassert solution('''\n    2\n    1000000000000000000 3000000000000000000\n''') == '''\n    3000000000000000000 1000000000000000000\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4 42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2 1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 66,
        "num_ids_4": 154
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"1 2 3 4 5 6\"\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n42 28 84 126') == '126 42 84 28'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8 '",
        "num_ids_2": 124,
        "num_ids_4": 159
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nfor i in range(1, len(stdin.splitlines()) + 1):\n    assert solution(stdin.splitlines()[i - 1]) == expected[i - 1]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\\n\\n5\\n-1 2 5 8 11\\n\\n\") == \"3\\n7 3 5\\n8\\n\"\nassert solution(\"5\\n-1 2 5 8 11\\n\") == \"1\\n8\\n\"\nassert solution(\"6\\n3 5 4 7 10 12\\n\\n\") == \"3\\n7 3 5\\n8\\n\"\nassert solution(\"5\\n-1 2 5 8 11\\n\") == \"1\\n8\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 160
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6\n3 5 4 7 10 12\n''') == '3\\n7 3 5'\n\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1\\n8'\n\nassert solution('''\n7\n1 2 3 4 5 6\n''') == '1\\n5 1 3'\n\nassert solution('''\n4\n1 2 3 4\n''') == '2\\n4 2'\n\nassert solution('''\n1\n1\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\\n5\\n-1 2 5 8 11\") == \"3\\n7 3 5\\n1\\n8\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"\n\nfrom collections import defaultdict\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"\nassert solution(\"6\\n3 5 4 7 10 12\") == \"3\"\nassert solution(\"6\\n3 5 4 7 10 12\") == \"7 3 5\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"2\\n1 2 3\") == \"3\"\nassert solution(\"1\\n1 2 3\") == \"1\"",
        "num_ids_2": 51,
        "num_ids_4": 97
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '''3\n7 3 5'''\n\nassert solution('''5\n-1 2 5 8 11''') == '''1\n8'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3\\n7 3 5\\n1\\n8\\n'\nassert solution() == '1\\n8\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nassert solution(\"1 1 1\") == \"0 0\\n\"\nassert solution(\"2 2 2\") == \"0 0\\n\"\nassert solution(\"3 3 3\") == \"0 0\\n\"\nassert solution(\"5 5 5\") == \"0 0\\n\"\nassert solution(\"10 10 10\") == \"0 0\\n\"\nassert solution(\"0 1 1\") == \"1 1\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000 1000000000\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0 2\"\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3\") == \"0 2\", \"Test Case 1 Failed\"\nassert solution(\"4 5 4\") == \"0 4\", \"Test Case 2 Failed\"\nassert solution(\"1 2 1\") == \"1 1\", \"Test Case 3 Failed\"\nassert solution(\"3 3 1\") == \"1 1\", \"Test Case 4 Failed\"\nassert solution(\"3 1 2\") == \"1 1\", \"Test Case 5 Failed\"\nprint(\"All Test Cases Passed\")",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nassert solution(\"1 1 1\") == \"1 0\\n\"\nassert solution(\"1 2 1\") == \"2 0\\n\"\nassert solution(\"3 2 2\") == \"0 0\\n\"\nassert solution(\"4 3 1\") == \"3 0\\n\"\nassert solution(\"1 5 2\") == \"0 2\\n\"\nassert solution(\"10 6 3\") == \"0 0\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nassert solution(\"0 1000000000 1000000000\") == \"9999999999 9999999999\\n\"\nassert solution(\"5 5 5\") == \"5 5\\n\"\nassert solution(\"2 1 10\") == \"2 10\\n\"\nassert solution(\"5 5 1\") == \"5 5\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"10000000000 10000000000\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 110
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 3') == '0 2\\n'\nprint('All tests passed!')",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3 3') == '0 2\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"103\\n\") == \"3\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\", \"Sample output is incorrect\"\n\nsolution(stdin)",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"103\") == \"3\"\n\nsolution(\"103\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"103\") == \"3\\n\", \"Test failed for solution()\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"10000000000\") == \"94651\"\nassert solution(\"1000000000000\") == \"99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999",
        "num_ids_2": 36,
        "num_ids_4": 1027
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"1000\") == \"10\"\nassert solution(\"10000\") == \"25\"\nassert solution(\"10000000\") == \"100\"\nassert solution(\"100000000\") == \"10000\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"103\") == \"3\", \"The output should be '3'.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"9\\n\", \"The output should be 9.\"\nassert solution(\"3\") == \"12\\n\", \"The output should be 12.\"\nassert solution(\"5\") == \"20\\n\", \"The output should be 20.\"\nassert solution(\"10\") == \"37\\n\", \"The output should be 37.\"\nassert solution(\"20\") == \"91\\n\", \"The output should be 91.\"",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9\\n\", \"The answer is not 9\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"Expected output: 9\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2\\n\") == \"9\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"\nassert solution(\"3\\n\") == \"12\\n\"\nassert solution(\"4\\n\") == \"15\\n\"\nassert solution(\"5\\n\") == \"18\\n\"\nassert solution(\"6\\n\") == \"21\\n\"\nassert solution(\"7\\n\") == \"24\\n\"\nassert solution(\"8\\n\") == \"27\\n\"\nassert solution(\"9\\n\") == \"30\\n\"\nassert solution(\"10\\n\") == \"33\\n\"\nassert solution(\"11\\n\") == \"36\\n\"\nassert solution(\"12\\n\") == \"39\\n\"\nassert solution(\"13\\n\") == \"42\\n\"\nassert solution(\"14\\n\") == \"45\\n\"\nassert solution(\"15\\n\") == \"48\\n\"\nassert solution(\"16\\n\") == \"51\\n\"\nassert solution(\"17\\n\") == \"54\\n\"\nassert solution(\"18\\n\") == \"57\\n\"\nassert solution(\"19\\n\") == \"60\\n\"\nassert solution(\"20\\n\") == \"63\\n\"\nassert solution(\"21\\n\") == \"66\\n\"\nassert solution(\"22\\n\") == \"69\\n\"\nassert solution(\"23\\n\") == \"72\\n\"\nassert solution(\"24\\n\") == \"75\\n\"\nassert solution(\"25\\n\") == \"78\\n\"\nassert solution(\"26\\n\") == \"81\\n\"\nassert solution(\"27\\n\") == \"84\\n\"\nassert solution(\"28\\n\") == \"87\\n\"\nassert solution(\"29\\n\") == \"90\\n\"\nassert solution(\"30\\n\") == \"93\\n\"\nassert solution(\"31\\n\") == \"96\\n\"\nassert solution(\"32\\n\") == \"99\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2') == '9'\nprint(solution(stdin='2'))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2\\n\") == \"9\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"Output not as expected.\"\nassert solution(\"3\\n\") == \"17\\n\", \"Output not as expected.\"\nassert solution(\"5\\n\") == \"31\\n\", \"Output not as expected.\"\nassert solution(\"7\\n\") == \"69\\n\", \"Output not as expected.\"\nassert solution(\"1\\n\") == \"1\\n\", \"Output not as expected.\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\"\nprint(\"All tests passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n\", \"Test case failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4 6\\n\") == \"10\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\\n\", \"Test Case 1 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test Case 2 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test Case 3 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test Case 4 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test Case 5 failed\"\n\nassert solution(input()) == \"10\\n\", \"Test Case 6 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 4, 6) == 10, \"The output is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '10\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\n\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"No\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes\\n'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"10\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 71,
        "num_ids_4": 166
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n1 2\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 4\") == \"No\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n6 6\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n6 7\") == \"No\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\"\nassert solution(\"10\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"No\"\nassert solution(\"1\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"No\"\nassert solution(\"2\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\"\nassert solution(\"10\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"No\"",
        "num_ids_2": 75,
        "num_ids_4": 149
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"4\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"100\\n\") == \"4\"\nassert solution(\"1000\\n\") == \"5\"\nassert solution(\"1001\\n\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Test case failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\", \"Test case 1 failed\"\nassert solution(input()) == \"4\", \"Test case 2 failed\"\nassert solution(input()) == \"4\", \"Test case 3 failed\"\nassert solution(input()) == \"4\", \"Test case 4 failed\"\nassert solution(input()) == \"4\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\nassert solution(\"3\\n\") == \"6\\n\"\nassert solution(\"4\\n\") == \"8\\n\"\nassert solution(\"5\\n\") == \"10\\n\"\nassert solution(\"6\\n\") == \"12\\n\"\nassert solution(\"7\\n\") == \"14\\n\"\nassert solution(\"8\\n\") == \"16\\n\"\nassert solution(\"9\\n\") == \"18\\n\"\nassert solution(\"10\\n\") == \"20\\n\"\nassert solution(\"11\\n\") == \"22\\n\"\nassert solution(\"12\\n\") == \"24\\n\"\nassert solution(\"13\\n\") == \"26\\n\"\nassert solution(\"14\\n\") == \"28\\n\"\nassert solution(\"15\\n\") == \"30\\n\"\nassert solution(\"16\\n\") == \"32\\n\"\nassert solution(\"17\\n\") == \"34\\n\"\nassert solution(\"18\\n\") == \"36\\n\"\nassert solution(\"19\\n\") == \"38\\n\"\nassert solution(\"20\\n\") == \"40\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\n\", \"Test Case 1: Expected output: 4\"\n\nassert solution(input()) == \"20\\n\", \"Test Case 2: Expected output: 20\"\n\nassert solution(input()) == \"5\\n\", \"Test Case 3: Expected output: 5\"\n\nassert solution(input()) == \"36\\n\", \"Test Case 4: Expected output: 36\"\n\nassert solution(input()) == \"2\\n\", \"Test Case 5: Expected output: 2\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == 4\nassert solution(\"4\") == 4\nassert solution(\"5\") == 0\nassert solution(\"1\") == 1\nassert solution(\"0\") == 0\nassert solution(\"3\") == 0\nassert solution(\"6\") == 1\nassert solution(\"7\") == 1\nassert solution(\"8\") == 2\nassert solution(\"9\") == 3\nassert solution(\"10\") == 4\nassert solution(\"11\") == 5\nassert solution(\"12\") == 6\nassert solution(\"13\") == 7\nassert solution(\"14\") == 8\nassert solution(\"15\") == 9\nassert solution(\"16\") == 10\nassert solution(\"17\") == 11\nassert solution(\"18\") == 12\nassert solution(\"19\") == 13\nassert solution(\"20\") == 14\nassert solution(\"21\") == 15\nassert solution(\"22\") == 16\nassert solution(\"23\") == 17\nassert solution(\"24\") == 18\nassert solution(\"25\") == 19\nassert solution(\"26\") == 20\nassert solution(\"27\") == 21\nassert solution(\"28\") == 22\nassert solution(\"29\") == 23\nassert solution(\"30\") == 24\nassert solution(\"31\") == 25\nassert solution(\"32\") == 26\nassert solution(\"33\") == 27\nassert solution(\"34\") == 28\nassert solution(\"35\") == 29\nassert solution(\"36\") == 30\nassert solution(\"37\") == 31\nassert solution(\"38\") == 32\nassert solution(\"39\") == 33\nassert solution(\"40\") == 34\nassert solution(\"41\") == 35\nassert solution(\"42\") == 36\nassert solution(\"43\") == 37\nassert solution(\"44\") == 38\nassert solution(\"45\") == 39\nassert solution(\"46\") == 40\nassert solution(\"47\") == 41\nassert solution(\"48\") == 42\nassert solution(\"49\") == 43\nassert solution(\"50\") == 44\nassert solution(\"51\") == 45\nassert solution(\"52\") == 46\nassert solution(\"53\") == 47\nassert solution(\"54\") == 48\nassert solution(\"55\") == 49\nassert solution(\"56\") == 50\nassert solution(\"57\") == 51\nassert solution(\"58\") == 52\nassert solution(\"59\") == 53\nassert solution(\"60\") == 54\nassert solution(\"61\") == 55\nassert solution(\"62\") == 56\nassert solution(\"63\") == 57\nassert solution(\"64\") == 58\nassert solution(\"65\") == 59\nassert solution(\"66\") == 60\nassert solution(\"67\") == 61\nassert solution(\"68\") == 62\nassert solution(\"69\") == 63\nassert solution(\"70\") == 64\nassert solution(\"71\") == 65\nassert solution(\"72\") == 66\nassert solution(\"73\") == 67\nassert solution(\"74\") == 68\nassert solution(\"75\") == 69\nassert solution(\"76\") == 70\nassert solution(\"77\") == 71\nassert solution(\"78\") == 72\nassert solution(\"79\") == 73\nassert solution(\"80\") == 74\nassert solution(\"81\") == 75\nassert solution(\"82\") == 76\nassert solution(\"83\") == 77\nassert solution(\"84\") == 78\nassert solution(\"85\") == 79\nassert solution(\"86\") == 80\nassert solution(\"87\") == 81\nassert solution(\"88\") == 82\nassert solution(\"89\") == 83\nassert solution(\"90\") == 84\nassert solution(\"91\") == 85\nassert solution(\"92\") == 86\nassert solution(\"93\") == 87\nassert solution(\"94\") == 88\nassert solution(\"95\") ==",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes', \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 5 1\") == \"Yes\"\nassert solution(\"4 3 8 5 1\") == \"No\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Yes\\n', \"Test failed for solution\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\\n\", \"Your solution is incorrect. The output is: \" + solution()",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"4\\n3 4 2 6\") == \"No\"\nassert solution(\"4\\n4 4 3 7\") == \"No\"\nassert solution(\"4\\n2 10 3 5\") == \"No\"\nassert solution(\"4\\n1 2 3 4\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"No\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"No\\n\"\nassert solution(\"7\\n1 2 3 4 5\") == \"Yes\\n\"\nassert solution(\"8\\n1 2 3 4 5\") == \"No\\n\"\nassert solution(\"9\\n1 2 3 4 5\") == \"Yes\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"702\", \"The correct answer should be 702\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nprint(\"All tests passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n4 5\\n6 7\") == \"-1\\n\"\nassert solution(\"3 3\\n5 1\\n6 0\") == \"-1\\n\"\nassert solution(\"3 3\\n5 9\\n6 2\") == \"-1\\n\"\nassert solution(\"3 3\\n6 1\\n7 2\") == \"702\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 103
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"5 6\\n0 0\\n9 9\\n0 0\") == \"99\"\nassert solution(\"5 6\\n0 0\\n9 9\\n0 0\") == \"99\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"-1\"",
        "num_ids_2": 57,
        "num_ids_4": 112
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n1 7\n3 2\n1 7\n\"\"\") == \"702\"\n\nassert solution(\"\"\"\n3 3\n1 0\n3 2\n1 7\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n3 3\n1 0\n3 2\n1 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 3\n1 0\n3 2\n1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 3\n1 0\n3 2\n1 2\n\"\"\") == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"10 2\") == \"3\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"1 5\") == \"0\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"2 2\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"\nassert solution(\"4 2\") == \"12\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1),(3,3,3)\"\nassert solution(\"5 3\") == \"16\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1),(3,3,3),(3,3,5)\"\nassert solution(\"6 2\") == \"18\"\nassert solution(\"7 3\") == \"30\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1),(3,3,3),(3,3,5),(3,3,7)\"\nassert solution(\"8 3\") == \"46\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1),(3,3,3),(3,3,5),(3,3,7),(3,3,9),(3,3,11),(3,3,13),(3,3,15)\"\nassert solution(\"9 4\") == \"66\"",
        "num_ids_2": 143,
        "num_ids_4": 231
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1 1 1\") == \"9\"\nassert solution(\"1 1 3 1 3 3\") == \"16\"\nassert solution(\"2 2 2 2 2\") == \"13\"\nassert solution(\"3 1 1 3 3 3\") == \"14\"",
        "num_ids_2": 28,
        "num_ids_4": 68
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n\") == \"9\\n\"\nassert solution(\"1 2\\n\") == \"9\\n\"\nassert solution(\"3 3\\n\") == \"9\\n\"\nassert solution(\"4 5\\n\") == \"1\\n\"\nassert solution(\"6 6\\n\") == \"2\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\"\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"1 2\") == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\"\nassert solution(\"1 1\") == \"1\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\"",
        "num_ids_2": 222,
        "num_ids_4": 446
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"\nprint(\"Correct\")",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"5 1\") == \"11\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"100 1\") == \"105\"\nassert solution(\"1000 1\") == \"1006\"",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(-9) == '1011'\nassert solution(10) == '10'\nassert solution(0) == '1'\nassert solution(1) == '1'\nassert solution(100) == '1001'\nassert solution(1000000000) == '1010000011'\n",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"1100\"\nassert solution(10) == \"110101010101010101010101010101010\"\nassert solution(100) == \"111111111111111111111111111111111\"\nassert solution
        "num_ids_2": 56,
        "num_ids_4": 1027
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"1011\", \"Test Case 1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('-9') == '1011', \"Test case -9 failed\"\nassert solution('0') == '0', \"Test case 0 failed\"\nassert solution('1') == '1', \"Test case 1 failed\"\nassert solution('10') == '10', \"Test case 10 failed\"\nassert solution('1000') == '1011000', \"Test case 1000 failed\"\nassert solution('1000000000') == '1011000000000000', \"Test case 1000000000 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-123\") == \"11001\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"1100\"\nassert solution(\"1\") == \"1100\"\nassert solution(\"-10\") == \"1011\"\nassert solution(\"0\") == \"0000\"\nassert solution(\"2\") == \"1000\"\nassert solution(\"11\") == \"1010\"\nassert solution(\"100\") == \"1011\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('-9') == '1011', \"The base -2 representation of -9 is incorrect.\"\nassert solution('2') == '1', \"The base -2 representation of 2 is incorrect.\"\nassert solution('123') == '2', \"The base -2 representation of 123 is incorrect.\"\nassert solution('10') == '11', \"The base -2 representation of 10 is incorrect.\"\nassert solution('0') == '0', \"The base -2 representation of 0 is incorrect.\"",
        "num_ids_2": 47,
        "num_ids_4": 98
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"1011\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '110'\nassert solution('123') == '11011'\nassert solution('-9') == '1011'\nassert solution('99999999999999999999999999999999') == '101000000000000000000000000000000'",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"1011\", \"Test case 1\"\nassert solution(\"-9\") == \"1011\", \"Test case 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nassert solution(\"3 2\\n4 3\\n5 1\") == \"6\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\\n\", \"Your solution is incorrect. Please see the problem statement for more details.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nassert solution(\"10 15\\n20 30\") == \"0\"\nassert solution(\"1 2\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 6):\n    assert solution(input()) == output()\nprint(\"All test cases pass.\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5\\n4 9\\n2 4') == '12'\nassert solution('3 4\\n5 6') == '0'\nassert solution('2 5\\n4 10') == '12'\nassert solution('1 1\\n1 1') == '2'\nassert solution('2 4\\n3 5') == '0'",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"\nassert solution(\"2 5\\n4 9\\n2 4\\n11 10\\n\") == \"12\\n\"\nassert solution(\"3 5\\n4 9\\n2 4\\n11 10\\n\") == \"23\\n\"\nassert solution(\"3 6\\n5 9\\n2 4\\n11 10\\n\") == \"23\\n\"\nassert solution(\"4 6\\n5 9\\n2 4\\n11 10\\n\") == \"23\\n\"\nassert solution(\"4 5\\n5 9\\n2 4\\n11 10\\n\") == \"34\\n\"\nassert solution(\"4 5\\n5 9\\n2 4\\n11 10\\n11 9\\n\") == \"34\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 129
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Testcase 1 failed\"\nassert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Testcase 2 failed\"\nassert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Testcase 3 failed\"\nassert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Testcase 4 failed\"\nassert solution(\"5\\n10 4 8 7 3\") == \"2\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"The output does not match the expected output. Input: {input_data}, Expected Output: {expected_output}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 3) == 1, \"Expected 1, but got {}.\".format(solution(5, 3))\nassert solution(5, 2) == 2, \"Expected 2, but got {}.\".format(solution(5, 2))\nassert solution(5, 3) == 0, \"Expected 0, but got {}.\".format(solution(5, 3))\nassert solution(3, 2) == 1, \"Expected 1, but got {}.\".format(solution(3, 2))\nassert solution(3, 3) == 2, \"Expected 2, but got {}.\".format(solution(3, 3))\nassert solution(3, 3) == 2, \"Expected 2, but got {}.\".format(solution(3, 3))\nassert solution(3, 3) == 0, \"Expected 0, but got {}.\".format(solution(3, 3))",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, expected {output()}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n7 5\\n3 3 2 1 1 1 3\") == 3\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n6 7\\n1 1 1 2 2 2 2\") == 4\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Test failed\"\nassert solution() == \"4\", \"Test failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3\\n') == '3\\n'\nassert solution('7 5\\n3 3 2 1 1 1 3\\n') == '4\\n'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == 3\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == 4",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('1 2 3 4 5 6') == '4'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution.py) == \"\"\"3\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\\n3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3\\n') == '3'\nassert solution('7 5\\n3 3 2 1 1 1 3\\n') == '4'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000\\n\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"10 5 1000\\n50 10 2000\\n100 50 5000\\n\") == \"10\\n10\\n5000\\n100000000000000\"",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '1\\n1\\n1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}.\"\nfor i in range(5):\n    assert solution(f\"Test Case {i+1}\") == expected_output, f\"Test failed for input {i+1}.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1\\n'\nassert solution('1000000000000 1000000000000 1') == '1000000000000\\n9\\n10000000000000\\n42000000000000'\n\nfrom typing import List",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"4 3\\n5 4 6\") == \"2\\n\"\nassert solution(\"10000 50000\\n20000 30000 40000\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"10 2\\n10 20\") == \"0\\n\"\nassert solution(\"5 3\\n-1 1\") == \"1\\n\"\nassert solution(\"3 6\\n-1 1\") == \"1\\n\"\nassert solution(\"3 6\\n100 2\") == \"0\\n\"\nassert solution(\"3 6\\n100 3\") == \"2\\n\"\nassert solution(\"3 6\\n100 10000\") == \"0\\n\"\nassert solution(\"3 6\\n100 10001\") == \"2\\n\"\nassert solution(\"3 6\\n100 0\") == \"0\\n\"\nassert solution(\"3 6\\n100 0\") == \"0\\n\"\nassert solution(\"3 6\\n100 0\") == \"0\\n\"\nassert solution(\"3 6\\n100 0\") == \"0\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\\n\"\nassert solution(\"4 2\\n3 5 2\\n\") == \"0\\n\"\nassert solution(\"3 7\\n4 6 2\\n\") == \"1\\n\"\nassert solution(\"10000 5000\\n\") == \"1\\n\"\nassert solution(\"2 1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\", \"The ball will make a bounce at the coordinates 0, 3, 7 and 12, among which two are less than or equal to 6.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"1 2\\n1 3\") == \"0\\n\"\nassert solution(\"1 10001\\n1 10000\") == \"21\\n\"\nassert solution(\"1 1\\n1 2\") == \"0\\n\"\nassert solution(\"2 1\\n2 2\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6\\n3 4 5') == '2\\n'\nprint('All test cases pass.')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 6, 3, 4, 5) == 2, \"Your solution is incorrect.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nhoge\\nenigma\\n\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\nhoge\\nenlish\\nhoge\\nenigma\\n') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\nhoge\\nenigma\\nhoge\\nenglish') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nhoge\\nenigma\\n') == 'No'\nprint('All tests passed!')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"  # Takahashi announces two words in a row. Their first character is the same.\nassert solution(\"4\\nhoge\\nEnglish\\nhoge\\nenigma\") == \"No\"  # Takahashi announces two words in a row. Their first character is the same.\nassert solution(\"4\\nhoge\\nEnglish\\nhoge\\nENIGMA\") == \"Yes\"  # Every word announced by Takahashi satisfied the conditions.",
        "num_ids_2": 94,
        "num_ids_4": 135
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\\n\", \"Takahashi is practicing shiritori alone again today. Shiritori is a game as follows: - In the first turn, a player announces any one word. - In the subsequent turns, a player announces a word that satisfies the following conditions: - That word is not announced before. - The first character of that word is the same as the last character of the last word announced.In this game, he is practicing to announce as many words as possible in ten seconds. You are given the number of words Takahashi announced, N, and the i-th word he announced, W_i, for each i. Determine if the rules of shiritori was observed, that is, every word announced by him satisfied the conditions.\"",
        "num_ids_2": 196,
        "num_ids_4": 196
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"6\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"6\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"6\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\\n\", \"Test case 1 failed\"\nassert solution(\"hello\") == \"hlllll\\n\", \"Test case 2 failed\"\nassert solution(\"\") == \"\\n\", \"Test case 3 failed\"\nassert solution(\"a\") == \"a\\n\", \"Test case 4 failed\"\nassert solution(\"abcdefg\") == \"abcxxxxxxx\\n\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx', \"The solution should return the expected output.\"\nprint(\"Solution passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx', \"Test failed. Please modify the solution accordingly.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Your code is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\\n\", \"Input does not match the expected output.\"\n\nSolution:\n\nWe can iterate over the string and replace each character with x using the `replace()` method of the string. Here's the code: \n\n```python\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx', \"Incorrect output: expected 'xxxxxxx', but got '{}'\".format(solution('sardine'))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"6\\n1 2 1 1 3\\n\") == \"No\"\nassert solution(\"5\\n1 2 1 2 3\\n\") == \"No\"\nassert solution(\"5\\n1 2 1 3 3\\n\") == \"Yes\"\nassert solution(\"6\\n1 2 1 3 3\\n\") == \"No\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\") == \"No\"\nassert solution(\"5\\n1 2 2 1 1\") == \"No\"\nassert solution(\"5\\n1 3 3 3 3\") == \"No\"\nassert solution(\"5\\n1 1 1 1 2\") == \"Yes\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"No\", \"Input is not valid\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\", \"The given input is invalid.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1\\n'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"3 3 -20\\n2 2 2\\n3 2 1\\n2 2 1\") == \"0\"\nassert solution(\"2 2 -10\\n2 2 2\\n3 3 -20\\n1 1 1\") == \"2\"\nassert solution(\"1 1 0\\n1 1 1\\n1 1 0\") == \"1\"\nassert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n2 2 2\") == \"1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 137
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"\n3 5 -10\n2 3 1\n2 4 5\n\"\"\") == \"2\\n\"\n\nassert solution(\n\"\"\"\n4 5 -10\n2 3 4\n4 3 1\n\"\"\") == \"3\\n\"\n\nassert solution(\n\"\"\"\n5 7 -10\n2 3 5\n5 4 2\n\"\"\") == \"3\\n\"\n\nassert solution(\n\"\"\"\n6 11 -10\n2 3 6\n7 5 3\n\"\"\") == \"3\\n\"\n\nassert solution(\n\"\"\"\n7 11 -10\n2 3 7\n8 6 4\n\"\"\") == \"3\\n\"\n\nassert solution(\n\"\"\"\n8 12 -10\n3 4 7\n9 7 5\n\"\"\") == \"4\\n\"\n\nassert solution(\n\"\"\"\n9 13 -10\n3 4 8\n10 8 6\n\"\"\") == \"4\\n\"\n\nassert solution(\n\"\"\"\n10 15 -10\n4 5 9\n11 9 7\n\"\"\") == \"5\\n\"\n\nassert solution(\n\"\"\"\n11 16 -10\n4 5 10\n12 10 8\n\"\"\") == \"5\\n\"\n\nassert solution(\n\"\"\"\n12 17 -10\n4 5 11\n13 11 9\n\"\"\") == \"5\\n\"\n\nassert solution(\n\"\"\"\n13 18 -10\n4 5 12\n14 12 10\n\"\"\") == \"5\\n\"\n\nassert solution(\n\"\"\"\n14 19 -10\n5 6 13\n15 13 11\n\"\"\") == \"5\\n\"\n\nassert solution(\n\"\"\"\n15 20 -10\n5 6 14\n16 14 12\n\"\"\") == \"6\\n\"\n\nassert solution(\n\"\"\"\n16 21 -10\n5 6 15\n17 15 13\n\"\"\") == \"6\\n\"\n\nassert solution(\n\"\"\"\n17 22 -10\n5 6 16\n18 16 14\n\"\"\") == \"6\\n\"\n\nassert solution(\n\"\"\"\n18 23 -10\n5 6 17\n19 17 15\n\"\"\") == \"6\\n\"\n\nassert solution(\n\"\"\"\n19 24 -10\n5 6 18\n20 18 16\n\"\"\") == \"6\\n\"\n\nassert solution(\n\"\"\"\n20 25 -10\n6 7 19\n21 19 17\n\"\"\") == \"7\\n\"\n\nassert solution(\n\"\"\"\n21 26 -10\n6 7 20\n22 20 18\n\"\"\") == \"7\\n\"\n\nassert solution(\n\"\"\"\n22 27 -10\n6 7 21\n23 21 19\n\"\"\") == \"7\\n\"\n\nassert solution(\n\"\"\"\n23 28 -10\n6 7 22\n24 22 20\n\"\"\") == \"7\\n\"\n\nassert solution(\n\"\"\"\n24 29 -10\n6 7 23\n25 23 21\n\"\"\") == \"7\\n\"\n\nassert solution(\n\"\"\"\n25 30 -10\n7 8 24\n26 24 22\n\"\"\") == \"8\\n\"\n\nassert solution(\n\"\"\"\n26 31 -10\n7 8 25\n27 25 23\n\"\"\") == \"8\\n\"\n\nassert solution(\n\"\"\"\n27 32 -10\n7 8 26\n28 26 24\n\"\"\") == \"8\\n\"\n\nassert solution(\n\"\"\"\n28 33 -10\n7 8 27\n29 27 ",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect solution\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1900\") == \"100\", \"Test 1 failed\"\nassert solution(\"2000\") == \"200\", \"Test 2 failed\"\nassert solution(\"3000\") == \"100\", \"Test 3 failed\"\nassert solution(\"4000\") == \"200\", \"Test 4 failed\"\nassert solution(\"5000\") == \"100\", \"Test 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1900') == '100'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1900') == '100', \"Expected '100', but got '{}'\".format(solution('1900'))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1900\") == \"100\", \"Test 1\"\nassert solution(\"2000\") == \"200\", \"Test 2\"\nassert solution(\"3000\") == \"300\", \"Test 3\"\nassert solution(\"4000\") == \"400\", \"Test 4\"\nassert solution(\"5000\") == \"500\", \"Test 5\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"100\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1900) == \"100\"\nassert solution(1200) == \"200\"\nassert solution(1500) == \"100\"\nassert solution(2000) == \"500\"\nassert solution(2500) == \"1500\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"100\"\nprint(\"100\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1900') == '100'\nassert solution('2000') == '0'\nassert solution('1000') == '0'\nassert solution('2000') == '0'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n3 5 2\\n4 5') == '9\\n'\n\nHere's the code for the solution:\n\n```python\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter N: \")) == \"9\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\\n\") == \"9\\n\"\nassert solution(\"4\\n2\\n1\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2\\n3 4\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Expected: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n3 4\\n5\") == \"8\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"12\\n\"\nassert solution(\"1\\n1\\n1\") == \"1\\n\"\nassert solution(\"5\\n5\") == \"5\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\nassert solution(\"2\\n5\\n6\") == \"0\\n\"\nassert solution(\"2\\n3\\n4\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 60
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input} expected output: {solution_output}\"\nfor solution_input, solution_output in [\n    (\"3 2 10 20\\n8 15 13\\n16 22\", \"No War\"),\n]:\n    assert solution(solution_input) == solution_output, f\"Test case failed: {solution_input} expected output: {solution_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 23') == 'War'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 20\\n8 15 13\\n16 22\\n3 2 10 2",
        "num_ids_2": 97,
        "num_ids_4": 1027
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 21\") == \"War\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 2 10 20\n    8 15 13\n    16 22\n    \"\"\"\n) == \"No War\"\n\nassert solution(\n    \"\"\"\n    2 4 5 10\n    6 7 8 11\n    9 12 13 14\n    \"\"\"\n) == \"No War\"\n\nassert solution(\n    \"\"\"\n    3 5 7 10\n    1 4 8 11\n    2 6 9 12\n    \"\"\"\n) == \"No War\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4\n    5 6 7 8\n    9 10 11 12\n    \"\"\"\n) == \"No War\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4\n    1 5 9 13\n    \"\"\"\n) == \"War\"\n\nassert solution(\n    \"\"\"\n    3 2 5 8\n    9 7 6 4\n    1 2 3 5\n    \"\"\"\n) == \"War\"\n\nassert solution(\n    \"\"\"\n    1 1 2 3\n    1 3 5 7\n    1 3 5 9\n    1 3 5 11\n    \"\"\"\n) == \"War\"\n\nassert solution(\n    \"\"\"\n    2 2 2 3\n    1 2 1 3\n    2 3 1 1\n    2 3 1 1\n    \"\"\"\n) == \"War\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4\n    5 6 7 8\n    9 10 11 12\n    13 14 15 16\n    \"\"\"\n) == \"War\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4\n    5 6 7 8\n    9 10 11 12\n    13 14 15 16\n    \"\"\"\n) == \"War\"\n\nassert solution(\n    \"\"\"\n    1 2 3 4\n    5 6 7 8\n    9 10 11 12\n    13 14 15 16\n    \"\"\"\n) == \"War\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\\n\"\nassert solution(\"2 1 2 1\") == \"No War\\n\"\nassert solution(\"3 1 4 5\") == \"War\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 74
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 21\") == \"War\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n    3 2 10 20\n    8 15 13\n    16 22\n    ''') == 'No War'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\", \"Incorrect answer!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"3\\n1\\n3\\n\") == \"6\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"0\\n\"\nassert solution(\"5\\n4\\n2\\n\") == \"10\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6', 'The correct answer is 6.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\") == \"6\\n\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n1",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n3') == '6\\n'\nassert solution('4\\n5\\n6\\n7\\n8\\n9') == '15\\n'\nassert solution('2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n",
        "num_ids_2": 46,
        "num_ids_4": 1027
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\", \"Test Case 1 failed\"\n\nassert solution(input()) == \"6\", \"Test Case 2 failed\"\n\nassert solution(input()) == \"6\", \"Test Case 3 failed\"\n\nassert solution(input()) == \"6\", \"Test Case 4 failed\"\n\nassert solution(input()) == \"6\", \"Test Case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed for input {input_data}, expected output {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"  # expected output: 0\nassert solution(\"4\\n1 2 3 4\") == \"0\\n\"  # expected output: 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"2\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\n\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"3\\n\"\n\nassert solution(\"2\\n1 2 3\\n\") == \"0\\n\"\n\nassert solution(\"2\\n1 2 3 4 5\\n\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\n1 2 3') == '0\\n'\nassert solution(stdin='3\\n1 2 4') == '2\\n'\nassert solution(stdin='3\\n1 3 2') == '1\\n'\nassert solution(stdin='3\\n1 4 3') == '1\\n'\nassert solution(stdin='3\\n1 5 4') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1 2 3\\n\") == \"3\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\\n\"\n",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\\n4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n\\n3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"6\"\nassert solution(\"4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"",
        "num_ids_2": 140,
        "num_ids_4": 182
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution1) == \"6\"\nassert solution(solution2) == \"0\"\nassert solution(solution3) == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"\nassert solution(\"5 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\") == \"11\"",
        "num_ids_2": 76,
        "num_ids_4": 186
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Expected output: 6, but got {}\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\") == \"2\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 130
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6\\n'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0\\n'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2\\n'",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}\\nOutput: {output_str}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\", \"Expected output: 5, got: \" + solution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\\n1 100\") == \"99\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str=\"6\\n5 10 2 3 14 5\") == \"5\"\nassert solution(input_str=\"2\\n1 100\") == \"99\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, 5, 2, 3, 14, 5) == 5\nassert solution(2, 1, 100) == 99\n\nsolution(6, 5, 2, 3, 14, 5)  # expected output: 5\nsolution(2, 1, 100)  # expected output: 99",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\\n1 100\") == \"99\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"99\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Input: {input_data}, Output: {output_data}\" for input_data, output_data in [\n    (\"6\\n5 10 2 3 14 5\", \"5\\n\"),\n    (\"2\\n1 100\", \"99\\n\")\n]",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output\\n5'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(2) == 0\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 3",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '2\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(5)), \"Input 5 not correct\"\nassert solution(str(6)), \"Input 6 not correct\"\nassert solution(str(7)), \"Input 7 not correct\"\nassert solution(str(3)), \"Input 3 not correct\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2\\n'\nassert solution('6\\n0 1 0 1 1 0\\n') == '2\\n'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '3\\n'\nassert solution('3\\n0 0 0\\n') == '0\\n'\n",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '0'\nassert solution(5) == '3'\nassert solution(6) == '3'\nassert solution(7) == '3'\nassert solution(10) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1, \"The correct output is 1\"\nassert solution(7) == 0, \"The correct output is 0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1, \"Expected 1, got {}\".format(solution(1))\nassert solution(7) == 0, \"Expected 0, got {}\".format(solution(7))",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n\", \"First test case\"\nassert solution(\"7\") == \"0\\n\", \"Second test case\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1, \"Test case 1 failed\"\nassert solution(7) == 0, \"Test case 2 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1, \"Test 1 failed.\"\nassert solution(7) == 0, \"Test 2 failed.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1, \"The function should return 1 for the given input.\"\nassert solution(7) == 0, \"The function should return 0 for the given input.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1, \"Input 1 is not correct\"\nassert solution(7) == 0, \"Input 7 is not correct\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\") == \"3\", \"The expected output is: 3. The actual output is: \" + solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\")\n\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\") == \"4\", \"The expected output is: 4. The actual output is: \" + solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\")\n\nprint(\"All tests passed.\")",
        "num_ids_2": 212,
        "num_ids_4": 212
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Solution should return 3.\"\nassert solution() == \"4\", \"Solution should return 4.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\\n\") == \"3\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == \"3\", \"Your solution is incorrect\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\", \"Your solution is incorrect\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Test Failed\" # Test Failed",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 3\nassert solution(input()) == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"brie soft\") == 3\nassert solution(\"camembert soft\") == 3\nassert solution(\"feta soft\") == 3\nassert solution(\"goat soft\") == 3\nassert solution(\"muenster soft\") == 3\nassert solution(\"asiago hard\") == 4\nassert solution(\"cheddar hard\") == 4\nassert solution(\"gouda hard\") == 4\nassert solution(\"swiss hard\") == 4",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 1\\n3 2 1 1\") == \"1 0 0 2 \\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2 \\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1') == '1 0 0 2\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 0 0 1 0 2 4\"\nassert solution() == \"1 0 0 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '''\n1 0 0 2 \n'''\n\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '''\n0 0 0 1 0 2 4 \n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2 \"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2 \\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\\n\"\nassert solution(\"6\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\\n\"\nassert solution(\"5\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\") == \"0 0 0 1 0 2 4\\n\"\nassert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2 \\n\"",
        "num_ids_2": 94,
        "num_ids_4": 206
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n0 1 2 1\\n3 2 1 1\\n\\nOutput\\n1 0 0 2\\n\\nInput\\n7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n\\nOutput\\n0 0 0 1 0 2 4') == '1 0 0 2\\n'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0\\n1\\n1\\n0\\n') == '0'\nassert solution('1\\n0\\n1\\n1\\n') == '1'\nassert solution('1\\n0\\n0\\n0\\n') == '0'\nassert solution('0\\n0\\n0\\n0\\n') == '0'\nassert solution('0\\n1\\n0\\n1\\n') == '1'\nassert solution('0\\n1\\n1\\n0\\n') == '1'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"1\\n0\\n1\\n1\") == \"1\"\nassert solution(\"1\\n0\\n0\\n1\") == \"1\"\nassert solution(\"0\\n0\\n1\\n1\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == 0, \"Test 1\"\nassert solution(\"1\") == 1, \"Test 2\"\nassert solution(\"1\") == 0, \"Test 3\"\nassert solution(\"0\") == 1, \"Test 4\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"0\\n1\\n1\\n1\") == \"1\"\nassert solution(\"0\\n1\\n0\\n1\") == \"0\"\nassert solution(\"0\\n0\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"0\\n0\\n1\\n0\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\", \"The function should return 0\"\nassert solution(\"1\") == \"1\", \"The function should return 1\"\nassert solution(\"1\") == \"0\", \"The function should return 0\"\nassert solution(\"0\") == \"1\", \"The function should return 1\"\nassert solution(\"0\") == \"1\", \"The function should return 0\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0') == 0, \"The function should return 0 when given 0.\"\nassert solution('1') == 1, \"The function should return 1 when given 1.\"\nassert solution('1') == 1, \"The function should return 1 when given 1.\"\nassert solution('0') == 0, \"The function should return 0 when given 0.\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0') == '0', \"The solution should return 0\"\nassert solution('1') == '1', \"The solution should return 1\"\nassert solution('1') == '1', \"The solution should return 1\"\nassert solution('0') == '0', \"The solution should return 0\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"1000 15 80\"\"\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"\"\"500 25 80\"\"\"\n) == \"No\\n\"\n\nassert solution(\n    \"\"\"1000 10 90\"\"\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"\"\"1000 10 100\"\"\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"\"\"1000 100 80\"\"\"\n) == \"No\\n\"\n\nassert solution(\n    \"\"\"1000 -100 80\"\"\"\n) == \"No\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 25 90') == 'No'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1001 15 80\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\", \"The expected output is 'Yes' but the actual output is: {}\".format(solution(\"1000 15 80\"))\nassert solution(\"1000 10 70\") == \"No\", \"The expected output is 'No' but the actual output is: {}\".format(solution(\"1000 10 70\"))\nassert solution(\"1000 100 100\") == \"No\", \"The expected output is 'No' but the actual output is: {}\".format(solution(\"1000 100 100\"))\nassert solution(\"1000 20 20\") == \"Yes\", \"The expected output is 'Yes' but the actual output is: {}\".format(solution(\"1000 20 20\"))",
        "num_ids_2": 98,
        "num_ids_4": 200
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1000 15 80') == 'Yes\\n'\nassert solution('999 10 80') == 'No\\n'\nassert solution('1000 0 80') == 'Yes\\n'\nassert solution('1000 15 0') == 'No\\n'\nassert solution('1001 15 80') == 'Yes\\n'",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\", \"Invalid input.\"\nprint(\"Valid input.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\", \"The given constraints are not satisfied.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n98 94 86\") == \"No\"",
        "num_ids_2": 134,
        "num_ids_4": 276
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\\n\"\nassert solution(\"99 55 99\\n44 66 55\\n33 33 33\\n22 22 22\\n11 11 11\\n00 00 00\\n\") == \"No\\n\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\\n\"",
        "num_ids_2": 139,
        "num_ids_4": 207
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"No\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"No\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n7 8 9\") == \"No\"",
        "num_ids_2": 94,
        "num_ids_4": 159
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\\n\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\\n\"",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\\n\"\nassert solution(\"10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\") == \"No\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"No\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"No\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"No\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"No\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\",
        "num_ids_2": 127,
        "num_ids_4": 187
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"10 30 5\\n4 7 1\\n2 6 3\\n8\\n10\\n9\") == \"No\"\nassert solution(\"9 10 3 5\") == \"Yes\"\n",
        "num_ids_2": 106,
        "num_ids_4": 123
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n45 33 41\") == \"No\"",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'41 2\\n5 6\\n') == '30'\nprint('All test cases pass')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '30'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"1 2\\n3 4\") == \"1\"\nassert solution(\"1 2\\n1 1\") == \"-1\"",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"41 2\\n5 6\") == 30\nassert solution(\"2 3\\n1 2\") == -1\nassert solution(\"1 1\\n1 1\") == 0\nassert solution(\"1 1\\n2 2\") == 0\nassert solution(\"2 2\\n1 1\") == 0",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"42 2\\n5 6\") == \"-1\"\nassert solution(\"41 2\\n5 7\") == \"-1\"\nassert solution(\"41 2\\n5 6\\n5 5\") == \"30\"\nassert solution(\"41 2\\n5 6\\n5 4\") == \"120\"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"30\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt').read()) == '30'\nprint('All test cases passed.')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"25 1\") == \"12\"\nassert solution(\"6 2\\n3 1\") == \"-1\"\nassert solution(\"5 1\\n1 2\") == \"-1\"\nassert solution(\"1 1\\n1 1\") == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\\n\"\nassert solution(\"5 5\\n5 6\") == \"-1\\n\"\nassert solution(\"10 1\\n1 2\") == \"-1\\n\"\nassert solution(\"10 3\\n2 3\") == \"30\\n\"\nassert solution(\"10 4\\n2 4\") == \"30\\n\"\nassert solution(\"10 5\\n2 5\") == \"30\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"6\"\nassert solution(\"2 5\") == \"7\"\nassert solution(\"0 3\") == \"1\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"2 3\") == \"8\"\nassert solution(\"0 100\") == \"100\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"2 100\") == \"100\"\nassert solution(\"0 200\") == \"100\"\nassert solution(\"1 200\") == \"100\"\nassert solution(\"2 200\") == \"100\"\nassert solution(\"0 250\") == \"250\"\nassert solution(\"1 250\") == \"250\"\nassert solution(\"2 250\") == \"250\"\nassert solution(\"0 300\") == \"300\"\nassert solution(\"1 300\") == \"300\"\nassert solution(\"2 300\") == \"300\"\nassert solution(\"0 400\") == \"400\"\nassert solution(\"1 400\") == \"400\"\nassert solution(\"2 400\") == \"400\"\nassert solution(\"0 450\") == \"450\"\nassert solution(\"1 450\") == \"450\"\nassert solution(\"2 450\") == \"450\"\nassert solution(\"0 500\") == \"500\"\nassert solution(\"1 500\") == \"500\"\nassert solution(\"2 500\") == \"500\"\nassert solution(\"0 550\") == \"550\"\nassert solution(\"1 550\") == \"550\"\nassert solution(\"2 550\") == \"550\"\nassert solution(\"0 600\") == \"600\"\nassert solution(\"1 600\") == \"600\"\nassert solution(\"2 600\") == \"600\"\nassert solution(\"0 650\") == \"650\"\nassert solution(\"1 650\") == \"650\"\nassert solution(\"2 650\") == \"650\"\nassert solution(\"0 700\") == \"700\"\nassert solution(\"1 700\") == \"700\"\nassert solution(\"2 700\") == \"700\"\nassert solution(\"0 750\") == \"750\"\nassert solution(\"1 750\") == \"750\"\nassert solution(\"2 750\") == \"750\"\nassert solution(\"0 800\") == \"800\"\nassert solution(\"1 800\") == \"800\"\nassert solution(\"2 800\") == \"800\"\nassert solution(\"0 850\") == \"850\"\nassert solution(\"1 850\") == \"850\"\nassert solution(\"2 850\") == \"850\"\nassert solution(\"0 900\") == \"900\"\nassert solution(\"1 900\") == \"900\"\nassert solution(\"2 900\") == \"900\"\nassert solution(\"0 950\") == \"950\"\nassert solution(\"1 950\") == \"950\"\nassert solution(\"2 950\") == \"950\"\nassert solution(\"0 1000\") == \"1000\"\nassert solution(\"1 1000\") == \"1000\"\nassert solution(\"2 1000\") == \"1000\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 5\") == \"5\", \"Expected output: 5, but got: \" + solution(\"0 5\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5, \"Your solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"0 3\") == \"5\"\nassert solution(\"1 3\") == \"5\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"2 2\") == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\", \"Test 1\"\nassert solution(\"1 1\\n\") == \"1\\n\", \"Test 2\"\nassert solution(\"2 2\\n\") == \"2\\n\", \"Test 3\"\nassert solution(\"1 2\\n\") == \"2\\n\", \"Test 4\"\nassert solution(\"2 2\\n\") == \"4\\n\", \"Test 5\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"6 2\") == \"6\"\nassert solution(\"7 2\") == \"7\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"9 2\") == \"9\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"6 3\") == \"6\"\nassert solution(\"7 3\") == \"7\"\nassert solution(\"8 3\") == \"8\"\nassert solution(\"9 3\") == \"9\"\nassert solution(\"10 3\") == \"10\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"6 4\") == \"6\"\nassert solution(\"7 4\") == \"7\"\nassert solution(\"8 4\") == \"8\"\nassert solution(\"9 4\") == \"9\"\nassert solution(\"10 4\") == \"10\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"6 5\") == \"6\"\nassert solution(\"7 5\") == \"7\"\nassert solution(\"8 5\") == \"8\"\nassert solution(\"9 5\") == \"9\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"1 6\") == \"1\"\nassert solution(\"2 6\") == \"2\"\nassert solution(\"3 6\") == \"3\"\nassert solution(\"4 6\") == \"4\"\nassert solution(\"5 6\") == \"5\"\nassert solution(\"6 6\") == \"6\"\nassert solution(\"7 6\") == \"7\"\nassert solution(\"8 6\") == \"8\"\nassert solution(\"9 6\") == \"9\"\nassert solution(\"10 6\") == \"10\"\nassert solution(\"1 7\") == \"1\"\nassert solution(\"2 7\") == \"2\"\nassert solution(\"3 7\") == \"3\"\nassert solution(\"4 7\") == \"4\"\nassert solution(\"5 7\") == \"5\"\nassert solution(\"6 7\") == \"6\"\nassert solution(\"7 7\") == \"7\"\nassert solution(\"8 7\") == \"8\"\nassert solution(\"9 7\") == \"9\"\nassert solution(\"10 7\") == \"10\"\nassert solution(\"1 8\") == \"1\"\nassert solution(\"2 8\") == \"2\"\nassert solution(\"3 8\") == \"3\"\nassert solution(\"4 8\") == \"4\"\nassert solution(\"5 8\") == \"5\"\nassert solution(\"6 8\") == \"6\"\nassert solution(\"7 8\") == \"7\"\nassert solution(\"8 8\") == \"8\"\nassert solution(\"9 8\") == \"9\"\nassert solution(\"10 8\") == \"10\"\nassert solution(\"1 9\") == \"1\"\nassert solution(\"2 9\") == \"2\"\nassert solution(\"3 9\") == \"3\"\nassert solution(\"4 9\") == \"4\"\nassert solution(\"5 9\") == \"5\"\nassert solution(\"6 9\") == \"6\"\nassert solution(\"7 9\") == \"7\"\nassert solution(\"8 9\") == \"8\"\nassert solution(\"9 9\") == \"9\"\nassert solution(\"10 9\") == \"10\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"3 10\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"Testcase 0 failed\"\nassert solution(\"1 2\") == \"2\\n\", \"Testcase 1 failed\"\nassert solution(\"2 3\") == \"3\\n\", \"Testcase 2 failed\"\nassert solution(\"0 1\") == \"2\\n\", \"Testcase 3 failed\"\nassert solution(\"1 1\") == \"2\\n\", \"Testcase 4 failed\"\nassert solution(\"0 2\") == \"3\\n\", \"Testcase 5 failed\"\nassert solution(\"1 0\") == \"2\\n\", \"Testcase 6 failed\"\nassert solution(\"1 2\") == \"2\\n\", \"Testcase 7 failed\"\nassert solution(\"1 3\") == \"3\\n\", \"Testcase 8 failed\"\nassert solution(\"1 4\") == \"4\\n\", \"Testcase 9 failed\"\nassert solution(\"2 2\") == \"4\\n\", \"Testcase 10 failed\"\nassert solution(\"2 3\") == \"5\\n\", \"Testcase 11 failed\"\nassert solution(\"2 4\") == \"6\\n\", \"Testcase 12 failed\"\nassert solution(\"3 3\") == \"6\\n\", \"Testcase 13 failed\"\nassert solution(\"3 4\") == \"7\\n\", \"Testcase 14 failed\"\nassert solution(\"4 4\") == \"7\\n\", \"Testcase 15 failed\"\nassert solution(\"4 5\") == \"8\\n\", \"Testcase 16 failed\"\nassert solution(\"5 5\") == \"8\\n\", \"Testcase 17 failed\"\nassert solution(\"5 6\") == \"9\\n\", \"Testcase 18 failed\"\nassert solution(\"6 6\") == \"9\\n\", \"Testcase 19 failed\"\nassert solution(\"6 7\") == \"10\\n\", \"Testcase 20 failed\"\nassert solution(\"7 7\") == \"10\\n\", \"Testcase 21 failed\"\nassert solution(\"7 8\") == \"11\\n\", \"Testcase 22 failed\"\nassert solution(\"8 8\") == \"11\\n\", \"Testcase 23 failed\"\nassert solution(\"8 9\") == \"12\\n\", \"Testcase 24 failed\"\nassert solution(\"9 9\") == \"12\\n\", \"Testcase 25 failed\"\nassert solution(\"9 10\") == \"13\\n\", \"Testcase 26 failed\"\nassert solution(\"10 10\") == \"13\\n\", \"Testcase 27 failed\"\nassert solution(\"10 11\") == \"14\\n\", \"Testcase 28 failed\"\nassert solution(\"11 11\") == \"14\\n\", \"Testcase 29 failed\"\nassert solution(\"11 12\") == \"15\\n\", \"Testcase 30 failed\"\nassert solution(\"12 12\") == \"15\\n\", \"Testcase 31 failed\"\nassert solution(\"12 13\") == \"16\\n\", \"Testcase 32 failed\"\nassert solution(\"13 13\") == \"16\\n\", \"Testcase 33 failed\"\nassert solution(\"13 14\") == \"17\\n\", \"Testcase 34 failed\"\nassert solution(\"14 14\") == \"17\\n\", \"Testcase 35 failed\"\nassert solution(\"14 15\") == \"18\\n\", \"Testcase 36 failed\"\nassert solution(\"15 15\") == \"18\\n\", \"Testcase 37 failed\"\nassert solution(\"15 16\") == \"19\\n\", \"Testcase 38 failed\"\nassert solution(\"16 16\") == \"19\\n\", \"Testcase 39 failed\"\nassert solution(\"16 17\") == \"20\\n\", \"Testcase 40 failed\"\nassert solution(\"17 17\") == \"20\\n\", \"Testcase 41 failed\"\nassert solution(\"17 18\") == \"21\\n\", \"Testcase 42 failed\"\nassert solution(\"18 18\") == \"21\\n\", \"Testcase 43 failed\"\nassert solution(\"18 19\")",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '2'\nassert solution('2 4') == '4'\nassert solution('3 6') == '6'\nassert solution('4 8') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\", \"Your solution is incorrect!\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\", \"Test Failed\"\nassert solution() == \"2\\n\", \"Test Failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"\nassert solution(\"4\\n7 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n7 6 8\\n\") == \"4\\n\"\nassert solution(\"6\\n7 6 8\\n\") == \"4\\n\"\nassert solution(\"7\\n7 6 8\\n\") == \"4\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n'\nprint(\"Correct\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\", \"Sample Output Error\"\nassert solution(\"1\\n1\") == \"1\\n\", \"Sample Output Error\"\nassert solution(\"2\\n2 2\") == \"1\\n\", \"Sample Output Error\"\nassert solution(\"3\\n4 2 6 8\") == \"3\\n\", \"Sample Output Error\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"2\\n1 2 3\") == \"1 2 3\"\nassert solution(\"1\\n3 2 1\") == \"3 2 1\"\nassert solution(\"4\\n1 1 2 2\") == \"1 1 2 2\"\nassert solution(\"5\\n2 2 1 1\") == \"2 2 1 1\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6 5 4 3 2 1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7 6 5 4 3 2 1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8 7 6 5 4 3 2 1\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"9 8 7 6 5 4 3 2 1\"",
        "num_ids_2": 50,
        "num_ids_4": 120
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 1\\n') == '3 1 2\\n'\nassert solution('4\\n1 2 3\\n') == '1 2 3\\n'\nassert solution('5\\n2 4 5 1\\n') == '1 2 4 5\\n'\nassert solution('6\\n1 3 5 2 4\\n') == '1 3 5 2 4\\n'\nassert solution('7\\n3 5 1 4 2\\n') == '1 2 4 5 3\\n'",
        "num_ids_2": 50,
        "num_ids_4": 112
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3 1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\", \"Test case 1 failed\"\n\nassert solution(\"4\\n3 4 2\\n1 5 6\") == \"3 2 1 5 6\", \"Test case 2 failed\"\n\nassert solution(\"5\\n3 4 2\\n1 5 6\\n7 8 9\") == \"3 2 1 5 6 7 8 9\", \"Test case 3 failed\"\n\nassert solution(\"6\\n3 4 2\\n1 5 6\\n7 8 9\\n10 11 12\") == \"3 2 1 5 6 7 8 9 10 11 12\", \"Test case 4 failed\"\n\nassert solution(\"7\\n3 4 2\\n1 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"3 2 1 5 6 7 8 9 10 11 12 13 14 15\", \"Test case 5 failed\"\n\nassert solution(\"8\\n3 4 2\\n1 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\") == \"3 2 1 5 6 7 8 9 10 11 12 13 14 15 16 17 18\", \"Test case 6 failed\"\n\nassert solution(\"9\\n3 4 2\\n1 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"3 2 1 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\", \"Test case 7 failed\"",
        "num_ids_2": 67,
        "num_ids_4": 190
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 5 10') == '0'\nassert solution('1 2 3') == '0'\nassert solution('0 0 0') == '0'\nassert solution
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 7 100') == '9\\n'\nassert solution('10 20 100') == '9\\n'\nassert solution('10 5 100') == '0\\n'\nassert solution('100 100 100') == '9\\n'\nassert solution('1000000000 100 100') == '0\\n'\nprint('All tests passed')",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\", \"The integer 9 is sold for 10 \\times 9 + 7 \\times 1 = 97 yen, and this is the greatest integer that can be bought.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"12 7 100\") == \"97\\n\"\nassert solution(\"10 7 1000000000\") == \"0\\n\"\nassert solution
        "num_ids_2": 39,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"10 12 15\") == \"123485\"\nassert solution
        "num_ids_2": 31,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"1 1 1\") == \"0\\n\"\nassert solution(\"1 10 1\") == \"9\\n\"\nassert solution(\"10 10 1\") == \"18\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\", \"The integer 9 is sold for 10 \\times 9 + 7 \\times 1 = 97 yen, and this is the greatest integer that can be bought.\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"5 3 50\") == \"50\"\nassert solution
        "num_ids_2": 33,
        "num_ids_4": 1027
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case 1 failed.\"\n\nsolution(input())\n\nassert solution(input()) == \"2\\n\", \"Test case 2 failed.\"\n\nsolution(input())\n\nassert solution(input()) == \"1\\n\", \"Test case 3 failed.\"\n\nsolution(input())\n\nassert solution(input()) == \"1\\n\", \"Test case 4 failed.\"\n\nsolution(input())\n\nassert solution(input()) == \"0\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\\n\"\nassert solution(\"3 100\\n50 100 200\") == \"0\\n\"\nassert solution(\"4 100\\n100 150 200\") == \"2\\n\"\nassert solution(\"4 150\\n150 140 100 200\") == \"2\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 123
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\\n\"\nassert solution(\"5 300\\n200 180 160 220 190\") == \"2\\n\"\nassert solution(\"6 200\\n150 130 120 190 170 140\") == \"0\\n\"\nassert solution(\"7 100\\n150 140 150 140 130 120 110 100\") == \"2\\n\"\nassert solution(\"8 150\\n100 130 120 150 140 130 120 110 100\") == \"0\\n\"\nassert solution(\"9 200\\n100 100 100 100 100 100 100 100 100\") == \"2\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 160
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '3\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'4 150\\n150 140 100 200') == 2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"3 2\\n5 6 1 2\") == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\" # Test 1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"3 1\\n5 4 2 1\") == \"No\"\nassert solution(\"6 3\\n5 4 2 1\") == \"No\"\nassert solution(\"8 3\\n5 4 2 1\") == \"Yes\"\nassert solution(\"7 1\\n5 4 2 1\") == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('1 2\\n1 2 3 4') == 'No'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"Solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n\", \"The expected output is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 2\\n..#\\n###\\n') == '5\\n'\nassert solution('2 3 4\\n..#\\n###\\n') == '2\\n'\nassert solution('2 3 6\\n..#\\n###\\n') == '6\\n'\nassert solution('3 3 6\\n..#\\n###\\n') == '3\\n'\nassert solution('2 3 6\\n..#\\n###\\n') == '6\\n'\nassert solution('2 3 6\\n..#\\n###\\n') == '6\\n'\nassert solution('1 2 3\\n..#\\n###\\n') == '2\\n'\nassert solution('1 2 3\\n..#\\n###\\n') == '2\\n'\nassert solution('1 2 3\\n..#\\n###\\n') == '2\\n'\nassert solution('1 2 3\\n..#\\n###\\n') == '2\\n'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\\n2 3",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"\nassert solution(\"1 2 2\\n..#\\n\") == \"3\\n\"\nassert solution(\"1 2 2\\n..#\\n\") == \"2\\n\"\nassert solution(\"1 2 2\\n..#\\n\") == \"1\\n\"\nassert solution(\"1 2 2\\n..#\\n\") == \"0\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\", solution(stdin)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\nassert solution(\"1999 2000\") == \"0\\n\"\nassert solution(\"3000 3001\") == \"2\\n\"\nassert solution(\"100000 100001\") == \"2\\n\"\nassert solution(\"45000 45001\") == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"100 1000\") == \"0\"\nassert solution(\"1000000 1000000\") == \"1000000\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\"",
        "num_ids_2": 35,
        "num_ids_4": 104
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"\nassert solution(\"1000 2000\") == \"1\\n\"\nassert solution(\"1 1000\") == \"1\\n\"\nassert solution(\"1000 1000\") == \"1\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1000 2000\") == \"0\"\nassert solution(\"2000 1000\") == \"2\"\nassert solution(\"1000 2001\") == \"2\"\nassert solution(\"2001 1000\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"hello\") == \"WA\"\nassert solution(\"aBC\") == \"WA\"\nassert solution(\"abC\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"Abc\") == \"WA\"\nassert solution(\"AbCdEfGh\") == \"WA\"\nassert solution(\"ABCD\") == \"WA\"\nassert solution(\"A\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AtCoder') == 'AC'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abcde\") == \"WA\"\nassert solution(\"Abcdefg\") == \"WA\"\nassert solution(\"Hello, world!\") == \"WA\"\nassert solution(\"Python\") == \"WA\"\nassert solution(\"A\") == \"WA\"\nassert solution(\"A1b2c3\") == \"WA\"\nassert solution(\"aBcDeF\") == \"WA\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AtCoder') == 'AC'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1214\", 4) == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1214') == '2'\nassert solution('12145') == '2'\nassert solution('121456') == '2'\nassert solution('121456789') == '2'\nassert solution('121456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1214\\n4\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1214\\n4') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1214\\n4\") == \"2\", \"The first five characters in the string after 5 \\times 10^{15} days is 12222.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1214\\n4\") == \"2\"\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Expected output: '2', but got: '{}'.\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 2 3 4 1\\n\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"NO\"\nassert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"NO\"\nassert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"NO\"",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 2 3 4 1\\n\") == \"YES\\n\"\nassert solution(\"5\\n5 3 4 1 2\\n\") == \"NO\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 2 3 4 1\\n\") == \"YES\"\nassert solution(\"5\\n5 4 3 2 1\\n\") == \"NO\"\nassert solution(\"5\\n2 3 4 5 1\\n\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"YES\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"NO\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"\nassert solution(\"1\\n3 4 2 5\") == \"NO\\n\"\nassert solution(\"4\\n1 5 2 3\") == \"YES\\n\"\nassert solution(\"10\\n5 2 3 4 1 6 7 8 9\") == \"NO\\n\"\nassert solution(\"1\\n1\") == \"YES\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"YES\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3121\") == \"2\", \"Expected output: 2\"\nassert solution(\"6\") == \"1\", \"Expected output: 1\"\nassert solution(\"10000000000000000000000000000000000\") == \"33\", \"Expected output: 33\"\nassert solution(\"201920181\") == \"4\", \"Expected output: 4\"",
        "num_ids_2": 37,
        "num_ids_4": 115
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nfor i in range(len(input()) - 1):\n    assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\", \"Expected output: '2', but got: '{}'\".format(solution(\"3121\"))\nassert solution(\"6\") == \"1\", \"Expected output: '1', but got: '{}'\".format(solution(\"6\"))\nassert solution(\"10000000000000000000000000000000000\") == \"33\", \"Expected output: '33', but got: '{}'\".format(solution(\"10000000000000000000000000000000000\"))\nassert solution(\"201920181\") == \"4\", \"Expected output: '4', but got: '{}'\".format(solution(\"201920181\"))",
        "num_ids_2": 62,
        "num_ids_4": 204
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 86
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3121) == 2, \"Polycarp likes numbers that are divisible by 3\"\nassert solution(6) == 1, \"Polycarp likes numbers that are divisible by 3\"\nassert solution(100000000000000000000000000000000) == 33, \"Polycarp likes numbers that are divisible by 3\"\nassert solution(201920181) == 4, \"Polycarp likes numbers that are divisible by 3\"",
        "num_ids_2": 51,
        "num_ids_4": 140
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor s in [3121, 6, 100000000000000000000000000000000]:\n    assert max_divisible_3(s) == 2, f\"Test case failed for s={s}\"\nfor s in [201920181]:\n    assert max_divisible_3(s) == 4, f\"Test case failed for s={s}\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter a number: \")) == \"Enter a number: 3121\\n2\"\nassert solution(input(\"Enter a number: \")) == \"Enter a number: 6\\n1\"\nassert solution(input(\"Enter a number: \")) == \"Enter a number: 10000000000000000000000000000000000\\n33\"\nassert solution(input(\"Enter a number: \")) == \"Enter a number: 201920181\\n4\"",
        "num_ids_2": 49,
        "num_ids_4": 138
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"2\\n\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\\n\"",
        "num_ids_2": 178,
        "num_ids_4": 261
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"Output\\n2\\n\"\nassert solution(stdin=\"3\\n13 37 39\\n1 2 3\\n2\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"Output\\n2\\n\"\nassert solution(stdin=\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"Output\\n0\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 114
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n2') == '2\\n'\nassert solution('3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n2') == '2\\n'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n2') == '0\\n'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n\\n2') == '3\\n'",
        "num_ids_2": 184,
        "num_ids_4": 273
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3\\n1 2 -1\\n-6 -12 6') == '3'\nassert solution(stdin='5\\n1 2 3 4 5\\n2 4 7 11 3') == '2'\nassert solution(stdin='3\\n13 37 39\\n1 2 3') == '2'\nassert solution(stdin='4\\n0 0 0 0\\n1 2 3 4') == '0'",
        "num_ids_2": 63,
        "num_ids_4": 122
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\nInput\\n3\\n13 37 39\\n1 2 3\\n\\nInput\\n4\\n0 0 0 0\\n1 2 3 4\\n\\nInput\\n3\\n1 2 -1\\n-6 -12 6') == 'Output\\n2\\n\\nOutput\\n2\\n\\nOutput\\n0\\n'",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"2\"\nassert solution(3) == \"2\"\nassert solution(1) == \"0\"\nassert solution(5) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output\\n2'\nassert solution(open('input2.txt', 'r').read()) == 'Output\\n2'\nassert solution(open('input3.txt', 'r').read()) == 'Output\\n0'\nassert solution(open('input4.txt', 'r').read()) == 'Output\\n3'",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6') == '2'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '2'\nassert solution('4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6') == '0'\nassert solution('3\\n1 2 -1\\n-6 -12 6\\n') == '3'",
        "num_ids_2": 127,
        "num_ids_4": 204
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\ncodeforces\\ndodivthree\\n\") == [\"7\", \"8\"]\nassert solution(\"7\\nabaca?b\\nzabbbcc\\n\") == [\"5\", \"6\", \"5\", \"2\", \"3\", \"4\", \"6\", \"7\", \"1\", \"2\", \"4\", \"9\", \"10\"]\nassert solution(\"9\\nbambarbia\\nhellocode\\n\") == [\"0\"]\nassert solution(\"10\\ncode??????\\n??????test\\n\") == [\"10\", \"6\", \"2\", \"1\", \"6\", \"7\", \"3\", \"3\", \"5\", \"4\", \"8\", \"9\", \"7\", \"5\", \"1\", \"2\", \"4\", \"10\", \"9\", \"8\", \"10\"]",
        "num_ids_2": 86,
        "num_ids_4": 194
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''\n7 8\n4 9\n2 2\n9 10\n3 1\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution provided is incorrect.\\n\\nExpected output: {expected_output}\\n\\nReceived output: {solution}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n\", \"Please implement the solution function.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution '{solution(stdin)}' does not match expected '{expected}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\ncodeforces\\ndodivthree') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1'\nassert solution('7\\nabaca?b\\nzabbbcc') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('9\\nbambarbia\\nhellocode') == '0'\nassert solution('10\\ncode??????\\n??????test') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10'",
        "num_ids_2": 93,
        "num_ids_4": 187
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\ncodeforces\\ndodivthree\\n\\n7\\nabaca?b\\nzabbbcc\\n\\n9\\nbambarbia\\nhellocode\\n\\n10\\ncode??????\\n??????test\\n\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n\"\nassert solution(\"7\\nabaca?b\\nzabbbcc\\n\\n9\\nbambarbia\\nhellocode\\n\\n10\\ncode??????\\n??????test\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n\"\nassert solution(\"9\\nbambarbia\\nhellocode\\n\\n10\\ncode??????\\n??????test\\n\") == \"0\"\nassert solution(\"10\\ncode??????\\n??????test\\n\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n\"",
        "num_ids_2": 178,
        "num_ids_4": 294
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '5'\nassert solution(4) == '7 8'\nassert solution(7) == '5'\nassert solution(9) == '0'\nassert solution(10) == '10'",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n7 7\\n2 3\\n4 5'\nassert solution() == '2\\n3 4\\n1 1'\nassert solution() == '4\\n4 4\\n1 1'\nprint(\"All test cases passed.\")",
        "num_ids_2": 41,
        "num_ids_4": 59
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4 1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"1 2 3 4 5\") == \"4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 80,
        "num_ids_4": 151
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\"",
        "num_ids_2": 85,
        "num_ids_4": 114
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}, Expected {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n7 7\\n2 3\\n4 5'\nassert solution() == '2\\n3 4\\n1 1'\nassert solution() == '4\\n4 4\\n1 1\\n2 2\\n3 3'",
        "num_ids_2": 41,
        "num_ids_4": 69
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''3\n7 7\n2 3\n4 5'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\n\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\\n1\"\n\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\"",
        "num_ids_2": 88,
        "num_ids_4": 122
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}.\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nk = 0\nblocks = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if i!= j and a[i] + a[j] == a[i+1] + a[j+1]:\n            blocks.append((i, j))\n            k += 1\n\nprint(k)\nfor block in blocks:\n    print(*block, end=\" \")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\\n\") == \"7\\n\"\nassert solution(\"4 2\\n2 78 4 10\\n\") == \"12\\n\"\nassert solution(\"5 2\\n3 7 19 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\"\nassert solution() == \"12\"\nassert solution() == \"0\"",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\nassert solution('6 11\\n45 1 10 12 11 7') == '7'",
        "num_ids_2": 48,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7\\n'\nassert solution('4 2\\n2 78 4 10\\n') == '12\\n'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0\\n'",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\"\n\nassert solution() == \"12\"\n\nassert solution() == \"0\"",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7\\n') == '7'\nassert solution('4 2\\n2 78 4 10\\n') == '12'\nassert solution('5 2\\n3 7 19 3 3\\n') == '0'",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\nassert solution(\"5\\n5\\n\") == \"10\\n\"\nassert solution(\"5\\n10\\n\") == \"15\\n\"\nassert solution(\"6\\n1 2 3 4\\n\") == \"9\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\\n\"\nassert solution(\"5\\n10 9 8 7 6\\n\") == \"15\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\\n\", \"The output is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_format=None, output_format=None) == \"9\\n\", \"Test case failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\\n\", \"Test case 1 failed\"\nassert solution(input()) == \"9\\n\", \"Test case 2 failed\"\nassert solution(input()) == \"9\\n\", \"Test case 3 failed\"\nassert solution(input()) == \"9\\n\", \"Test case 4 failed\"\nassert solution(input()) == \"9\\n\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: Expected {output_str}, but got {solution(input_str)} instead.\"\n\ninput_str = \"3\\n2 5\\n\"\noutput_str = \"9\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 5\\n') == '9\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nprint(\"All tests passed!\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"110\"\n\nN, M, Q = map(int, input().split())\nA = list(map(int, input().split()))\n\nscores = [0] * (M - A[0] + 1)\nfor i in range(Q):\n    a, b, c, d = A[i]\n    scores[c - a] += d\n\nmax_score = max(scores)\n\nprint(max_score)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 4 3\n    1 3 3 100\n    1 2 2 10\n\"\"\") == \"110\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\nprint('All test cases passed.')",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"110\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('3 4 1\\n1 2 3 100\\n1 2 3 10\\n2 3 3 10') == '105'\nassert solution('3 4 3\\n1 2 2 100\\n1 2 2 10\\n2 3 2 10') == '110'\nassert solution('3 4 1\\n1 2 3 100\\n1 2 3 10\\n2 3 3 10') == '105'\nassert solution('3 4 2\\n1 3 4 100\\n1 2 4 10\\n2 3 4 10') == '100'",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\n\nassert solution('''\n3 5 1\n1 3 3 100\n2 4 4 10\n3 5 5\n4 5 6\n5 5 7\n6 6 8\n7 7 9\n8 8 10\n''') == '220'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"10\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test Case 1\"\nassert solution(\"4\\n1 -4 6 3\") == \"5\\n\", \"Test Case 2\"\nassert solution(\"4\\n1 4 -6 3\") == \"5\\n\", \"Test Case 3\"\nassert solution(\"4\\n1 4 6 -3\") == \"5\\n\", \"Test Case 4\"\nassert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test Case 5\"\nassert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test Case 6\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"Input error\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\", \"Output not correct.\"\nprint(\"Correct output.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"7\\n\"\nassert solution(\"5\\n-2 0 -3 4 -5\") == \"11\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6\\n\"\nassert solution(\"5\\n1 -2 3 4 5\") == \"11\\n\"\nassert solution(\"7\\n10 8 9 7 9 8 7 8 7\") == \"5\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5\\n', \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4 6 3\") == \"5\\n\", \"Test case 1\"\nassert solution(\"4\") == \"4\\n\", \"Test case 2\"\nassert solution(\"1 2 3 4\") == \"4\\n\", \"Test case 3\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\", \"Test case 4\"\nassert solution(\"1 2 3 4 5 6\") == \"6\\n\", \"Test case 5\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 1\\n1 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 1\\n1 0\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n1 0\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n1 1\") == \"2.2761423749\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.2761423749\\n\", \"Sample Output does not match expected output.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\", \"The output should be 2.2761423749\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 1\\n2 3\\n3 1\\n3 2\\n\") == \"2.2761423749\\n\"\nassert solution(\"5\\n-1 0\\n0 1\\n-1 1\\n-1 2\\n-1 3\\n\") == \"0.000000000000\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 151
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749\\n'\nassert solution('2\\n1\\n3\\n5\\n7\\n') == '2.625\\n'\nassert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749\\n'\nassert solution('2\\n1\\n3\\n5\\n7\\n') == '2.625\\n'\nassert solution('1\\n0\\n\\n\\n\\n') == '1.0\\n'\nassert solution('1\\n0\\n\\n\\n\\n') == '1.0\\n'\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2.2761423749\\n\", \"Test case failed\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.2761423749\"\nassert solution(\"5\\n2 2\\n4 3\\n5 3\\n7 2\") == \"3.1701426012\"\nassert solution(\"4\\n0 0\\n1 0\\n2 0\") == \"1.5\"\nassert solution(\"3\\n0 0\\n1 0\\n2 0\") == \"2.2761423749\"\nassert solution(\"2\\n0 0\\n1 0\") == \"0.6363636364\"",
        "num_ids_2": 77,
        "num_ids_4": 140
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2.2761423749', 'Please provide the correct output.'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 4\") == \"4\", \"The solution should return the total horizontal length of the uncovered parts of the window.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\", \"Test 1 failed\"\nassert solution(\"14 6\") == \"6\", \"Test 2 failed\"\nassert solution(\"16 8\") == \"8\", \"Test 3 failed\"\nassert solution(\"20 12\") == \"12\", \"Test 4 failed\"\nassert solution(\"24 16\") == \"16\", \"Test 5 failed\"\nassert solution(\"28 20\") == \"20\", \"Test 6 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\", \"The output should be 4.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\", \"Test failed: Expected output is 4, but got: {}\".format(solution(\"12 4\"))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"5 6\") == \"0\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"10 8\") == \"8\"\nassert solution(\"10 16\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4', \"Output is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4\nprint(\"Test passed\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(12, 4) == 4, \"Solution does not work for the given constraints\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 4\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"10 3\") == \"7\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"9 5\") == \"12\"\nassert solution(\"6 1\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10000') == '3\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10000') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='10000') == '3\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n2 2 3 4 5\\n1 2 3 4 5\\n2 2 3 4 5') == '1\\n'\nassert solution('2 2\\n3 4\\n1 2 3 4') == '3\\n'\nassert solution('2 4\\n1 2 3 4 5\\n3 2 4 5\\n2 4 4 5') == '0\\n'",
        "num_ids_2": 95,
        "num_ids_4": 166
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nprint(\"1\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n\", \"Test failed.\"\nprint(\"Test passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"2 1\\n1 2\\n3 4\\n5 6\") == \"3\"\nassert solution(\"4 2\\n1 2 3\\n4 1 3\") == \"2\"",
        "num_ids_2": 62,
        "num_ids_4": 88
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'\nassert solution('4 3\\n2 1\\n3 1\\n2 3') == '1\\n'\nassert solution('5 3\\n2 1\\n3 1\\n2 3\\n1 4') == '2\\n'\nassert solution('3 2\\n3 1\\n2 3\\n2 1\\n1 4') == '1\\n'",
        "num_ids_2": 66,
        "num_ids_4": 134
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.5000000000\\n\", \"Error: The given solution is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\\n\", \"Solution does not work for the given input\"\nassert solution(\"1\\n\") == \"1.0000000000\\n\", \"Solution does not work for the given input\"\nassert solution(\"5\\n\") == \"0.0000000000\\n\", \"Solution does not work for the given input\"\nassert solution(\"2\\n\") == \"1.0000000000\\n\", \"Solution does not work for the given input\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 0.5",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == '0.5000000000'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.5000000000\", \"The output is incorrect. Please check the problem statement.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0.5000000000\", \"Error: Incorrect output. Please see the sample output.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == '0.5000000000', 'The code is incorrect.'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'4') == '0.5000000000', \"The output should be 0.5000000000, but it is {}\".format(solution(b'4'))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"0.5000000000\", \"Test case 1 failed\"\n\nassert solution(\"6\") == \"0.4000000000\", \"Test case 2 failed\"\n\nassert solution(\"9\") == \"0.6000000000\", \"Test case 3 failed\"\n\nassert solution(\"10\") == \"0.5000000000\", \"Test case 4 failed\"\n\nassert solution(\"11\") == \"0.5000000000\", \"Test case 5 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 113
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == 0.5000000000\nassert solution(\"10\") == 0.0000000000\nassert solution(\"100\") == 0.0000000000\nassert solution(\"1000\") == 0.0000000000\nassert solution(\"10000\") == 0.0000000000\n\nassert solution(\"1000000000\") == 0.0000000000\nassert solution(\"1000000001\") == 0.0000000000\nassert solution(\"1000000002\") == 0.0000000000\nassert solution(\"1000000003\") == 0.0000000000\nassert solution(\"1000000004\") == 0.0000000000",
        "num_ids_2": 41,
        "num_ids_4": 86
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"4\\n1\\n2 0\\n1\\n1 0\\n1\\n0\") == \"1\"\nassert solution(\"4\\n1\\n2 0\\n1\\n1 0\\n1\\n0\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"4\\n1\\n2 0\\n1\\n1 0\\n1\\n0\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 1\\n1\\n1 1\\n1\\n2 1\\n1\\n1 1\\n1\\n1 1\\n1\\n2",
        "num_ids_2": 66,
        "num_ids_4": 1027
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 0\\n2 1\\n1\\n1 0\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n1\\n1 0\\n2 1\\n1\\n1 0\\n2 0\\n2\\n1\\n1 1\\n2 0\\n1\\n1 0\\n2 1\\n1\\n1 0\\n2 0\\n1\\n\") == \"2\"",
        "num_ids_2": 96,
        "num_ids_4": 203
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nprint(\"pass\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\") == \"1\\n\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\") == \"1\\n\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".lower()\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...\".lower()\nassert solution(\"7\\nnikoandsolstice\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\",
        "num_ids_2": 46,
        "num_ids_4": 1027
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\nnikoandsolstice\\n') == 'nikoand...solstice has a length of 15, which exceeds K=7.\\n'\nprint('All test cases passed successfully!')",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"\nassert solution(\"8\\nabc123\") == \"abc123\"\nassert solution(\"9\\nb\") == \"b\"\nassert solution(\"10\\n\") == \" \"",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...'\nassert solution('10\\nhello') == 'hello'\nassert solution('3\\nabcde') == 'abcde'\nassert solution('2\\n1234') == '1234'\nassert solution('5\\nabcd') == 'abcd'",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice has a length of 15, which exceeds K=7.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...n\"\nassert solution(\"5\\nabcd\") == \"abcd\"\nassert solution(\"10\\nabcd\") == \"abcd\"\nassert solution(\"11\\nabcd\") == \"abcd\"\nassert solution(\"12\\nabcd\") == \"abcd\"",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...nilotestice'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...nikoandsolstice\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\"\nprint(\"All tests passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".strip()\nassert solution(\"3\\nb\") == \"b\"\nassert solution(\"5\\nabcd\") == \"abcd\"\nassert solution(\"3\\nhello\") == \"hello\"\nassert solution(\"10\\n\") == \"\"",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cat\") == \"cats\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"elephant\") == \"elephants\"\nassert solution(\"fox\") == \"foxes\"\nassert solution(\"fox\") == \"foxes\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\", \"Output does not match\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"carrot\") == \"carrots\"\nassert solution(\"chair\") == \"chairs\"\nassert solution(\"dog\") == \"dogs\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherrys\"\nassert solution(\"elderberry\") == \"elderberries\"\nassert solution(\"fig\") == \"figs\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    S = stdin.strip()\n    if len(S) == 1:\n        return S + \"s\"\n    else:\n        return S[:-1] + \"s\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples', 'Output does not match expected output.'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\", \"The solution is incorrect.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"apple\") == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"apple\") == \"apples\", \"Output is incorrect\"\nassert solution(\"banana\") == \"bannas\", \"Output is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\", \"Expected 'apples', got '{}'\".format(solution(\"apple\"))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('cherry') == 'cherrys'\nassert solution('date') == 'dates'\nassert solution('elderberry') == 'elderberries'",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3\\n') == '1\\n'\nassert solution('3 2\\n2\\n3 1\\n1\\n3\\n') == '0\\n'\nassert solution('3 2\\n2\\n3 3\\n1\\n3\\n') == '0\\n'\nassert solution('3 2\\n2\\n3 3\\n3\\n1\\n') == '0\\n'\nassert solution('3 2\\n2\\n3 3\\n1\\n3\\n') == '0\\n'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\", \"Input incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nabbbbaaca\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\naabbbbaaca\") == \"5\", \"The correct number of slimes should be 5.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\naabbbbaaca\") == \"5\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nassert solution(\"5\\naabbbaaca\") == \"1\"\nassert solution(\"10\\nbbbbbbbb\") == \"4\"\nassert solution(\"10\\naabbbaacb\") == \"5\"\nassert solution(\"10\\naabbbaac\") == \"5\"\nassert solution(\"10\\naabbba\") == \"5\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\naabbbaaca') == '5\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nassert solution(\"10\\nbbbbbaaca\") == \"5\"\nassert solution(\"10\\ncddddeeee\") == \"3\"\nassert solution(\"10\\neeeeeeeeeee\") == \"10\"\nassert solution(\"10\\naabbbaaca\\nbbbbbaaca\\ncddddeeee\\neeeeeeeeeee\") == \"10\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\naabbbbaaca') == '5\\n'\n\nThe solution is correct. It takes input N, S, and finds the final number of slimes. It then prints the output.",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\naabbbaaca') == '5'\n\nHere's the code:",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"3\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"20\\n\"\nassert solution(\"5\\n5 4 3 2 1\") == \"3\\n\"\nassert solution(\"3\\n7 6 5 4 3 2\") == \"3\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 134
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"5\\n1 1 2 3 4\") == \"3\\n\"\nassert solution(\"10\\n5 2 3 4 5\") == \"4\\n\"\nassert solution(\"5\\n1 1 2 3 4\") == \"3\\n\"\nassert solution(\"3\\n5 2 4\") == \"3\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 89
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3', \"Test case 1 failed\"\n\ninput_string = input()\nN = int(input_string.strip())\na = list(map(int, input_string.strip().split()))",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"3\\n5 5 5\") == \"3\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"3\\n2 3 1\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"0\"\nassert solution(\"3\\n5 2 1\") == \"3\"\nassert solution(\"3\\n5 3 2\") == \"3\"\nassert solution(\"3\\n5 4 3\") == \"3\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"1\\n2 3 4\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"10\\n\"\nassert solution(\"10\\n3 2 1 4\") == \"0\\n\"\nassert solution(\"10\\n1 2 3 4\") == \"5\\n\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10\") == \"100\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 85
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('10\\n1 2 3 4 5') == '3'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('2\\n1 2 3 4 5') == '2'\nassert solution('6\\n1 2 3 4 5') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10 11') == '6'\n",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"4\\n\"\nassert solution(\"5\\n10 1 2 3 4 5 6 7 8 9 10\") == \"5\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3') == '2\\n', \"Expected output '2\\n', but got '{}' instead.\".format(solution('2 1 1 3'))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 1 2\") == \"1\"\nassert solution(\"2 1 1 0\") == \"3\"\nassert solution(\"2 0 1 3\") == \"3\"\nassert solution(\"2 1 1 1\") == \"4\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output. Please check the sample input and solution.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"5 2 -1 1\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 4\") == \"No\"\nassert solution(\"3 5\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 5\") == \"No\"\nassert solution(\"10 10\") == \"No\"\nassert solution(\"2 0\") == \"No\"\nassert solution(\"1 0\") == \"No\"\nassert solution(\"0 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"5 6\") == \"Yes\"\nassert solution(\"7 4\") == \"Yes\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\", \"Test case failed\"\nassert solution(\"10 10\") == \"No\\n\", \"Test case failed\"\nassert solution(\"10 20\") == \"No\\n\", \"Test case failed\"\nassert solution(\"1 2\") == \"No\\n\", \"Test case failed\"\nassert solution(\"3 10\") == \"No\\n\", \"Test case failed\"\nassert solution(\"100 100\") == \"Yes\\n\", \"Test case failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\" # correct if there are two cranes and one turtle\nassert solution(\"2 4\") == \"No\" # no combination of cranes and turtles\nassert solution(\"3 5\") == \"No\" # no combination of cranes and turtles",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 10\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"3 4\") == \"Yes\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 9\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 1\\n4 2\") == \"3\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 1\\n3 4\") == \"4\"\nassert solution(\"4 4\\n1 2\\n2 3\\n3 1\\n4 2\") == \"3\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 2\\n5 3\") == \"4\"\nassert solution(\"6 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 3\\n6 4\") == \"5\"",
        "num_ids_2": 59,
        "num_ids_4": 123
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3) == 2",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nprint(\"Test Passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example.in').read()) == '2'\nprint(\"All test cases passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\n\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 1\\n2 2\") == \"4\"\n\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n1 1\\n2 2\\n1 2\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 106
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'\nassert solution(open('input2.txt', 'r').read()) == '2'\nassert solution(open('input3.txt', 'r').read()) == '2'\nassert solution(open('input4.txt', 'r').read()) == '2'\nassert solution(open('input5.txt', 'r').read()) == '2'",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nprint(\"Test passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"7 3\") == \"18\"\nassert solution(\"3 1\") == \"12\"\nassert solution(\"5 5\") == \"36\"\nassert solution(\"5 -3\") == \"36\"\nassert solution(\"10 2\") == \"24\"\nassert solution(\"1 3\") == \"6\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"2 -3\") == \"36\"\nassert solution(\"3 2\") == \"18\"\nassert solution(\"4 1\") == \"12\"\nassert solution(\"10 4\") == \"36\"\nassert solution(\"8 3\") == \"12\"\nassert solution(\"10 3\") == \"36\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"18\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2') == '18', \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"18\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"18\", \"Your solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15\") == \"60\", \"The first 15 terms of the FizzBuzz sequence are:\\n1,2,\\n4,\\n7,\\n8,\\n11,\\n13,\\n14,\\nFizzBuzz\\nAmong them, numbers are 1,2,4,7,8,11,13,14, and the sum of them is 60.\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"15\"\nassert solution(\"7\") == \"18\"\nassert solution(\"3\") == \"15\"\nassert solution(\"6\") == \"30\"\nassert solution(\"10\") == \"55\"\nassert solution(\"14\") == \"80\"\nassert solution(\"8\") == \"45\"\nassert solution(\"12\") == \"60\"\nassert solution(\"9\") == \"35\"\nassert solution(\"4\") == \"20\"\nassert solution(\"16\") == \"50\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(15) == '60'\nprint('All test cases passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(15) == \"60\"\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"15\") == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(15) == 60, \"The sum of all numbers among the first 15 terms of the FizzBuzz sequence is not correct.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15\") == \"60\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"15\") == \"60\", \"Your solution is incorrect. Please check the given test case.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15) == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"15\") == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='6 5\\n4 7 10 6 5') == '8\\n'\nassert solution(stdin='6 5\\n4 7 10 6 5') == '8\\n'\nassert solution(stdin='6 5\\n4 7 10 6 5') == '8\\n'\nassert solution(stdin='6 5\\n4 7 10 6 5') == '8\\n'\nassert solution(stdin='6 5\\n4 7 10 6 5') == '8\\n'",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\"\nassert solution(\"1 2\\n3 4 5\\n\") == \"2\"\nassert solution(\"2 3\\n2 4 5\\n\") == \"4\"\nassert solution(\"100 100\\n1 2 3 4 5\\n\") == \"100\"\nassert solution(\"100 100\\n1 2 3 4 5 6\\n\") == \"1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n6 7 8 9 10\") == \"10\\n\"\nassert solution(\"3 4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n6 7 8 9 10\") == \"10\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"10\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 126
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"10 10\\n5 3\") == \"1\"\nassert solution(\"3 4\\n6 1\") == \"1\"\nassert solution(\"2 3\\n4 5\") == \"0\"\nassert solution(\"10 10\\n5 5\") == \"0\"\nassert solution(\"10 10\\n5 5\\n2 2\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n', 'Test failed'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"\nassert solution(\"3 3\\n3 2\\n3 1\") == \"2\\n\"\nassert solution(\"3 3\\n3 2\\n3 1\\n3 4\\n2 2\") == \"3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 77
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n2 1') == '1'\nassert solution('5 4\\n1 2') == '0'\nassert solution('6 7\\n3 4') == '2'\nassert solution('1 1\\n1 1') == '1'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"3 1\\n1 2\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"3 3\\n2 2\") == \"2\"\nassert solution(\"2 2\\n3 3\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"4 5\\n3 4\\n\") == \"2\"\nassert solution(\"6 7\\n5 6\\n\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\nassert solution(\"3 3\\n3 2\") == \"0\"\nassert solution(\"4 2\\n2 1\\n2 3\") == \"2\"\nassert solution(\"2 3\\n3 1\\n3 4\\n1 2\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 83
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6\\n'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"7 4\n3 7 5 1 10 3 20\"\"\") == \"6\"\nassert solution(\"\"\"7 2\n3 7 5 1 10 3 20\"\"\") == \"-1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\nassert solution(\"7 3\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"8 4\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\nassert solution(\"6 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"10 3\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"6 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\nassert solution(\"5 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 3\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\", \"Expected 6, got: {}\".format(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\"\nassert solution(\"\") == \"-1\"",
        "num_ids_2": 113,
        "num_ids_4": 171
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n..... \\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 170
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution failed. Expected: {output()}, Received: {solution(input())}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****. \\n.**** \\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n\") == \"-1\"\nprint(\"All test cases pass\")",
        "num_ids_2": 102,
        "num_ids_4": 160
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\"\"\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\"\n\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\"\"\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\"\"\") == \"-1\"\n\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\"\"\") == \"-1\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.**** \\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n..... \\n\") == \"-1\"\nassert solution(\"3 3\\n*.* \\n.*. \\n*.* \\n\") == \"-1\"\nassert solution(\"6 8\\n....*... \\n...**... \\n..*****. \\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 167
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '3\\n3 4 1\\n3 5 2\\n3 5 1'\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '3\\n2 2 1\\n3 3 1\\n3 4 1'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '-1'\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"-1\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 206,
        "num_ids_4": 238
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def solution(stdin: str) -> str:\\npass'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('good') == 0\nassert solution('aabc') == 2\nassert solution('aaa') == 3",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('good') == 0\nassert solution('aabc') == 2\nassert solution('aaa') == 3\nassert solution('') == ''",
        "num_ids_2": 19,
        "num_ids_4": 34
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def solution(stdin: str) -> str: pass'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"good\") == 0\nassert solution(\"aabc\") == 2\nassert solution(\"aaa\") == 3",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == 'YES\\n10100'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n10100\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 2') == 'NO'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'",
        "num_ids_2": 81,
        "num_ids_4": 169
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES\\n10100'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n10100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n10100\"\nassert solution() == \"NO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n10100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n0100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n0100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n7 8\") == \"NO\"",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n10100\"\nprint(\"NO\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed\" for test_case in range(1, 6)",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('') == '0\\n'\nassert solution('3 5\\n2 2\\n1 2\\n5 5\\n1 2\\n5 5\\n') == '2\\n3 4\\n'",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 5\n2 2\n1 2\n5 5\n\"\"\") == \"2\\n3 4\"\n\nassert solution(\"\"\"\n1 7\n1 7\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 5\n2 2\n1 2\n\"\"\") == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n3 4\\n0\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n0\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4 \\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"2\\n3 4\\n3 2\\n5 5\\n3 5\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n5 and 7 satisfy the condition.\\n\", \"Test case 1 failed.\"\nassert solution(input()) == \"2\\n\", \"Test case 2 failed.\"\nassert solution(input()) == \"2\\n\", \"Test case 3 failed.\"\nassert solution(input()) == \"2\\n\", \"Test case 4 failed.\"\nassert solution(input()) == \"2\\n\", \"Test case 5 failed.\"\nassert solution(input()) == \"2\\n\", \"Test case 6 failed.\"\nassert solution(input()) == \"2\\n\", \"Test case 7 failed.\"",
        "num_ids_2": 47,
        "num_ids_4": 85
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"8 4 1 3\") == \"5\\n\"\nassert solution(\"6 1 3 9\") == \"2\\n\"\nassert solution(\"3 5 6 9\") == \"1\\n\"\nassert solution(\"2 4 6 8\") == \"3\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 9 2 3\") == \"2\", \"Test Case 1\"\nassert solution(\"5 7 11 13\") == \"5 and 7 satisfy the condition\", \"Test Case 2\"\nassert solution(\"2 4 6 8\") == \"2\", \"Test Case 3\"\nassert solution(\"1 5 10 15\") == \"10\", \"Test Case 4\"\nassert solution(\"1000000000 9999999999 9999999999 9999999999\") == \"1000000000 and 1000000000 satisfy the condition\", \"Test Case 5\"",
        "num_ids_2": 52,
        "num_ids_4": 99
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\", \"The expected output is not correct\"\nassert solution(\"1 1 1 1\") == \"1\", \"The expected output is not correct\"\nassert solution(\"1 1 1 3\") == \"2\", \"The expected output is not correct\"\nassert solution(\"1 1 1 9\") == \"5\", \"The expected output is not correct\"\nassert solution(\"1 1 1 0\") == \"0\", \"The expected output is not correct\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"5 7 1 3\") == \"5 and 7 satisfy the condition.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Test case failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 9 2 3\") == \"2\", \"The given input is invalid.\"\nassert solution(\"6 2 8 3\") == \"2\", \"The given input is invalid.\"\nassert solution(\"1 1 1 1\") == \"2\", \"The given input is invalid.\"\nassert solution(\"1 1 1 1 1\") == \"3\", \"The given input is invalid.\"\nassert solution(\"1 1 1 1 1 1\") == \"4\", \"The given input is invalid.\"\n",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"\nprint(\"Test passed\")\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"\nassert solution(\"1234567\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12\") == \"No\"\nassert solution(\"1\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123456789\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"Yes\"\nassert solution(stdin=\"123456789\") == \"Yes\"\nassert solution(stdin=\"12345678\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 51
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes', 'Output should be \"Yes\".'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"Test 1\"\nassert solution(\"987654321\") == \"No\", \"Test 2\"\nassert solution(\"500000000\") == \"Yes\", \"Test 3\"\nassert solution(\"356948172\") == \"No\", \"Test 4\"\nassert solution(\"5000000000\") == \"No\", \"Test 5\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(12345678) == \"No\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(123456780) == \"No\"\nassert solution(123456790) == \"Yes\"\nassert solution(123456788) == \"No\"\nassert solution(123456789) == \"Yes\"\nassert solution(123456781) == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\\n\"\nassert solution(\"1234567810\") == \"No\\n\"\nassert solution(\"12345678\") == \"Yes\\n\"\nassert solution(\"1234567879\") == \"No\\n\"\nassert solution(\"1234567890\") == \"Yes\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n\nHere's the code to test the correctness of the solution:\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"127\") == \"4\", \"The given input is not correct. Please provide the correct input.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\", \"Your solution is incorrect. Please check the given constraints and sample inputs.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"4\"\nassert solution(stdin=\"1\") == \"1\"\nassert solution(stdin=\"0\") == \"1\"\nassert solution(stdin=\"100001\") == \"4\"\nassert solution(stdin=\"123456\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\", \"The correct output should be Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"kyoto\\ntokyo\") == \"Yes\"\nassert solution(stdin=\"hello\\nworld\") == \"No\"\nassert solution(stdin=\"hello\\nworld\\nhello\\nworld\") == \"No\"\nassert solution(stdin=\"apple\\nbannana\\nbanana\\napple\") == \"Yes\"",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\", \"Test case 1\"\nassert solution(\"tokyo\") == \"Yes\", \"Test case 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\") == \"Yes\", \"Incorrect output for kyoto\"\nassert solution(\"tokyo\") == \"No\", \"Incorrect output for tokyo\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\", \"The output should be 'Yes', but it's actually '\"+solution(\"kyoto\")+\"'.\"\nassert solution(\"tokyo\") == \"No\", \"The output should be 'No', but it's actually '\"+solution(\"tokyo\")+\"'.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'No'\nassert solution('tokyo') == 'Yes'\nassert solution('hello') == 'No'\nassert solution('') == 'No'\nassert solution('world') == 'No'\nassert solution('abc') == 'Yes'",
        "num_ids_2": 23,
        "num_ids_4": 41
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\") == \"1\"\n\nassert solution(\"abc\") == \"1\"\n\nassert solution(\"aabbc\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '1'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
        "num_ids_2": 21,
        "num_ids_4": 1027
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"2\"\nassert solution(\"xxy\") == \"1\"\nassert solution(\"xyxxxy\") == \"2\"\nassert solution(\"yxxxy\") == \"1\"\nassert solution(\"zxxxyy\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cabacc\\nabc\") == \"1\\n\"\nassert solution(\"hello\\nworld\") == \"2\\n\"\nassert solution(\"abc\\ndef\") == \"0\\n\"\nassert solution(\"aaa\") == \"0\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\\nabc\") == \"1\\n\"\nassert solution(\"aba\\nb\") == \"0\\n\"\nassert solution(\"hello\\nworld\") == \"2\\n\"\nassert solution(\"abcde\\nfghij\") == \"1\\n\"\nassert solution(\"abcde\\nfgij\") == \"0\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abbc\") == \"3\"\nassert solution(\"aabb\") == \"2\"\nassert solution(\"xyy\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"cabaccabc\") == \"1\\n\"\nassert solution(\"abc\") == \"1\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cabacc\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"Test case 1\"\nassert solution(\"5 5 1\") == \"1\\n\", \"Test case 2\"\nassert solution(\"10 100 1\") == \"100\\n\", \"Test case 3\"\nassert solution(\"8 12 2\") == \"2\\n\", \"Test case 4\"\nassert solution(\"10 100 1\") == \"100\\n\", \"Test case 5\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"10 20 3\") == \"4\"\nassert solution(\"100 100 100\") == \"100\"\nassert solution(\"0 10 0\") == \"1\"\nassert solution(\"-5 -3 4\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 68
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"10 20 5\") == \"5\"\nassert solution(\"8 1000 1\") == \"8\"\nassert solution(\"5 100 2\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"4 12 2\") == \"1\"\nassert solution(\"8 100 2\") == \"4\"\nassert solution(\"1000 1000 3\") == \"1000\"\nassert solution(\"4 1000 3\") == \"1000\"",
        "num_ids_2": 30,
        "num_ids_4": 69
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output. Please check the given input and try again.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"Sample Input should output 2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"The expected output is not present.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1024\") == \"2020\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect Output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 4') == '5\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"\nassert solution(\"3\\n1 4\\n2 7\\n3 10\") == \"5\\n\"\nassert solution(\"4\\n1 3\\n2 7\\n3 9\\n4 12\") == \"5\\n\"\nassert solution(\"5\\n1 2\\n2 6\\n3 7\\n4 8\\n5 11\") == \"6\\n\"\nassert solution(\"6\\n1 1\\n2 5\\n3 6\\n4 7\\n5 8\\n6 10\\n7 11\\n8 12\") == \"5\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 116
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"\nassert solution(\"5\\n1 2\\n3 5\") == \"12\\n\"\nassert solution(\"7\\n1 3\\n5 6\\n8 9\\n10 11\\n\") == \"225\\n\"\nassert solution(\"100\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n\") == \"28704\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 690
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(\"Test Passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4 10\\n\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\n\nimport math",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nassert solution(input()) == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 10') == '3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n'\nprint(solution('4 10'))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2', 'The forecast for the first day was not correct.'\nassert solution('CSR') == '2', 'The forecast for the second day was not correct.'\nassert solution('CSSR') == '2', 'The forecast for the third day was not correct.'",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"SCSS\") == \"2\"\nassert solution(\"SCSR\") == \"2\"\nassert solution(\"SCSSSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"\nassert solution(\"SST\") == \"0\\n\"\nassert solution(\"CST\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"1\"\nassert solution(\"SSD\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CSS\") == \"2\", \"Test 1: Correct output\"\nassert solution(\"CSR\") == \"1\", \"Test 2: Correct output\"\nassert solution(\"CSSRR\") == \"2\", \"Test 3: Incorrect output\"\nassert solution(\"CSRCS\") == \"2\", \"Test 4: Incorrect output\"\nassert solution(\"CS\") == \"0\", \"Test 5: Correct output\"",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 2 4 3 5\") == \"2\"\nassert solution(\"5\\n1 2 3 5 4\") == \"0\"\nassert solution(\"5\\n1 2 3 5 6\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2\\n'\nassert solution('1\\n1\\n') == '1\\n'\nassert solution('5\\n2 3 4 5 1\\n') == '2\\n'\nassert solution('3\\n1 2 3\\n') == '2\\n'\nassert solution('1\\n5 4 3 2\\n') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n1 3 2 4 5\") == \"3\\n\"\nassert solution(\"5\\n1 3 5 4 6\") == \"0\\n\"\nassert solution(\"5\\n1 3 2 4 5\") == \"3\\n\"\nassert solution(\"5\\n1 4 2 5 3\") == \"2\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Solution should return the number of elements p_i (1 < i < n) that satisfy the condition.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"5\\n2 3 5 4 1\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"5\\n6 3 5 4 2\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5 6\") == \"0\\n\"\nassert solution(\"5\\n7 4 1 3 6 5\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2\\n'\nassert solution('5\\n1 2 3 4 5') == '1\\n'\nassert solution('5\\n5 4 3 2 1') == '0\\n'\nassert solution('5\\n1 1 1 1 1') == '2\\n'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nassert solution(\"10\\n2 4 6 8 10\") == \"0\\n\"\nassert solution(\"10\\n3 5 7 9 11\") == \"4\\n\"\nassert solution(\"10\\n6 8 10 12 14\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\\n\", \"Test case 1 failed\"\nassert solution(\"Input\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\", \"Test case 2 failed\"\nassert solution(\"Input\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\\n\", \"Test case 3 failed\"\nassert solution(\"Input\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\\n\", \"Test case 4 failed\"\nassert solution(\"Input\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\", \"Test case 5 failed\"\nassert solution(\"Input\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\\n\", \"Test case 6 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 207,
        "num_ids_4": 411
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\"",
        "num_ids_2": 183,
        "num_ids_4": 351
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\"",
        "num_ids_2": 181,
        "num_ids_4": 349
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\n\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\n\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\n\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\"\"\") == \"6.720\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\n\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\n\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\n\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\"\"\") == \"6.720\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\\nInput\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '5.410\\n\\n6.040\\n\\n6.720'\nassert solution('Input\\n5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\\nInput\\n8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\\nInput\\n5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\\nInput\\n8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\\nInput\\n7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '5.620\\n\\n6.040\\n\\n6.720'",
        "num_ids_2": 1008,
        "num_ids_4": 1008
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\\n\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\\n\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 359
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == 5.410\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == 5.620\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == 5.480\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == 6.040\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == 6.040\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == 6.720",
        "num_ids_2": 179,
        "num_ids_4": 357
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.410\", \"Your implementation is wrong!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == 4\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == 2\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == 1\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == 2\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == -1",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 4, \"Expected 4, got {}\".format(solution(5))\nassert solution(7) == 2, \"Expected 2, got {}\".format(solution(7))\nassert solution(5) == 1, \"Expected 1, got {}\".format(solution(5))\nassert solution(5) == 2, \"Expected 2, got {}\".format(solution(5))\nassert solution(5) == -1, \"Expected -1, got {}\".format(solution(5))",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == 4\nassert solution('7 10\\n1 3 4 2 1 4 2') == 2\nassert solution('5 15\\n5 5 5 5 5') == 1\nassert solution('5 16\\n5 5 5 5 5') == 2\nassert solution('5 26\\n5 5 5 5 5') == -1",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n2\\n1\\n-1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 15\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 192,
        "num_ids_4": 320
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example1.txt', 'r')) == '4'\nassert solution(open('example2.txt', 'r')) == '2'\nassert solution(open('example3.txt', 'r')) == '1'\nassert solution(open('example4.txt', 'r')) == '-1'\nassert solution(open('example5.txt', 'r')) == '-1'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == ",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'",
        "num_ids_2": 15,
        "num_ids_4": 23
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == \"1 2 3\\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == \"7 3 1 3\\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == \"1 1\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 125
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3 \\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3 \\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n') == '1 1 \\n'",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"7 3\n1 2 3 2 4 3 1\n\"\"\") == \"1 2 3\"\nassert solution(\"\"\"10 4\n1 3 1 3 10 3 7 7 12 3\n\"\"\") == \"7 3 1 3\"\nassert solution(\"\"\"15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n\"\"\") == \"1 1\"",
        "num_ids_2": 15,
        "num_ids_4": 23
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3, 2, 4, 3, 1]) == \"1 2 3\"\nassert solution([10, 4]) == \"7 3 1 3\"\nassert solution([15, 2]) == \"1 1 1 1 1 1 1 1\"",
        "num_ids_2": 52,
        "num_ids_4": 80
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 2 4 3 1\\n7 3\\n1 3\\n10 4\\n15 2\\n1 2 1 1 1 2 1 1 1 1\\n1 1\\n\") == \"1 2 3 7 3\\n1 3\\n1 3\\n1 3\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n\\n10 4\\n1 3 1 3 10 3 7 7 12 3\\n\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\\n') == '1 2 3\\n7 3 1 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\\n') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\\n') == '1 1\\n'",
        "num_ids_2": 203,
        "num_ids_4": 255
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\\n\") == \"1 2 3 \\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"7 3 1 3 \\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\") == \"1 1 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"[1, 2, 3, 2, 4, 3, 1]\") == \"1 2 3\"\nassert solution(\"[1, 3, 2, 4]\") == \"1 3 2 4\"\nassert solution(\"[1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1]\") == \"1 1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 106
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 98
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 98
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution() == \"5\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6') == 1\nassert solution('5') == 0\nassert solution('10') == 8",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 11):\n    assert solution(f\"Input{i}\") == f\"Output{i}\"\nprint(f\"All test cases passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nxiii\\n\") == \"1\"\nassert solution(\"5\\nxxoxx\\n\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\\n\") == \"8\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nxiii\\n\") == \"1\\n\"\nassert solution(\"5\\nxoxx\\n\") == \"0\\n\"\nassert solution(\"10\\nxxxxxxxxxxx\\n\") == \"8\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6\\nxiii') == '1'\nassert solution(stdin='5\\nxoxx') == '0'\nassert solution(stdin='10\\nxxxxxxxxxx') == '8'",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\nxiii') == '1', \"The minimum number of characters to remove from the file name so after that the name does not contain 'xxx' as a substring is 1, not 0.\"\n\nassert solution('5\\nxoxx') == '0', \"The minimum number of characters to remove from the file name so after that the name does not contain 'xxx' as a substring is 0, not 8.\"\n\nassert solution('10\\nxxxxxxxxxxx') == '8', \"The minimum number of characters to remove from the file name so after that the name does not contain 'xxx' as a substring is 8, not 1.\"\n\nassert solution('6\\nxiii') == '1', \"The minimum number of characters to remove from the file name so after that the name does not contain 'xxx' as a substring is 1, not 0.\"\n\nassert solution('5\\nxoxx') == '0', \"The minimum number of characters to remove from the file name so after that the name does not contain 'xxx' as a substring is 0, not 8.\"\n\nassert solution('10\\nxxxxxxxxxxx') == '8', \"The minimum number of characters to remove from the file name so after that the name does not contain 'xxx' as a substring is 8, not 1.\"",
        "num_ids_2": 95,
        "num_ids_4": 191
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxoxx\") == \"0\"\nassert solution(\"10\\xxxxxxxxxx\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, \"xxxiii\") == \"1\"\nassert solution(5, \"xxoxx\") == \"0\"\nassert solution(10, \"xxxxxxxxxx\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n\") == \"48\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"48\"\nprint(\"All tests passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"48\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"48\", \"Your solution is incorrect.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '48\\n', \"The area of the regular dodecagon inscribed in a circle of radius 4 is 3 \\times 4^2 = 48. The function should return 48, but it returned {}\".format(solution(stdin))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 48",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"5\") == \"520\"\nassert solution(\"6\") == \"6480\"\nassert solution(\"7\") == \"79040\"\nassert solution(\"8\") == \"1040800\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"safe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"\nassert solution(\"2 5\") == \"safe\\n\"\nassert solution(\"1 5\") == \"safe\\n\"\nassert solution(\"2 1\") == \"safe\\n\"\nassert solution(\"4 2\") == \"safe\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"The solution does not work.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '6\\n', \"The solution should output 6.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '6\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\\n\", \"The solution is incorrect.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3 4 5') == '6'\nassert solution(stdin='5 10 5') == '25'\nassert solution(stdin='3 7 8') == '64'\nassert solution(stdin='2 7 4') == '18'\nassert solution(stdin='10 20 30') == '214'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Incorrect output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Takahashi likes the sound when he buys a drink from a vending machine. That sound can be heard by spending A yen (the currency of Japan) each time. Takahashi has B yen. He will hear the sound as many times as he can with that money, but at most C times, as he would be satisfied at that time. How many times will he hear the sound?\"\n\nThe sample input is valid and passes the test cases. However, it is not very readable and may not be very efficient for large inputs. A better approach would be to use a loop to calculate the number of times Takahashi will hear the sound. Here's one way to implement it:",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'\nprint('All tests passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4', \"Input must be two integers separated by space\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 1 1\") == \"1\"\nassert solution(\"5 5 1\") == \"1\"\nassert solution(\"1 1 3\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"The solution is incorrect.\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Sample Output is incorrect.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '10'\nprint('All test cases passed.')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nprint(\"All tests passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2 5\\n') == '10'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"\n\nHere, we have defined a function called `solution` that takes the input from the standard input. We have used the `assert` statement to check if the function returns the correct output.\n\nThe function computes `A \\times B` and prints the result. We have given the input values `2 5` as the sample input. The function returns the output as `\"10\"`, which is the correct output.",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\", \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\", \"Invalid input format\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Test Case 1 Failed.\"\n\nprint(\"Test Case 1 Passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 5, 7) == '10', 'Invalid output'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Incorrect output for input (3, 5, 7)\"\nprint(\"All tests passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5, 7) == \"10\" # Test 1",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '10', 'Your code is not correct.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"5 10 15\") == \"15\"\nassert solution(\"10 10 10\") == \"15\"\nassert solution(\"1 1 1\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 64
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '10'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"2 3 5\") == \"15\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"4 10 3\") == \"16\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"OK\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"OK\" #Correct answer\nassert solution(input()) == \"NG\" #Incorrect answer",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"3\\n100 200\") == \"NG\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'7\\n500 600') == 'OK'\nassert solution(b'4\\n30 45') == 'NG'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"1\\n5 500 600\") == \"NG\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'OK'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"5\\n100 200\") == \"NG\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"8\\n500 600\") == \"OK\\n\"\nassert solution(\"9\\n500 600\") == \"OK\\n\"\nassert solution(\"10\\n500 600\") == \"NG\\n\"\nassert solution(\"11\\n500 600\") == \"NG\\n\"\nassert solution(\"12\\n500 600\") == \"NG\\n\"\nassert solution(\"13\\n500 600\") == \"NG\\n\"\nassert solution(\"14\\n500 600\") == \"NG\\n\"\nassert solution(\"15\\n500 600\") == \"NG\\n\"\nassert solution(\"16\\n500 600\") == \"NG\\n\"\nassert solution(\"17\\n500 600\") == \"NG\\n\"\nassert solution(\"18\\n500 600\") == \"NG\\n\"\nassert solution(\"19\\n500 600\") == \"NG\\n\"\nassert solution(\"20\\n500 600\") == \"NG\\n\"\nassert solution(\"21\\n500 600\") == \"NG\\n\"\nassert solution(\"22\\n500 600\") == \"NG\\n\"\nassert solution(\"23\\n500 600\") == \"NG\\n\"\nassert solution(\"24\\n500 600\") == \"NG\\n\"\nassert solution(\"25\\n500 600\") == \"NG\\n\"\nassert solution(\"26\\n500 600\") == \"NG\\n\"\nassert solution(\"27\\n500 600\") == \"NG\\n\"\nassert solution(\"28\\n500 600\") == \"NG\\n\"\nassert solution(\"29\\n500 600\") == \"NG\\n\"\nassert solution(\"30\\n500 600\") == \"NG\\n\"\nassert solution(\"31\\n500 600\") == \"NG\\n\"\nassert solution(\"32\\n500 600\") == \"NG\\n\"\nassert solution(\"33\\n500 600\") == \"NG\\n\"\nassert solution(\"34\\n500 600\") == \"NG\\n\"\nassert solution(\"35\\n500 600\") == \"NG\\n\"\nassert solution(\"36\\n500 600\") == \"NG\\n\"\nassert solution(\"37\\n500 600\") == \"NG\\n\"\nassert solution(\"38\\n500 600\") == \"NG\\n\"\nassert solution(\"39\\n500 600\") == \"NG\\n\"\nassert solution(\"40\\n500 600\") == \"NG\\n\"\nassert solution(\"41\\n500 600\") == \"NG\\n\"\nassert solution(\"42\\n500 600\") == \"NG\\n\"\nassert solution(\"43\\n500 600\") == \"NG\\n\"\nassert solution(\"44\\n500 600\") == \"NG\\n\"\nassert solution(\"45\\n500 600\") == \"NG\\n\"\nassert solution(\"46\\n500 600\") == \"NG\\n\"\nassert solution(\"47\\n500 600\") == \"NG\\n\"\nassert solution(\"48\\n500 600\") == \"NG\\n\"\nassert solution(\"49\\n500 600\") == \"NG\\n\"\nassert solution(\"50\\n500 600\") == \"NG\\n\"\nassert solution(\"51\\n500 600\") == \"NG\\n\"\nassert solution(\"52\\n500 600\") == \"NG\\n\"\nassert solution(\"53\\n500 600\") == \"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"1\\n2 3\") == \"OK\\n\"\nassert solution(\"2\\n100 200\") == \"NG\\n\"\nassert solution(\"10\\n100 150\") == \"NG\\n\"\nassert solution(\"5\\n100 200\") == \"OK\\n\"\nassert solution(\"10\\n100 150\") == \"NG\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"1 1\") == \"0.0\"\nassert solution(\"10 1\") == \"3.162277660168379e-16\"\nassert solution(\"100 1\") == \"9.999999999999999e-15\"\nassert solution(\"1000 1\") == \"9.999999999999999e-14\"",
        "num_ids_2": 37,
        "num_ids_4": 104
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"Test case 1 failed\"\n\nassert solution(\"10 5\") == \"5.0\", \"Test case 2 failed\"\n\nassert solution(\"6 2\") == \"4.0\", \"Test case 3 failed\"\n\nassert solution(\"7 3\") == \"1.0\", \"Test case 4 failed\"\n\nassert solution(\"8 3\") == \"2.6666666667\", \"Test case 5 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\\n\", \"The output should be equal to '2.6666666667\\n', but it is equal to '{}'\".format(solution(\"8 3\"))\nassert abs(solution(\"8 3\") - 2.6666666667) <= 1e-3, \"The output should be equal to '2.6666666667\\n', but it is equal to '{}'\".format(solution(\"8 3\"))\nprint(\"All test cases passed\")",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"The output should be 2.6666666667.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\\n\", \"Test case 1 failed.\"\nassert solution(\"10 3\") == \"5.0\\n\", \"Test case 2 failed.\"\nassert solution(\"15 2\") == \"6.25\\n\", \"Test case 3 failed.\"\nassert solution(\"20 5\") == \"7.0\\n\", \"Test case 4 failed.\"\nassert solution(\"25 10\") == \"7.75\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 56,
        "num_ids_4": 105
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nprint(\"Test Passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 3') == '2.6666666667', \"The output should be 2.6666666667, but it is %s\" % solution('8 3')\nassert solution('4 6') == '0.5', \"The output should be 0.5, but it is %s\" % solution('4 6')\nassert solution('8 2') == '3.3333333333', \"The output should be 3.3333333333, but it is %s\" % solution('8 2')\nassert solution('1 1') == '0', \"The output should be 0, but it is %s\" % solution('1 1')",
        "num_ids_2": 92,
        "num_ids_4": 180
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"5 1\") == \"3.3333333333\"\nassert solution(\"7 2\") == \"4.0000000000\"\nassert solution(\"9 3\") == \"4.6666666667\"\nassert solution(\"10 4\") == \"5.3333333333\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4 3\") == \"1\", \"Test case 1 failed.\"\nassert solution(\"10 5 6\") == \"1\", \"Test case 2 failed.\"\nassert solution(\"5 1000 1\") == \"5\", \"Test case 3 failed.\"\nassert solution(\"1 1000 1\") == \"0\", \"Test case 4 failed.\"\nassert solution(\"1 1000 1000\") == \"1000\", \"Test case 5 failed.\"",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4 3\") == \"1\", \"Test case 1 failed.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"10 5 1\") == \"0\"\nassert solution(\"5 10 10\") == \"0\"\nassert solution(\"20 10 20\") == \"0\"\nassert solution(\"20 10 1\") == \"1\"\nassert solution(\"20 20 20\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 4 3') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"6 10 3\") == \"2\"\nassert solution(\"5 5 1\") == \"0\"\nassert solution(\"10 10 1\") == \"0\"\nassert solution(\"10 100 1\") == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n3 1 2\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3\\n'\nassert solution('6\\n1 2 3 4 5\\n2 1 3 4 5') == '3\\n'\nassert solution('4\\n1 2 3 4\\n2 1 3 4') == '5\\n'\nassert solution('7\\n1 2 3 4 5 6\\n2 1 3 4 5 6') == '5\\n'\nassert solution('8\\n1 2 3 4 5 6 7\\n2 1 3 4 5 6 7') == '4\\n'\nassert solution('9\\n1 2 3 4 5 6 7 8\\n2 1 3 4 5 6 7 8') == '3\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n2 1 3 4 5 6 7 8 9') == '2\\n'",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str=\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(input_str=\"5\\n1 2 3 4 5\\n2 3 4 5 1\") == \"5\\n\"\nassert solution(input_str=\"1\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(input_str=\"3\\n1 3 2\\n3 1 2\\n3 1 2\") == \"6\\n\"\nassert solution(input_str=\"5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\") == \"10\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 132
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\", \"|a - b|\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\", \"Test failed\"\nassert solution() == \"3\\n\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('4\\n1 2 3 4\\n2 1 3 4\\n3 1 4 2\\n4 1 2 3') == '5'\nassert solution('6\\n1 4 2 5 3 6\\n4 1 3 2 5 6\\n2 1 4 3 5 6\\n3 1 2 4 5 6\\n5 1 2 3 4 6\\n6 1 2 3 4 5') == '5'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1 2') == '0'\nassert solution('1\\n2 1') == '0'\nassert solution('1\\n1 1 1') == '0'",
        "num_ids_2": 70,
        "num_ids_4": 171
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3\\n'\nassert solution('3\\n1 3 2\\n3 1 2') == '3\\n'\nassert solution('3\\n1 3 2\\n3 1 2') == '3\\n'\nassert solution('3\\n1 3 2\\n3 1 2') == '3\\n'\nassert solution('3\\n1 3 2\\n3 1 2') == '3\\n'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 3, \"The output is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Testcase 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"Hello World\") == \"5\"\nassert solution(\"Test123456789\") == \"11\"\nassert solution(\"aA\") == \"1\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"3\\nAmong the ACGT strings that are substrings of ATCODER, the longest one is ATC.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == 3, \"Incorrect answer\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"The output of the function should be '3'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"3\\nAmong the ACGT strings that are substrings of ATCODER, the longest one is ATC.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11') == '9', 'The output is incorrect'\n\nfrom typing import List",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"9\", \"The solution should return 9\"\nassert solution(\"1\") == \"0\", \"The solution should return 0\"\nassert solution(\"0\") == \"0\", \"The solution should return 0\"\nassert solution(\"100\") == \"0\", \"The solution should return 0\"\nassert solution(\"10\") == \"0\", \"The solution should return 0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9', \"Output is not correct.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 9, \"The number of positive integers less than or equal to 11 that have an odd number of digits should be 9.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"9\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '9\\n', \"Test failed for solution.\"\nprint(\"Test passed for solution.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"hcootf\"\nassert solution(\"cupofhottea\") == \"hteitf\"\nassert solution(\"aocupofcoffee\") == \"ahcootf\"\nassert solution(\"aocupofhottea\") == \"ahteitf\"\nassert solution(\"aocupofhottea\") == \"ahteitf\"",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('cupofcoffee') == 'hutofhottea', 'The solution should be 4.'\nassert solution('cupofhottea') == 'hutofhottea', 'The solution should be 4.'\nassert solution('hello') == 'hello', 'The solution should be 0.'\nassert solution('world') == 'worldd', 'The solution should be 3.'",
        "num_ids_2": 47,
        "num_ids_4": 85
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\"\nassert solution(\"cupofhottea\") == \"hottea\"\n\nassert solution(\"tacocat\") == \"carat\"\nassert solution(\"cattac\") == \"carat\"\n\nassert solution(\"hello\") == \"elloh\"\nassert solution(\"world\") == \"worldd\"\n\nassert solution(\"catdog\") == \"dogcat\"\nassert solution(\"dogcat\") == \"dogcat\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"four\"\nassert solution(\"cupofhottea\") == \"two\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cupofcoffee\") == \"tpopofhottea\", \"Invalid output for cupofcoffee\"\nassert solution(\"cupofhottea\") == \"tpopofhottea\", \"Invalid output for cupofhottea\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cupofcoffee\") == \"hteafe\"\nassert solution(\"cupofhottea\") == \"hteat\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"utofctopfcof\", \"Solution 1 should work.\"\nassert solution(\"cupofhottea\") == \"utofctopfcof\", \"Solution 2 should work.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"cupofcoffee\") == \"hottentea\"\nassert solution(\"cupofhottea\") == \"hottentea\"\nassert solution(\"cuponofcoffee\") == \"hottentea\"\nassert solution(\"cuponofhottea\") == \"hottentea\"\nassert solution(\"cuponofcoffee\") == \"hottentea\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\\ncupofhottea\") == \"4\", \"Test case failed.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 4\") == \"5 6 7 8 9\"\nassert solution(\"1 1\") == \"5 6 7 8 9\"\nassert solution(\"5 6\") == \"5 6 7 8 9\"\nassert solution(\"5 4\") == \"5 6 7 8 9\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"2 4\") == \"2 3 4 5 6\"\nassert solution(\"1 4\") == \"1 2 3 4\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"2 4\") == \"2 3 4 5 6\"\nassert solution(\"1 4\") == \"1 2 3 4\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"\nprint(solution(\"2 4\\n\"))  # Uncomment to test the solution",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 7') == '5 6 7 8 9\\n'\nassert solution('2 1') == '1 2 3 4 5\\n'\nassert solution('1 1') == '1 2 3 4 5\\n'\nassert solution('5 4') == '5 4 5 6 7\\n'\nassert solution('3 2') == '3 2 3 4 5\\n'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 7\\n\") == \"5 6 7 8 9\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 6 7 8 9\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"2 3\") == \"1 2 3\"\nassert solution(\"1 5\") == \"1 2 3 4 5\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 50\") == \"1 2 3 4 5 6 7 8 9\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('25') == 'No', \"The solution should return 'No', but it returns '{}'.\".format(solution('25'))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"45\") == \"No\"\nassert solution(\"50\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"No\\n\", \"Test Case 1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"25\") == \"No\\n\", \"Input is not as expected.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(25) == 'No'\n\nX = int(stdin.readline().strip())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"No\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"No\", \"Your code is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\" # true",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"5 10\\n2 3\\n4 5\\n6 7\\n8 9\") == \"2\\n\"\nassert solution(\"5 1\\n2 3\\n4 5\\n6 7\\n8 9\") == \"0\\n\"\nassert solution(\"100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 10",
        "num_ids_2": 65,
        "num_ids_4": 1027
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n\") == \"1\\n\"\nassert solution(\"4 3\\n1 2\\n3 1\\n2 3\\n-5 7\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 1\\n2 2\\n-2 3\\n\") == \"2\\n\"\nassert solution(\"10 5\\n1 1\\n4 2\\n3 4\\n2 5\\n-3 6\\n\") == \"1\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 144
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n\") == \"1\\n\"\nassert solution(\"3 1\\n-1 3\\n5 6\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"0\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n2 2\\n\") == \"1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 101
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\n\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 10\") == \"0\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(1000)) == \"1\"\nassert solution(str(2)) == \"1\"\nassert solution(str(1)) == \"0\"\nassert solution(str(100)) == \"1\"\nassert solution(str(10000)) == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == \"0\"\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 216
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3776\") == \"Good\", \"The second and third digits are the same, so 3776 is hard to enter.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Bad\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Good' # Test case 1\nassert solution('1234') == 'Good' # Test case 2\nassert solution('12345') == 'Good' # Test case 3\nassert solution('123456') == 'Good' # Test case 4\nassert solution('1234567') == 'Good' # Test case 5",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"2345\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"12345\") == \"Good\"\nassert solution(\"23456\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3776') == 'Good', \"Incorrect solution\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Bad\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3776\") == \"Good\", \"Solution should return Good\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"4532\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"2\\n3 4\") == \"3.5\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3.5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\\n\"\nassert solution(\"1\\n2\") == \"2.0\\n\"\nassert solution(\"2\\n1 2\") == \"2.0\\n\"\nassert solution(\"1\\n3\\n4\") == \"4.0\\n\"\nassert solution(\"2\\n2\\n2\") == \"4.0\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 4\") == \"3.50001\\n3.49999\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3.5\\n'\nassert solution() == '3.5\\n'\nassert solution() == '3.5\\n'\nassert solution() == '3.5\\n'\nassert solution() == '3.5\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3.5\"\nassert solution() == \"3.49999\"\nassert solution() == \"3.49998\"\nassert solution() == \"3.49997\"\nassert solution() == \"3.49996\"\nassert solution() == \"3.49995\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"3\\n2\\n3 4\\n\") == \"3.5\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n\") == \"3.5\"\nassert solution(\"5\\n1 2\\n3 4 5\\n6 7\\n\") == \"6.5\"\nassert solution(\"3\\n2\\n1\\n\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n6 7 8 9 10\\n\") == \"15\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 41,
        "num_ids_4": 98
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"3\\n10 5 15\\n\") == \"3.0\"\nassert solution(\"1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"15\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"21.5\"\nassert solution(\"3\\n1000000000 1000000000\\n\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3.5\\n\"\nassert solution() == \"3.5\\n\"\nassert solution() == \"3.49999\\n\"\nassert solution() == \"3.49999\\n\"\nassert solution() == \"3.49998\\n\"\nassert solution() == \"3.49998\\n\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\\n\") == \"14\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"14\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14\\n'\nprint('All tests passed!')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"14\\n\", \"The solution does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 1 2\n    2 5 4\n    3 6\n    \"\"\"\n) == \"14\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '14', 'Test case failed'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\", \"The solution should return '2'.\"\n\nassert solution(\"10\\nA\") == \"0\\n\", \"The solution should return '0'.\"\n\nassert solution(\"5\\nA\") == \"1\\n\", \"The solution should return '1'.\"\n\nassert solution(\"10\\n\") == \"0\\n\", \"The solution should return '0'.\"\n\nassert solution(\"5\\n\") == \"1\\n\", \"The solution should return '1'.\"",
        "num_ids_2": 53,
        "num_ids_4": 100
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"Incorrect output\"\nassert solution(\"11\\nxyzABCABCZ\") == \"1\", \"Incorrect output\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\"\nassert solution(\"3\\nABC\") == \"0\\n\"\nassert solution(\"2\\nABCB\") == \"1\\n\"\nassert solution(\"10\\nXYZABC\") == \"0\\n\"\nassert solution(\"3\\n\") == \"0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"Solution must return the expected output.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"The output of the function should be '2'.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"3\\nABCABCABC\") == \"2\"\nassert solution(\"5\\nHello\") == \"1\"\nassert solution(\"6\\nabc\") == \"1\"\nassert solution(\"100\\n\" * 1000000) == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 59
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nZABCDBABCQ\\n\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected: {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output of the function should be 2.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n') == '2\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('6\\nX\\n:X\\n:X\\n:X\\n:X') == '3\\n'\nassert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('6\\nX\\n:X\\n:X\\n:X\\n:X') == '3\\n'\nassert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('5\\nMASHIKE\\n:RUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2\\n'\nassert solution('6\\nX\\n:X\\n:X\\n:X\\n:X') == '3\\n'",
        "num_ids_2": 71,
        "num_ids_4": 151
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\", \"Incorrect solution.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"2 3\\n\") == \"No\\n\"\nassert solution(\"1 3\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('1 1') == 'No'\nassert solution('2 2') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('5 2') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'Yes\\n'\nassert solution('1 1') == 'No\\n'\nassert solution('1 3') == 'No\\n'\nassert solution('3 1') == 'No\\n'\nassert solution('1 1') == 'No\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n\nassert solution(\"4 3\") == \"No\"\n\nassert solution(\"3 4\") == \"Yes\"\n\nassert solution(\"1 1\") == \"Yes\"\n\nassert solution(\"1 0\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"4 4\\n\") == \"No\\n\"\nassert solution(\"5 5\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Incorrect output for sippuu.\"\nassert solution(\"abc\") == \"No\", \"Incorrect output for abc.\"\nassert solution(\"abcd\") == \"No\", \"Incorrect output for abcd.\"\nassert solution(\"abcdde\") == \"No\", \"Incorrect output for abcdde.\"\nassert solution(\"abcde\") == \"No\", \"Incorrect output for abcde.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes', 'Test failed' # Correct solution",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\" # pass",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('sippuu') == 'Yes', \"Incorrect output for sippuu\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"The given string is not coffee-like\"\nassert solution(\"aaabbb\") == \"No\", \"The given string is coffee-like\"\nassert solution(\"aabbbaa\") == \"Yes\", \"The given string is not coffee-like\"\nassert solution(\"sippuu\") == \"Yes\", \"The given string is not coffee-like\"\nassert solution(\"hello\") == \"No\", \"The given string is coffee-like\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4'\nassert solution('3 200\\n1 100\\n2 150\\n3 200') == 'TLE'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 80\\n7 60\\n1 90\\n4 50\") == \"TLE\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n1 80\\n4 50\") == \"50\\n150\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"3\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n250\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"2\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n350\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"1\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n450\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"2\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n550\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"1\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n650\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"2\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n750\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"1\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n850\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"2\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"50\\n950\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"2\\nTLE\\",
        "num_ids_2": 69,
        "num_ids_4": 141
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"1 1000000\\n1 1000000\\n1 1000000\\n1 1000000\") == \"TLE\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4\\n'\nassert solution('2 20\\n1 10\\n5 20\\n3 15') == '3\\n'\nassert solution('1 10\\n5 20\\n3 15') == 'TLE\\n'\nassert solution('5 60\\n7 60\\n4 50\\n2 40') == '2\\n'",
        "num_ids_2": 66,
        "num_ids_4": 126
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\"  # expected output: \"4\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\"\nassert solution(\"3 100\\n2 300\\n4 500\") == \"300\\nTLE\"\nassert solution(\"1 1000\") == \"TLE\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\"\nassert solution(\"3 100\\n2 300\\n4 500\") == \"300\\nTLE\"\nassert solution(\"1 1000\") == \"TLE\"",
        "num_ids_2": 67,
        "num_ids_4": 116
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 60\\n\") == \"TLE\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n3 80\\n\") == \"TLE\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n2 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n1 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n3 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n2 90\\n5 60\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 60\\n1 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 60\\n2 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 60\\n3 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 60\\n4 90\\n\") == \"5\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n5 60\\n5 90\\n\") == \"5\"",
        "num_ids_2": 72,
        "num_ids_4": 150
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 9\") == \"8\", \"Expected output: 8. Received: {}\".format(solution(\"4 2 9\"))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '8'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 9') == '8\\n'\nassert solution('10 2 9') == '14\\n'\nassert solution('4 6 10') == '24\\n'\nassert solution('2 4 10') == '14\\n'\nassert solution('1 1 1') == '1\\n'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"8\", \"Test failed. The minimum total travel expense should be 8 yen, but it is actually {} yen.\".format(solution())\nprint(\"Test passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"\nassert solution(\"3 1 7\") == \"10\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"1 1 100\") == \"100\\n\"\nassert solution(\"5 2000 10000\") == \"10000\\n\"\nassert solution(\"4 10 50\") == \"80\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"5 10 15\") == \"45\"\nassert solution(\"6 2 4\") == \"12\"\nassert solution(\"2 6 7\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2 9') == '8\\n'\nassert solution('6 3 5') == '10\\n'\nassert solution('3 5 7') == '11\\n'\nassert solution('8 7 6') == '12\\n'\nassert solution('2 1 3') == '10\\n'\n\nprint(\"All test cases passed\")",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\\nacornistnt\\peanutbomb\\constraint\\n\") == \"1\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\nassert solution(\"5\\nbaba\\ndada\\nbaba\\nfoo\\nbaba\\n\") == \"2\"\nassert solution(\"6\\nabc\\nxyz\\nxyz\\nbcd\\nxyz\\n\") == \"3\"\nassert solution(\"8\\naaa\\nbbbb\\nccc\\ndddd\\neeee\\n\") == \"4\"\nassert solution(\"7\\nabcde\\nfgij\\nhijk\\n\\njklmn\\n\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(\"acornistnt\")))) == \"1\"\nassert solution(solution(\"peanutbomb\")) == \"1\"\nassert solution(solution(\"constraint\")) == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 48
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\nprint('All tests passed!')",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed. Expected: {expected_output}, but got: {solution(input_data)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\nassert solution(\"3\\nhello\\nworld\\n\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nacornistnt\\peanutbomb\\constraint\\n\") == \"1\"\n\nprint(solution(\"3\\nacornistnt\\peanutbomb\\constraint\\n\"))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"acornistnt\") == \"1\\n\"\nassert solution(\"peanutbomb\") == \"1\\n\"\nassert solution(\"constraint\") == \"1\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 43
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 23,
        "num_ids_4": 58
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, \"1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(4, \"2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n2\\n5\\n2\\n0'\n\nassert solution(input()) == '8\\n2\\n9\\n8'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_solution",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\n\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"1\"\nassert solution(solution) == \"1\"\nassert solution(solution) == \"0\"\nassert solution(solution) == \"2\"\nassert solution(solution) == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 3 3 1 1 3\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1 1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 190
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2 \n\\nInput\\n4 2\\n3 1\\n1 4\\n1 2\\n\\nOutput\\n1\\n1 1 1 \n\\nExamples\\nInput\\n6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\\nOutput\\n2\\n1 2 1 1 2\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\\nOutput\\n1\\n1 1 1 \") == \"1\\n1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\\nOutput\\n3\\n1 1 2 3 2 3 1 3 1\"",
        "num_ids_2": 99,
        "num_ids_4": 181
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 \"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 \n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 \nInput\n4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 \n\nExamples:\nInput\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n\nOutput\n2\n1 2 1 1 2 \n\nInput\n4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2 \nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"1\\n1 1 1 1 \nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n1 1 2 3 2 3 1 3 1\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1 2 1 1 2 1 1 1 2 2 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 2 2 1 1 1 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 1 1 2\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n\nprint(\"All test cases pass!\")",
        "num_ids_2": 94,
        "num_ids_4": 172
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"\n",
        "num_ids_2": 84,
        "num_ids_4": 162
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 1 1\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 174
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\\n\", \"First test case\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\", \"Second test case\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\", \"Third test case\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 66,
        "num_ids_4": 100
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\\n\", \"Oh, New Year. The time to gather all your friends and reflect on the heartwarming events of the past year...\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\", \"All friends choose the moves they want to perform. After that the number of occupied houses is calculated.\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\", \"The maximum possible number of occupied houses can there be?\"",
        "num_ids_2": 104,
        "num_ids_4": 146
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\\n9\\n1 1 8 8 8 4 4 4 4\\n\\n7\\n4 3 7 1 4 3 3\\n\\n7\\n4 3 7 1 4 3 3\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\\n7\\n4 3 7 1 4 3 3\\n\\n7\\n4 3 7 1 4 3 3\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\\n7\\n4 3 7 1 4 3 3\") == \"3 6\\n\"",
        "num_ids_2": 160,
        "num_ids_4": 209
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\n    pass\\\"\\n\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"print('2 4')\\nprint('3 8')\\nprint('3 6')\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 4 4\n''') == '2 4'\n\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\n\nassert solution('''\n7\n4 3 7 1 4 3 3\n''') == '3 6'\n\nassert solution('''\n4\n2 3 3 3\n''') == '2 2'\n\nassert solution('''\n7\n3 2 5 4 4 5 3\n''') == '3 7'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_input, expected_output)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"2 4\"\nassert solution(open(\"example2.txt\", \"r\")) == \"3 8\"\nassert solution(open(\"example3.txt\", \"r\")) == \"3 6\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5 \\n'\nassert solution('3\\n2 3\\n3 1\\n1 2') == '3 1 2 \\n'\nassert solution('4\\n2 3\\n3 1\\n1 2') == '2 3 1 2 \\n'\nassert solution('3\\n4 5\\n2 3\\n1 2') == '1 2 3 4 5 \\n'\nassert solution('2\\n4 5\\n3 1\\n1 2') == '1 2 4 5 3 \\n'\nassert solution('3\\n1 2\\n4 5\\n2 3') == '1 2 4 5 3 \\n'",
        "num_ids_2": 76,
        "num_ids_4": 144
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\\n\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    3 5\n    1 4\n    2 4\n    1 5\n    2 3\n    ''') == '3 2 4 1 5 \\n'\n\nassert solution('''\n    3\n    2 3\n    3 1\n    1 2\n    ''') == '3 1 2 \\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\\nOutput\\n3 2 4 1 5\\n\\nInput\\n3\\n2 3\\n3 1\\n1 2\\n\\nOutput\\n3 1 2\") == \"3 2 4 1 5\\n3 1 2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(solution(input()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 2 4 1 5 \\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n') == '3 2 4 1 5 \\n'\nassert solution('3\\n2 3\\n3 1\\n1 2\\n') == '3 1 2 \\n'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 2 4 1 5 \\n\", \"Test case 1 failed\"\nassert solution(\"Input\\n3\\n2 3\\n3 1\\n1 2\\n\") == \"3 1 2 \\n\", \"Test case 2 failed\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == 3\nassert solution(10) == 10\nassert solution(6) == 1",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"1\"\nassert solution(str(input())) == \"3\"\nassert solution(str(input())) == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(10) == 10\nassert solution(6) == 1",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == \"3\\n\"\nassert solution(10) == \"10\\n\"\nassert solution(6) == \"1\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 3\nassert solution(10) == 10\nassert solution(6) == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nassert solution(6) == \"3\"\nassert solution(10) == \"10\"\nassert solution(6) == \"10\"\nassert solution(6) == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"10\"\nassert solution() == \"1\"",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n-1\\n5\\n2\\n0\\n1\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"\nassert solution(\"15 5 3 4\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"0\"\nassert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"5\\n2\\n0\"",
        "num_ids_2": 154,
        "num_ids_4": 229
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: got {solution(input())}, expected {expected}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Input: {input_data}, Output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n2\\n5\\n2\\n0\" # expected output\nassert solution() == \"4\\n-1\\n5\\n2\\n0\" # expected output\nassert solution() == \"6\\n-1\\n6\\n4\\n2\" # expected output\nassert solution() == \"6\\n-1\\n6\\n4\\n2\" # expected output\nassert solution() == \"0\\n2\\n5\\n2\\n0\" # expected output\n",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\"\"\"\n) == \"\"\"\n4\n-1\n5\n2\n0\n1\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n') == '4\\n-1\\n5\\n2\\n0\\n1\\n'\n",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n') == '4\\n-1\\n5\\n2\\n0\\n1'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"Test Case {t+1} failed: solution() = {solution_output}, expected {solution_output}\" for t, solution_input, solution_output in enumerate(solution_tests)",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"?????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nac?b?c\") == \"24\", \"Test 1 failed\"\nassert solution(\"7\\n??????\") == \"2835\", \"Test 2 failed\"\nassert solution(\"9\\nccccbba\\n\") == \"0\", \"Test 3 failed\"\nassert solution(\"5\\na???c\") == \"46\", \"Test 4 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 89
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nac?b?c\") == \"24\"\nassert solution(\"7\\n??????\") == \"2835\"\nassert solution(\"9\\ncccbbbaaa\") == \"0\"\nassert solution(\"5\\na???c\") == \"46\"",
        "num_ids_2": 34,
        "num_ids_4": 65
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\nac?b?c') == '24'\nassert solution('7\\n?????') == '2835'\nassert solution('9\\ncccbbbaaa') == '0'\nassert solution('5\\na???c') == '46'",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ac?b?c\") == 24\nassert solution(\"????\") == 2835\nassert solution(\"cccbbbaaa\") == 0\nassert solution(\"a???c\") == 46",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ac?b?c\") == \"acabac\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nac?b?c') == '24'\nassert solution('7\\n?????') == '2835'\nassert solution('9\\ncccbbbaaa') == '0'\nassert solution('5\\na???c') == '46'",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"??????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}\\nOutput: {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\", \"The correct answer is not given.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '5\\n'\n\nassert solution(open('input2.txt').read()) == '16\\n'\n\nassert solution(open('input3.txt').read()) == '18\\n'",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\na 3 3\\nb 3 5\\nc 2 1\\na 1 3\\nb 1 3\\nc 1 1\") == \"5\"\nassert solution(\"4 0\\na 3 3 7\\nb 1 3 3 7\\nc 1 3 3 7\\nd 1 3 3 7\\ne 1 3 3 7\\nf 1 3 3 7\\ng 1 3 3 7\\nh 1 3 3 7\\ni 1 3 3 7\\nj 1 3 3 7\\nk 1 3 3 7\\nl 1 3 3 7\\nm 1 3 3 7\") == \"16\"\nassert solution(\"5 4\\na 2 3 4 5\\nb 1 2 8\\nc 1 3 10\\nd 1 4 7\\ne 1 5 15\\nf 1 2 10\\ng 1 3 20\\nh 1 4 15\\ni 1 5 30\\nj 1 2 25\\nk 1 3 40\\nl 1 4 35\\nm 1 5 50\") == \"18\"",
        "num_ids_2": 189,
        "num_ids_4": 318
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    3 2\n    1 3 3\n    2 3 5\n    2 1 1\n    ''') == '5\\n'\n\nassert solution('''\n    4 0\n    1 3 3 7\n    ''') == '16\\n'\n\nassert solution('''\n    5 4\n    1 2 3 4 5\n    1 2 8\n    1 3 10\n    1 4 7\n    1 5 15\n    ''') == '18\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 18",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\\n\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\\n\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 111
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14\\n'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45\\n'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1\\n'",
        "num_ids_2": 82,
        "num_ids_4": 111
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14\\n'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45\\n'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1\\n'",
        "num_ids_2": 82,
        "num_ids_4": 111
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\n\nassert solution(r'''\n10 1 1\n0 9\n0 5\n''') == '45'\n\nassert solution(r'''\n10 1 1\n0 9\n1 5\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\"\"\") == \"14\"\n\nassert solution(\"\"\"10 1 1\n0 9\n0 5\"\"\") == \"45\"\n\nassert solution(\"\"\"10 1 1\n0 9\n1 5\"\"\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The output is '{output()}', but the function should return '{output()}'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"2 2 4\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Test case 1 failed\"\n\nassert solution(\"3 4 6\") == \"No\\n\", \"Test case 2 failed\"\n\nassert solution(\"1 1 1\") == \"No\\n\", \"Test case 3 failed\"\n\nassert solution(\"1 2 3\") == \"Yes\\n\", \"Test case 4 failed\"\n\nassert solution(\"1 3 5\") == \"No\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"3 5 7\") == \"No\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"5 6 6\") == \"No\"\nassert solution(\"4 5 6\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"Your implementation is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"3 3 1\") == \"Yes\"\nassert solution(\"5 7 4\") == \"No\"\nassert solution(\"5 7 8\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"3 7 5\") == \"No\"\nassert solution(\"5 7 7\") == \"No\"\nassert solution(\"5 5 5\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"\nassert solution(\"2 4 6\") == \"No\"\nassert solution(\"7 2 1\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\"\nassert solution(\"8 7 7\") == \"No\\n\"\nassert solution(\"3 5 6\") == \"No\\n\"\nassert solution(\"1 3 2\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"4\\n10 20 30 40\\n1000 2000\") == \"3\"\nassert solution(\"5\\n10 20 30 40 50\\n1000 2000\") == \"4\"\nassert solution(\"6\\n10 20 30 40 50\\n1000 2000\") == \"5\"\nassert solution(\"7\\n10 20 30 40 50\\n1000 2000\") == \"6\"",
        "num_ids_2": 61,
        "num_ids_4": 135
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Solution not found\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    12 5\n    1000 2000\n    \"\"\"\n) == \"1\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'2\\n12 5\\n1000 2000\\n') == '1\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n12 5 20\\n1000 2000\") == \"2\\n\"\nassert solution(\"1\\n100 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n12 5 20\\n1000 2000\") == \"2\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 120
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Sample Input:{input()}, Sample Output:{output}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Incorrect answer: {}\".format(solution())",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1, \"The answer is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2 1') == '1'\nassert solution(stdin='2 2') == '2'\nassert solution(stdin='3 2') == '2'\nassert solution(stdin='4 2') == '1'\nassert solution(stdin='5 2') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1\\n'\nassert solution('3 1') == '2\\n'\nassert solution('2 2') == '2\\n'\nassert solution('3 2') == '1\\n'\nassert solution('1 2') == '1\\n'\nassert solution('1 3') == '2\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\", \"Test 1 failed\"\nassert solution(\"3 1\") == \"1\", \"Test 2 failed\"\nassert solution(\"4 1\") == \"1\", \"Test 3 failed\"\nassert solution(\"5 1\") == \"1\", \"Test 4 failed\"\nassert solution(\"6 1\") == \"1\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"10 4\") == \"2\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"5 7\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Expected output: 1\\nActual output: \" + solution(\"2 1\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1', 'Incorrect Answer'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\\n\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"8 2\\nAC\\n3 6\\n1 8\") == \"0\\n1\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"2\n0\n3\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == ['2', '0', '3'] # sample output\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == ['2', '0', '3'] # correct output",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == [\"2\", \"0\", \"3\"]\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\\n0\\n3\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3'\nprint('All tests passed.')",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 4\\n100 200 300 400\") == \"220\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 210\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nassert solution(\"10 4\\n50 100 80 120 80\") == \"140\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '210'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"Test failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 4 6\") == \"11\"\nassert solution(\"10 12 14\") == \"22\"\nassert solution(\"3 2 1\") == \"0\"\nassert solution(\"6 5 4\") == \"12\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 3 4\") == \"6\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"3 2 1\") == \"6\"\nassert solution(\"1 3 2\") == \"5\"\nassert solution(\"2 3 1\") == \"5\"\nassert solution(\"3 1 2\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str=\"1 3 4\") == \"4\\n\", \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 = 4 hours\\nThe sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 = 7 hours\\nThe sum of the flight times in the route B \\rightarrow A \\rightarrow C: 1 + 4 = 5 hours\\nThe sum of the flight times in the route B \\rightarrow C \\rightarrow A: 3 + 4 = 7 hours\\nThe sum of the flight times in the route C \\rightarrow A \\rightarrow B: 4 + 1 = 5 hours\\nThe sum of the flight times in the route C \\rightarrow B \\rightarrow A: 3 + 1 = 4 hours\\nThe minimum of these is 4 hours.\"\n",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"The minimum possible sum of the flight times is 4 hours.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\nprint(\"The minimum of these is 4 hours.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"Expected output: 4\\n, but got: \" + solution(\"1 3 4\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\"\nassert solution(\"2 4 6\") == \"10\\n\"\nassert solution(\"1 5 3\") == \"7\\n\"\nassert solution(\"3 3 3\") == \"0\\n\"\nassert solution(\"100 99 98\") == \"120\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"6 7\") == \"10\\n\"\nassert solution(\"0 9\") == \"0\\n\"\nassert solution(\"1 10\") == \"10\\n\"\nassert solution(\"2 11\") == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 10\") == \"10\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 3\") == \"10\\n\"\nassert solution(\"0 9\") == \"0\\n\"\nassert solution(\"10 1\") == \"10\\n\"\nassert solution(\"100 10\") == \"10\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\\n3 is less than 5, so we should print 0.\\n\"\nassert solution(\"5 10\") == \"10\\n5 is greater than or equal to 10, so we should print 10.\\n\"\nassert solution(\"15 20\") == \"10\\n15 is less than 20, so we should print 10.\\n\"\nassert solution(\"0 3\") == \"10\\n0 is less than 3, so we should print 10.\\n\"\nassert solution(\"10 10\") == \"0\\n10 is equal to 10, so we should print 0.\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 131
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"0\\n\"  # Test case 1\nassert solution(\"5 3\") == \"0\\n\"  # Test case 2\nassert solution(\"0 0\") == \"10\\n\"  # Test case 3\nassert solution(\"10 0\") == \"0\\n\"  # Test case 4\nassert solution(\"10 10\") == \"10\\n\"  # Test case 5",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=3 5) == '0\\n'\nassert solution(stdin=10 10) == '10\\n'\nassert solution(stdin=15 10) == '10\\n'\nassert solution(stdin=20 10) == '10\\n'\nassert solution(stdin=25 10) == '10\\n'",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"5 3\") == \"0\\n\"\nassert solution(\"10 2\") == \"0\\n\"\nassert solution(\"4 1\") == \"10\\n\"\nassert solution(\"0 5\") == \"0\\n\"\nassert solution(\"9 8\") == \"10\\n\"\nassert solution(\"5 7\") == \"0\\n\"\nassert solution(\"3 10\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 5) == 0, \"The correct output is: 0\"\nassert solution(7, 5) == 10, \"The correct output is: 10\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"0 1\") == \"1\\n\"\nassert solution(\"5 3\") == \"5\\n\"\nassert solution(\"10 15\") == \"21\\n\"\nassert solution(\"100 200\") == \"501\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 4) == 1, \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"1\", \"The minimum possible value taken by N after Aoki does the operation zero or more times is 1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n', 'Test case 1 failed'\nassert solution(input()) == '1\\n', 'Test case 2 failed'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 4') == '1'\nprint('All test cases passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Test case 1: Initial value of N=7 and operation one times.\"\nassert solution(\"7 4 5\") == \"1\\n\", \"Test case 2: Initial value of N=7 and operation two times.\"\nassert solution(\"5 7 3\") == \"3\\n\", \"Test case 3: Initial value of N=5 and operation three times.\"\nassert solution(\"7 7\") == \"2\\n\", \"Test case 4: Initial value of N=7 and operation two times.\"\nassert solution(\"1000000000 1\") == \"1000000000\\n\", \"Test case 5: Initial value of N=10^18 and operation one times.\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"12 4\") == \"2\\n\"\nassert solution(\"100 10\") == \"101\\n\"\nassert solution(\"1000000000 1000000000\") == \"999999999999999899999999999999\\n\"\nassert solution(\"1000000000 1000000000\") == \"9999999999999998999999999999999\\n\"\nassert solution(\"10000000000 10000000000\") == \"9999999999999998999999999999999\\n\"\nassert solution(\"100000000000 100000000000\") == \"9999999999999998999999999999999\\n\"\nassert solution(\"1000000000000 1000000000000\") == \"99999999999999989999999999999999\\n\"\nassert solution(\"1000000000000000 1000000000000000\") == \"9999999999999998999999999999999999\\n\"\nassert solution(\"10000000000000000000 10000000000000000000\") == \"999999999999999899999999999999999\\n\"\nassert solution(\"1000000000000000000000 1000000000000000000000\") == \"999999999999999899999999999999999\\n\"\nassert solution(\"100000000000000000000000 100000000000000000000000\") == \"99999999999999989999999999999999999\\n\"\nassert solution(\"1000000000000000000000000 1000000000000000000000000\") == \"99999999999999989999999999999999999\\n\"\nassert solution(\"10000000000000000000000000 100000000000000000000000000\") == \"99999999999999989999999999999999999\\n\"\nassert solution(\"100000000000000000000000000 1000000000000000000000000000\") == \"9999999999999998999999999999999999\\n\"\nassert solution(\"100000000000000",
        "num_ids_2": 29,
        "num_ids_4": 109
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"1\\n\"  # test case 1",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"5 8 9\") == \"bust\"\nassert solution(\"5 6 7\") == \"win\"\nassert solution(\"5 10 11\") == \"bust\"\nassert solution(\"5 7 12\") == \"bust\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"2 4 6\") == \"win\"\nassert solution(\"10 15 20\") == \"bust\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"4 5 6\") == \"bust\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"win\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test Case 1: Input is correct.\"\nassert solution(\"1 2 3\") == \"bust\", \"Test Case 2: Input is correct.\"\nassert solution(\"4 5 6\") == \"bust\", \"Test Case 3: Input is correct.\"\nassert solution(\"13 12 11\") == \"bust\", \"Test Case 4: Input is correct.\"\nassert solution(\"22 21 20\") == \"win\", \"Test Case 5: Input is correct.\"",
        "num_ids_2": 49,
        "num_ids_4": 102
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Output is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"2 5 8\") == \"win\"\nassert solution(\"10 5 8\") == \"bust\"\nassert solution(\"10 10 10\") == \"bust\"\nassert solution(\"2 2 2\") == \"bust\"\nassert solution(\"3 3 3\") == \"bust\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Test case 1 failed\"\nassert solution(\"10 5 20\") == \"bust\\n\", \"Test case 2 failed\"\nassert solution(\"15 25 35\") == \"bust\\n\", \"Test case 3 failed\"\nassert solution(\"22 22 22\") == \"bust\\n\", \"Test case 4 failed\"\nassert solution(\"10 20 30\") == \"win\\n\", \"Test case 5 failed\"",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"6\\n6 is divisible by both 2 and 3.\"\nassert solution(12) == \"12\\n12 is divisible by both 2 and 12.\"\nassert solution(5) == \"5\\n5 is divisible by both 2 and 5.\"\nassert solution(0) == \"0\\nThere is no positive integer less than 0 that is divisible by both 2 and 0.\"\nassert solution(-5) == \"-5\\n-5 is divisible by both 2 and -5.\"",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\"\nassert solution(2) == \"4\"\nassert solution(4) == \"8\"\nassert solution(5) == \"10\"\nassert solution(6) == \"12\"\nassert solution(7) == \"14\"\nassert solution(8) == \"16\"\nassert solution(9) == \"18\"\nassert solution(10) == \"20\"\nassert solution(11) == \"22\"\nassert solution(12) == \"24\"\nassert solution(13) == \"26\"\nassert solution(14) == \"28\"\nassert solution(15) == \"30\"\nassert solution(16) == \"32\"\nassert solution(17) == \"34\"\nassert solution(18) == \"36\"\nassert solution(19) == \"38\"\nassert solution(20) == \"40\"\nassert solution(21) == \"42\"\nassert solution(22) == \"44\"\nassert solution(23) == \"46\"\nassert solution(24) == \"48\"\nassert solution(25) == \"50\"\nassert solution(26) == \"52\"\nassert solution(27) == \"54\"\nassert solution(28) == \"56\"\nassert solution(29) == \"58\"\nassert solution(30) == \"60\"\nassert solution(31) == \"62\"\nassert solution(32) == \"64\"\nassert solution(33) == \"66\"\nassert solution(34) == \"68\"\nassert solution(35) == \"70\"\nassert solution(36) == \"72\"\nassert solution(37) == \"74\"\nassert solution(38) == \"76\"\nassert solution(39) == \"78\"\nassert solution(40) == \"80\"\nassert solution(41) == \"82\"\nassert solution(42) == \"84\"\nassert solution(43) == \"86\"\nassert solution(44) == \"88\"\nassert solution(45) == \"90\"\nassert solution(46) == \"92\"\nassert solution(47) == \"94\"\nassert solution(48) == \"96\"\nassert solution(49) == \"98\"\nassert solution(50) == \"100\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"6 is divisible by both 2 and 3.\\nThere is no positive integer less than 6 that is divisible by both 2 and 3.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6', \"Solution should return 6\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"6 is divisible by both 2 and 3.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2') == 2\nassert solution('5 3') == 3\nassert solution('7 2') == 4\nassert solution('2 3') == 2\nassert solution('4 2') == 3",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n\") == \"2\\n\"\nassert solution(\"7 3\\n\") == \"2\\n\"\nassert solution(\"8 5\\n\") == \"3\\n\"\nassert solution(\"9 6\\n\") == \"3\\n\"\nassert solution(\"10 7\\n\") == \"4\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Invalid input format\"\n\nN, D = map(int, input().split())",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"7 3\") == \"3\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"1 10\") == \"1\"\n\nSolution:\nWe can solve this problem using dynamic programming. We will create a 2D matrix dp where dp[i][j] represents the minimum number of inspectors required to deploy an inspector under tree i and j. \n\ndp[i][j] = min(dp[i][j-D], dp[i+D][j]) + 1 if j-D >= 1 else 1\n\nIn the above code, dp[i][j] represents the minimum number of inspectors required to deploy an inspector under tree i and j. If j-D >= 1, then we only need one more inspector to inspect the trees with numbers between i-D and i+D (inclusive). Otherwise, we need to inspect the trees with numbers between i-D and i+D (inclusive) as well.\n\nWe will initialize the dp matrix with the value of 1.\n\nFinally, we will return the value of dp[1][1], which is the minimum number of inspectors required to deploy an inspector under the first tree.\n\nHere's the implementation of the solution:",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"10 2\") == \"3\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"10 5\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    input_str=\n    \"\"\"\n    6 2\n    \"\"\"\n) == \"2\\n\"\nassert solution(\n    input_str=\n    \"\"\"\n    3 3\n    \"\"\"\n) == \"1\\n\"\nassert solution(\n    input_str=\n    \"\"\"\n    10 5\n    \"\"\"\n) == \"4\\n\"\nassert solution(\n    input_str=\n    \"\"\"\n    2 3\n    \"\"\"\n) == \"2\\n\"\nassert solution(\n    input_str=\n    \"\"\"\n    4 5\n    \"\"\"\n) == \"1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Test case 1 failed\"\nprint(\"Test case 1 passed\")\n\nassert solution() == 3, \"Test case 2 failed\"\nprint(\"Test case 2 passed\")\n\nassert solution() == 4, \"Test case 3 failed\"\nprint(\"Test case 3 passed\")\n\nassert solution() == 5, \"Test case 4 failed\"\nprint(\"Test case 4 passed\")\n\nassert solution() == 6, \"Test case 5 failed\"\nprint(\"Test case 5 passed\")\n\nassert solution() == 7, \"Test case 6 failed\"\nprint(\"Test case 6 passed\")\n\nassert solution() == 8, \"Test case 7 failed\"\nprint(\"Test case 7 passed\")\n\nassert solution() == 9, \"Test case 8 failed\"\nprint(\"Test case 8 passed\")\n\nassert solution() == 10, \"Test case 9 failed\"\nprint(\"Test case 9 passed\")\n\nassert solution() == 11, \"Test case 10 failed\"\nprint(\"Test case 10 passed\")\n\nassert solution() == 12, \"Test case 11 failed\"\nprint(\"Test case 11 passed\")\n\nassert solution() == 13, \"Test case 12 failed\"\nprint(\"Test case 12 passed\")\n\nassert solution() == 14, \"Test case 13 failed\"\nprint(\"Test case 13 passed\")\n\nassert solution() == 15, \"Test case 14 failed\"\nprint(\"Test case 14 passed\")\n\nassert solution() == 16, \"Test case 15 failed\"\nprint(\"Test case 15 passed\")\n\nassert solution() == 17, \"Test case 16 failed\"\nprint(\"Test case 16 passed\")\n\nassert solution() == 18, \"Test case 17 failed\"\nprint(\"Test case 17 passed\")\n\nassert solution() == 19, \"Test case 18 failed\"\nprint(\"Test case 18 passed\")\n\nassert solution() == 20, \"Test case 19 failed\"\nprint(\"Test case 19 passed\")\n\nassert solution() == 21, \"Test case 20 failed\"\nprint(\"Test case 20 passed\")\n\nassert solution() == 22, \"Test case 21 failed\"\nprint(\"Test case 21 passed\")\n\nassert solution() == 23, \"Test case 22 failed\"\nprint(\"Test case 22 passed\")\n\nassert solution() == 24, \"Test case 23 failed\"\nprint(\"Test case 23 passed\")\n\nassert solution() == 25, \"Test case 24 failed\"\nprint(\"Test case 24 passed\")\n\nassert solution() == 26, \"Test case 25 failed\"\nprint(\"Test case 25 passed\")\n\nassert solution() == 27, \"Test case 26 failed\"\nprint(\"Test case 26 passed\")\n\nassert solution() == 28, \"Test case 27 failed\"\nprint(\"Test case 27 passed\")\n\nassert solution() == 29, \"Test case 28 failed\"\nprint(\"Test case 28 passed\")\n\nassert solution() == 30, \"Test case 29 failed\"\nprint(\"Test case 29 passed\")\n\nassert solution() == 31, \"Test case 30 failed\"\nprint(\"Test case 30 passed\")\n\nassert solution() == 32, \"Test case 31 failed\"\nprint(\"Test case 31 passed\")\n\nassert solution() == 33, \"Test case 32 failed\"\nprint(\"Test case 32 passed\")\n\nassert solution() == 34, \"Test case 33 failed\"\nprint(\"Test case 33 passed\")\n\nassert solution() == 35, \"Test case 34 failed\"\nprint(\"Test case 34 passed\")\n\nassert solution() == 36, \"Test case 35 failed\"\nprint(\"Test case 35 passed\")\n\nassert solution() == 37, \"Test case 36 failed\"\nprint(\"Test case 36 passed\")\n\nassert solution() == 38, \"Test case 37 failed\"\nprint(\"Test case 37 passed\")\n\nassert solution() == 39, \"Test case 38 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"7 3\") == \"3\"\nassert solution(\"8 4\") == \"4\"\nassert solution(\"9 5\") == \"5\"\nassert solution(\"10 6\") == \"6\"\nassert solution(\"11 7\") == \"7\"\nassert solution(\"12 8\") == \"8\"\nassert solution(\"13 9\") == \"9\"\nassert solution(\"14 10\") == \"10\"\nassert solution(\"15 11\") == \"11\"\nassert solution(\"16 12\") == \"12\"\nassert solution(\"17 13\") == \"13\"\nassert solution(\"18 14\") == \"14\"\nassert solution(\"19 15\") == \"15\"\nassert solution(\"20 16\") == \"16\"\nassert solution(\"21 17\") == \"17\"\nassert solution(\"22 18\") == \"18\"\nassert solution(\"23 19\") == \"19\"\nassert solution(\"24 20\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(16) == 'pon', 'The solution should return pon'\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\", \"The answer is 'pon', not 'pon'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(16) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(1000) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(999) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(1001) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(9999) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10000) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10001) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10009) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10010) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10015) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10016) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10017) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10018) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10019) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10020) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10025) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10026) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10027) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10028) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10029) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10030) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10035) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10036) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10037) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10038) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10039) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10040) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10045) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10046) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10047) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10048) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10049) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10050) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10055) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10056) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10057) == 'pon', \"The pronunciation of '\u672c' is not pon.\"\nassert solution(10058) == 'pon', \"The pronunciation of '\u672c' is not pon",
        "num_ids_2": 52,
        "num_ids_4": 105
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"16\") == \"pon\", \"Test case 1 failed\"\nassert solution(\"11\") == \"pon\", \"Test case 2 failed\"\nassert solution(\"17\") == \"pon\", \"Test case 3 failed\"\nassert solution(\"20\") == \"pon\", \"Test case 4 failed\"\nassert solution(\"21\") == \"pon\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\", \"Test Failed\"\nprint(\"All Test Passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"pon\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\", \"The answer should be pon.\"\nassert solution(\"10\") == \"hon\", \"The answer should be hon.\"\nassert solution(\"2\") == \"pon\", \"The answer should be pon.\"\nassert solution(\"1\") == \"hon\", \"The answer should be hon.\"\nassert solution(\"3\") == \"bon\", \"The answer should be bon.\"\nassert solution(\"999\") == \"pon\", \"The answer should be pon.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"pon\", \"The digit in the one's place of 16 is 6, so the \\\"\u672c\\\" in \\\"16 \u672c\\\" is pronounced pon.\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"11\\n\", \"The output should be 11, but got {}\".format(solution(\"3\\n3 1 2\\n\"))",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"30\\n\"\nassert solution(\"10\\n5 1 2 3 4\") == \"60\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Error: Please provide the input as a string\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\\n\", \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\", \"Test 1 failed\"\nassert solution(\"5\\n3 1 2\\n5 3 2 4 1\") == \"31\\n\", \"Test 2 failed\"\nassert solution(\"7\\n4 2 3\\n4 3 5\\n4 5 1\\n4 7 1\\n4 11 2\\n4 13 3\\n4 15 4\\n4 17 1\") == \"116\\n\", \"Test 3 failed\"\nassert solution(\"10\\n4 2 3\\n4 3 5\\n4 5 1\\n4 7 1\\n4 11 2\\n4 13 3\\n4 15 4\\n4 17 1\\n4 19 2\\n4 21 3\\n4 23 4\") == \"438\\n\", \"Test 4 failed\"\nassert solution(\"5\\n3 1 2\") == \"11\\n\", \"Test 5 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 63,
        "num_ids_4": 248
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"11\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"5\\n1\\n5\\n2\\n3\\n4\\n5\") == \"5\\n5\\n5\"\n\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\") == \"1\\n2\\n3\\n4\\n5\"\n\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"",
        "num_ids_2": 59,
        "num_ids_4": 130
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"5\\n2\\n3\\n4\\n5\\n\") == \"5\\n4\\n5\"\nassert solution(\"2\\n3\\n4\\n5\\n6\\n\") == \"4\\n5\"\nassert solution(\"2\\n3\\n4\\n5\\n1\\n\") == \"4\\n5\"\n",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\n\nSolution:\nWe can solve this problem by first finding the maximum value among the N-1 elements other than A_i in the sequence. Then, we can print the result. \n\nLet's implement this solution.",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"5\\n4\\n5\\n4\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n3\"\nassert solution(\"6\\n3\\n5\\n2\\n1\") == \"3\\n2\\n5\\n1\\n6\\n3\\n5\\n2\\n1\"\nassert solution(\"2\\n1\\n4\\n3\") == \"3\\n4\\n1\\n2\"\nassert solution(\"2\\n1\\n4\\n3\\n2\") == \"3\\n4\\n1\\n2\\n2\"\nassert solution(\"2\\n1\\n4\\n3\\n2\\n1\") == \"3\\n4\\n1\\n2\\n2\\n1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\"",
        "num_ids_2": 74,
        "num_ids_4": 136
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\", \"Test case 1 failed\"\n\nassert solution(\"2 5\") == \"11\", \"Test case 2 failed\"\n\nassert solution(\"4 3\") == \"12\", \"Test case 3 failed\"\n\nassert solution(\"3 1\") == \"8\", \"Test case 4 failed\"\n\nassert solution(\"6 5\") == \"15\", \"Test case 5 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"9\", \"Invalid Input\"\nprint(solution(\"5 3\"))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Please provide valid input.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\nassert solution(\"10 20\") == \"100\\n\"\nassert solution(\"2 3\") == \"6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3') == '9', \"The output should be '9', but it is '{}'\".format(solution('5 3'))\nassert solution('4 2') == '3', \"The output should be '3', but it is '{}'\".format(solution('4 2'))\nassert solution('2 3') == '0', \"The output should be '0', but it is '{}'\".format(solution('2 3'))\nassert solution('1 1') == '1', \"The output should be '1', but it is '{}'\".format(solution('1 1'))",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 2\") == \"5\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"10 2\") == \"5\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\n\"\nprint(\"All Tests Passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40\\n\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.'",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == 40, \"The minimum time required to light K candles is 40.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40\\n'\nassert solution('5 5\\n-30 -10 10 20 50') == '40\\n'\nassert solution('5 3\\n-10 -10 10 20 50') == '30\\n'\nassert solution('5 3\\n-10 -10 10 20 50') == '30\\n'\nassert solution('5 3\\n-10 -10 10 20 50') == '30\\n'",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nassert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nassert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nassert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nassert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\nprint('Test Passed')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"10 10\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\", \"Test Case Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 13\") == \"2\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"3 14\") == \"1\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"7 9\") == \"1\"\nassert solution(\"8 12\") == \"2\"\nassert solution(\"9 16\") == \"0\"\nassert solution(\"10 4\") == \"1\"\nassert solution(\"11 6\") == \"0\"\nassert solution(\"12 7\") == \"1\"\nassert solution(\"13 8\") == \"1\"\nassert solution(\"14 9\") == \"0\"\nassert solution(\"15 10\") == \"1\"\nassert solution(\"16 11\") == \"0\"\nassert solution(\"17 12\") == \"0\"\nassert solution(\"18 13\") == \"1\"\nassert solution(\"19 14\") == \"0\"\nassert solution(\"20 15\") == \"1\"\nassert solution(\"21 16\") == \"0\"\nassert solution(\"22 17\") == \"1\"\nassert solution(\"23 18\") == \"0\"\nassert solution(\"24 19\") == \"1\"\nassert solution(\"25 20\") == \"0\"\nassert solution(\"26 21\") == \"1\"\nassert solution(\"27 22\") == \"0\"\nassert solution(\"28 23\") == \"1\"\nassert solution(\"29 24\") == \"0\"\nassert solution(\"30 25\") == \"1\"\nassert solution(\"31 26\") == \"0\"\nassert solution(\"32 27\") == \"1\"\nassert solution(\"33 28\") == \"0\"\nassert solution(\"34 29\") == \"1\"\nassert solution(\"35 30\") == \"0\"\nassert solution(\"36 31\") == \"1\"\nassert solution(\"37 32\") == \"0\"\nassert solution(\"38 33\") == \"1\"\nassert solution(\"39 34\") == \"0\"\nassert solution(\"40 35\") == \"1\"\nassert solution(\"41 36\") == \"0\"\nassert solution(\"42 37\") == \"1\"\nassert solution(\"43 38\") == \"0\"\nassert solution(\"44 39\") == \"1\"\nassert solution(\"45 40\") == \"0\"\nassert solution(\"46 41\") == \"1\"\nassert solution(\"47 42\") == \"0\"\nassert solution(\"48 43\") == \"1\"\nassert solution(\"49 44\") == \"0\"\nassert solution(\"50 45\") == \"1\"\nassert solution(\"51 46\") == \"0\"\nassert solution(\"52 47\") == \"1\"\nassert solution(\"53 48\") == \"0\"\nassert solution(\"54 49\") == \"1\"\nassert solution(\"55 50\") == \"0\"\nassert solution(\"56 51\") == \"1\"\nassert solution(\"57 52\") == \"0\"\nassert solution(\"58 53\") == \"1\"\nassert solution(\"59 54\") == \"0\"\nassert solution(\"60 55\") == \"1\"\nassert solution(\"61 56\") == \"0\"\nassert solution(\"62 57\") == \"1\"\nassert solution(\"63 58\") == \"0\"\nassert solution(\"64 59\") == \"1\"\nassert solution(\"65 60\") == \"0\"\nassert solution(\"66 61\") == \"1\"\nassert solution(\"67 62\") == \"0\"\nassert solution(\"68 63\") == \"1\"\nassert solution(\"69 64\") == \"0\"\nassert solution(\"70 65\") == \"1\"\nassert solution(\"71 66\") == \"0\"\nassert solution(\"72 67\") == \"1\"\nassert solution(\"73 68\") == \"0",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 13\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2', \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Test failed for the given input\"\nprint(\"Test passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\") == \"3\", \"The output is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"The given input is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"3\\n\"\nassert solution(\"5 10\") == \"2\\n\"\nassert solution(\"10 10\") == \"1\\n\"\nassert solution(\"10 5\") == \"0\\n\"\nassert solution(\"10 -5\") == \"0\\n\"\nassert solution(\"5 1\") == \"0\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"5 5\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"8 1\") == \"4\\n\", \"Test case 3 failed\"\nassert solution(\"100000 1\") == \"100000\\n\", \"Test case 4 failed\"\nassert solution(\"100000 50000\") == \"100000\\n\", \"Test case 5 failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 43,
        "num_ids_4": 95
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"10 0\") == \"0\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1000\") == \"1\"\nassert solution(\"1000 1\") == \"1\"\nassert solution(\"1000 0\") == \"0\"\nassert solution(\"1001 1\") == \"1\"\nassert solution(\"1001 0\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3', \"Expected output: 3, received: {}\".format(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Invalid input\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r\"0 75 25 100\") == \"50\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", \"The length of the duration (in seconds) in which both Alice and Bob were holding down their buttons should be 50.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 75 25 100') == '50', \"Expected 50, but got: {}.\".format(solution('0 75 25 100'))",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"The solution should not return an empty string.\"\nassert solution(\"0 75 25 100\") == \"50\", \"The solution should return the correct output.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 75 25 100') == '50'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"105\") == \"1\\n\", \"Solution should return the correct output for N=105.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(105) == 1, \"The number 105 is not an odd number with exactly eight positive divisors.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(105) == 1, \"Test case 1 failed\"\nassert solution(106) == 0, \"Test case 2 failed\"\nassert solution(107) == 1, \"Test case 3 failed\"\nassert solution(108) == 1, \"Test case 4 failed\"\nassert solution(109) == 2, \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(105) == 1, \"Test Case 1 Failed\"\nassert solution(5) == 1, \"Test Case 2 Failed\"\nassert solution(100) == 0, \"Test Case 3 Failed\"\nassert solution(105) == 1, \"Test Case 4 Failed\"\nassert solution(1000) == 5, \"Test Case 5 Failed\"\nassert solution(200) == 2, \"Test Case 6 Failed\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"105\") == \"1\\n\", \"Invalid Input\"\n\nsolution = '''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"105\") == \"1\\n\", \"Invalid test case.\"\nassert solution(\"106\") == \"0\\n\", \"Invalid test case.\"\nassert solution(\"200\") == \"1\\n\", \"Invalid test case.\"\nassert solution(\"101\") == \"0\\n\", \"Invalid test case.\"\nassert solution(\"1\") == \"1\\n\", \"Invalid test case.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n', \"Test Failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(105) == 1, \"The number 105 is quite special - it is odd but still it has eight divisors. Now, your task is this: how many odd numbers with exactly eight positive divisors are there between 1 and N (inclusive)?\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n', \"Test case 1 failed. Please check the given code.\"\n\nsolution(stdin)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(105) == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"8 5\") == \"1\"\nassert solution(\"10 2\") == \"1\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\\n\") == \"1\\n\"\nassert solution(\"4 6\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"100 50\\n\") == \"0\\n\"\nassert solution(\"1 5\\n\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1\\n', \"The solution should return 1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3') == '1\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1\\n\", \"Test 1\"\nassert solution(\"10 6\") == \"2\\n\", \"Test 2\"\nassert solution(\"10 2\") == \"2\\n\", \"Test 3\"\nassert solution(\"5 5\") == \"0\\n\", \"Test 4\"\nassert solution(\"2 2\") == \"0\\n\", \"Test 5\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('111') == '111', \"The output should be 111.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"111\", \"Invalid input\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"111\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"111\") == \"111\", \"Test case failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"111\", \"The earliest ABC where Kurohashi can make his debut is ABC 111.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"111\") == \"111\", \"The earliest ABC where Kurohashi can make his debut is ABC 111\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"111\") == \"111\", \"Sample Output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\", \"The output must be 111\"\nassert solution(\"\") == \"111\", \"The output must be 111\"\nassert solution(\"123\") == \"123\", \"The output must be 123\"\nassert solution(\"abc\") == \"abc\", \"The output must be abc\"\nassert solution(\"123abc\") == \"abc\", \"The output must be abc\"",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Expected output: 5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\"\nassert solution(\"1 6 4\") == \"6\\n\"\nassert solution(\"1 6 3\") == \"5\\n\"\nassert solution(\"1 6 3\") == \"5\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Sample Output Error\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Test case 1 failed\"\nassert solution(\"2 4 6\") == \"6\\n\", \"Test case 2 failed\"\nassert solution(\"1 3 4\") == \"6\\n\", \"Test case 3 failed\"\nassert solution(\"1 1 1\") == \"0\\n\", \"Test case 4 failed\"\nassert solution(\"1 0 0\") == \"0\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"The output is incorrect.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"5\", \"Failed\"\nassert solution(\"4\") == \"5\", \"Failed\"\nassert solution(\"2\") == \"5\", \"Failed\"\nassert solution(\"1\") == \"5\", \"Failed\"\nassert solution(\"4\") == \"5\", \"Failed\"\nassert solution(\"2\") == \"5\", \"Failed\"\nassert solution(\"1\") == \"5\", \"Failed\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n5\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"8 10 10 8\") == \"Yes\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"No\\n\"\nassert solution(\"5 7 8 10\") == \"Yes\\n\"\nassert solution(\"10 10 10 10\") == \"No\\n\"\nassert solution(\"100 100 100 100\") == \"No\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 9 10 10') == 'No\\n'\nassert solution('20 10 15 10') == 'Yes\\n'\nassert solution('30 15 20 10') == 'No\\n'\nassert solution('40 20 25 10') == 'Yes\\n'\nassert solution('50 25 30 10') == 'No\\n'",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'No\\n', \"The solution should print No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('1 2 3') == 'Yes'\nassert solution('10 10 10') == 'Yes'\nassert solution('0 0 0') == 'Yes'\nassert solution('10 1 10') == 'No'\nassert solution('1 10 1') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('0 0 1') == 'Yes'",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"5 4 5 4\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"0 100 0 100\") == \"No\"\nassert solution(\"10 0 10 10\") == \"Yes\"\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"\nassert solution(\"4\\n2 3\\n5 1\\n\") == \"7\\n\"\nassert solution(\"6\\n1 2 3\\n4 5\\n\") == \"11\\n\"\nassert solution(\"5\\n5 5\\n2 2\\n\") == \"11\\n\"\nassert solution(\"7\\n7 7\\n4 4\\n\") == \"15\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 105
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\n\nimport math",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\", \"Test failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10 2 5\n6 3 4\n''') == '5'\n\nassert solution('''\n4\n10 2 5\n6 3 4\n''') == '10'\n\nassert solution('''\n5\n10 2 5\n6 3 4\n''') == '15'\n\nassert solution('''\n6\n10 2 5\n6 3 4\n''') == '20'\n\nassert solution('''\n7\n10 2 5\n6 3 4\n''') == '20'\n\nassert solution('''\n8\n10 2 5\n6 3 4\n''') == '20'\n\nassert solution('''\n9\n10 2 5\n6 3 4\n''') == '20'\n\nassert solution('''\n10\n10 2 5\n6 3 4\n''') == '20'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4\\n') == '5\\n'\nassert solution('5\\n6 7 8\\n9 10 11\\n12 13 14\\n') == '13\\n'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"5\") == \"5\\n\"\nassert solution(\"\") == \"\"\nprint(\"All test cases pass\")",
        "num_ids_2": 39,
        "num_ids_4": 45
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"2\\n1 1\\n2 2\") == \"3\\n\"\nassert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"2\\n1 1\\n2 2\") == \"3\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"6\\n3 4 5\\n2 1 6\") == \"6\\n\"\nassert solution(\"10\\n1 2 3\\n4 5 6\") == \"15\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 81
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\\n\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\\n\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 154
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"5 5\\n....\\n..##\\n...##\\n....##\\n..###\") == \"###\\n###\\n..##\\n...##\\n....##\\n..###\\n\"\nassert solution(\"6 6\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\") == \"###\\n###\\n.##\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n...##\\",
        "num_ids_2": 88,
        "num_ids_4": 1027
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"\"\"\n###\n###\n.##\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"\\n###\\n###\\n.##\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"\\n###\\n###\\n.##\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#\\n') == '###\\n###\\n.##\\n'\nassert solution('4 4\\n.#.\\n..#\\n###\\n..#\\n') == '.##\\n'\nassert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#\\n') == '.##\\n'\nassert solution('4 4\\n..#\\n...#\\n..#\\n...#\\n') == '.##\\n'\nassert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#\\n') == '.##\\n'\nassert solution('4 4\\n#.#\\n#.#\\n#.#\\n#.#\\n') == '.##\\n'",
        "num_ids_2": 66,
        "num_ids_4": 125
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"###\n###\n.##\n\nThe second row and the third column in the original grid will be removed.\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n.##\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n.##\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"3.14159265358979323846\"\nassert solution(\"3\") == \"2.71828182845904523536\"\nassert solution(\"4\") == \"2.0943951659909551063e-07\"\nassert solution(\"5\") == \"1.174532925199432957692e-15\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 62,
        "num_ids_4": 127
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\\n\", \"Test failed for example input 1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 6.28318530717958623200, \"The solution should be 6.28318530717958623200.\"\nassert solution(\"2\") == 6.28318530717958623200, \"The solution should be 6.28318530717958623200.\"\nassert solution(\"3\") == 6.28318530717958623200, \"The solution should be 6.28318530717958623200.\"\nassert solution(\"4\") == 6.28318530717958623200, \"The solution should be 6.28318530717958623200.\"\nassert solution(\"5\") == 6.28318530717958623200, \"The solution should be 6.28318530717958623200.\"\n",
        "num_ids_2": 120,
        "num_ids_4": 240
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"Print the circumference of a circle of radius R.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\\n\"\nassert solution(\"2\") == \"6.28318530717958623200\\n\"\nassert solution(\"3\") == \"6.28318530717958623200\\n\"\nassert solution(\"4\") == \"6.28318530717958623200\\n\"\nassert solution(\"5\") == \"6.28318530717958623200\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == 6.28318530717958623200, \"The correct output is 6.28318530717958623200.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 6.28318530717958623200, \"The solution is incorrect. Please check the constraints and input format.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the radius of the circle: \")) == 6.28318530717958623200, \"Test failed. Solution did not produce the expected output.\"\nassert abs(solution(input(\"Enter the radius of the circle: \")) - 6.28318530717958623200) <= 10**-2, \"Test failed. Solution produced an output that is not within the specified absolute or relative error range.\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"Test 1 failed\"\nassert solution(\"-1\") == \"Infinity\", \"Test 2 failed\"\nassert solution(\"1.1\") == \"NaN\", \"Test 3 failed\"\nassert solution(\"0\") == \"0\", \"Test 4 failed\"\nassert solution(\"101\") == \"Infinity\", \"Test 5 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 53,
        "num_ids_4": 87
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Expected Yes\"\nassert solution(\"ABC\") == \"No\", \"Expected No\"\nassert solution(\"AGAG\") == \"No\", \"Expected No\"\nassert solution(\"AAAB\") == \"Yes\", \"Expected Yes\"\nassert solution(\"ZZZZ\") == \"No\", \"Expected No\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"BBAA\") == \"No\"\nassert solution(\"ABCA\") == \"Yes\"\nassert solution(\"AABBC\") == \"No\"\nassert solution(\"AAAA\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AASSA') == 'No'\nassert solution('AAA') == 'No'\nassert solution('AA') == 'Yes'\nassert solution('A') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AGGG\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCDGH\") == \"No\"\nassert solution(\"AEIOU\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test 1: If S consists of exactly two kinds of characters which both appear twice in S, print Yes.\"\nassert solution(\"AASSA\") == \"No\", \"Test 2: If S consists of exactly two kinds of characters which both appear twice in S, print No.\"\nassert solution(\"AAA\") == \"Yes\", \"Test 3: If S consists of exactly two kinds of characters which both appear twice in S, print Yes.\"\nassert solution(\"A\") == \"Yes\", \"Test 4: If S consists of exactly two kinds of characters which both appear twice in S, print Yes.\"\nassert solution(\"AAS\") == \"No\", \"Test 5: If S consists of exactly two kinds of characters which both appear twice in S, print No.\"",
        "num_ids_2": 71,
        "num_ids_4": 139
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Invalid output\"\nassert solution(\"AABB\") == \"No\", \"Invalid output\"\nassert solution(\"ABCA\") == \"Yes\", \"Invalid output\"\nassert solution(\"AAB\") == \"No\", \"Invalid output\"\nassert solution(\"A\") == \"No\", \"Invalid output\"\nassert solution(\"BCDE\") == \"No\", \"Invalid output\"\nassert solution(\"AAABBB\") == \"No\", \"Invalid output\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"S consists of A and S which both appear twice in S.\"\nassert solution(\"ACE\") == \"Yes\", \"S consists of A and S which both appear twice in S.\"\nassert solution(\"BCA\") == \"No\", \"S consists of A and S which both appear twice in S.\"\nassert solution(\"XYZ\") == \"No\", \"S consists of A and S which both appear twice in S.\"",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Test case 1 failed.\"\nassert solution(\"aaaASa\") == \"No\", \"Test case 2 failed.\"\nassert solution(\"abab\") == \"No\", \"Test case 3 failed.\"\nassert solution(\"abcd\") == \"No\", \"Test case 4 failed.\"\nassert solution(\"abbab\") == \"Yes\", \"Test case 5 failed.\"",
        "num_ids_2": 37,
        "num_ids_4": 71
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASSS\") == \"Yes\"\nassert solution(\"AASA\") == \"Yes\"\nassert solution(\"BBAA\") == \"No\"\nassert solution(\"A\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 3\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"-13 3\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"14 6\") == \"-20\", \"The largest number among A + B, A - B, and A \\times B should be -20.\"\nassert solution(\"-1 2\") == \"-2\", \"The largest number among A + B, A - B, and A \\times B should be -2.\"\nassert solution(\"-1 1\") == \"-1\", \"The largest number among A + B, A - B, and A \\times B should be -1.\"\nassert solution(\"-10 1\") == \"-10\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"",
        "num_ids_2": 76,
        "num_ids_4": 149
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter two integers A and B: \")) == \"-10\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 7\") == \"-13\"\nassert solution(\"8 6\") == \"-24\"\nassert solution(\"-13 3\") == \"-10\"\nassert solution(\"-13 -5\") == \"-15\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"-3\"\nassert solution(\"-1 2\") == \"4\"\nassert solution(\"-1 -2\") == \"-14\"\nassert solution(\"-10 10\") == \"30\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\") == \"-10\"\nassert solution(\"10 0\") == \"-10\"\nassert solution(\"-5 2\") == \"-25\"\nassert solution(\"-5 5\") == \"-10\"\nassert solution(\"-5 -2\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n\") == \"-12\"\nassert solution(\"2 7\\n\") == \"-12\"\nassert solution(\"-10 4\\n\") == \"-10\"\nassert solution(\"-12 7\\n\") == \"-12\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-10 3\") == \"-16\"\nassert solution(\"-39 21\") == \"-130\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"100 100\") == \"2000\"\nassert solution(\"1 -1\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13 3\") == \"-10\\n\", \"Expected output: -10\\n\"\nassert solution(\"-13 3\") == \"-10\\n\", \"Expected output: -10\\n\"\nassert solution(\"-13 -3\") == \"-10\\n\", \"Expected output: -10\\n\"\nassert solution(\"1 0\") == \"-10\\n\", \"Expected output: -10\\n\"\nassert solution(\"1 0\") == \"-10\\n\", \"Expected output: -10\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 103
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 3\") == -10, \"Test case failed\"\nassert solution(\"-13 3\") == -10, \"Test case failed\"\nassert solution(\"-13 6\") == -39, \"Test case failed\"\nassert solution(\"5 7\") == 54, \"Test case failed\"",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-13 3\") == -10, \"Expected -10, got {0}\".format(solution(\"-13 3\"))\nassert solution(\"-2 5\") == -2, \"Expected -2, got {0}\".format(solution(\"-2 5\"))\nassert solution(\"0 5\") == 0, \"Expected 0, got {0}\".format(solution(\"0 5\"))\nassert solution(\"3 0\") == 0, \"Expected 0, got {0}\".format(solution(\"3 0\"))\nassert solution(\"1 3\") == 3, \"Expected 3, got {0}\".format(solution(\"1 3\"))\nprint(\"All test cases passed!\")",
        "num_ids_2": 62,
        "num_ids_4": 120
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your code is wrong. Please check the sample input and output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\", \"The output should be 3\"\n\nN = int(stdin.readline())\nH_list = list(map(int, stdin.readline().split()))\n\ncount = 0\nfor i in range(N):\n    if H_list[i] <= H_list[i + 1]:\n        count += 1\n\nprint(count)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\", \"Incorrect output. Expected 3, received {}.\".format(solution(\"4\\n6 5 6 8\"))",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\", \"Test case 1 failed.\"\n\nassert solution(\"5\\n4 5 6 7\") == \"2\\n\", \"Test case 2 failed.\"\n\nassert solution(\"6\\n7 8 9 10\") == \"1\\n\", \"Test case 3 failed.\"\n\nassert solution(\"7\\n9 10 11 12\") == \"0\\n\", \"Test case 4 failed.\"\n\nassert solution(\"8\\n10 11 12 13\") == \"0\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 56,
        "num_ids_4": 116
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"5\\n3 4 5\") == \"2\"\nassert solution(\"6\\n8 9 8\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='4\\n6 5 6 8') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 1 2 3 4\") == \"2\\n3 4\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n4\\n5\\n1 2 1 2 1\\n5\\n1 2 3 4 5\\n') == '2\\n3 4 1\\n'\nassert solution('4\\n1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 2 3 4 5\\n') == '4\\n1 1 1 1 1\\n1 1 1 1 1\\n'\nassert solution('5\\n1 2 1 2 1\\n5\\n1 2 3 4 5\\n') == '1\\n5 1\\n'",
        "num_ids_2": 140,
        "num_ids_4": 184
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 1 2 3 4\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"\nassert solution(\"5\\n1 2 1 2 1\") == \"3\"",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"Test case 1 is invalid: The given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways.\"\nassert solution(input()) == \"Output\\n2\\n3 4\\nInput\\n4\\n1 1 1 1\\nOutput\\n4\\n1 1 1 1\\nInput\\n5\\n1 2 3 4 5\\nOutput\\n1\\n5\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\\n2 2 1",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n3 4 \"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4') == '2\\n3 4 '\nassert solution('4\\n1 1 1 1') == '4\\n1 1 1 1 '\nassert solution('5\\n1 2 3 4 5') == '1\\n5 \nassert solution('5\\n1 2 1 2 1') == '3\\n2 2 1 '",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2', 'Expected output \"2\", got \"{}\"'.format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '1'\nassert solution() == '7'\nassert solution() == '4'\nassert solution() == '333333333'\nassert solution() == '333333328'\n\nfrom typing import List\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case} has incorrect output.\\nInput: {input_data}\\nOutput: {output_data}\\nSolution: {solution(input_data)}\"\nfor test_case in range(1, t+1):\n    input_data = input()\n    output_data = output_case()\n    solution(input_data)",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"7\"\nassert solution() == \"4\"\nassert solution() == \"333333333\"\nassert solution() == \"333333328\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\"\n\nsolution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\")",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"\nassert solution(\"5\\n10\\n15\\n20\\n25\\n30\") == \"4\"\nassert solution(\"2\\n3\\n5\\n7\\n10\") == \"2\"\nassert solution(\"10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100\\n105\\n110\\n115\\n120\\n125\\n130\\n135\\n140\\n145\\n150\\n155\\n160\\n165\\n170\\n175\\n180\\n185\\n190\\n195\\n200\\n205\\n210\\n215\\n220\\n225\\n230\\n235\\n240\\n245\\n250\\n255\\n260\\n265\\n270\\n275\\n280\\n285\\n290\\n295\\n300\\n305\\n310\\n315\\n320\\n325\\n330\\n335\\n340\\n345\\n350\\n355\\n360\\n365\\n370\\n375\\n380\\n385\\n390\\n395\\n400\\n405\\n410\\n415\\n420\\n425\\n430\\n435\\n440\\n445\\n450\\n455\\n460\\n465\\n470\\n475\\n480\\n485\\n490\\n495\\n500\\n505\\n510\\n515\\n520\\n525\\n530\\n535\\n540\\n545\\n550\\n555\\n560\\n565\\n570\\n575\\n580\\n585\\n590\\n595\\n600\\n605\\n610\\n615\\n620\\n625\\n630\\n635\\n640\\n645\\n650\\n655\\n660\\n665\\n670\\n675\\n680\\n685\\n690\\n695\\n700\\n705\\n710\\n715\\n720\\n725\\n730\\n735\\n740\\n745\\n750\\n755\\n760\\n765\\n770\\n775\\n780\\n785\\n790\\n795\\n800\\n805\\n810\\n815\\n820\\n825\\n830\\n835\\n840\\n845\\n850\\n855\\n860\\n865\\n870\\n875\\n880\\n885\\n890\\n895\\n900\\n905\\n910\\n",
        "num_ids_2": 113,
        "num_ids_4": 1027
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == 50, \"Test case 1 failed\"\nassert solution(\"1000000000 9\") == 1, \"Test case 2 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 50\nassert solution(4) == 51\nassert solution(5) == 52\nassert solution(10) == 100\nassert solution(100) == 1000000000\nassert solution(1000000000) == 1",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(512, 4) == 50\nassert solution(1000000000, 9) == 1",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50', \"Expected '50', got '{}'.\".format(solution('512 4'))\nassert solution('1000000000 9') == '1', \"Expected '1', got '{}'.\".format(solution('1000000000 9'))",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\", \"The output is incorrect.\"\nassert solution(\"1000000000 9\") == \"1\", \"The output is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but the function is returning {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\", \"Output: 50\"\nassert solution(\"1000000000 9\") == \"1\", \"Output: 1\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(512, 4) == 50\nassert solution(1000000000, 9) == 1",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\\n5\"\nassert solution(\"3\") == \"2\\n4 5\"\nassert solution(\"7\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2', 'Test 1 failed'\nassert solution() == '2', 'Test 2 failed'\nassert solution() == '5', 'Test 3 failed'\nassert solution() == '2', 'Test 4 failed'\nassert solution() == '7', 'Test 5 failed'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"\nassert solution(\"7\\n1 2 2 2 2 3 2\") == \"7\\n1 2 2 2 2 3 2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"Input empty\"\nassert solution(\"7\\n\") == \"\", \"Input format error\"\nassert solution(\"7\\n3\\n4\\n5\\n1\\n2\\n2\\n1\\n\") == \"5\\n2 1 1 2 3\\n\", \"Test Case 1\"\nassert solution(\"5\\n3\\n5\\n1\\n5\\n\") == \"2\\n5 5 \\n\", \"Test Case 2\"\nassert solution(\"3\\n5\\n1\\n4\\n\") == \"2\\n4 5 \\n\", \"Test Case 3\"\nassert solution(\"7\\n2\\n2\\n1\\n2\\n2\\n2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\", \"Test Case 4\"",
        "num_ids_2": 25,
        "num_ids_4": 114
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0, \"Input error\"\nassert solution(\"7\\n4 3 5 1 2 2 1\") == 5, \"Output error\"\nassert solution(\"5\\n3 7 5 1 5\") == 2, \"Output error\"\nassert solution(\"3\\n5 1 4\") == 2, \"Output error\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == 7, \"Output error\"",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The output is not correct\"\n\ninput = \"\"\"\n7\n4 3 5 1 2 2 1\n5\n3 7 5 1 5\n3\n5 1 4\n7\n2 2 3 2 1 2 2\n\"\"\"\n\noutput = \"\"\"\n5\n2 1 1 2 3\n2\n5 5\n2\n4 5\n7\n1 2 2 2 2 3 2\n\"\"\"\n\nsolution = \"\"\"\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4') == '-1'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2'\n\nassert solution() == '-1'\n\nassert solution() == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 3\") == \"1\"",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abcde') == 'abcde'\nassert solution('qwerty') == 'qwerty'\nassert solution('vvvvvv') == 'vvvvvv'\nassert solution('tleelte') == 'tleelte'\nassert solution('abcde') == 'abcde'",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcde\", 5, 3) == \"elel\"\nassert solution(\"abcde\", 5, 2) == \"elee\"\nassert solution(\"abcde\", 5, 1) == \"el\"\nassert solution(\"abcde\", 7, 5) == \"tleelte\"\nassert solution(\"abcde\", 7, 6) == \"qwerty\"\nassert solution(\"abcde\", 7, 1) == \"el\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"The provided solution {solution(input())} is incorrect. Please check the example and the input.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"tleelte\", \"The solution is incorrect. The expected answer is 'tleelte', but the actual answer is: '{}'.\".format(solution(input()))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example1) == 'tleelte'\nassert solution(example2) == 'qwerty'\nassert solution(example3) == 'vvvvvv'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\\nqwerty\\nvvvvvv\\nbcdeabc\"\nassert solution(\"10\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrst",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"tleelte\\nqwerty\\nvvvvvv\\nabcdc\"\n\nassert solution(\"2\\n1\\n2\\n1\\n1\\n2\") == \"ttleel\\nqwerty\\nvvvvvv\\nabcdc\"\n\nassert solution(\"3\\n2\\n2\\n1\\n1\\n1\") == \"ttleel\\nqqrty\\nvvvvvv\\nabcdc\"\n\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\") == \"tleelte\\nqwerty\\nvvvvvv\\nabcdc\"\n\nassert solution(\"5\\n7\\n5\\n3\\n6\\n1\\n6\\n6\\n5\\n2\\n2\\n1\\n1\\n1\") == \"tleelte\\nqwerty\\nvvvvvv\\nabcdc\"",
        "num_ids_2": 78,
        "num_ids_4": 157
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1 1\\n6 6 1\\n5 2 2\\n\") == \"qwerty\"\nassert solution(\"6 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"tleelte\"\nassert solution(\"6 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n\") == \"abcde\"",
        "num_ids_2": 70,
        "num_ids_4": 108
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"tleelte\"\nassert solution() == \"qwerty\"\nassert solution() == \"vvvvvv\"\nassert solution() == \"abcde\"",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 12 6\") == \"12\", \"Sample output is incorrect\"\nassert solution(\"10 12 6\") == \"14\", \"Sample output is incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"10 12 6\") == \"6\"\nassert solution(\"15 12 6\") == \"5\"\nassert solution(\"30 12 6\") == \"4\"\nassert solution(\"100 12 6\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 12 6\") == \"12\"\n\nassert solution(\"4 2 3\") == \"1\"\n\nassert solution(\"10 5 7\") == \"4\"\n\nassert solution(\"10 10 10\") == \"10\"\n\nassert solution(\"1000 1000 1000\") == \"1000\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\"\nassert solution(\"5 3 5\") == \"6\\n\"\nassert solution(\"6 4 4\") == \"10\\n\"\nassert solution(\"10 10 10\") == \"20\\n\"\nassert solution(\"15 10 15\") == \"12\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 12 6') == '12'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\", \"Expected 12, got {}.\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output should be 2.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"15\") == \"2\"\nassert solution(\"20\") == \"2\"\nassert solution(\"25\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Test case failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n\") == \"2\\n\" # expected output: 2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"\n\nassert solution(\"5 10\") == \"5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 7\") == \"4\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"7 1\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\" #Correct\nassert solution(\"2 4\") == \"5\" #Correct\nassert solution(\"3 5\") == \"7\" #Correct\nassert solution(\"4 6\") == \"10\" #Correct\nassert solution(\"5 7\") == \"14\" #Correct\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"5 5\") == \"6\"\nassert solution(\"10 5\") == \"6\"\nassert solution(\"5 10\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"1 5\") == \"6\\n\", \"Test 2 failed\"\nassert solution(\"2 3\") == \"2\\n\", \"Test 3 failed\"\nassert solution(\"4 5\") == \"5\\n\", \"Test 4 failed\"\nassert solution(\"7 10\") == \"21\\n\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\", \"Your solution is wrong.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\", \"Test 1 failed\"\nassert solution(\"2 2\") == \"2\", \"Test 2 failed\"\nassert solution(\"3 3\") == \"3\", \"Test 3 failed\"\nassert solution(\"4 5\") == \"5\", \"Test 4 failed\"\nassert solution(\"5 6\") == \"6\", \"Test 5 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 12\") == \"16\\n\"\nassert solution(\"10 20\") == \"20\\n\"\nassert solution(\"12 10\") == \"16\\n\"\nassert solution(\"24 16\") == \"12\\n\"\nassert solution(\"36 24\") == \"8\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 12\") == \"16\", \"Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\\n\", \"The output should be 16.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\", \"Test case 1 failed\"\nassert solution(\"10 20\") == \"8\", \"Test case 2 failed\"\nassert solution(\"2 2\") == \"2\", \"Test case 3 failed\"\nassert solution(\"5 10\") == \"5\", \"Test case 4 failed\"\nassert solution(\"15 30\") == \"10\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 81
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"16\\n\", \"Expected output: 16\\n, but got: {}\".format(solution(\"4 12\"))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 12\") == \"16\", \"Test case 1 failed\"\nassert solution(\"8 16\") == \"32\", \"Test case 2 failed\"\nassert solution(\"12 8\") == \"48\", \"Test case 3 failed\"\nassert solution(\"5 10\") == \"15\", \"Test case 4 failed\"\nassert solution(\"20 10\") == \"20\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"16\\n\", \"Test failed\"\nprint(\"Test passed\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"chokudaiz can be obtained by appending z at the end of chokudai\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\\nchokudaiz\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"chokudai\\nchokudaiz\") == \"Yes\"\nassert solution(\"chokudai\\nchokudaiz\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"2 24\") == \"IMPOSSIBLE\"\nassert solution(\"0 0\") == \"IMPOSSIBLE\"\nassert solution(\"10 10\") == \"IMPOSSIBLE\"\nassert solution(\"-10 -10\") == \"IMPOSSIBLE\"\nassert solution(\"-2 10\") == \"IMPOSSIBLE\"\nassert solution(\"2 -2\") == \"IMPOSSIBLE\"\nassert solution(\"10 100\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"-2 16\") == \"IMPOSSIBLE\"\nassert solution(\"10 20\") == \"IMPOSSIBLE\"\nassert solution(\"2 10\") == \"IMPOSSIBLE\"\nassert solution(\"-2 10\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"-2 -10\") == \"IMPOSSIBLE\"\nassert solution(\"2 16\") == \"IMPOSSIBLE\"\nassert solution(\"-2 10\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\") == \"9\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '9\\n'\nassert solution('2 16') == '9\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"111\") == \"Yes\"\nassert solution(\"012\") == \"Yes\"\nassert solution(\"000\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"223\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"0\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(117) == \"Yes\" # Correct solution",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes', 'Test case 1 should pass'\nassert solution('119') == 'No', 'Test case 2 should pass'\nassert solution('011') == 'No', 'Test case 3 should pass'\nassert solution('999') == 'No', 'Test case 4 should pass'\nassert solution('900') == 'Yes', 'Test case 5 should pass'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(117) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"200\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"777\") == \"Yes\"\nassert solution(\"999\") == \"No\"\nassert solution(\"1000\") == \"No\"\nassert solution(\"007\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"200\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(0) == \"Yes\"\nassert solution(1) == \"No\"\nassert solution(2) == \"Yes\"\nassert solution(10) == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\" # Correctness Test 1\nassert solution(\"101\") == \"Yes\" # Correctness Test 2\nassert solution(\"123\") == \"No\" # Correctness Test 3\nassert solution(\"10\") == \"No\" # Correctness Test 4\nassert solution(\"10101\") == \"Yes\" # Correctness Test 5",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(23) == \"Yes\"\nassert solution(1000000000) == \"Yes\"\nassert solution(1000000001) == \"No\"\nassert solution(1000000002) == \"Yes\"\nassert solution(2000000000) == \"No\"\nassert solution(5000000000) == \"No\"\nassert solution(10000000000) == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 60
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"102\") == \"No\"\nassert solution(\"103\") == \"No\"\nassert solution(\"104\") == \"No\"\nassert solution(\"105\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0,0,0,0\"  # empty input\nassert solution(\"1 0 0 1\") == \"-1 1 -1 0\"  # (x_3,y_3)=(1,1),(x_4,y_4)=(1,0)\nassert solution(\"0 0 0 1\") == \"0,0,0,0\"  # valid input\nassert solution(\"0 0 1 0\") == \"-1 1 -1 0\"  # (x_3,y_3)=(1,1),(x_4,y_4)=(1,0)\nassert solution(\"0 1 0 0\") == \"-1 1 -1 0\"  # (x_3,y_3)=(1,1),(x_4,y_4)=(1,0)\nassert solution(\"1 1 1 0\") == \"-1 1 -1 0\"  # (x_3,y_3)=(1,1),(x_4,y_4)=(1,0)\n",
        "num_ids_2": 69,
        "num_ids_4": 146
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nThis code will test the correctness of the solution.",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"0 0 0 1\\n\") == \"0 1 0 1\\n\"\nassert solution(stdin=\"100 100 100 100\\n\") == \"100 100 100 100\\n\"\nassert solution(stdin=\"100 100 100 100\\n\") == \"100 100 100 100\\n\"\nassert solution(stdin=\"100 100 100 100\\n\") == \"100 100 100 100\\n\"\nassert solution(stdin=\"100 100 100 100\\n\") == \"100 100 100 100\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 160
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\\n\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"(-1, 1, -1, 0)\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\\n\") == \"-1 1 -1 0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 2 3 4\") == \"3 4 2 1\"\nassert solution(\"5 6 7 8\") == \"7 8 6 5\"\nassert solution(\"1 0 0 0\") == \"0 0 1 0\"\nassert solution(\"-1 0 0 0\") == \"0 0 -1 0\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"red blue\\n3 4\\nred\") == \"2 4\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"banana\\napple\\n\") == \"0 0\\n\"\nassert solution(\"apple\\nbanana\\n\") == \"0 0\\n\"\nassert solution(\"hello\\nworld\\n\") == \"2 2\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 84
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4\\nTakahashi chose a ball with red written on it and threw it away.Now we have two balls with the string S and four balls with the string T.\\n'\nassert solution('banana\\n7 6\\nred\\n') == '0 0\\n\\n'\nassert solution('red blue\\n2 4\\ngrey\\n') == '0 0\\n\\n'\nassert solution('blue green\\n2 3\\nred\\n') == '1 2\\n\\n'\nassert solution('red blue\\n1 1\\nred\\n') == '2 1\\n\\n'",
        "num_ids_2": 89,
        "num_ids_4": 143
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test Case 1 failed\"\nassert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test Case 2 failed\"\nassert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test Case 3 failed\"\nassert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test Case 4 failed\"\nassert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test Case 5 failed\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away. Now we have two balls with the string S and four balls with the string T.\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"The output should be 2 4\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"red blue\\n3 4\\nred\") == \"2 4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"not red blue\\nnot 3 4\\nnot red\\n\") == \"2 4\\n\"\nassert solution(\"not blue red\\nnot 3 4\\nnot blue\\n\") == \"2 4\\n\"\nassert solution(\"blue red not\\n3 4\\nblue\\n\") == \"2 4\\n\"\nassert solution(\"not not not\\nnot not not\\nnot not\\n\") == \"2 4\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"blue yellow\\n5 6\\nred\\n\") == \"1 2\\n\"\nassert solution(\"blue green\\n1 1\\nred\\n\") == \"1 1\\n\"\nassert solution(\"red blue\\n2 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"blue yellow\\n5 6\\nred\\n\") == \"1 2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\\n\", \"Test case 1: S is a concatenation of two copies of some string.\"\n\nassert solution(\"6\\ndefgdef\") == \"No\\n\", \"Test case 2: S is not a concatenation of two copies of some string.\"\n\nassert solution(\"6\\nabc\") == \"No\\n\", \"Test case 3: S is not a concatenation of two copies of some string.\"\n\nassert solution(\"6\\n\") == \"No\\n\", \"Test case 4: S is not a concatenation of two copies of some string.\"\n\nassert solution(\"6\\nhello\") == \"No\\n\", \"Test case 5: S is not a concatenation of two copies of some string.\"",
        "num_ids_2": 69,
        "num_ids_4": 136
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('4\\nabcd') == 'No'\nassert solution('5\\nabcd') == 'No'\nassert solution('1\\n') == 'No'\nassert solution('2\\nabc') == 'No'\nassert solution('3\\nabc') == 'Yes'",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nbcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\\n\"\nassert solution(\"2\\nabc\") == \"No\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nbcabc\\n\") == \"Yes\"\nassert solution(\"6\\nbcabc\\n\") == \"No\"\nassert solution(\"5\\nkjhjk\\n\") == \"Yes\"\nassert solution(\"5\\nkjhjk\\n\") == \"No\"\nassert solution(\"1\\nabc\\n\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('5\\nabcab') == 'No'\nassert solution('4\\nabc') == 'No'\nassert solution('3\\nabc') == 'No'\nassert solution('2\\nabc') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"7\\nabc\") == \"No\"\nassert solution(\"6\\nacb\") == \"No\"\nassert solution(\"5\\nabcabc\") == \"No\"\nassert solution(\"4\\nbcd\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 3 1 2\") == \"3.000000 0\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3 1 2\n    \"\"\"\n) == \"3.000000 0\\n\"\n\nassert solution(\n    \"\"\"\n    4 5 1 2\n    \"\"\"\n) == \"0.000000 1\\n\"\n\nassert solution(\n    \"\"\"\n    4 5 3 4\n    \"\"\"\n) == \"1.000000 1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"5 7 1 2\") == \"11.228895 0\"\nassert solution(\"1 1 1 1\") == \"0.000000 0\"\nassert solution(\"2 2 1 1\") == \"0.000000 0\"\nassert solution(\"2 3 1 3\") == \"3.000000 0\"\nassert solution(\"2 4 2 4\") == \"8.000000 0\"\n\nfor line in sys.stdin.readlines():\n    W, H, x, y = map(int, line.split())\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x) + \" \" + str(y)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x) + \" \" + str(y+1)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x-1) + \" \" + str(y)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x-1) + \" \" + str(y+1)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x) + \" \" + str(y-1)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x) + \" \" + str(y-1)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x+1) + \" \" + str(y)) == \"3.000000 0\"\n    assert solution(str(W) + \" \" + str(H) + \" \" + str(x+1) + \" \" + str(y-1)) == \"3.000000 0\"",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3.000000 0\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Incorrect output.\\nExpected: {output()}\\nGot: {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.000000 0\\n\", \"Test failed\"\nassert solution(\"2 3 1 2\") == \"3.000000 0\\n\", \"Test failed\"\nassert solution(\"10 5 1 1\") == \"3.000000 0\\n\", \"Test failed\"\nassert solution(\"2 2 2 2\") == \"3.000000 0\\n\", \"Test failed\"\nassert solution(\"10 5 10 5\") == \"3.000000 0\\n\", \"Test failed\"",
        "num_ids_2": 56,
        "num_ids_4": 119
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four\\n'\nassert solution('1\\nP') == 'Three\\n'\nassert solution('5\\nP W G Y') == 'Four\\n'\nassert solution('6\\nP W G Y Y G') == 'Three\\n'\nassert solution('6\\nP Y G Y Y G') == 'Four\\n'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four\\n'\nprint('All tests passed!')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"\nassert solution(\"5\\nW P W W P\") == \"Three\\n\"\nassert solution(\"4\\nW P P Y P\") == \"Three\\n\"\nassert solution(\"3\\nP Y P Y P\") == \"Four\\n\"\nassert solution(\"1\\nP P P P\") == \"Four\\n\"\nassert solution(\"2\\nP P P P\") == \"Four\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(output()), f\"Your code is incorrect. Please check the provided examples and the problem statement.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3''') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 3 2\\n2 3 1 3 4 2\"\n) == \"6\", \"The solution should be 6\"\n\nassert solution(\n    \"5 3 3\\n1 2 4 2 3\"\n) == \"2\", \"The solution should be 2\"\n\nassert solution(\n    \"5 5 6\\n1 2 6 10 3\"\n) == \"2\", \"The solution should be 2\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 3\\n1 2 4 2 3') == '2'\nassert solution('5 5 6\\n1 2 6 10 3') == '2'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"\n",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n4 8 2 6 2\\n4 5 4 1 3\\n') == '7'\nassert solution('4\\n1 3 2 4\\n1 3 2 4\\n') == '0'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\\n\", \"Test failed\"\n\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\\n\", \"Test failed\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7', \"The output is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 7\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n4 8 2 6 2\\n4 5 4 1 3\\n\\nInput\\n4\\n1 3 2 4\\n1 3 2 4\\n\\nOutput\\n7\\n\\nInput\\n4\\n1 3 2 4\\n1 3 2 4\\n\\nOutput\\n0\\n\") == \"7\\n0\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n5\\n10') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '''\n1 1 3 5 9\n'''\n\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '''\n9999 9 50605065 1 5 89 5 999999999 60506055 999999999\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [1, 1, 3, 5, 9]\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == [1, 1, 3, 5, 9], \"The output does not match the expected output\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [1, 1, 3, 5, 9]",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed for solution. Expected: {output()}, Received: {solution(input())}\"\n\ninput_data = '''\n5\n1 2 4 5 10\n\nInput\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n\nOutput\n9999 9 50605065 1 5 89 5 999999999 60506055 999999999\n'''",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\n\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 10):\n    assert solution(f\"Input{i}\") == f\"Output{i}\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Error in solution for input: {input_str}\"\nprint(\"OK\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == 1\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == 2",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\", \"Expected output 1, got {}\".format(solution(stdin))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\\n\"\n\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\\n\"\n\nprint(solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\"))",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed. Please fix the code.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, f\"Test failed: Solution does not match expected output.\"\nfor solution_input, solution_output in test_cases:\n    assert solution(solution_input) == solution_output, f\"Test failed for input: {solution_input}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"The solution is incorrect. Please check the given example and the expected output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 0 0 1 2\n    1 2\n    2 3\n    2 4\n    2 5\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 0 0 0 2\n    1 2\n    2 3\n    3 4\n    4 5\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5') == '1\\n'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5') == '4\\n'\nassert solution('3\\n1 1 2\\n2 3\\n1 3') == '0\\n'",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"4\\n\"\n\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"4\\n\"\n\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(7) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\\n3\\n1 1 2\\n2 3\\n1 3\\n\\n1\\n2\\n3\\n\\n0') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\n3\\n1 1 2\\n2 3\\n1 3\\n\\n1\\n2\\n3\\n\\n0') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n\\n1\\n2\\n3\\n\\n0') == '0'\n",
        "num_ids_2": 158,
        "num_ids_4": 201
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"1 1 2\\n2 3\\n1 3\") == \"0\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 106
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\\nOutput\\n1\\n\\nInput\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nOutput\\n4\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\\nOutput\\n0\") == \"1\\n\\n4\\n0\"",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5') == '4'\nassert solution('3\\n1 1 2\\n2 3\\n1 3') == '0'",
        "num_ids_2": 82,
        "num_ids_4": 109
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'alvuw', 'The solution should return \"alvuw\".'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(stdin)) == 'alvuw'\nassert solution(solution(stdin)) == 'qoztvz'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"bc\"\nassert solution() == \"alvuw\"\nassert solution() == \"qoztvz\"",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(\"az\")) == \"bc\"\nassert solution(solution(\"bf\")) == \"bc\"\nassert solution(solution(\"ac\")) == \"ac\"\nassert solution(solution(\"be\")) == \"be\"\nassert solution(solution(\"hg\")) == \"hg\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"qoztvz\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([2, \"az\", \"bf\"]) == \"bc\"\nassert solution([5, \"afogk\", \"asdji\"]) == \"alvuw\"\nassert solution([6, \"nijfvj\", \"tvqhwp\"]) == \"qoztvz\"",
        "num_ids_2": 37,
        "num_ids_4": 61
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"ad\") == \"ad\"\nassert solution(\"ae\") == \"ae\"\nassert solution(\"af\") == \"af\"\nassert solution(\"ag\") == \"ag\"\nassert solution(\"ah\") == \"ah\"\nassert solution(\"ai\") == \"ai\"\nassert solution(\"aj\") == \"aj\"\nassert solution(\"ak\") == \"ak\"\nassert solution(\"al\") == \"al\"\nassert solution(\"am\") == \"am\"\nassert solution(\"an\") == \"an\"\nassert solution(\"ao\") == \"ao\"\nassert solution(\"ap\") == \"ap\"\nassert solution(\"aq\") == \"aq\"\nassert solution(\"ar\") == \"ar\"\nassert solution(\"as\") == \"as\"\nassert solution(\"at\") == \"at\"\nassert solution(\"au\") == \"au\"\nassert solution(\"av\") == \"av\"\nassert solution(\"aw\") == \"aw\"\nassert solution(\"ax\") == \"ax\"\nassert solution(\"ay\") == \"ay\"\nassert solution(\"az\") == \"az\"\nassert solution(\"ba\") == \"ba\"\nassert solution(\"bb\") == \"bb\"\nassert solution(\"bc\") == \"bc\"\nassert solution(\"bd\") == \"bd\"\nassert solution(\"be\") == \"be\"\nassert solution(\"bf\") == \"bf\"\nassert solution(\"bg\") == \"bg\"\nassert solution(\"bh\") == \"bh\"\nassert solution(\"bi\") == \"bi\"\nassert solution(\"bj\") == \"bj\"\nassert solution(\"bk\") == \"bk\"\nassert solution(\"bl\") == \"bl\"\nassert solution(\"bm\") == \"bm\"\nassert solution(\"bn\") == \"bn\"\nassert solution(\"bo\") == \"bo\"\nassert solution(\"bp\") == \"bp\"\nassert solution(\"bq\") == \"bq\"\nassert solution(\"br\") == \"br\"\nassert solution(\"bs\") == \"bs\"\nassert solution(\"bt\") == \"bt\"\nassert solution(\"bu\") == \"bu\"\nassert solution(\"bv\") == \"bv\"\nassert solution(\"bw\") == \"bw\"\nassert solution(\"bx\") == \"bx\"\nassert solution(\"by\") == \"by\"\nassert solution(\"bz\") == \"bz\"\nassert solution(\"ca\") == \"ca\"\nassert solution(\"cb\") == \"cb\"\nassert solution(\"cc\") == \"cc\"\nassert solution(\"cd\") == \"cd\"\nassert solution(\"ce\") == \"ce\"\nassert solution(\"cf\") == \"cf\"\nassert solution(\"cg\") == \"cg\"\nassert solution(\"ch\") == \"ch\"\nassert solution(\"ci\") == \"ci\"\nassert solution(\"cj\") == \"cj\"\nassert solution(\"ck\") == \"ck\"\nassert solution(\"cl\") == \"cl\"\nassert solution(\"cm\") == \"cm\"\nassert solution(\"cn\") == \"cn\"\nassert solution(\"co\") == \"co\"\nassert solution(\"cp\") == \"cp\"\nassert solution(\"cq\") == \"cq\"\nassert solution(\"cr\") == \"cr\"\nassert solution(\"cs\") == \"cs\"\nassert solution(\"ct\") == \"ct\"\nassert solution(\"cu\") == \"cu\"\nassert solution(\"cv\") == \"cv\"\nassert solution(\"cw\") == \"cw\"\nassert solution(\"cx\") == \"cx\"\nassert solution(\"cy\") == \"cy\"\nassert solution(\"cz\") == \"cz\"\nassert solution(\"da\") == \"da\"\nassert solution(\"db\") == \"db\"\nassert solution(\"dc\") == \"dc\"\nassert solution(\"dd\") == \"dd\"\nassert solution(\"de\") == \"de\"\nassert solution(\"df\") == \"df\"\nassert solution(\"dg\") == \"dg\"\nassert solution(\"dh\") == \"dh\"\nassert solution(\"di\") == \"di\"\nassert solution(\"dj\") == \"dj\"\nassert solution(\"dk\") == \"dk\"\nassert solution(\"dl\") == \"dl\"\nassert solution(\"dm\") == \"dm\"\nassert solution(\"dn\") == \"dn\"\nassert solution(\"do\") == \"do\"\nassert solution(\"dp\") == \"dp\"\nassert solution(\"dq\") == \"dq\"\nassert solution(\"dr\") == \"dr\"\nassert solution(\"ds\") == \"ds\"\nassert solution(\"dt\") == \"dt\"\nassert solution(\"du\") == \"du\"\nassert solution",
        "num_ids_2": 14,
        "num_ids_4": 34
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"\n\nfrom typing import List",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n\\n5 4\\n15 13 15 15 12\\n\\n4 4\\n20 10 40 30\\n\\n') == 'YES\\n1 2 3 4'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The output '{solution(input())}' is incorrect. Please check the input and the problem statement.\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 71,
        "num_ids_4": 107
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 109
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4) == \"YES\\n1 2 3\"\nassert solution(5, 3) == \"YES\\n1 2 3 4 5\"\nassert solution(5, 4) == \"NO\"\nassert solution(4, 4) == \"YES\\n1 2 3 4\"\n",
        "num_ids_2": 44,
        "num_ids_4": 79
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"YES\"\nassert solution(9) == \"YES\\n0 0 1 0 1 0 1 1 1\"\nassert solution(5) == \"NO\"\nassert solution(9) == \"NO\"",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 0 0 0 0 1 0 1 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"YES\"\n\nclass Solution:\n    def solution(self, n: int, a: List[int]) -> str:\n        increasing = True\n        res = []\n        for i in range(n):\n            if a[i] > a[i+1]:\n                res.append(0)\n            else:\n                res.append(1)\n        for i in range(len(res)-1):\n            if res[i] == res[i+1]:\n                increasing = False\n                break\n        if not increasing:\n            return \"NO\"\n        else:\n            return \"YES\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected output: {output}, but got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\n1 0 0 0 0\\n1 0 0 0 1\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 4 0 2\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\\n\") == \"YES\\n1 0 0 0 0 1 0 1 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\\n\") == \"NO\"\nassert solution(\"5\\n1 3 2\\n\") == \"NO\"\nassert solution(\"5\\n1 2 3\\n\") == \"NO\"\nassert solution(\"1\\n1\\n\") == \"NO\"",
        "num_ids_2": 105,
        "num_ids_4": 147
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\n5 1 3 6 8 2 9 0 10') == 'YES\\n1 0 0 0 0 1 0 1 0\\n'\nassert solution('5\\n1 2 4 0 2') == 'NO'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\\n1 0 0 0 0\\n\"\nassert solution(input()) == \"NO\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 4 0 2\") == \"YES\\n0 0 0 0 1\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 3 4 5 6\") == \"NO\"\n\nfrom typing import List",
        "num_ids_2": 81,
        "num_ids_4": 102
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"3\n0\n1134\n0\"\"\"\nassert solution(stdin) == \"\"\"1\n1\n51\"\"\"\nassert solution(stdin) == \"\"\"0\n0\n0\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Expected 3, got {} instead\".format(solution())\nassert solution() == 0, \"Expected 0, got {} instead\".format(solution())\nassert solution() == 1134, \"Expected 1134, got {} instead\".format(solution())\nassert solution() == 0, \"Expected 0, got {} instead\".format(solution())",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 172,
        "num_ids_4": 258
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for the given input. Expected: {expected_output}, got: {solution(stdin)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('1 10 20 30\\n50 55 60 65\\n100 150 200 250\\n500 1000 1500 2000\\n1000000 1 1 1000000000') == '1\\n2\\n3\\n0'\nassert solution('1 1 10 100\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000\\n10000 10000 10000 10000",
        "num_ids_2": 188,
        "num_ids_4": 1027
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0\\n'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"1000000000 1 1 1\") == \"0\"",
        "num_ids_2": 120,
        "num_ids_4": 145
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"3\\n\"\nassert solution(\"8\\n\") == \"1260\\n\"\nassert solution(\"20\\n\") == \"12164510040883200\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 76
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 3\nassert solution(\"8\") == 1260\nassert solution(\"20\") == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 1, \"Test 1 failed\"\nassert solution(4) == 3, \"Test 2 failed\"\nassert solution(8) == 1260, \"Test 3 failed\"\nassert solution(20) == 12164510040883200, \"Test 4 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 84
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 3\nassert solution(\"8\") == 1260\nassert solution(\"20\") == 12164510040883200\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:'",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def\"",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 46,
        "num_ids_4": 114
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('15 3\\ncccaabababaccbc\\n') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc\\n') == 'cccccc'\nassert solution('1 1\\nu\\n') == 'def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 50,
        "num_ids_4": 80
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str: pass\"",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n8\"\nassert solution(input()) == \"Output\\n20\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == 8\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == 20",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output\\n20\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n*.*\\n\") == \"-1\"",
        "num_ids_2": 152,
        "num_ids_4": 280
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == '''-1'''\n\nassert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == '''-1'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.**** \\n..**. \\n.....\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 170
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution('5 5\\n.*...\\n****.",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"-1\"\n\ngrid = [list(row) for row in stdin.split()]\n\nfor i in range(len(grid)):\n    for j in range(len(grid[i])):\n        if grid[i][j] == '.':\n            grid[i][j] =''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****.",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*... \\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 170
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"-1\", \"Empty input\"\nassert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\") == \"3\", \"Invalid output\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\") == \"3\", \"Invalid output\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"3\", \"Invalid output\"",
        "num_ids_2": 51,
        "num_ids_4": 113
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*''') == '''-1'''\n\nassert solution('''''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == \"Yes\\n\", \"N=575 is also 575 when read backward, so it is a palindromic number.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == \"Yes\"\nassert solution(234) == \"No\"\nassert solution(987654321) == \"Yes\"\nassert solution(1234567890) == \"No\"\nassert solution(0) == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 61
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(575) == \"Yes\"\nprint(\"Test Passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"121\") == \"Yes\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"100\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"Yes\\n\"\nprint(\"No\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"575\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"571\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6\") == \"Alice\\n8 is written on Alice's card, and 6 is written on Bob's card. Alice has the stronger card, and thus the output should be Alice.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\\n\"\nassert solution(\"8 5\") == \"Draw\"\nassert solution(\"7 6\") == \"Bob\"\nassert solution(\"9 6\") == \"Alice\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('11 4') == 'Bob'\nassert solution('1 3') == 'Draw'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"11 8\") == \"Bob\"\nassert solution(\"10 10\") == \"Draw\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6\") == \"Alice\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"9 1\") == \"Bob\"\nassert solution(\"10 9\") == \"Draw\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6\") == \"Alice\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\", \"Expected: 'happy newyear enjoy', but got: '{}'\".format(solution(\"happy,newyear,enjoy\"))\nassert solution(\"hello, world!\") == \"hello world!\", \"Expected: 'hello world!', but got: '{}'\".format(solution(\"hello, world!\"))\nassert solution(\"not a valid input\") == \"not a valid input\", \"Expected: 'not a valid input', but got: '{}'\".format(solution(\"not a valid input\"))\nassert solution(\"\") == \"\", \"Expected: '', but got: '{}'\".format(solution(\"\"))\nassert solution(\" \") == \" \", \"Expected:'', but got: '{}'\".format(solution(\" \"))\nassert solution(\"50\") == \"50\", \"Expected: '50', but got: '{}'\".format(solution(\"50\"))\nassert solution(\"0\") == \"0\", \"Expected: '0', but got: '{}'\".format(solution(\"0\"))\nassert solution(\"123,456,789\") == \"123 456 789\", \"Expected: '123 456 789', but got: '{}'\".format(solution(\"123,456,789\"))\nassert solution(\"123,456,789,\") == \"123 456 789\", \"Expected: '123 456 789', but got: '{}'\".format(solution(\"123,456,789,\"))\nassert solution(\"123,456,789,123,456,789\") == \"123 456 789 123 456 789\", \"Expected: '123 456 789 123 456 789', but got: '{}'\".format(solution(\"123,456,789,123,456,789\"))",
        "num_ids_2": 79,
        "num_ids_4": 137
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"Test Passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 3\\n1 0\\n-1 0\\n0 0\\n1 1\\n0 1\\n\") == \"3\\n1\\n\"\nassert solution(\"4 4\\n-1 0\\n0 0\\n0 0\\n0 0\\n\") == \"4\\n2\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 123
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\",
        "num_ids_2": 42,
        "num_ids_4": 114
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"1 1\\n1 0\\n0 0\\n1 1\\n0 1\\n1 1\\n1 1\\n0 1\\n1 0\\n1 1\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 3\\n0 1\\n1 2\\n1 0\\n2 2\\n2 0\\n0 1\\n1 2\\n2 0\\n1 1\\n1 1\\n1 1\\n1 0\\n1 2\\n0 1\\n1 1\\n2 0\\n1 1\\n0 0\") == \"2\\n1\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 212
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(\"1 1\\n2 0\\n1 1\\n3 2\\n\") == \"1\\n3\\n\"\nassert solution(\"5 5\\n1 0\\n1 1\\n2 2\\n\") == \"2\\n3\\n\"\nassert solution(\"5 5\\n-1 0\\n1 1\\n2 2\\n\") == \"1\\n3\\n\"\nassert solution(\"5 5\\n-1 0\\n1 1\\n2 2\\n3 4\\n\") == \"3\\n4\\n\"\nassert solution(\"1 1\\n-1 0\\n1 1\\n2 2\\n\") == \"1\\n1\\n\"\n",
        "num_ids_2": 74,
        "num_ids_4": 143
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n1\") == \"1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n2\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n3\") == \"3\\n1\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 157
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(stdin=\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(stdin=\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"5 3\\n1 2\\n3 4\\n4 5\\n6 7\") == \"5\\n3\\n2\\n1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2') == '14', \"The solution should print 14\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 14\nprint(14) # Correct output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"14\", \"Test failed for input 2\"\nassert solution(\"5\") == \"325\", \"Test failed for input 5\"\nassert solution(\"10\") == \"6765\", \"Test failed for input 10\"\nassert solution(\"15\") == \"1362880\", \"Test failed for input 15\"\nassert solution(\"1000000\") == \"105023785760\", \"Test failed for input 1000000\"",
        "num_ids_2": 39,
        "num_ids_4": 88
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"10\") == \"1000\"\nassert solution(\"5\") == \"25\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-5\") == \"25\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 14, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 14, \"Solution should return 14.0 as the answer.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 14, \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"14\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"14\", \"Incorrect output: 14\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"14\", \"The output should be 14, but it is \" + solution(input())\nprint(\"Correct!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r\"\"\"\n3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\", \"Test Failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n#. \\n.#\") == \"Yes\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n#.#\\n.#.#\\n#.#\\n#.#\\n.#') == 'Yes'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('#.#') == 'Yes'\nassert solution('#.#.#') == 'Yes'\nassert solution('#.#.#') == 'Yes'\nassert solution('#.#.#') == 'Yes'\nassert solution('#.#.#') == 'No'\nassert solution('#.#.#') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"#.#\") == \"Yes\"\nassert solution(\"#.#\") == \"No\"\nassert solution(\"..#\") == \"Yes\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..#\") == \"No\"\nassert solution(\"..",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Yes\\n\", \"Please implement the solution correctly\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"The amount of the allowance should be 53 when the panels are arranged as 52+1, and this is the maximum possible amount.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"The amount of the allowance will be 53 when the panels are arranged as 52+1, and this is the maximum possible amount.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Test 1\"\nassert solution(\"3 5 2\") == \"53\", \"Test 2\"\nassert solution(\"5 5 2\") == \"53\", \"Test 3\"\nassert solution(\"7 5 2\") == \"11\", \"Test 4\"\nassert solution(\"1 10 2\") == \"30\", \"Test 5\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1 5 2') == '53'\nprint('All tests passed!')",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '53\\n', \"Your code does not meet the requirements.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53\\n', \"The amount of the allowance will be 53 when the panels are arranged as 52+1, and this is the maximum possible amount.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"15950\"\nassert solution(input()) == \"15950.0\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\", \"Incorrect output.\"\nassert solution(\"2\\n4980\\n7980\\n6980\") == \"58900\", \"Incorrect output.\"\nassert solution(\"3\\n4980\\n7980\\n6980\") == \"31970\", \"Incorrect output.\"\nassert solution(\"2\\n4980\\n7980\\n6980\") == \"39620\", \"Incorrect output.\"\nassert solution(\"3\\n4980\\n7980\\n6980\") == \"20320\", \"Incorrect output.\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\n4980\\n7980\\n6980\") == \"15950\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"15950\", \"The given input is incorrect.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"The output is not correct.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"Incorrect output for test case 1.\"\n\nassert solution(\"4\\n2980\\n5980\\n3980\") == \"15950\\n\", \"Incorrect output for test case 2.\"\n\nassert solution(\"5\\n4980\\n7980\\n6980\\n8980\") == \"15950\\n\", \"Incorrect output for test case 3.\"\n\nassert solution(\"6\\n9980\\n12980\\n7980\\n10980\") == \"15950\\n\", \"Incorrect output for test case 4.\"\n\nassert solution(\"7\\n14980\\n17980\\n8980\\n10980\\n\") == \"15950\\n\", \"Incorrect output for test case 5.\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\"",
        "num_ids_2": 86,
        "num_ids_4": 186
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == 15950\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\", \"The solution should return the correct output.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '15950'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\", \"Incorrect output.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"215\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(\"31\\n27\\n45\\n22\\n\") == \"200\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"31\\n15\\n10\\n20\\n25\") == \"260\"\nassert solution(\"123\\n200\\n250\\n300\\n350\") == \"450\"\nassert solution(\"24\\n20\\n25\\n30\\n35\") == \"505\"\nassert solution(\"20\\n15\\n10\\n20\\n25\") == \"260\"\n",
        "num_ids_2": 58,
        "num_ids_4": 121
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"215\", \"Expected output: 215. Actual output: \" + solution(input())\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n7.49999\\n7.50001\\n7.49999\\n7.50001\"\nassert solution(\"3\\n10 20 40\") == \"12.0\"\nassert solution(\"1\\n10\") == \"1.0\"\n\nfrom typing import List",
        "num_ids_2": 78,
        "num_ids_4": 94
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n7.49999\\n7.49998\\n7.49997\\n7.49996\\n\"\nassert solution(\"5\\n-10 20 -30 40\") == \"20\\n18.00000\\n16.00000\\n14.00000\\n12.00000\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10 30\") == \"7.50001\"\nassert solution(\"3\\n20 40 60\") == \"2.66666\"\nassert solution(\"1\\n1000\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 65
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.50001, 7.49999, and so on\\n\"\n\nfrom math import isclose",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"\nassert solution(\"3\\n1 2 3\") == \"6.0\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"5.0\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4.0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3.0\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2.0\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1.0\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"2\\n45 67 90\") == \"7.49999\"\nassert solution(\"2\\n1 2 3 4 5\") == \"7.5\"\nassert solution(\"2\\n10 -30\") == \"7.5\"\nassert solution(\"2\\n0 -30\") == \"7.5\"",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but your code is {solution(input())}.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10 30\") == \"7.50001\"\nassert solution(\"3\\n10 30 50\") == \"2.00000\"\nassert solution(\"4\\n10 30 50 60\") == \"1.00000\"\nassert solution(\"5\\n10 30 50 60 70\") == \"0.50000\"\nassert solution(\"6\\n10 30 50 60 70 80\") == \"0.33333\"",
        "num_ids_2": 49,
        "num_ids_4": 110
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n5\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n100\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n100\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n100\\n5\") == \"2\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 146
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(stdin=\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(stdin=\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(stdin=\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\nassert solution(\"5 2\\n11\\n13\\n10\\n15\\n\") == \"1\"\nassert solution(\"4 2\\n10\\n15\\n12\\n13\\n\") == \"1\"\nassert solution(\"6 3\\n12\\n15\\n11\\n14\\n10\\n\") == \"1\"\nassert solution(\"10 4\\n13\\n15\\n10\\n12\\n11\\n\") == \"1\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\", \"Expected output: 2\\nActual output: \" + solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\")\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n1\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n10\") == \"1\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n20\") == \"5\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n20\\n\") == \"5\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n20\\n1\") == \"5\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"BA\") == \"B\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('\u03b1') == 'A'\nassert solution('\u03b2') == 'b'\nassert solution('\u0393') == 'g'\nassert solution('\u0394') == 'd'\nassert solution('\u0395') == 'e'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"C\") == \"Error: Input is not in uppercase or lowercase English letters.\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Expected output: A\"\nassert solution(\"B\") == \"A\", \"Expected output: A\"\nassert solution(\"a\") == \"a\", \"Expected output: a\"\nassert solution(\"b\") == \"a\", \"Expected output: a\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u0393\") == \"A\"\nassert solution(\"\u0394\") == \"a\"\nassert solution(\"\u0395\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Input must be '\u03b1'\"\nassert solution(\"b\") == \"A\", \"Input must be 'b'\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('\u03b1') == 'A'\nassert solution('b') == 'A'\nassert solution('BC') == 'A'\nassert solution('A') == 'A'\nassert solution('a') == 'a'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"c\") == \"Error: input contains non-English characters.\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"A\"\nassert solution(\"B\") == \"A\"\nassert solution(\"c\") == \"a\"\nassert solution(\"abc\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"a\"\nassert solution(\"\u0393\") == \"a\"\nassert solution(\"\u03b4\") == \"A\"\nassert solution(\"\u0398\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\nassert solution(\"3 1\") == \"2\\n\"\nassert solution(\"6 2\") == \"12\\n\"\nassert solution(\"5 8\") == \"12\\n\"\nassert solution(\"10 1\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n') == '6\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The output should be 6\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\"\nprint(\"All the required triples are present.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect. Please check the example and the constraints.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"10 20\") == \"6\"\nassert solution(\"1 1\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\\n\"  # expected output: 6\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0210\") == \"MMYY\"\nassert solution(\"1002\") == \"AMBIGUOUS\"\nassert solution(\"1111\") == \"NA\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"5678\") == \"NA\"\nassert solution(\"190501\") == \"AMBIGUOUS\"\nassert solution(\"190513\") == \"AMBIGUOUS\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"NA\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"2022\") == \"MMYY\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('1205') == 'MMYY'\nassert solution('190512') == 'AMBIGUOUS'\nassert solution('0519') == 'NA'\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\n\nassert solution('1911') == 'MMYY'\n\nassert solution('190502') == 'MMYY'\n\nassert solution('19051234') == 'AMBIGUOUS'\n\nassert solution('190523') == 'AMBIGUOUS'",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0101') == 'MMYY'\nassert solution('0111') == 'AMBIGUOUS'\nassert solution('1101') == 'NA'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1205\") == \"MMYY\"\nassert solution(\"190512\") == \"AMBIGUOUS\"\nassert solution(\"0505\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0519') == 'MMYY'\nassert solution('1234') == 'NA'\nassert solution('190510') == 'NA'\nassert solution('abc') == 'NA'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0101\") == \"MMYY\"\nassert solution(\"1000\") == \"AMBIGUOUS\"\nassert solution(\"1001\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"1101\") == \"NA\"\nassert solution(\"2222\") == \"NA\"",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"2\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"10\\n\") == \"11\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"1\\n\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\\n\"\nassert solution(\"6\") == \"8\\n\"\nassert solution(\"8\") == \"4\\n\"\nassert solution(\"10\") == \"2\\n\"\nassert solution(\"15\") == \"4\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nprint(\"One pair can be chosen:\")\nprint(\"(2,1) and (2,3)\")\n\nprint(\"\\nTwo pairs can be chosen:\")\nprint(\"(1,3) and (3,1)\")\n\nprint(\"\\nThree pairs can be chosen:\")\nprint(\"(1,2) and (2,1) and (2,3)\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"2\\n\", \"The solution does not meet the expected output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"15 12\") == \"23\"\nassert solution(\"23 23\") == \"0\"\nassert solution(\"24 24\") == \"24\"\nassert solution(\"25 24\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"21\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"21\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '21'\nassert solution('9 12') == '21'\nassert solution('10 20') == '12'\nassert solution('12 0') == '23'\nassert solution('24 0') == '0'\nassert solution('24 24') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 12') == '21'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 12\") == \"21\", \"Solution should return 21, but it returns {}\".format(solution(\"9 12\"))\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 12\") == \"21\\n\"\nassert solution(\"5 8\") == \"5\\n\"\nassert solution(\"23 0\") == \"23\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"60 0\") == \"60\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 2920\") == \"4910\"\nassert solution(\"3 4112\") == \"4104\"\nassert solution(\"2 4110\") == \"4100\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"1 11\") == \"10\"\nassert solution(\"2 2919\") == \"3719\"\nassert solution(\"3 4112\") == \"4104\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"3 2920\") == \"5920\"\nassert solution(\"2 4100\") == \"4000\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2919') == '3719'\nprint('All tests passed.')",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"10 1000\") == \"500\"\nassert solution(\"10 900\") == \"200\"\nassert solution(\"5 3600\") == \"3500\"\nassert solution(\"6 4111\") == \"4111\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2919\") == \"3719\", \"Test Failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"Takahashi's Inner Rating should be 3719\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"4\", \"The output is incorrect.\"\nassert solution(\"12 3\") == \"3\", \"The output is incorrect.\"\nassert solution(\"23 4\") == \"3\", \"The output is incorrect.\"\nassert solution(\"34 5\") == \"4\", \"The output is incorrect.\"\nassert solution(\"45 6\") == \"5\", \"The output is incorrect.\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: The output '{output}' is incorrect for the input '{stdin}'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\\n\", \"Test Failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4\\n'\nprint('All tests passed!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\", \"The expected output is 4, but got: {}\".format(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 2\") == \"4\", \"Test Failed: Expected 4, but got \" + solution(\"11 2\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\", \"The correct output is not returned. Please check the given code.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nprint(\"All set!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\", \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"3\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"3\\n\", \"Test 1 Failed\"\nassert solution(1) == \"1\\n\", \"Test 2 Failed\"\nassert solution(10) == \"10\\n\", \"Test 3 Failed\"\nassert solution(20) == \"20\\n\", \"Test 4 Failed\"\nassert solution(30) == \"30\\n\", \"Test 5 Failed\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"3\\n\", \"The expected output is: 3\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"3\\n\", \"Your code is not correct. The function should return '3' for the given constraints.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '3', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5') == '3', 'Your solution is not correct.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nprint(\"Both of them can take desired number of pieces as follows:\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"A B\\n\")) == \"Yay!\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"Yay!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Yay!\\n', 'Input error'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Yay!\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\", \"Test Failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"34\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"112233445566778899001122334455667788990011\") == \"69\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\n\nSolution:\n\nThe problem requires us to solve a problem that involves the rearranging of consecutive digits in a string. We have to find the minimum possible difference between the sum of the current digits and the master's favorite number (753 in this case).\n\nThe solution to the problem requires us to follow these steps:\n\n1. Parse the input string S and initialize a variable `X` to 0 and another variable `sum` to 0.\n2. Iterate over each character in S and add it to the variable `sum`.\n3. If the sum is greater than 9, reset the variable `X` to 0 and add the least significant digit to the variable `sum`.\n4. If the sum is less than 0, reset the variable `X` to 0 and add the least significant digit to the variable `sum`.\n5. If the sum is equal to 9, add the variable `X` to a list of possible differences.\n6. If the sum is not equal to 9, add the variable `X` to a list of possible differences.\n7. Sort the list of possible differences in ascending order.\n8. Find the minimum difference between the sum of the current digits and the master's favorite number.\n\nThe time complexity of this solution is O(n), where n is the length of the input string S.\n\nLet's see the code implementation of the solution.",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1234567876') == '34'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 12 6\\n2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"5 3\\n1 7\\n2999999987 2\"\nassert solution(\"2\\n2 9\\n\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"12 13\\n12 13\"",
        "num_ids_2": 116,
        "num_ids_4": 182
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed: {solution(input_str)}!= {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 12 6\\n2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"5 3\\n1 7\\n2999999987 2\"\nassert solution(\"2\\n2 9\\n7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"1 7\\n2999999987 2\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n6\\n13 52 0 13 26 52\") == \"12 13\\n1 3\"",
        "num_ids_2": 174,
        "num_ids_4": 238
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"\n\ninput_data = [3, 12, 6, 2, 9, 7, 2, 1000000000, 4, 6, 8, 4, 2]\noutput = solution(str(input_data))\nprint(output)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n3 12 6\"\"\") == \"5 3\"\nassert solution(\"\"\"2\n2 9\"\"\") == \"1 7\"\nassert solution(\"\"\"7\n2 1000000000 4 6 8 4 2\"\"\") == \"2999999987 2\"\nassert solution(\"\"\"6\n13 52 0 13 26 52\"\"\") == \"12 13\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n3 1 4 1\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 1 1\\n\\nOutput\\n1\\n\\nInput\\n5\\n1 1 1 2 2\\n\\nOutput\\n2\\n\") == \"Output\\n3\\n\\nOutput\\n1\\n\\nOutput\\n2\\n\"\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {tc} failed.\"\nfor tc in range(1, 6):\n    input_data = input()\n    expected_output = output[tc - 1]\n    actual_output = solution(input_data)\n    assert actual_output == expected_output, f\"Test case {tc} failed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case {t} failed. Expected: {expected}, got: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 4 1\") == \"3\\n\"\nassert solution(\"3\\n1 1 1\") == \"1\\n\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3', 'The output should be 3.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n3 1 4 1\\n\") == \"Output\\n3\\n\"\nassert solution(\"Input\\n3\\n1 1 1\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n5\\n1 1 1 2 2\\n\") == \"Output\\n2\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 4 1\\n\") == \"3\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\\n\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\") == \"3\\n\"\nassert solution(\"3\\n1 2 1\") == \"1\\n\"\nassert solution(\"3\\n2 2 1\") == \"2\\n\"\nassert solution(\"4\\n3 1 4 1\") == \"3\\n\"\nassert solution(\"4\\n1 1 2 1\") == \"2\\n\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\\n\"\n\nsolution(\"3\\n1 1 1\")",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution() == '1'\nassert solution() == '2'\nassert solution() == '2'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4 2\\n1 2\\n2 3\\n\\nOutput\\n2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n1\\n\") == \"2\\n4 2\\n\\n1\\n1 2\\n\\n1\\n\"\nassert solution(\"Input\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n1\\n\") == \"1\\n1 2\\n\\n2\\n\"",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"2 0\\n\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\"\n\nprint(solution(\"\"))",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"Input\\n4 2\\n1 2\\n2 3\\n\\nOutput\\n2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n1\\n1 2\") == \"1\"\nassert solution(\"Input\\n2 0\\n\\nOutput\\n1\\n1 2\") == \"1\"\nassert solution(\"Input\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n1\\n1 2\") == \"2\"",
        "num_ids_2": 105,
        "num_ids_4": 174
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n2 3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n\") == \"2\\n3 2\\n\"\nassert solution(\"0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"0\\n1\\n\") == \"1\\n1 2\\n\"\nassert solution(\"0\\n1 2\\n\") == \"1\\n1 2\\n\"\nassert solution(\"0\\n2 3\\n\") == \"1\\n1 2\\n\"\nassert solution(\"0\\n1 2\\n2 3\\n\") == \"1\\n1 2\\n\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"2\\n4 2\\n6 4\\n8 2\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 98
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"4 2\\n1 2\\n2 3\\n\") == 2\nassert solution(r\"2 0\\n\") == 1\nassert solution(r\"3 2\\n1 3\\n2 3\\n\") == 2\n\nsolution(r\"4 2\\n1 2\\n2 3\\n\")",
        "num_ids_2": 40,
        "num_ids_4": 65
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n').strip() == '2\\n4 2\\n'\nassert solution('2 0\\n').strip() == '1\\n1 2\\n'\nassert solution('3 2\\n1 3\\n2 3\\n').strip() == '2\\n2 3\\n'",
        "num_ids_2": 56,
        "num_ids_4": 89
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example) == expected_output, f\"Test {test_num} failed: {solution(example)}!= {expected_output}\"\n\ntest_num = 1\nexample = '''\n4 2\n1 2\n2 3\n\nInput\n2 0\n\nOutput\n1\n1 2\n\nInput\n3 2\n1 3\n2 3\n\nOutput\n2\n\nInput\n4 2\n1 2\n2 3\n\nOutput\n2\n\n'''\n\nexpected_output = '''\n2\n4 2\n\nInput\n2 0\n\nOutput\n1\n1 2\n\nInput\n3 2\n1 3\n2 3\n\nOutput\n2\n\nInput\n4 2\n1 2\n2 3\n\nOutput\n2\n'''",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 2\\n1 2\\n2 3\\n\\nOutput\\n2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\") == \"2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\"",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == 4",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"11\" # Correct\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\n2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\\n\"\nassert solution(stdin=\"7\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5') == '11\\n'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4') == '4\\n'\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"11\\n\", \"Expected output 11\\n, but got {} instead\".format(solution())",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == {\n\n}",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '11\\n'\nassert solution(open('input2.txt', 'r')) == '4\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\\n\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\\n\") == \"1 5\\n2 1\\n2 9999999994\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr\"\"\"\n3 6\n10 15 12\n1 9 12 23 26 37\n\"\"\"\n) == \"\"\"\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\"\"\"\n\nassert solution(\nr\"\"\"\n2 3\n5 10000000000\n5 6 9999999999\n\"\"\"\n) == \"\"\"\n1 5\n2 1\n2 9999999994\n\"\"\"\n\nassert solution(\nr\"\"\"\n3 6\n10 15 12\n1 9 12 23 26 37\n\"\"\"\n) == \"\"\"\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 6) == [1, 1]\nassert solution(2, 3) == [1, 5]",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6\\n10 15 12\\n1 9 12 23 26 37') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\n\nassert solution('2 3\\n5 10000000000\\n5 6 9999999999') == '''1 5\n2 1\n2 9999999994'''",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case failed: {input}, {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 6, 5, 4) == \"2 1 3\", \"Polycarp has guessed the correct answer.\"\nassert solution(40, 40, 40, 60) == \"20 20 20\", \"Polycarp has guessed the correct answer.\"\nassert solution(201, 101, 101, 200) == \"1 100 100\", \"Polycarp has guessed the correct answer.\"",
        "num_ids_2": 75,
        "num_ids_4": 121
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2 1 3\\n20 20 20\\n1 100 100\\n'\nassert solution(input()) == '2 2 2\\n1 2 2\\n2 2 2\\n'\nassert solution(input()) == '4 5 6\\n10 20 30\\n25 50 75\\n'",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3,6,5,4) == \"2 1 3\"\nassert solution(40,40,40,60) == \"20 20 20\"\nassert solution(201,101,101,200) == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\\n\", \"Test 1 failed.\"\nassert solution(\"40 40 40 60\") == \"20 20 20\\n\", \"Test 2 failed.\"\nassert solution(\"201 101 101 200\") == \"1 100 100\\n\", \"Test 3 failed.\"\nassert solution(\"3 2 5\") == \"2 1 3\\n\", \"Test 4 failed.\"\nassert solution(\"5 7 1 9\") == \"2 2 1\\n\", \"Test 5 failed.\"",
        "num_ids_2": 63,
        "num_ids_4": 129
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\\n\"\nassert solution(\"40 40 40 60\") == \"20 20 20\\n\"\nassert solution(\"201 101 101 200\") == \"1 100 100\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 85
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\\n\"\nassert solution(\"40 40 40 60\") == \"20 20 20\\n\"\nassert solution(\"201 101 101 200\") == \"1 100 100\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 85
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n1 100 100\\n\", \"Test 1\"\n\nassert solution(\"3 6 5 4\\n201 101 101 200\\n40 40 40 60\\n\") == \"2 1 3\\n1 100 100\\n\", \"Test 2\"\n\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\", \"Test 3\"\n\nassert solution(\"5 10 15 20\\n100 200 300 400\\n150 250 350 450\\n200 300 400 500\\n\") == \"500 250 100 50\\n300 200 100 50\\n200 100 100 50\\n100 50 100 50\\n\", \"Test 4\"\n\nassert solution(\"5 10 15 20\\n100 200 300 400\\n150 250 350 450\\n200 300 400 500\\n\") == \"500 250 100 50\\n300 200 100 50\\n200 100 100 50\\n100 50 100 50\\n\", \"Test 5\"",
        "num_ids_2": 140,
        "num_ids_4": 364
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\", \"Polycarp has guessed three positive integers a, b, c. Print three guessed integers in any order.\"\nassert solution(\"40 40 40 60\") == \"20 20 20\", \"Polycarp has guessed three positive integers a, b, c. Print three guessed integers in any order.\"\nassert solution(\"201 101 101 200\") == \"1 100 100\", \"Polycarp has guessed three positive integers a, b, c. Print three guessed integers in any order.\"",
        "num_ids_2": 97,
        "num_ids_4": 154
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\") == \"2\\nRBGRGBRGR\\n\"\nassert solution(\"8\\nBBBGBRRR\\n\") == \"2\\nBRBGBRGR\\n\"\nassert solution(\"13\\nBBRRRRGGGGGRR\\n\") == \"6\\nBGRBRBGBGBGRG\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 88
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n8\\nBBBGBRRR\\n13\\nBBRRRRGGGGGRR\\n\") == \"2\\nRBGRGBRGR\\n2\\nBRBGBRGR\\n6\\nBGRBRBGBGBGRG\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n8\\nBBBGBRRR\\n13\\nBBRRRRGGGGGRR\") == \"2\\nRBGRGBRGR\\n2\\nBRBGBRGR\\n6\\nBGRBRBGBGBGRG\"\nassert solution(\"9\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\") == \"10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\\n10\\nRRRRRRRRRR\"\nassert solution(\"1\\nRRRRRRRRRR\") == \"1\\nRRRRRRRRRR\"\nassert solution(\"1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\") == \"2\\nRRRRRRRRRR\"\nassert solution(\"1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\nRRRRRRRRRR\\n1\\",
        "num_ids_2": 203,
        "num_ids_4": 261
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == 2\nassert solution(\"8\\nBBBGBRRR\") == 2\nassert solution(\"13\\nBBRRRRGGGGGRR\") == 6",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9\\nRBGRRBRGG\\n8\\nBBBGBRRR\\n13\\nBBRRRRGGGGGRR\\n') == '2\\nBRBGBRGR\\n6\\nBGRBRBGBGBGRG'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\") == \"2\\n1 4\\n\"\nassert solution(\"4\\n10 9 8 7\\n\") == \"1\\n1\\n\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9\\n\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\\n\"\nassert solution(stdin=\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\\n\"\nassert solution(stdin=\"4\\n10 9 8 7\") == \"1\\n1\\n\"\nassert solution(stdin=\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed for the given inputs:\\n{input()}\\nExpected output: {expected}\\nGot output: {solution(input())}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"\nfor line in [stdin]:\n    n = int(line.strip())\n    a = list(map(int, line.strip().split()))\n    k = max(max_length(a, i, len(a)) for i in range(n))\n    print(k)\n    \n    seq = [i for i in range(n) if i - k + 1 >= 0]\n    print(seq)\n    \n    for i in range(k):\n        for j in range(i, i + k - 1):\n            print(f\"{j}, \", end=\"\")\n        print()\n        \n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed. Expected {expected}, got {solution(input())}\"\nfor t in range(1, T+1):\n    print(f\"Case {t}:\")\n    assert solution(input()) == expected, f\"Test case {t+1} failed. Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6 \"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4 \"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1 \"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9 \"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6\\n'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4\\n'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1\\n'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9\\n'",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\\n\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\\n\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 137
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6 \"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4 \"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1 \"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9 \"",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The output is not correct. Input: {input()}, Output: {output()}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'Yes', \"There is an integer C between 1 and 3 that satisfies the condition, print Yes.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"1 4\") == \"No\"\nassert solution(\"3 4\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n') == 'Yes\\n'\nassert solution('2 2\\n') == 'No\\n'\nassert solution('4 3\\n') == 'No\\n'\nassert solution('5 3\\n') == 'Yes\\n'\nassert solution('6 3\\n') == 'No\\n'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"Yes\\n\"\nassert solution(\"4 2\") == \"No\\n\"\nassert solution(\"1 1\") == \"Yes\\n\"\nassert solution(\"1 2\") == \"No\\n\"\nassert solution(\"3 3\") == \"No\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"Yes\"\n\nassert solution(\"2 2\") == \"No\"\n\nassert solution(\"3 3\") == \"No\"\n\nassert solution(\"4 1\") == \"No\"\n\nassert solution(\"1 2\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"81 58\") == \"110\", \"Expected output: 110\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"81 58\") == \"110\" # Check the correctness of the solution",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"81 58\") == \"110\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"81 58\") == \"110\", \"The train fare is 81 yen, but it should be 110 yen.\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"81 58\") == \"110\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"110\", \"The given test case is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\", \"Expected 110, got {} instead.\".format(solution(\"81 58\"))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"81 58\") == \"110\", \"The train fare is 81 yen. The train fare is 58 \u2044 2=29 yen with the 50% discount. Thus, it costs 110 yen to travel from Station A to Station C.\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"110\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\\n\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '8\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '8\\n'\nassert solution(stdin) == '8\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '8\\n', 'Expected output: 8\\nGot:'+ solution(stdin)\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 8, \"The output should be 8.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '8', 'Output is incorrect.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"8\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2') == '8'\nprint('All tests passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8\\n\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\", \"Shichi-Go-San (literally \\\"Seven-Five-Three\\\") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children.\"\nassert solution(\"10\") == \"YES\", \"Takahashi is now 10 years old. Will his growth be celebrated in Shichi-Go-San this time?\"\nassert solution(\"15\") == \"NO\", \"Takahashi is now 15 years old. Will his growth be celebrated in Shichi-Go-San this time?\"\nassert solution(\"0\") == \"NO\", \"X is not a positive integer.\"\n",
        "num_ids_2": 98,
        "num_ids_4": 157
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"YES\"\nassert solution(\"8\\n\") == \"YES\"\nassert solution(\"10\\n\") == \"NO\"\nassert solution(\"0\\n\") == \"NO\"\nassert solution(\"11\\n\") == \"NO\"\nassert solution(\"0\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\"\nassert solution(\"9\\n\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"100\") == \"YES\"\nassert solution(\"50\") == \"NO\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"1\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"YES\\n\", \"Error: Invalid input.\"\nassert solution(\"3\\n\") == \"NO\\n\", \"Error: Invalid input.\"\nassert solution(\"10\\n\") == \"NO\\n\", \"Error: Invalid input.\"\nassert solution(\"0\\n\") == \"NO\\n\", \"Error: Invalid input.\"\nassert solution(\"11\\n\") == \"YES\\n\", \"Error: Invalid input.\"\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 'YES', \"The growth of a five-year-old child will be celebrated.\"\nassert solution(10) == 'NO', \"Takahashi's growth will not be celebrated.\"\nassert solution(9) == 'NO', \"Takahashi's growth will not be celebrated.\"\nassert solution(1) == 'YES', \"The growth of a one-year-old child will not be celebrated.\"\nassert solution(100) == 'YES', \"The growth of a ten-year-old child will be celebrated.\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"999\\n\") == \"ABC\", \"Test 1\"\nassert solution(\"1000\\n\") == \"ABD\", \"Test 2\"\nassert solution(\"1998\\n\") == \"ABD\", \"Test 3\"\nassert solution(\"1999\\n\") == \"ABD\", \"Test 4\"\nassert solution(\"2000\\n\") == \"ABD\", \"Test 5\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(999) == \"ABC\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\", \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(999) == 'ABC'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"9999\") == \"ABD\"\nassert solution(\"1000\") == \"ABD\"\nassert solution(\"1998\") == \"ABC\"\nassert solution(\"2000\") == \"ABD\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"999\\n\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"999\") == \"ABC\", \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(999) == \"ABC\", \"Test case 1 failed\"\nassert solution(1000) == \"ABD\", \"Test case 2 failed\"\nassert solution(1999) == \"ABD\", \"Test case 3 failed\"\nassert solution(2000) == \"ACD\", \"Test case 4 failed\"\nassert solution(2001) == \"BCA\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n16\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\") == \"Yay!\"\n",
        "num_ids_2": 86,
        "num_ids_4": 660
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"2\\n3\\n5\\n7\\n9\\n12\") == \"Yay!\\n\"\nassert solution(\"3\\n4\\n7\\n8\\n10\\n11\") == \"Yay!\\n\"\nassert solution(\"4\\n7\\n8\\n11\\n12\\n14\") == \"Yay!\\n\"\nassert solution(\"5\\n8\\n10\\n12\\n15\\n16\") == \"Yay!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 119
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n13\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n17\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n22\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n20\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n19\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n18\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n14\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n12\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n10\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n8\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n6\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n4\") == \"No, not enough antennas\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n2\") == \"No, not enough antennas\"",
        "num_ids_2": 59,
        "num_ids_4": 131
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n12\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n6\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n0\") == \"Yay!\"\n",
        "num_ids_2": 54,
        "num_ids_4": 107
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15\\n') == 'Yay!\\n'\nassert solution('1\\n2\\n4\\n8\\n9\\n') == 'No such pair of antennas.\\n'\nassert solution('1\\n2\\n4\\n8\\n') == 'No such pair of antennas.\\n'\nassert solution('1\\n2\\n4\\n8\\n9\\n1\\n2\\n4\\n8\\n9\\n15\\n') == 'No such pair of antennas.\\n'",
        "num_ids_2": 63,
        "num_ids_4": 143
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"3\\n5\\n7\\n9\\n11\") == \"Yay!\"\nassert solution(\"1\\n3\\n5\\n7\\n9\") == \"Yay!\"\nassert solution(\"1\\n4\\n6\\n8\\n10\") == \"Yay!\"\nassert solution(\"2\\n4\\n6\\n8\\n10\") == \"Yay!\"",
        "num_ids_2": 51,
        "num_ids_4": 98
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n12\") == \"No\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yay!\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"(No such pair of antennas that cannot communicate directly)\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3200\\npink\") == \"pink\\na = 3200 is not less than 3200, so we print s = pink.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2500\\napple\") == \"red\"\nassert solution(\"1000\\nBanana\") == \"red\"\nassert solution(\"100\\nOrange\") == \"red\"\nassert solution(\"3000\\nWatermelon\") == \"pink\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"2800\") == \"red\"\nassert solution(\"1\") == \"red\"\nassert solution(\"0\") == \"red\"\nassert solution(\"10000\") == \"red\"",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\npink\") == \"red\"\nassert solution(\"5000\\npink\") == \"red\"\nassert solution(\"1000\\npink\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3200\\npink\") == \"pink\\n\"\nassert solution(\"2800\\napple\") == \"red\\n\"\nassert solution(\"5001\\ngrape\") == \"red\\n\"\nassert solution(\"5000\\npink\") == \"red\\n\"\nassert solution(\"3201\\napple\") == \"red\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2900\\nbananas\") == \"red\"\nassert solution(\"100\\napple\") == \"green\"\nassert solution(\"500\\norange\") == \"green\"",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3200\\npink\\n\") == \"pink\\n\"\nassert solution(stdin=\"2000\\npink\\n\") == \"red\\n\"\nassert solution(stdin=\"500\\npink\\n\") == \"red\\n\"\nassert solution(stdin=\"3000\\npink\\n\") == \"pink\\n\"\nassert solution(stdin=\"3201\\npink\\n\") == \"red\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 87
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\npink\") == \"red\"\nassert solution(\"10000\\npink\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3200\\npink\") == \"pink\", \"Your code is not correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ABC\", \"Your implementation is incorrect. Please check the sample inputs and constraints.\"\nprint(\"Correct!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"4208\") == \"AGC\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"900\") == \"ABC\"\nassert solution(\"1200\") == \"ABC\"\nassert solution(\"400\") == \"ABC\"\nassert solution(\"1201\") == \"ABC\"\nassert solution(\"R\") == \"ABC\"\nassert solution(\"1000\") == \"ABC\"\nassert solution(\"12000\") == \"ABC\"\n\nassert solution(\"500\") == \"ARC\"\nassert solution(\"1200\") == \"ARC\"\nassert solution(\"2800\") == \"ARC\"\nassert solution(\"3000\") == \"ARC\"\nassert solution(\"2000\") == \"ARC\"\nassert solution(\"2801\") == \"ARC\"\nassert solution(\"28000\") == \"ARC\"\n\nassert solution(\"120000\") == \"AGC\"\nassert solution(\"280000\") == \"AGC\"\nassert solution(\"300000\") == \"AGC\"\nassert solution(\"4208\") == \"AGC\"\nassert solution(\"5000\") == \"AGC\"\nassert solution(\"50000\") == \"AGC\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1199\\n\") == \"ABC\"\nassert solution(\"2200\\n\") == \"ABC\"\nassert solution(\"1200\\n\") == \"ABC\"\nassert solution(\"4208\\n\") == \"ABC\"\nassert solution(\"4209\\n\") == \"ABC\"\nassert solution(\"4210\\n\") == \"ABC\"\nassert solution(\"4211\\n\") == \"ABC\"\nassert solution(\"4212\\n\") == \"ABC\"\nassert solution(\"4213\\n\") == \"ABC\"\nassert solution(\"4214\\n\") == \"ABC\"\nassert solution(\"4215\\n\") == \"ABC\"\nassert solution(\"4216\\n\") == \"ABC\"\nassert solution(\"4217\\n\") == \"ABC\"\nassert solution(\"4218\\n\") == \"ABC\"\nassert solution(\"4219\\n\") == \"ABC\"\nassert solution(\"4220\\n\") == \"ABC\"\nassert solution(\"4221\\n\") == \"ABC\"\nassert solution(\"4222\\n\") == \"ABC\"\nassert solution(\"4223\\n\") == \"ABC\"\nassert solution(\"4224\\n\") == \"ABC\"\nassert solution(\"4225\\n\") == \"ABC\"\nassert solution(\"4226\\n\") == \"ABC\"\nassert solution(\"4227\\n\") == \"ABC\"\nassert solution(\"4228\\n\") == \"ABC\"\nassert solution(\"4229\\n\") == \"ABC\"\nassert solution(\"4230\\n\") == \"ABC\"\nassert solution(\"4231\\n\") == \"ABC\"\nassert solution(\"4232\\n\") == \"ABC\"\nassert solution(\"4233\\n\") == \"ABC\"\nassert solution(\"4234\\n\") == \"ABC\"\nassert solution(\"4235\\n\") == \"ABC\"\nassert solution(\"4236\\n\") == \"ABC\"\nassert solution(\"4237\\n\") == \"ABC\"\nassert solution(\"4238\\n\") == \"ABC\"\nassert solution(\"4239\\n\") == \"ABC\"\nassert solution(\"4240\\n\") == \"ABC\"\nassert solution(\"4241\\n\") == \"ABC\"\nassert solution(\"4242\\n\") == \"ABC\"\nassert solution(\"4243\\n\") == \"ABC\"\nassert solution(\"4244\\n\") == \"ABC\"\nassert solution(\"4245\\n\") == \"ABC\"\nassert solution(\"4246\\n\") == \"ABC\"\nassert solution(\"4247\\n\") == \"ABC\"\nassert solution(\"4248\\n\") == \"ABC\"\nassert solution(\"4249\\n\") == \"ABC\"\nassert solution(\"4250\\n\") == \"ABC\"\nassert solution(\"4251\\n\") == \"ABC\"\nassert solution(\"4252\\n\") == \"ABC\"\nassert solution(\"4253\\n\") == \"ABC\"\nassert solution(\"4254\\n\") == \"ABC\"\nassert solution(\"4255\\n\") == \"ABC\"\nassert solution(\"4256\\n\") == \"ABC\"\nassert solution(\"4257\\n\") == \"ABC\"\nassert solution(\"4258\\n\") == \"ABC\"\nassert solution(\"4259\\n\") == \"ABC\"\nassert solution(\"4260\\n\") == \"ABC\"\nassert solution(\"4261\\n\") == \"ABC\"\nassert solution(\"4262\\n\") == \"ABC\"\nassert solution(\"4263\\n\") == \"ABC\"\nassert solution(\"4264\\n\") == \"ABC\"\nassert solution(\"4265\\n\") == \"ABC\"\nassert solution(\"4266\\n\") == \"ABC\"\nassert solution(\"4267\\n\") == \"ABC\"\nassert solution(\"4268\\n\") == \"ABC\"\nassert solution(\"4269\\n\") == \"ABC\"\nassert solution(\"4270\\n\") == \"ABC\"\nassert solution(\"4271\\n\") == \"ABC\"\nassert solution(\"4272\\n\") == \"ABC\"\nassert solution(\"427",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ABC\", \"The next contest rated for Takahashi (ABC, ARC or AGC) should be ABC.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1199\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1199\\n\") == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '991'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('119') == '991'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('119') == '991'\nassert solution('345') == '453'\nassert solution('567') == '765'\nassert solution('789') == '987'\nassert solution('0') == '0'\nassert solution('9') == '9'\nassert solution('10') == '19'\nassert solution('11') == '11'\nassert solution('12') == '19'\nassert solution('13') == '13'\nassert solution('14') == '13'\nassert solution('15') == '15'\nassert solution('16') == '13'\nassert solution('17') == '17'\nassert solution('18') == '19'\nassert solution('19') == '19'\nassert solution('20') == '20'\nassert solution('21') == '21'\nassert solution('22') == '29'\nassert solution('23') == '23'\nassert solution('24') == '23'\nassert solution('25') == '25'\nassert solution('26') == '23'\nassert solution('27') == '27'\nassert solution('28') == '29'\nassert solution('29') == '29'\nassert solution('30') == '30'\nassert solution('31') == '31'\nassert solution('32') == '39'\nassert solution('33') == '33'\nassert solution('34') == '33'\nassert solution('35') == '35'\nassert solution('36') == '33'\nassert solution('37') == '37'\nassert solution('38') == '39'\nassert solution('39') == '39'\nassert solution('40') == '40'\nassert solution('41') == '41'\nassert solution('42') == '49'\nassert solution('43') == '43'\nassert solution('44') == '43'\nassert solution('45') == '45'\nassert solution('46') == '43'\nassert solution('47') == '47'\nassert solution('48') == '49'\nassert solution('49') == '49'\nassert solution('50') == '50'\nassert solution('51') == '51'\nassert solution('52') == '59'\nassert solution('53') == '53'\nassert solution('54') == '53'\nassert solution('55') == '55'\nassert solution('56') == '53'\nassert solution('57') == '57'\nassert solution('58') == '59'\nassert solution('59') == '59'\nassert solution('60') == '60'\nassert solution('61') == '61'\nassert solution('62') == '69'\nassert solution('63') == '63'\nassert solution('64') == '63'\nassert solution('65') == '65'\nassert solution('66') == '63'\nassert solution('67') == '67'\nassert solution('68') == '69'\nassert solution('69') == '69'\nassert solution('70') == '70'\nassert solution('71') == '71'\nassert solution('72') == '79'\nassert solution('73') == '73'\nassert solution('74') == '73'\nassert solution('75') == '75'\nassert solution('76') == '73'\nassert solution('77') == '77'\nassert solution('78') == '79'\nassert solution('79') == '79'\nassert solution('80') == '80'\nassert solution('81') == '81'\nassert solution('82') == '89'\nassert solution('83') == '83'\nassert solution('84') == '83'\nassert solution('85') == '85'\nassert solution('86') == '83'\nassert solution('87') == '87'\nassert solution('88') == '89'\nassert solution",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"119\") == \"991\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"119\") == \"991\", \"Replace the 9 in the ones place with 1, the 1 in the tens place with 9 and the 1 in the hundreds place with 9. The answer is 991.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('119') == '991'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"119\") == \"991\", \"Test Case 1\"\nassert solution(\"0\") == \"0\", \"Test Case 2\"\nassert solution(\"1234\") == \"1934\", \"Test Case 3\"\nassert solution(\"1234567890\") == \"1234567890\", \"Test Case 4\"\nassert solution(\"9999\") == \"9999\", \"Test Case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 92
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == [\"abac\", \"ac\", \"bcdaf\", \"zzzzzz\"]\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abac\", \"The solution should be 'abac'.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"\nassert solution(\"zzzzzzzzzz\") == \"zzzzzz\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"abbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\\nac\\bcdaf\\nzzzzzz\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"2 3\\n4 6\\n7 8\\n10 10\\n14 14\\n\") == \"0\\n4\\n3\\n0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"4\\n1\\n2\\n1\\n1\\n\"\nassert solution(\"1 4\\n5 10\\n12 20\\n24 30\\n48 60\\n\") == \"4\\n0\\n3\\n0\\n\"\nassert solution(\"10 15\\n20 25\\n30 35\\n40 45\\n50 55\\n\") == \"5\\n0\\n4\\n0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 207
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 10\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test {t+1} failed: expected output {expected}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n5\\n4\\n333\\n0\"\nprint(\"2\")\nprint(\"5\")\nprint(\"4\")\nprint(\"333\")\nprint(\"0\")\n\n```python\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index+1} failed. Expected output: {expected_output}, got {solution(input())}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n13\\n100\\n123\\n92\\n46\\n4\\n\") == \"2\\n5\\n4\\n333\\n0\"\n\nassert solution(\"5\\n10\\n20\\n30\\n40\\n\") == \"0\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"5\"",
        "num_ids_2": 80,
        "num_ids_4": 104
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"5\\n10\\n15\\n20\\n25\") == \"1\"\nassert solution(\"2\\n5\\n10\\n20\\n30\") == \"1\"\nassert solution(\"1\\n5\\n10\\n15\\n20\") == \"0\"",
        "num_ids_2": 83,
        "num_ids_4": 133
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.666666666666667\\n\", \"The solution is incorrect. Please check the input and output examples.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667\\n'\nprint('All tests passed')",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3) == 2.666666666666667\nassert solution(4, 3) == 3.75\nassert solution(5, 3) == 3.75\nassert solution(6, 3) == 3.75\n",
        "num_ids_2": 43,
        "num_ids_4": 73
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2.666666666666667, \"Your solution is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == expected, f\"The solution for the problem {stdin} is incorrect. Expected {expected}, but got {solution(stdin)}.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == 2.666666666666667, \"Your solution is incorrect.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == \"2.666666666666667\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2.666666666666667, \"The solution is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.666666666666667\\n\", \"Expected output: '2.666666666666667'\\nActual output: '{}'\\n\".format(solution(stdin))\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 3) == 2.666666666666667\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"NO\"\nassert solution(8) == \"NO\"\nassert solution(9) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(['3 2', '3 2 1', '1 2', '4 2', '4 1 2 3', '3 2', '5 1', '1 2 3 4 5', '1']) == 'YES'\nassert solution(['4 2', '2 1 4 3']) == 'NO'\nassert solution(['4 2', '4 3 2 1']) == 'YES'\nassert solution(['5 2', '2 1 2 3 3']) == 'YES'\nassert solution(['3 2', '1 4']) == 'NO'",
        "num_ids_2": 83,
        "num_ids_4": 127
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Input: {input()}, Output: {output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Error: solution({input()})!= expected, expected: {expected}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n\") == \"YES\"\nassert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n\") == \"NO\"",
        "num_ids_2": 252,
        "num_ids_4": 252
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(['6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n']) == 'YES\\nNO\\nYES\\nYES\\nNO'",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(['3 2', '3 2 1', '1 2', '4 2', '4 1 2 3', '3 2', '5 1', '1 2 3 4 5', '1', '4 2', '2 1 4 3', '1 3', '4 2', '4 3 2 1', '1 3', '5 2', '2 1 2 3 3', '1 4']) == ['YES', 'NO', 'YES', 'YES', 'NO', 'YES']\nassert solution(['1 2']) == ['YES']\nassert solution(['1']) == ['YES']\nassert solution(['4 2']) == ['YES']\nassert solution(['2 1 4 3']) == ['YES']\nassert solution(['1 3']) == ['YES']\nassert solution(['5 2']) == ['YES']\nassert solution(['2 1 2 3 3']) == ['YES']\nassert solution(['1 4']) == ['YES']",
        "num_ids_2": 148,
        "num_ids_4": 170
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\" # Test 1\nassert solution(input()) == \"NO\" # Test 2\nassert solution(input()) == \"YES\" # Test 3\nassert solution(input()) == \"YES\" # Test 4\nassert solution(input()) == \"NO\" # Test 5",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"bab\"\nassert solution() == \"oops\"\nassert solution() == \"z\"\nassert solution() == \"def\"",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"oops\"\nassert solution(1) == \"z\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\nbaabbb\\n') == 'bab', \"Test 1 failed\"\nassert solution('2\\nooopppssss\\n') == 'oops', \"Test 2 failed\"\nassert solution('3\\nz\\n'), \"Test 3 failed\"\nassert solution('4\\ndef\\n'), \"Test 4 failed\"\nassert solution('5\\nabc\\n'), \"Test 5 failed\"\nassert solution('6\\nabc\\n'), \"Test 6 failed\"\nassert solution('7\\nabc\\n'), \"Test 7 failed\"\nassert solution('8\\nabc\\n'), \"Test 8 failed\"\nassert solution('9\\nabc\\n'), \"Test 9 failed\"\nassert solution('10\\nabc\\n'), \"Test 10 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Incorrect solution\"\nassert solution(\"ooopppssss\") == \"oops\", \"Incorrect solution\"\nassert solution(\"z\") == \"z\", \"Incorrect solution\"",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Test 1\"\nassert solution(\"ooopppssss\") == \"oops\", \"Test 2\"\nassert solution(\"z\") == \"z\", \"Test 3\"",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"bab\"\nassert solution(\"10\") == \"oops\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Solution 1 failed\"\nassert solution(\"ooopppssss\") == \"oops\", \"Solution 2 failed\"\nassert solution(\"z\") == \"z\", \"Solution 3 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"The output is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Error: {input} should return {output} but got {solution(input)}\"\n\ninput = \"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\"\noutput = 1\nsolution = lambda x: 1\n\ninput = \"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\"\noutput = 0\nsolution = lambda x: 0\n\ninput = \"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\"\noutput = 0\nsolution = lambda x: 0\n\ninput = \"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\"\noutput = 1\nsolution = lambda x: 1\n\ninput = \"1 0\\n\"\noutput = 0\nsolution = lambda x: 0\n\ninput = \"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\"\noutput = 2\nsolution = lambda x: 2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n\") == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 128,
        "num_ids_4": 206
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\nassert solution(\"1 0\\n\") == \"0\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBRB\\n\") == 1\nassert solution(\"7\\nRGBGRBB\\n\") == 3",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '1\\nGRB'\nassert solution('7') == '3\\nRGBRGBR'\n\nfrom typing import List",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nBRB') == '1\\nGRB'\nassert solution('7\\nRGBGRBB') == '3\\nRGBRGBR'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1\nassert solution() == 3",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nBRB') == '1\\nGRB'\nassert solution('7\\nRGBGRBB') == '3\\nRGBRGBR'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\"\"\") == \"48000.0\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n3\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.1\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n10000 JPY\\n0.10000000 BTC\\n\\n100",
        "num_ids_2": 138,
        "num_ids_4": 327
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n0.10000000 BTC\\n') == '56000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n0.10000000 BTC\\n50000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n') == '64000.0'\nassert solution('1\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n0.10000000 BTC\\n50000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n30000 JPY\\n0.10000000 BTC\\n') == '160000.0'\n",
        "num_ids_2": 113,
        "num_ids_4": 374
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n50000 JPY\\n0.00001000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n50000 JPY\\n0.00001000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\\n2\\n50000 JPY\\n0.00001000 BTC\\n\") == \"48000.0\\n\"",
        "num_ids_2": 138,
        "num_ids_4": 207
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''\n3\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n''') == '48000.0'\nassert solution('''\n4\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n''') == '48000.0'\nassert solution('''\n5\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n0.60000000 JPY\n0.70000000 BTC\n''') == '48000.0'\nassert solution('''\n6\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n0.60000000 JPY\n0.70000000 BTC\n0.80000000 JPY\n0.90000000 BTC\n''') == '48000.0'\nassert solution('''\n7\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n0.60000000 JPY\n0.70000000 BTC\n0.80000000 JPY\n0.90000000 BTC\n1.00000000 JPY\n''') == '48000.0'\nassert solution('''\n8\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n0.60000000 JPY\n0.70000000 BTC\n0.80000000 JPY\n0.90000000 BTC\n1.00000000 JPY\n1.10000000 JPY\n''') == '48000.0'\nassert solution('''\n9\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n0.60000000 JPY\n0.70000000 BTC\n0.80000000 JPY\n0.90000000 BTC\n1.00000000 JPY\n1.10000000 JPY\n1.20000000 JPY\n''') == '48000.0'\nassert solution('''\n10\n10000 JPY\n0.10000000 BTC\n0.20000000 JPY\n0.30000000 BTC\n0.40000000 JPY\n0.50000000 BTC\n0.6000000",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"3\\n10000 JPY\\n0.10000000 BTC\") == \"48000.1\"\nassert solution(\"4\\n10000 JPY\\n0.10000000 BTC\") == \"48001.0\"\nassert solution(\"5\\n10000 JPY\\n0.10000000 BTC\") == \"48001.1\"\nassert solution(\"6\\n10000 JPY\\n0.10000000 BTC\") == \"48002.0\"\nassert solution(\"7\\n10000 JPY\\n0.10000000 BTC\") == \"48002.1\"\nassert solution(\"8\\n10000 JPY\\n0.10000000 BTC\") == \"48003.0\"\nassert solution(\"9\\n10000 JPY\\n0.10000000 BTC\") == \"48003.1\"\nassert solution(\"10\\n10000 JPY\\n0.10000000 BTC\") == \"48004.0\"\nassert solution(\"11\\n10000 JPY\\n0.10000000 BTC\") == \"48004.1\"\nassert solution(\"12\\n10000 JPY\\n0.10000000 BTC\") == \"48005.0\"\nassert solution(\"13\\n10000 JPY\\n0.10000000 BTC\") == \"48005.1\"\nassert solution(\"14\\n10000 JPY\\n0.10000000 BTC\") == \"48006.0\"\nassert solution(\"15\\n10000 JPY\\n0.10000000 BTC\") == \"48006.1\"\nassert solution(\"16\\n10000 JPY\\n0.10000000 BTC\") == \"48007.0\"\nassert solution(\"17\\n10000 JPY\\n0.10000000 BTC\") == \"48007.1\"\nassert solution(\"18\\n10000 JPY\\n0.10000000 BTC\") == \"48008.0\"\nassert solution(\"19\\n10000 JPY\\n0.10000000 BTC\") == \"48008.1\"\nassert solution(\"20\\n10000 JPY\\n0.10000000 BTC\") == \"48009.0\"\nassert solution(\"21\\n10000 JPY\\n0.10000000 BTC\") == \"48009.1\"\nassert solution(\"22\\n10000 JPY\\n0.10000000 BTC\") == \"48010.0\"\nassert solution(\"23\\n10000 JPY\\n0.10000000 BTC\") == \"48010.1\"\nassert solution(\"24\\n10000 JPY\\n0.10000000 BTC\") == \"48011.0\"\nassert solution(\"25\\n10000 JPY\\n0.10000000 BTC\") == \"48011.1\"\nassert solution(\"26\\n10000 JPY\\n0.10000000 BTC\") == \"48012.0\"\nassert solution(\"27\\n10000 JPY\\n0.10000000 BTC\") == \"48012.1\"\nassert solution(\"28\\n10000 JPY\\n0.10",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n3\\n45678 USD\\n98765 EUR\\n\") == \"27653.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n3\\n45678 USD\\n98765 EUR\\n\") == \"0.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n1\\n99999 JPY\\n0.01 BTC\\n\") == \"10000.0\"\nassert solution(\"3\\n10000 JPY\\n0.10000000 BTC\\n1\\n99999 JPY\\n0.01 BTC\\n\") == \"10000.0\"\nassert solution(\"3\\n10000 JPY\\n0.10000000 BTC\\n1\\n99999 JPY\\n0.01 BTC\\n3\\n12345 JPY\\n0.45 BTC\\n\") == \"75000.0\"\n",
        "num_ids_2": 99,
        "num_ids_4": 213
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC",
        "num_ids_2": 208,
        "num_ids_4": 1027
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('1\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('1\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('1\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.1'\nassert solution('1\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'",
        "num_ids_2": 80,
        "num_ids_4": 210
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output should be 3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"3\", \"Incorrect output.\"\nprint(\"Test Passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\\n\"\nassert solution(\"5 2\") == \"4\\n\"\nassert solution(\"6 3\") == \"4\\n\"\nassert solution(\"7 3\") == \"5\\n\"\nassert solution(\"8 4\") == \"5\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\", \"Test Failed\"\n\nimport sys",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nip cc\\n\") == \"icpc\\n\"\nassert solution(\"3\\nabcde\\nxyz\\n\") == \"xyz\\nde\\nabc\\n\"\nassert solution(\"4\\naaa\\nbbbb\\nccc\\nddd\\n\") == \"aaa\\nbbbb\\nccc\\ndddd\\n\"\nassert solution(\"5\\nabcd\\nEFGH\\nIJKL\\n\") == \"ijkl\\nEFGH\\nabcd\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 112
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nip cc\\n\") == \"icpc\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nip cc\\n\") == \"icpc\", \"Incorrect output. Expected: icpc, Actual: \" + solution(\"2\\nip cc\\n\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 ip cc\") == \"icpc\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ABA') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BBB\") == \"No\"\nassert solution(\"AAB\") == \"Yes\"\nassert solution(\"BBA\") == \"Yes\"\nassert solution(\"BBC\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\", \"Test failed for solution(ABA)\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABB\") == \"No\\n\"\nassert solution(\"BAC\") == \"Yes\\n\"\nassert solution(\"BBC\") == \"No\\n\"\nassert solution(\"AB\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABA\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABBA\") == \"Yes\\n\"\nassert solution(\"ABB\") == \"No\\n\"\nassert solution(\"ABBAAB\") == \"Yes\\n\"\nassert solution(\"ACA\") == \"No\\n\"\nassert solution(\"AAAB\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('RRS') == '2', \"The function should return 2, but it returned {}\".format(solution('RRS'))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"0\"\nassert solution(\"RRRRRR\") == \"0\"\nassert solution(\"RRRRRRRR\") == \"0\"\nassert solution(\"RRRRRRRRRR\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRRRR\") == \"3\"\nassert solution(\"RRR\") == \"3\"\nassert solution(\"RRRRRRRR\") == \"4\"\nassert solution(\"R\") == \"0\"\nassert solution(\"RR\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRRRRR\") == \"6\"\nassert solution(\"RRRRRRRR\") == \"8\"\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1027
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('RRS') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\\n\", \"Function should return '2\\n' for the given input\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 3 2\") == \"2 3 5\"\nassert solution(\"4 2 1\") == \"1 2 4\"\nassert solution(\"8 7 6\") == \"6 7 8\"\nassert solution(\"2 5 10\") == \"10 5 2\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 6 7\") == \"7 5 6\"\nassert solution(\"10 20 30\") == \"30 20 10\"\nassert solution(\"2 3 4\") == \"4 3 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\", \"Test 1 failed.\"\nassert solution(\"1 3 2\") == \"3 2 1\", \"Test 2 failed.\"\nassert solution(\"1 2 1\") == \"1 2 1\", \"Test 3 failed.\"\nassert solution(\"3 3 3\") == \"3 3 3\", \"Test 4 failed.\"\nassert solution(\"3 1 2\") == \"3 1 2\", \"Test 5 failed.\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"2 4 6\"\nassert solution(\"7 8 9\") == \"9 8 7\"\nassert solution(\"10 11 12\") == \"12 11 10\"\nassert solution(\"13 14 15\") == \"15 14 13\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3 1 2\\n3 1 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"X Y Z\\n\")) == \"3 1 2\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"7 8 9\") == \"9 7 8\"\nassert solution(\"10 11 12\") == \"12 10 11\"\nassert solution(\"13 14 15\") == \"15 13 14\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 100\") == \"100\\n\", \"Test case 1 failed\"\nassert solution(\"15 500\") == \"500\\n\", \"Test case 2 failed\"\nassert solution(\"100 1000\") == \"1000\\n\", \"Test case 3 failed\"\nassert solution(\"12 5\") == \"50\\n\", \"Test case 4 failed\"\nassert solution(\"20 10000\") == \"10000\\n\", \"Test case 5 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\nassert solution('13 50') == '75'\nassert solution('25 500') == '2500'\nassert solution('22 20') == '100'\nassert solution('18 200') == '2000'\nassert solution('20 1000') == '10000'",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\\n\", \"Test 1\"\nassert solution(\"20 100\") == \"50\\n\", \"Test 2\"\nassert solution(\"10 100\") == \"100\\n\", \"Test 3\"\nassert solution(\"5 100\") == \"50\\n\", \"Test 4\"\nassert solution(\"15 100\") == \"50\\n\", \"Test 5\"",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '100\\n', 'The cost of the Ferris wheel for Takahashi is not as expected.'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"30 100\") == \"100\\n\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 100\") == \"100\\n\", \"Your code is not correct.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('30 100') == '100', 'Sample Output is incorrect'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"100\", \"The cost of the Ferris wheel for Takahashi should be 100 yen.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+++-\") == \"2\"\nassert solution(\"----\") == \"1\"\nassert solution(\"++++\") == \"2\"\nassert solution(\"+-+++-\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-+-\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('+-++') == '2\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, got: {solution(input_string)}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('+-++') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Heisei\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/01\") == \"TBD\"\nassert solution(\"2018/04/30\") == \"TBD\"\nassert solution(\"2019/03/31\") == \"TBD\"\nassert solution(\"2019/04/30 20:00:00\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"The solution should return Heisei\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/04/30\") == \"TBD\"\nassert solution(\"2019/03/30\") == \"TBD\"\nassert solution(\"2019/13/30\") == \"TBD\"\nassert solution(\"2019/04/29\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/01/01\") == \"TBD\"\nassert solution(\"2019/02/30\") == \"TBD\"\nassert solution(\"2019/03/31\") == \"TBD\"\nassert solution(\"2019/04/30\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/05/01\") == \"TBD\"\nassert solution(\"2018/13/31\") == \"TBD\"\nassert solution(\"2017/06/30\") == \"TBD\"\nassert solution(\"2016/12/31\") == \"TBD\"\nassert solution(\"2015/01/01\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"14\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution doesn't match expected output. Got: {solution(input())}, Expected: {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '14\\n'\nassert solution(open('input2.txt', 'r')) == '9\\n'\nassert solution(open('input3.txt', 'r')) == '3\\n'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_result, f\"The solution is incorrect. Expected: {expected_result}, Received: {solution}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\n",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"TODO: Enter the solution function here\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\\n\") == \"3\"",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == 14\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == 9\nassert solution(\"3\\n1337 1337 1337\") == 3\n",
        "num_ids_2": 97,
        "num_ids_4": 122
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2 1\"\nassert solution() == \"3\"\nassert solution() == \"1 3 2\"\nassert solution() == \"1 3 2\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"2\n1 3\n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1 '\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2 '",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n3\\n1 3 2\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"4\\n3 5 6 \\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"4\\n3 5 6 \\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"4\\n3 5 6 \\n\"",
        "num_ids_2": 81,
        "num_ids_4": 173
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2\\n\"\nassert solution(\"7 3\\n2 3 1 4\") == \"1\\n1 2 3\\n\"\nassert solution(\"10 5\\n2 3 3 1 1 2 1 2 3 3\") == \"4\\n3 2 1\\n\"\nassert solution(\"1 1\\n2\") == \"1\\n1 1\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 150
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == # your solution",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 3\\n2 3 1 2 1 1\\n\") == \"3\\n1 2\\n\"\nassert solution(\"10 5\\n1 2 1 1 1 2\\n\") == \"2\\n1 2\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 151
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Your solution is {solution(input())}, but expected {expected}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('Polycarp.in', 'r')) == \"1\\n-1\\n3\\n2\"\nassert solution(open('Polycarp.in', 'r')) == \"1\\n-1\\n3\\n2\"\nassert solution(open('Polycarp.in', 'r')) == \"1\\n-1\\n3\\n2\"\nassert solution(open('Polycarp.in', 'r')) == \"1\\n-1\\n3\\n2\"\nassert solution(open('Polycarp.in', 'r')) == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output}\\n\\nYour output: {solution(stdin)}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [\"1\\n\", \"-1\\n\"]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '1\\n-1\\n3\\n2'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([5, 4]) == \"1\\n-1\\n3\\n2\"\nassert solution([8]) == \"1\"\nassert solution([5]) == \"1\"\nassert solution([14, 10]) == \"1\\n3\\n2\"",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"21\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Input: {input()}, Output: {solution(input())}, Expected: {expected}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"",
        "num_ids_2": 102,
        "num_ids_4": 149
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\") == \"21\\n\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\") == \"21\\n\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\"\n",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n3\\n2 8 10\\n4\\n1 1 1 1\") == \"2\\n2 2 1 \\n2 3 2 \\n0\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3 \\n1 1 2 \\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1 \\n2 3 2 \\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n2 3 1 1 1\\n\") == \"2\\n1 1 1 1 1\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n1 1 1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"",
        "num_ids_2": 75,
        "num_ids_4": 144
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n4 6 6 6 6') == '2\\n1 2 3\\n1 1 2\\n'\nassert solution('3\\n2 8 10') == '2\\n2 2 1\\n2 3 2\\n'\nassert solution('4\\n1 1 1 1') == '0\\n'\nassert solution('5\\n2 4 6 6 6') == '2\\n1 2 3\\n1 1 2\\n'\nassert solution('2\\n2 4 6 6 6') == '2\\n1 2 3\\n1 1 2\\n'",
        "num_ids_2": 71,
        "num_ids_4": 129
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(example_input) == \"2\"\nassert solution(example_input2) == \"2\"\nassert solution(example_input3) == \"2\"\nassert solution(example_input4) == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4\\n6\\n6\\n6\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2\\n8\\n10\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1\\n1\\n1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 74,
        "num_ids_4": 107
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 75,
        "num_ids_4": 110
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n3\\n2 8 10\\n4\\n1 1 1 1\\n0\") == \"2\\n1 2 3\\n1 1 2\\n2\\n2 2 1\\n2 3 2\\n0\"\nassert solution(\"3\\n2 8 10\\n4\\n1 1 1 1\\n0\") == \"2\\n2 2 1\\n2 3 2\\n0\"\nassert solution(\"4\\n1 1 1 1\\n0\") == \"0\"",
        "num_ids_2": 131,
        "num_ids_4": 153
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\\n2 2 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"2\\n1 2 3 \\n1 1 2 \"\nassert solution(3) == \"2\\n2 2 1 \\n2 3 2 \"\nassert solution(4) == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 58
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"10100100\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111\\n10011001\\n10011001\\n11111111",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n2\\n0\\n1\\n1\\n1'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\\n\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n010100\\n6 2\\n010100\\n6 1\\n01010",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\n\nfrom typing import List",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 0\nassert solution() == 1\nassert solution() == 1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1 100010\") == \"2\"\nassert solution(\"1 100011\") == \"1\"\nassert solution(\"1 1000101010101\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nfor i in range(len(stdin)):\n    assert solution(stdin) == expected[i]\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n4 6 7 \"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 4 5 \"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\"",
        "num_ids_2": 112,
        "num_ids_4": 163
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7 \\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5 \\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"\n",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn 'Output\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n4 6 7\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Your code is wrong. Please check the example and the solution.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nfor _ in range(test_cases):\n    query_number = int(stdin.readline())\n    problem_number = int(stdin.readline())\n    problem_pretties = list(map(int, stdin.readline().split()))\n    \n    max_cumulative_prettiness = 0\n    \n    for i in range(problem_number):\n        cumulative_prettiness = 0\n        for j in range(i + 1, problem_number):\n            cumulative_prettiness += problem_pretties[j]\n        max_cumulative_prettiness = max(max_cumulative_prettiness, cumulative_prettiness)\n    \n    print(max_cumulative_prettiness)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"30\\n31\\n10\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"\nassert solution(\"3\\n3 4 6\") == \"30\\n31\\n10\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"4\\n4\\n4\"",
        "num_ids_2": 81,
        "num_ids_4": 108
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"30\n31\n10\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()})!= Expected Output({expected_output})\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"30\n31\n10\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n1\\n2\\n1\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == '2\\n1\\n2\\n1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n1\\n2\\n1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n3\\n2\\n4\\n5\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n1\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n3\\n2\\n4\\n5\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n1\\n2\\n1\\n\") == \"2\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 139
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1\\n2\\n1\"\nassert solution() == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"NO\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"NO\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\"",
        "num_ids_2": 96,
        "num_ids_4": 192
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"1 2 4 4\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"1 2 4 4\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"\nassert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 99,
        "num_ids_4": 198
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'NO'\nassert solution('3 3 5 18') == 'YES'",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES', \"Test case 1 failed\"\nassert solution(input()) == 'NO', \"Test case 2 failed\"\nassert solution(input()) == 'NO', \"Test case 3 failed\"\nassert solution(input()) == 'YES', \"Test case 4 failed\"\nassert solution(input()) == 'YES', \"Test case 5 failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input.txt\", \"r\")) == \"NO\"\nassert solution(open(\"input.txt\", \"r\")) == \"YES\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\"\nassert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"NO\"\nassert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"NO\"\nassert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\"",
        "num_ids_2": 90,
        "num_ids_4": 180
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"NO\"\nassert solution(\"3 3 5 18\") == \"YES\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n1\\n3\\n4\\n5\\n4 3 2 1\"\nassert solution() == \"YES\\n3\\n7\\n2\\n4\"\nassert solution() == \"YES\\n0\"\nassert solution() == \"YES\\n0\"\nassert solution() == \"YES\\n0\"",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''7\n7 2 7 3 3 1 4''') == 'YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n'\nassert solution(r'''5\n4 3 1 5 3''') == 'YES\\n1\\n3 \\n4\\n5 4 3 1 \\n'\nassert solution(r'''5\n1 1 2 1 2''') == 'NO\\n'\nassert solution(r'''5\n0 1 2 3 4''') == 'YES\\n0\\n3 \\n4\\n1 2 3 4 5 \\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 3 2 1 0\") == \"YES\\n1\\n3\"\n\nassert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\"\n\nassert solution(\"7\\n7 3 2 7 1 3 4\") == \"YES\\n3\\n4 7\"\n\nassert solution(\"2\\n7 4 3 2 1\") == \"YES\\n1\\n3\"\n\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"",
        "num_ids_2": 74,
        "num_ids_4": 134
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1\"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Solution: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"\n\nfrom typing import List",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution() == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\nassert solution() == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution() == \"NO\\n0\"\nassert solution() == \"YES\\n0\\n0\"",
        "num_ids_2": 60,
        "num_ids_4": 97
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\\n\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3\\n4\\n5 4 3 1\\n\"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 139
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\\n5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 246,
        "num_ids_4": 295
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 120,
        "num_ids_4": 169
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == \"-1\"",
        "num_ids_2": 116,
        "num_ids_4": 163
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0) == 18\n\nassert solution(5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0) == 8\n\nassert solution(5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1) == -1",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: '{output}', got: '{solution(input())}'\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"18\"\n\nassert solution(str(input())) == \"8\"\n\nassert solution(str(input())) == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == -1",
        "num_ids_2": 118,
        "num_ids_4": 166
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"",
        "num_ids_2": 120,
        "num_ids_4": 169
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"2\n6\n-1\n7\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"2\\n6\\n-1\\n7\"\nassert solution(open('input.txt', 'r').read()) == \"2\\n6\\n-1\\n7\"\nassert solution(open('input.txt', 'r').read()) == \"1\\n6\\n2\\n-1\"\nassert solution(open('input.txt', 'r').read()) == \"1\\n6\\n2\\n-1\"\nassert solution(open('input.txt', 'r').read()) == \"1\\n5\\n2\\n-1\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\\n\"\nassert solution(\"1 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\") == \"2\\n6\\n-1\\n7\\n\"\nassert solution(\"1 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n\") == \"2\\n6\\n-1\\n7\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 267
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"2\n6\n-1\n7\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"6\"\nassert solution(\"2\\n5\\n1\\n3\\n2\") == \"-1\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"",
        "num_ids_2": 134,
        "num_ids_4": 218
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [2, -1, 7]",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n6\\n-1\\n7\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution\n\nfrom typing import List",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\", \"Test 1\"\nassert solution(stdin) == \"0\\n\", \"Test 2\"\nassert solution(stdin) == \"3\\n\", \"Test 3\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\", \"Test 2 failed\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\", \"Test 3 failed\"",
        "num_ids_2": 84,
        "num_ids_4": 143
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 8 15 16 23\\n\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\\n\"\n",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4, 8, 15, 16, 23, 42]) == 5\nassert solution([4, 8, 4, 15, 16, 8, 23, 15, 16, 42, 23, 42]) == 0\nassert solution([4, 8, 15, 16, 23, 42, 4]) == 3",
        "num_ids_2": 78,
        "num_ids_4": 109
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 8 15 16 23\\n\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n4 8 15 16 23\\n') == '5\\n'\nassert solution('12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n') == '0\\n'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n') == '3\\n'",
        "num_ids_2": 76,
        "num_ids_4": 131
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case} failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The output {output()} is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n5\\n') == '0'\nassert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n5\\n') == '0'",
        "num_ids_2": 116,
        "num_ids_4": 232
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '0\\n'\nassert solution(2) == '2\\n'\nassert solution(4) == '1\\n'\nassert solution(6) == '0\\n'\nassert solution(1) == '2\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'\n\nassert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'\n\nassert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'\n\nassert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'\n\nassert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'\n\nassert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'",
        "num_ids_2": 210,
        "num_ids_4": 420
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n100 500') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n100 500\\n2 4\\n3 6') == '3'\nassert solution('6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n100 500\\n2 4\\n3 6\\n5 8\\n6 10\\n7 12\\n8 14\\n9 16\\n10 18\\n11 20\\n12 22\\n13 24\\n14 26\\n15 28\\n16 30\\n17 32\\n18 34\\n19 36\\n20 38\\n21 40\\n22 42\\n23 44\\n24 46\\n25 48\\n26 50\\n27 52\\n28 54\\n29 56\\n30 58\\n31 60\\n32 62\\n33 64\\n34 66\\n35 68\\n36 70\\n37 72\\n38 74\\n39 76\\n40 78\\n41 80\\n42 82\\n43 84\\n44 86\\n45 88\\n46 90\\n47 92\\n48 94\\n49 96\\n50 98' == '0\\n2\\n3\\n4\\n5\\n10'",
        "num_ids_2": 207,
        "num_ids_4": 400
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == \"0\"\nassert solution(5) == \"0\"\nassert solution(1) == \"0\"\nassert solution(1) == \"0\"\nassert solution(2) == \"3\"\nassert solution(3) == \"2\"\nassert solution(4) == \"92\"\nassert solution(5) == \"87654322\"\nassert solution(6) == \"9150\"\nassert solution(7) == \"123456789\"\nassert solution(8) == \"1000000000\"\nassert solution(9) == \"9000\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0\\n3\\n2\\n92\\n87654322\\n9150'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\nprint(\"Case #\", test_case, \":\", solution(input()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n\"\nassert solution(\"5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"0\\n\"\nassert solution(\"10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"15\\n\"\nassert solution(\"2\\n0\\n999999999\\n\") == \"54306\\n\"\nassert solution(\"999999995\\n999999998\\n\") == \"185\\n\"\n",
        "num_ids_2": 187,
        "num_ids_4": 260
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n10\\n5\\n187\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12339\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"15\\n\"\nassert solution(input()) == \"54306\\n\"\nassert solution(input()) == \"999999995\\n\"\nassert solution(input()) == \"185\\n\"\nassert solution(input()) == \"999999998\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"",
        "num_ids_2": 143,
        "num_ids_4": 143
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot output: {}\".format(output(), solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''\nInternational Women's Day is coming soon! Polycarp is preparing for the holiday.\nThere are 5 candy boxes in the shop for sale. The first box contains 2 candies, the second box contains 3 candies, the third box contains 2 candies, the fourth box contains 1 candy and the fifth box contains 10 candies.\n\nPolycarp wants to prepare the maximum number of gifts for 2 girls. Each gift will consist of exactly two boxes. The girls should be able to share each gift equally, so the total amount of candies in a gift (in a pair of boxes) should be divisible by 2. In other words, two boxes 0 and 1 can be combined as a gift if the sum of their candies is divisible by 2.\n\nHow many boxes will Polycarp be able to give? Of course, each box can be a part of no more than one gift. Polycarp cannot use boxes \"partially\" or redistribute candies between them. \n\n-----Input-----\n\nThe first line of the input contains two integers $n$ and $k$ ($1 \\le n \\le 2 \\cdot 10^5, 1 \\le k \\le 100$) \u2014 the number the boxes and the number the girls.\n\nThe second line of the input contains $n$ integers $d_1, d_2, \\dots, d_n$ ($1 \\le d_i \\le 10^9$), where $d_i$ is the number of candies in the $i$-th box.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum number of the boxes Polycarp can give as gifts.\n\n-----Examples-----\nInput\n7 2\n1 2 2 3 2 4 10\n\nOutput\n6\n\nInput\n8 2\n1 2 2 3 2 4 6 10\n\nOutput\n8\n\nInput\n7 3\n1 2 2 3 2 4 5\n\nOutput\n4\n\n-----Note-----\n\nIn the first example Polycarp can give the following pairs of boxes (pairs are presented by indices of corresponding boxes):   $(2, 3)$;  $(5, 6)$;  $(1, 4)$. \n\nSo the answer is $6$.\n\nIn the second example Polycarp can give the following pairs of boxes (pairs are presented by indices of corresponding boxes):   $(6, 8)$;  $(2, 3)$;  $(1, 4)$;  $(5, 7)$. \n\nSo the answer is $8$.\n\nIn the third example Polycarp can give the following pairs of boxes (pairs are presented by indices of corresponding boxes):   $(1, 2)$;  $(6, 7)$. \n\nSo the answer is $4$.\n'''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == 6\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == 8\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == 4",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''\n8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''\n7 3\n1 2 2 3 2 4 5\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == 6, \"The answer is incorrect\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == 8, \"The answer is incorrect\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == 4, \"The answer is incorrect\"",
        "num_ids_2": 70,
        "num_ids_4": 103
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\nassert solution() == \"8\"\nassert solution() == \"4\"\nassert solution() == \"6\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\\n\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\\n\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\\n\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\\n\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nABC\\n\") == \"abc\"\nassert solution(\"3 2\\nabcd\\n\") == \"abcd\"\nassert solution(\"4 1\\nxyz\\n\") == \"xyz\"\nassert solution(\"4 2\\nxyz123\\n\") == \"xyz123\"\nassert solution(\"5 1\\nabc\\n\") == \"abc\"\nassert solution(\"5 2\\nabc123\\n\") == \"abc123\"",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nABC\\n\") == \"aBC\"\\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"4 2\\nXYZ\") == \"xYZ\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"aBC\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\", \"Test case 1 failed\"\n\nassert solution(\"3 1\\nabc\") == \"abc\", \"Test case 2 failed\"\n\nassert solution(\"3 2\\nabc\") == \"abc\", \"Test case 3 failed\"\n\nassert solution(\"3 3\\nabc\") == \"abc\", \"Test case 4 failed\"\n\nassert solution(\"3 4\\nabc\") == \"abc\", \"Test case 5 failed\"",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\nABC') == 'aBC'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\nkhabarovsk\\t20\\nmoscow\\t10\\nkazan\\t50\\nkazan\\t35\\nmoscow\\t60\\nkhabarovsk\\t40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == # Your code here",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"khabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nassert solution(\"100\\nrestaurant 1\\nrestaurant 2\\nrestaurant 3\\nrestaurant 4\\nrestaurant 5\\nrestaurant 6\\nrestaurant 7\\nrestaurant 8\\nrestaurant 9\\nrestaurant 10\\n\") == \"restaurant 10\\nrestaurant 9\\nrestaurant 8\\nrestaurant 7\\nrestaurant 6\\nrestaurant 5\\nrestaurant 4\\nrestaurant 3\\nrestaurant 2\\nrestaurant 1\\n\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\n\") == \"khabarovsk 20\\nmoscow 10\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 232
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2\\n'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\kazan 50\\kazan 35\\nmoscow 60\\khabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nprint(solution(\"6\\nkhabarovsk 20\\nmoscow 10\\kazan 50\\kazan 35\\nmoscow 60\\khabarovsk 40\"))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 100\") == \"No\"\nassert solution(\"0 500\") == \"No\"\nassert solution(\"1 500\") == \"Yes\"\nassert solution(\"1000 1000\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 500\") == \"No\"\nassert solution(\"2 100\") == \"No\"\nassert solution(\"1 1000\") == \"Yes\"\nassert solution(\"1 500\") == \"No\"\nassert solution(\"0 0\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 900') == 'Yes', \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"3 500\") == \"No\\n\"\nassert solution(\"4 1000\") == \"No\\n\"\nassert solution(\"1 1000\") == \"Yes\\n\"\nassert solution(\"2 1000\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"3 1000\") == \"No\\n\"\nassert solution(\"5 1500\") == \"No\\n\"\nassert solution(\"7 2000\") == \"Yes\\n\"\nassert solution(\"10 3000\") == \"No\\n\"\nassert solution(\"15 4000\") == \"Yes\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 900\") == \"Yes\", \"Test Case 1 failed\"\nassert solution(\"3 1000\") == \"No\", \"Test Case 2 failed\"\nassert solution(\"4 1500\") == \"Yes\", \"Test Case 3 failed\"\nassert solution(\"5 1500\") == \"No\", \"Test Case 4 failed\"\nassert solution(\"6 2000\") == \"Yes\", \"Test Case 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"1 999\") == \"No\\n\"\nassert solution(\"0 1000\") == \"Yes\\n\"\nassert solution(\"1000 1000\") == \"Yes\\n\"\nassert solution(\"1 001\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"2 500\") == \"No\\n\"\nassert solution(\"3 500\") == \"Yes\\n\"\nassert solution(\"5 500\") == \"Yes\\n\"\nassert solution(\"10 500\") == \"No\\n\"\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes\\n', 'Test case 1 failed'\nassert solution('3 900') == 'No\\n', 'Test case 2 failed'\nassert solution('1 1000') == 'No\\n', 'Test case 3 failed'\nassert solution('5 1000') == 'Yes\\n', 'Test case 4 failed'\nassert solution('500 1000') == 'Yes\\n', 'Test case 5 failed'",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\", \"Test 1\"\nassert solution(\"2 500\") == \"No\\n\", \"Test 2\"\nassert solution(\"1 100\") == \"No\\n\", \"Test 3\"\nassert solution(\"1 1000\") == \"Yes\\n\", \"Test 4\"\nassert solution(\"1000 1000\") == \"No\\n\", \"Test 5\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 10') == '0.1458333333'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.145833333333\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Diff: {abs(float(solution(input())) - float(output))}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\", \"The answer is incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\", \"Test case 1 failed\"\nassert solution(\"4 10\") == \"0.291666666667\\n\", \"Test case 2 failed\"\nassert solution(\"6 10\") == \"0.4375\\n\", \"Test case 3 failed\"\nassert solution(\"10 10\") == \"0.5\\n\", \"Test case 4 failed\"\nassert solution(\"10 0\") == \"0.0\\n\", \"Test case 5 failed\"\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 122
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(\"Test case passed\")\n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.145833333333'\nprint('Correct')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SAT\") == \"1\", \"Test failed\"\nassert solution(\"SUN\") == \"0\", \"Test failed\"\nassert solution(\"TUE\") == \"1\", \"Test failed\"\nassert solution(\"WED\") == \"1\", \"Test failed\"\nassert solution(\"THU\") == \"1\", \"Test failed\"\nassert solution(\"FRI\") == \"1\", \"Test failed\"\nassert solution(\"SAT\") == \"2\", \"Test failed\"\nassert solution(\"SUN\") == \"1\", \"Test failed\"\nassert solution(\"TUE\") == \"2\", \"Test failed\"\nassert solution(\"WED\") == \"2\", \"Test failed\"\nassert solution(\"THU\") == \"2\", \"Test failed\"\nassert solution(\"FRI\") == \"2\", \"Test failed\"\nassert solution(\"SAT\") == \"3\", \"Test failed\"\nassert solution(\"SUN\") == \"2\", \"Test failed\"\nassert solution(\"TUE\") == \"3\", \"Test failed\"\nassert solution(\"WED\") == \"3\", \"Test failed\"\nassert solution(\"THU\") == \"3\", \"Test failed\"\nassert solution(\"FRI\") == \"3\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Solution should return 1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\", \"Solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Incorrect output. Expected 1, got: %s\" % solution(\"SAT\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\n\nHere's the code:\n\n```python\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\", \"Test case 1\"\nassert solution(\"2 10 100\") == \"10\\n20\\n40\\n60\\n80\\n100\\n120\\n140\\n160\\n180\\n\", \"Test case 2\"\nassert solution(\"2 100 10\") == \"200\\n400\\n600\\n800\\n1000\\n1200\\n1400\\n1600\\n1800\\n2000\\n\", \"Test case 3\"\nassert solution(\"2 100 50\") == \"500\\n1000\\n1500\\n2000\\n2500\\n3000\\n3500\\n4000\\n4500\\n\", \"Test case 4\"\nassert solution(\"2 1000 200\") == \"2000\\n4000\\n6000\\n8000\\n10000\\n12000\\n14000\\n16000\\n18000\\n20000\\n\", \"Test case 5\"",
        "num_ids_2": 140,
        "num_ids_4": 293
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}, got {output}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution(\"1 10 20\") == \"10\\n20\\n30\\n40\\n50\"\nassert solution(\"2 5 10\") == \"2\\n4\\n6\\n8\\n10\"\nassert solution(\"1 5 10\") == \"5\\n10\\n15\\n20\\n25\"\nassert solution(\"1 10 5\") == \"10\\n20\\n30\\n40\\n50\"",
        "num_ids_2": 98,
        "num_ids_4": 157
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution {solution(input())} does not match the expected output {output}.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n', 'Test Case 1'\n\nassert solution('3 5 30') == '35\\n45\\n55\\n65\\n75\\n85\\n95\\n105\\n115\\n125\\n', 'Test Case 2'\n\nassert solution('4 50 2000') == '450\\n550\\n650\\n750\\n850\\n950\\n1050\\n1150\\n1250\\n1350\\n', 'Test Case 3'\n\nassert solution('5 100 2000') == '500\\n600\\n700\\n800\\n900\\n1000\\n1100\\n1200\\n1300\\n1400\\n1500\\n1600\\n1700\\n1800\\n1900\\n2000\\n', 'Test Case 4'\n\nassert solution('6 1000 2000') == '6000\\n7000\\n8000\\n9000\\n10000\\n11000\\n12000\\n13000\\n14000\\n15000\\n16000\\n17000\\n18000\\n19000\\n20000\\n', 'Test Case 5'",
        "num_ids_2": 136,
        "num_ids_4": 328
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\", \"Test 1\"\nassert solution(\"3 50 100\") == \"50\\n100\\n150\\n200\\n250\\n300\\n350\\n400\\n450\\n500\\n\", \"Test 2\"\nassert solution(\"2 10 100\") == \"100\\n150\\n200\\n250\\n300\\n350\\n400\\n450\\n500\\n\", \"Test 3\"\nassert solution(\"5 10 100\") == \"50\\n100\\n150\\n200\\n250\\n300\\n350\\n400\\n450\\n500\\n\", \"Test 4\"\nassert solution(\"1 10 100\") == \"100\\n150\\n200\\n250\\n300\\n350\\n400\\n450\\n500\\n\", \"Test 5\"",
        "num_ids_2": 142,
        "num_ids_4": 278
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"3 20 30\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nassert solution(\"1 100 200\") == \"200\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n\"\nassert solution(\"4 200 300\") == \"180\\n360\\n540\\n920\\n1500\\n3080\\n6160\\n12240\\n24480\\n\"\nassert solution(\"1 50 100\") == \"50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n50\\n\"",
        "num_ids_2": 134,
        "num_ids_4": 265
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\", \"Test failed\"\nassert solution(\"5 5 5\") == \"5\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\", \"Test failed\"\nassert solution(\"10 10 10\") == \"10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\", \"Test failed\"\nassert solution(\"5 10 20\") == \"20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n150\\n200\\n250\\n300\\n350\\n400\\n450\\n500\", \"Test failed\"",
        "num_ids_2": 125,
        "num_ids_4": 278
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 1 1 4\\n\\n5\\n1 3 2 1 4\\n\\n3\\n4 1 2\\n\\n0') == '5'\nassert solution('5\\n1 3 2 1 4\\n\\n3\\n4 1 2\\n\\n0') == '4'\nassert solution('3\\n4 1 2\\n\\n0') == '0'",
        "num_ids_2": 92,
        "num_ids_4": 114
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0') == '5'\nassert solution('5\\n1 3 2 1 4\\n3\\n4 1 2\\n0') == '4'\nassert solution('3\\n4 1 2\\n0') == '0'",
        "num_ids_2": 82,
        "num_ids_4": 102
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n\nassert solution(input()) == \"4\"\n\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"5\"\nassert solution(solution) == \"4\"\nassert solution(solution) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n0\") == \"0\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 108
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\\n\", \"Example 1\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\\n\", \"Example 2\"\nassert solution(\"3\\n4 1 2\") == \"0\\n\", \"Example 3\"\n",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 1 1 4\") == \"5\"\nassert solution(\"1 3 2 1 4\") == \"4\"\nassert solution(\"3 4 1 2\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"5\\n4\\n0\"\nassert solution(\"5\\n1 3 2 1 4\\n3\\n4 1 2\\n0\") == \"4\\n0\"\nassert solution(\"3\\n4 1 2\\n0\") == \"0\"",
        "num_ids_2": 91,
        "num_ids_4": 111
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\n3 2 1\"\nassert solution() == \"YES\\n100 100 100\"\nassert solution() == \"NO\\nNO\"\nassert solution() == \"YES\\n1 1 1000000000\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nprint(\"NO\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\", \"Test case 1 failed.\"\nassert solution(stdin) == \"YES\\n2 100 100\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\", \"Test case 2 failed.\"\nassert solution(stdin) == \"YES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\", \"Test case 3 failed.\"\nassert solution(stdin) == \"YES\\n1 1 1000000000\\nNO\\nNO\\nYES\\n2 1 1\", \"Test case 4 failed.\"\nassert solution(stdin) == \"YES\\n1 1 1000000000\\nNO\\nNO\\nYES\\n3 2 1\", \"Test case 5 failed.\"",
        "num_ids_2": 134,
        "num_ids_4": 238
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"YES\\n3 2 1\"\nassert solution(100) == \"YES\\n100 100 100\"\nassert solution(50) == \"YES\\n50 49 49\"\nassert solution(10) == \"YES\\n10 30 20\"\nassert solution(1000000000) == \"YES\\n1 1 1000000000\"\nassert solution(1000000001) == \"YES\\n1 1000000000 1000000000\"\nassert solution(1000000002) == \"NO\"\nassert solution(1000000003) == \"NO\"\nassert solution(1000000004) == \"YES\\n1 1000000000 1000000000\"\nassert solution(1000000005) == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\\n3 2 1\"\nassert solution(input()) == \"YES\\n100 100 100\"\nassert solution(input()) == \"NO\\nNO\"\nassert solution(input()) == \"YES\\n1 1 1000000000\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 2 6\n    5 2 1 4 2\n    5 1 4\n    4 2 3 4 1\n    5 3 3\n    1 2 3 1 1\n    5\n    4\n    1\n    ''') == '4\\n'\n    assert solution('''\n    5 1 4\n    4 2 3 4 1\n    5 3 3\n    1 2 3 1 1\n    5 3 3\n    1 2 3 1 1\n    5\n    4\n    1\n    ''') == '1\\n'\n    assert solution('''\n    5 3 3\n    1 2 3 1 1\n    5 3 3\n    1 2 3 1 1\n    5 3 3\n    1 2 3 1 1\n    5\n    4\n    1\n    ''') == '5\\n'\n    assert solution('''\n    5 3 3\n    1 2 3 1 1\n    5 3 3\n    1 2 3 1 1\n    5 3 3\n    1 2 3 1 1\n    5\n    4\n    1\n    ''') == '5\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 2, 6) == 4\nassert solution(5, 2, 1, 4, 2) == 4\nassert solution(5, 1, 4) == 1\nassert solution(5, 3, 3) == 5",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution({input()}) should return '{expected}', but got '{solution(input())}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"\nassert solution(\"5 2 3 5 1 4\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 2 5 1\\n4 3 2 ",
        "num_ids_2": 54,
        "num_ids_4": 1027
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Output should be 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 4, \"Your solution is not correct.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaa\\nb\") == \"0\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\", \"Test failed: Expected output: 12, actual output: \" + solution(input())\nassert solution(input()) == \"21\", \"Test failed: Expected output: 21, actual output: \" + solution(input())\nassert solution(input()) == \"0\", \"Test failed: Expected output: 0, actual output: \" + solution(input())",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\\n\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\\n\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaab\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '12', \"Expected output 12, got: \" + solution()",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: expected {output()}, got {solution(input())}\" for i, (input_, output) in enumerate(zip(stdin.splitlines(), output_test_cases)):\n    assert solution(input_) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input_)} instead\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    5\n    1 2 3 -1 -2\n    \"\"\"\n) == \"\"\"\n    2\n-1\n    \"\"\"\nassert solution(\n    \"\"\"\n    -1 -2 -1 -3\n    10\n    -2 8 3 8 -4 -15 5 -2 -3 1\n    6\n    1 -1000000000 1 -1000000000 1 -1000000000\n    \"\"\"\n) == \"\"\"\n    -2999999997\n-1\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1 2 3 -1 -2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"-1 -2 -1 -3\") == \"2\"\nassert solution(\"10\") == \"6\"\nassert solution(\"-2 8 3 8 -4 -15 5 -2 -3 1\") == \"-1\"\nassert solution(\"6\") == \"-1\"\nassert solution(\"-1000000000 1 -1000000000 1 -1000000000\") == \"-2999999997\"",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"-1\"\nassert solution() == \"6\"\nassert solution() == \"-2999999997\"\n",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n-1\\n6\\n-2999999997\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 2, 3, -1, -2]) == '[1, 2, 3, -1, -2]'\nassert solution([1, 2, 3, -1, -2, 4]) == '[1, 2, 3, -1, -2, 4]'\nassert solution([-1, -2, -1, -3]) == '[-1, -2, -1, -3]'\nassert solution([1000000000]) == '-2999999997'",
        "num_ids_2": 74,
        "num_ids_4": 131
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 209
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\\nOutput\\n3 5\\n2 1\\n3 2\\n3 4\\n\\nInput\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\\nOutput\\n4 1\\n1 2\\n1 3\\n\\nInput\\n8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\\nOutput\\n3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\\n4 1\\n1 2\\n1 3\\n\\n3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 293,
        "num_ids_4": 293
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 207
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'",
        "num_ids_2": 108,
        "num_ids_4": 197
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'",
        "num_ids_2": 110,
        "num_ids_4": 199
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\\n1 2\\n1 3\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 108,
        "num_ids_4": 197
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\n",
        "num_ids_2": 114,
        "num_ids_4": 205
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'",
        "num_ids_2": 110,
        "num_ids_4": 199
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0', \"The solution is incorrect. It should return 0.\"\nprint(\"Test case passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n499993\\n\") == \"0\\n40\\n41664916690999888\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\"\nassert solution(stdin) == \"40\"\nassert solution(stdin) == \"41664916690999888\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\\n40\\n41664916690999888\\n\"\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0\\n40\\n41664916690999888'\n\nimport math\nfrom collections import defaultdict",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\"\nassert solution(\"2\\n2\\n100\") == \"0\"\nassert solution(\"3\\n10\\n1000000\") == \"20\"",
        "num_ids_2": 39,
        "num_ids_4": 63
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\\n\"\nassert solution(\"2\") == \"0\\n\"\nassert solution(\"3\") == \"0\\n\"\nassert solution(\"4\") == \"40\\n\"\nassert solution(\"5\") == \"40\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, 'Your solution is incorrect'\nassert solution() == 40, 'Your solution is incorrect'\nassert solution() == 41664916690999888, 'Your solution is incorrect'",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n\") == []\nassert solution(\"2\\n1 2 3 4 5\") == [1, 1, 1, 2, -1, 1, 1, 3, 1, 1]",
        "num_ids_2": 16,
        "num_ids_4": 64
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n1 1 1 2 -1 1 1 3 1 1\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == [\"1\", \"1\", \"1\", \"2\", \"-1\", \"1\", \"1\", \"3\", \"1\", \"1\"]\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == [\"1\", \"1\", \"1\", \"2\", \"-1\", \"1\", \"1\", \"3\", \"1\", \"1\"]",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 7 6 7 5 4 4 6 4') == '''1 1 1 2 -1 1 1 3 1 1'''\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n10\\n4 5 7 6 7 5 4 4 6 4\\n\\nOutput\\n1 1 1 2 -1 1 1 3 1 1') == '''1 1 1 2 -1 1 1 3 1 1'''",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}\\nExpected: {expected}\\nActual: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nprint(\"All tests passed\")",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == [\"1\", \"1\", \"1\", \"2\", \"-1\", \"1\", \"1\", \"3\", \"1\", \"1\"]\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [\"1\\n1\\n1\\n2\\n-1\\n1\\n1\\n3\\n1\\n1\", \"-1\\n1\\n1\\n3\\n1\\n1\"]\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8 \"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8 \"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"NO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 82,
        "num_ids_4": 134
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8 \"\nassert solution(\"1\\n10\\n100\\n1000\\n10000\\n100000\") == \"YES\\n2 4 8 \"\nassert solution
        "num_ids_2": 86,
        "num_ids_4": 1027
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test case {i+1} failed: expected output '{output}', got '{solution(stdin)}'.\"\n\nfor i, (n, output) in enumerate(TESTCASES):\n    assert solution(n) == output, f\"Test case {i+1} failed: expected output '{output}', got '{solution(n)}'.\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nprint(\"YES\")\nprint(\"2 4 8 \")\nprint(\"NO\")\nprint(\"NO\")\nprint(\"NO\")\nprint(\"YES\")\nprint(\"3 5 823\")",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8 \"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\") == \"YES\\n2 4 8 \"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\\n64567\\n98765\\n\") == \"NO\\nNO\\nNO\"\nassert solution(\"5\\n64\\n32\\n97\\n2\\n12345\\n\\n64567\\n98765\\n\\n12345\\n\") == \"YES\\n3 5 823\"\n",
        "num_ids_2": 80,
        "num_ids_4": 204
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n\", \"Test case failed\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Output should be {output}, but got {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8 \"\nassert solution(\"64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8 \"\nassert solution(\"64\\n32\\n97\\n2\\n12345\") == \"NO\\nNO\\nNO \"\nassert solution(\"64\\n32\\n97\\n2\\n12345\") == \"YES\\n3 5 823\"\n",
        "num_ids_2": 72,
        "num_ids_4": 145
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\", \"Test case 1 incorrect\"\nassert solution(stdin) == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\", \"Test case 2 incorrect\"\nassert solution(stdin) == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\", \"Test case 3 incorrect\"\nassert solution(stdin) == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\", \"Test case 4 incorrect\"\nassert solution(stdin) == \"YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\", \"Test case 5 incorrect\"",
        "num_ids_2": 90,
        "num_ids_4": 180
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ababab\") == \"abba\"\nassert solution(\"aa\") == \"ba\"\nassert solution(\"bbbb\") == \"abba\"\nassert solution(\"ababa\") == \"abba\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nababab\") == \"0\\nababab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\nbbbb') == '2\\nabba'\nassert solution('6\\nabbab') == '0\\nabbab'\nassert solution('2\\naa') == '1\\nba'\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nbbbb') == '2\\nabba'\nassert solution('6\\nababa') == '0\\nababa'\nassert solution('2\\naa') == '1\\nba'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\nbbbb\\n') == '2\\nabba'\nassert solution('6\\nabbab\\n') == '0\\nabbab'\nassert solution('2\\naa\\n') == '1\\nba'",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"15\"\nassert solution(stdin) == \"9\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"15\"\nassert solution(open(\"input.txt\", \"r\")) == \"9\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Solution: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '15'\nassert solution(input()) == '9'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == str(output())\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"\n\nsolution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\")",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\", \"Takahashi is solving quizzes. He has easily solved all but the last one. The last quiz has three choices: 1, 2, and 3. With his supernatural power, Takahashi has found out that the choices A and B are both wrong. Print the correct choice for this problem.\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Error: incorrect output\"\nassert solution(\"3\\n2\\n\") == \"1\\n\", \"Error: incorrect output\"\nassert solution(\"3\\n3\\n\") == \"3\\n\", \"Error: incorrect output\"\nassert solution(\"4\\n1\\n\") == \"1\\n\", \"Error: incorrect output\"\nassert solution(\"4\\n2\\n\") == \"2\\n\", \"Error: incorrect output\"\nassert solution(\"4\\n3\\n\") == \"3\\n\", \"Error: incorrect output\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\") == \"2\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n') == '2\\n', 'Your solution is not correct.'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"4\\n2\") == \"3\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n3\") == \"2\"\nassert solution(\"3\\n4\") == \"3\"\nassert solution(\"1\\n4\") == \"1\"\nassert solution(\"4\\n1\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\") == \"2\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"\nassert solution(\"3\\n2\") == \"3\", \"The last quiz has three choices: 1, 2, and 3. With his supernatural power, Takahashi has found out that the choices A and B are both wrong. Print the correct choice for this problem.\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Error in solution\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1.000000000000\nprint(\"Correct\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"1.000000000000\\n\"\nassert solution(\"5\\n\") == \"0.227977219779\\n\"\nassert solution(\"8\\n\") == \"1.000000000000\\n\"\nassert solution(\"9\\n\") == \"1.000000000000\\n\"\nassert solution(\"10\\n\") == \"1.000000000000\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1.000000000000\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1.000000000000\", \"Solution is incorrect.\"\nassert abs(solution(\"3\") - \"1.000000000000\") <= 1e-6, \"Solution is incorrect.\"\nassert solution(\"1\") == \"1.000000000000\", \"Solution is incorrect.\"\nassert abs(solution(\"1\") - \"1.000000000000\") <= 1e-6, \"Solution is incorrect.\"\nassert solution(\"2\") == \"1.000000000000\", \"Solution is incorrect.\"\nassert abs(solution(\"2\") - \"1.000000000000\") <= 1e-6, \"Solution is incorrect.\"\nassert solution(\"4\") == \"1.000000000000\", \"Solution is incorrect.\"\nassert abs(solution(\"4\") - \"1.000000000000\") <= 1e-6, \"Solution is incorrect.\"",
        "num_ids_2": 65,
        "num_ids_4": 130
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1.000000000000\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1.000000000000\\n\"\nassert solution(1) == \"1.000000000000\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1.000000000000\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1.000000000000\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1.000000000000\\n\", \"Testcase failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\nassert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='1') == 'Hello World'\nassert solution(stdin='2\\nA\\nB') == 'A+B'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World\\n'\nassert solution('2\\nA\\nB') == 'A+B\\n'\nassert solution('1\\nA\\nB') == 'A+B\\n'\nassert solution('2\\nA\\nB') == 'A+B\\n'\nassert solution('3\\nA\\nB') == 'A+B\\n'\nassert solution('4\\nA\\nB') == 'A+B\\n'",
        "num_ids_2": 31,
        "num_ids_4": 67
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Hello World'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Hello World\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n') == 'Hello World\\n'\nassert solution('2\\nA\\nB\\n') == 'A+B\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"3333\", \"Test case 1 failed\"\n\nassert solution(stdin=input()) == \"1111\", \"Test case 2 failed\"\n\nassert solution(stdin=input()) == \"9999\", \"Test case 3 failed\"\n\nassert solution(stdin=input()) == \"1111\", \"Test case 4 failed\"\n\nassert solution(stdin=input()) == \"9999\", \"Test case 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 2') == '22'\nassert solution('5 6') == '56'\nassert solution('7 8') == '88'\nassert solution('9 0') == '09'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"10 1\") == \"101\"\nassert solution(\"5 1\") == \"111\"\nassert solution(\"100 9\") == \"99\"\nassert solution(\"100 10\") == \"1010\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3333\"\nprint(\"All test cases pass\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 1\") == \"10\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3333\"\n\nThis code will test if the given strings are equal and if they are equal, it will print the lexicographically smaller one of them. If the strings are not equal, it will print the concatenation of the two strings.",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3333\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"3333\", \"Test Failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"c\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"c\") == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"b\", \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"b\", \"The solution is incorrect\"\nprint(\"The solution is correct\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Solution should return atcoder\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Solution should return 'atcoder'.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"The output should be 'atcoder'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\") == \"1000000\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 83
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0, \"Test failed\"\nassert solution(5) == 0, \"Test failed\"\nassert solution(10) == 0, \"Test failed\"\nassert solution(2000) == 1000000, \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 66
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(0) == 0, \"The solution for the first test case is incorrect.\"\nassert solution(1) == 0, \"The solution for the second test case is incorrect.\"\nassert solution(2) == 1000000, \"The solution for the third test case is incorrect.\"\nassert solution(3) == 1000000, \"The solution for the fourth test case is incorrect.\"\nassert solution(4) == 0, \"The solution for the fifth test case is incorrect.\"",
        "num_ids_2": 42,
        "num_ids_4": 96
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0\\n'\nassert solution('6\\n5 1 2 4 6 3') == '0\\n'\nassert solution('2\\n1000000 1000000') == '1000000\\n'",
        "num_ids_2": 48,
        "num_ids_4": 83
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 0, \"Test 1\"\nassert solution(3) == 0, \"Test 2\"\nassert solution(5) == 0, \"Test 3\"\nassert solution(10) == 0, \"Test 4\"\nassert solution(1000000) == 1000000, \"Test 5\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 0, \"Test failed\"\nassert solution(6) == 0, \"Test failed\"\nassert solution(2) == 1000000, \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=''), 'No input detected.'\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\") == \"1000000\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 83
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 5 7 8 2\\n\") == \"0\\n\"\nassert solution(\"6\\n5 1 2 4 6 3\\n\") == \"0\\n\"\nassert solution(\"2\\n1000000 1000000\\n\") == \"1000000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received output: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"\n",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == 5\nassert solution(\"1 1 100 99\\n100\\n\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == 6",
        "num_ids_2": 58,
        "num_ids_4": 90
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 51,
        "num_ids_4": 82
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == 5\nassert solution(\"1 1 100 99\\n100\\n\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == 6\nprint(\"All test cases passed\")",
        "num_ids_2": 58,
        "num_ids_4": 90
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"\n",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == 5\nassert solution(\"1 1 100 99\\n100\") == 1\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == 6\nprint(\"All tests pass!\")",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3\\n3 2 0 6 10 12\\n\\n4 2\\n0 1 2 3') == '3\\n3 2 0 7 10 14 '",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\\n3 2 0 7 10 14\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == 3\nassert solution(\"4 2\\n0 1 2 3\") == 0",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3\\n3 2 0 7 10 14\\n0\\n0 1 2 3'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n\") == \"3\\n3 2 0 7 10 14\"\nassert solution(\"4 2\\n0 1 2 3\\n\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\\n3 2 0 7 10 14 \"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == 8\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == 20",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == 8\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == 20",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == 8\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == 20",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'\n\nfrom collections import defaultdict\nfrom typing import List",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\\n\"\nassert solution(\"5 2\\n1 3\\n2 4\\n3 5\\n4 6\\n\") == \"5\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 136
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '8'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"NO\"\nassert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10001 10001 10001 10001\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10001 10000 10001\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10001 10001\") == \"NO\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10001 10000 10001\") == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test case failed: {output}, expected {stdin}\"\nfor input in test_cases:\n    print(f\"Input: {input}\")\n    output = solution(input)\n    print(f\"Output: {output}\")\n    assert output == expected, f\"Test case failed: {output}, expected {expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"NO\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"1\\n10000 10000 10000 10000\") == \"YES\"\n",
        "num_ids_2": 212,
        "num_ids_4": 410
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"3\\n1 1 1 1\\n2\\n1 1 1 1\\n3\\n1 1 1 1\\n1\\n1 1 1 1\") == \"YES\"\nassert solution(\"4\\n1 1 1\\n2\\n1 1 1\\n3\\n1 1 1\\n1\\n1 1 1\") == \"NO\"\nassert solution(\"5\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 1 1 1 1\\n6\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 1 1 1 1\\n6\\n1 1 1 1 1\\n7\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 1 1 1 1\\n6\\n1 1 1 1 1\\n7\\n1 1 1 1 1\\n8\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 1 1 1 1\\n6\\n1 1 1 1 1\\n7\\n1 1 1 1 1\\n8\\n1 1 1 1 1\\n9\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1 1 1\\n3\\n1 1 1 1 1\\n4\\n1 1 1 1 1\\n5\\n1 1 1 1 1\\n6\\n1 1 1 1 1\\n7\\n1 1 1 1 1\\n8\\n1 1 1 1 1\\n9\\n1 1 1 1 1\\n10\\n1 1 1 1 1\\n1\\n1 1 1 1 1\\n2\\n1 1 1",
        "num_ids_2": 212,
        "num_ids_4": 314
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nfor i, expected in enumerate(test_cases):\n    assert solution(stdin) == expected, f\"Test case {i+1} failed\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(f\"PASS\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test {test_number} failed\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\\n\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\\n\") == \"NO\"\nassert solution(\"1\\n1\\n10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\\n\") == \"YES\"",
        "num_ids_2": 215,
        "num_ids_4": 329
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Incorrect output. Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\\n7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"3\\n\\nInput\\n7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\\nOutput\\n9\"\n\nprint(\"Output\", solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\\n7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\"))",
        "num_ids_2": 329,
        "num_ids_4": 329
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"The output does not match the expected output.\"\n\ninput_str = \"\"\"6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\"\"\"\noutput_str = \"3\"\n\ninput_str = \"\"\"7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\"\"\"\noutput_str = \"9\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == 3\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == 9",
        "num_ids_2": 209,
        "num_ids_4": 209
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\\n\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\\n\"",
        "num_ids_2": 215,
        "num_ids_4": 215
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"3 1\n1 1 1 1 1\"\"\"\nassert solution() == \"\"\"7 2\n2 2 1 1 2 1\"\"\"\nassert solution() == \"\"\"7486 3\n3 3 3 2 2 2 2 1 1 1\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 30
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"Input\\n6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"Input\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 172
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n5\\n1 1 3 4 2\\n\\nOutput\\n3 1\\n1 1 1 1 1\\n\\nInput\\n6\\n1 5 12 13 2 15\\n\\nOutput\\n7 2\\n2 2 1 1 2 1\\n\\nInput\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\\nOutput\\n7486 3\\n3 3 3 2 2 2 2 1 1 1') == 'Output\\n7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'",
        "num_ids_2": 205,
        "num_ids_4": 205
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == '''\n3 1\n1 1 1 1 1\n'''\nassert solution(solution.__doc__) == '''\n7 2\n2 2 1 1 2 1\n'''\nassert solution(solution.__doc__) == '''\n7486 3\n3 3 3 2 2 2 2 1 1 1 \n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"\n",
        "num_ids_2": 79,
        "num_ids_4": 157
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == \"3 1\\n1 1 1 1 1\\n\"\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == \"7 2\\n2 2 1 1 2 1\\n\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1, 1, 3, 4, 2) == 3\nassert solution(6, 1, 5, 12, 13, 2, 15) == 7\nassert solution(10, 1, 2, 5, 129, 185, 581, 1041, 1909, 1580, 8150) == 7486\nassert solution(5, 1, 1, 1, 1, 1, 1, 1, 1, 1) == 1",
        "num_ids_2": 54,
        "num_ids_4": 151
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(5) == 7\nassert solution(6) == 7\nassert solution(10) == 7486",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5009) == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\", \"Error: The solution is incorrect.\"\nassert solution(7) == \"2\\n7\\n4\\n\", \"Error: The solution is incorrect.\"\nassert solution(10000) == \"2\\n10000\\n1\\n10\\n\", \"Error: The solution is incorrect.\"",
        "num_ids_2": 98,
        "num_ids_4": 136
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5009') == '5000 9', \"Test case 1: should return '5000 9' for input '5009'\"\nassert solution('7') == '1', \"Test case 2: should return '1' for input '7'\"\nassert solution('10000') == '1', \"Test case 3: should return '1' for input '10000'\"\nassert solution('10') == '10000 1', \"Test case 4: should return '10000 1' for input '10'\"\nassert solution('4000') == '4000', \"Test case 5: should return '4000' for input '4000'\"",
        "num_ids_2": 68,
        "num_ids_4": 142
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5009) == \"5000 9\\n1\\n7\"\nassert solution(7) == \"4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5009) == \"5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(7) == \"1 7\\n\"\nassert solution(10000) == \"10000\\n\"\nassert solution(10) == \"10 10\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 110
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\\n\") == \"2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000 \\n1\\n10000 \\n1\\n10\"\n\nimport re",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected '{output()}' but got '{solution(input())}'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is '{solution(input())}', but the expected output is '{expected_output}'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected, f\"Test failed. Expected: {expected}, got: {solution()}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([6, 5, 1, 2, 3, 4]) == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nassert solution([5, 1, 2, 4, 3]) == '1 1 1 1'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == expected_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'\nassert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'\nassert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'\n\nassert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'\nassert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'\nassert solution('3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1') == '3\\n2\\n1\\n'",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n2\\n1\\n\"\nassert solution(stdin) == \"3\\n2\\n1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"answer\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3\\n2\\n1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"\nassert solution(\"1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"",
        "num_ids_2": 92,
        "num_ids_4": 184
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '3\\n2\\n1'\nassert solution('3') == '2\\n1'\nassert solution('4') == '1\\n1'",
        "num_ids_2": 37,
        "num_ids_4": 50
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n2\\n1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"3\n2\n1\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Wrong output: {solution(stdin)}\\nExpected output: {output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"3\n2\n1\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2 \\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5 \\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input:\\n{input()}\\nOutput:\\n{output()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case failed: {solution(input())}!= {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2 \\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5 \\n'",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2 \\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5 \\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    10 4 10 15\n    1 2\n    4 3\n    \"\"\"\n) == \"0 0 1 2\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    5 4 1 5 4 3 7 1 2 5\n    4 6\n    2 1\n    10 8\n    3 5\n    \"\"\"\n) == \"5 4 0 5 3 3 9 0 2 5\\n\"\n\nassert solution(\n    \"\"\"\n    3 5\n    5 1\n    4 4\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    10 4 10 15\n    1 2\n    4 3\n    \"\"\"\n) == \"0 0 1 2\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    10 4 10 15\n    1 2\n    4 3\n    \"\"\"\n) == \"0 0 1 2\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2 \\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5 \\n\"\n",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\"\nassert solution(\"1 2 3\\n1 3 2\") == \"YES\\nabc\"\nassert solution(\"2 2\\n1 2 3\\n1 3 2\") == \"NO\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\"\nassert solution(\"3 2\\n1 2 1\\n1 3 1\") == \"YES\\nab\"\nassert solution(\"3 2\\n1 2 2\\n1 3 2\") == \"YES\\nab\"\nassert solution(\"3 2\\n1 2 3\\n1 3 1\") == \"NO\"\nassert solution(\"3 2\\n1 2 2\\n1 3 3\") == \"NO\"\n",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\"\nassert solution(\"4 3\\n1 2 3 4\\n2 4 1\") == \"YES\\nab\"\nassert solution(\"5 4\\n1 2 3 4 5\\n3 4 1 2\") == \"YES\\nab\"\nassert solution(\"1 1\\n\") == \"NO\"\nassert solution(\"2 1\\n\") == \"NO\"\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"NO\"\nassert solution(\"1 2\\n1 2\\n1 2\\n\") == \"NO\"\nassert solution(\"1 2\\n1 2\\n1 2\\n1 2\\n\") == \"NO\"",
        "num_ids_2": 58,
        "num_ids_4": 106
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n1 2 3\\n1 3 2') == 'YES\\nabb\\ndef solution(stdin: str) -> str:\\npass'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input())) == \"YES\"\nassert solution(solution(input())) == \"NO\"\nassert solution(solution(input",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabbd\"\nassert solution(\"4 1\\n2 3 1\\n3 1 2\") == \"YES\\nabb\"\nassert solution(\"5 3\\n1 2 3 4 5\\n4 2 5 1 3\") == \"YES\\nabbcf\"\nassert solution(\"1 3\\n4 2 5\\n5 1 3 4\") == \"NO\"\nassert solution(\"3 3\\n1 2 3\\n2 1 3\") == \"YES\\nabbd\"",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\nabbb\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\np1 2 3\\np1 3 2\") == \"YES\\nbb\\ndf\"\nassert solution(\"1 2 3\") == \"NO\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nbbb\\ndef\"\nassert solution(\"4 3\\n1 2 3\\n1 3 2\\n2 3 1\") == \"YES\\nabb\\ndef\\nghi\"\nassert solution(\"3 3\\n1 2 3\\n2 1 3\") == \"NO\"\n",
        "num_ids_2": 72,
        "num_ids_4": 98
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\nab\\xde\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\"\nassert solution(\"2\\n1 4\\n\") == \"3\"",
        "num_ids_2": 49,
        "num_ids_4": 92
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 43\nassert solution(4) == 64\nassert solution(6) == 69\nassert solution(2) == 3",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"43\"\nassert solution() == \"1 3 2 \"\nassert solution() == \"64\"\nassert solution() == \"2 1 4 3 \"\nassert solution() == \"69\"\nassert solution() == \"6 1 3 5 2 4 \"\nassert solution() == \"3\"\nassert solution() == \"2 1\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"43\"\nassert solution(4) == \"64\"\nassert solution(6) == \"69\"\nassert solution(2) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n10 10 10 10') == '64\\n2 1 4 3'\nassert solution('2\\n1 4') == '3\\n2 1'\nassert solution('3\\n20 10 20') == '43\\n1 3 2'\nassert solution('6\\n5 4 5 4 4 5') == '69\\n6 1 3 5 2 4'\nassert solution('2\\n1 4') == '3\\n2 1'\nprint(\"All tests passed!\")",
        "num_ids_2": 53,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution for the given inputs is incorrect. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\"\nassert solution(\"4\\n10 10 10 10\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\"\nassert solution(\"2\\n1 4\") == \"3\"",
        "num_ids_2": 45,
        "num_ids_4": 84
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Expected output is not correct!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\", \"Incorrect output for sample input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\", \"Your code is not correct\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='5\\n4 2 5 1 3') == '3\\n'\nassert solution(stdin='5\\n1 2 3 4 5') == '0\\n'\nassert solution(stdin='5\\n2 1 3 4 5') == '3\\n'",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('1\\n1') == '0'\nassert solution('3\\n1 2 3') == '2'\nassert solution('1\\n1 2 3 4') == '0'\nassert solution('1\\n2') == '1'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\\n\"\n\nassert solution(\"5\\n2 5 4 1 3\\n\") == \"2\\n\"\n\nassert solution(\"5\\n5 5 1 1 1\\n\") == \"1\\n\"\n\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"0\\n\"\n\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"5\\n3 3 3 3 3\") == \"2\"\nassert solution(\"3\\n4 2 4 1 4 2 4\") == \"1\"\nassert solution(\"3\\n3 3 3 3 3\") == \"0\"\nassert solution(\"4\\n3 3 3 3\") == \"0\"\nassert solution(\"5\\n3 3 3 3 3\") == \"0\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test Case 1\"\n\nassert solution(stdin) == \"2\\n\", \"Test Case 2\"\n\nassert solution(stdin) == \"3\\n\", \"Test Case 3\"\n\nassert solution(stdin) == \"4\\n\", \"Test Case 4\"\n\nassert solution(stdin) == \"5\\n\", \"Test Case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"3\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\", \"The minimum number of elements that needs to be removed so that a will be a good sequence is 1.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\", \"Solution should return 1 for the given constraints\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\", \"The output should be '1', not '{}'.\".format(solution(input()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"\nassert solution(\"0 2 3 4 6\") == \"0\\n\"\nassert solution(\"0 2 3 5 6\") == \"0\\n\"\nassert solution(\"0 2 3 4 6 7\") == \"0\\n\"\nassert solution(\"0 2 3 4 5 6 7 8 9\") == \"0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"\n\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 0 0 0 0\") == \"1\"\nassert solution(\"0 0 0 0 0 0\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 62
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output. Expected: 1, got: {}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"Test Case 1: Snuke assigned 0 to x_1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"The solution should print 1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"Output should be 1.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"The minimum possible value of S_{max} - S_{min} should be 0.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3 5') == '0\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\na_1 a_2... a_N') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"4\\n1 10 100\") == \"No\"\nassert solution(\"5\\n1 10 100\") == \"Yes\"\nassert solution(\"6\\n1 10 100\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"4\\n1 10 100\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 10 100') == 'Yes\\n', \"Test case 1 failed\"\n\nassert solution('4\\n1 10 100') == 'No\\n', \"Test case 2 failed\"\n\nassert solution('5\\n1 10 100') == 'No\\n', \"Test case 3 failed\"\n\nassert solution('6\\n1 10 100') == 'No\\n', \"Test case 4 failed\"\n\nassert solution('7\\n1 10 100') == 'Yes\\n', \"Test case 5 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"4\\n1 10 100\") == \"No\"\nassert solution(\"5\\n1 10 100\") == \"Yes\"\nassert solution(\"10\\n1 10 100\") == \"No\"\nassert solution(\"6\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"No\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"yx\\naxy\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"yx\") == \"Yes\", \"Expected 'Yes', but got '{}'\".format(solution(\"yx\"))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('z') == 'No'\nassert solution('aa') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"axy\") == \"Yes\"\nassert solution(\"yx\") == \"No\"\nassert solution(\"xy\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"zyx\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"xy\") == \"No\"\nassert solution(\"atcoder\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"8 5 1\") == \"NO\"\nassert solution(\"2 2 2\") == \"YES\"\nassert solution(\"2 2 1\") == \"YES\"\nassert solution(\"2 2 3\") == \"NO\"\n\nfrom typing import List\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES', \"Incorrect output. Please try again.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"10 10 10\") == \"NO\"\nassert solution(\"10 10 1\") == \"NO\"\nassert solution(\"10 10 2\") == \"YES\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\\n\") == \"YES\\n\"\nassert solution(\"7 10 5\\n\") == \"NO\\n\"\nassert solution(\"8 5 1\\n\") == \"YES\\n\"\nassert solution(\"10 10 10\\n\") == \"NO\\n\"\nassert solution(\"7 10 5\\n\") == \"YES\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"5 10 1\") == \"YES\"\nassert solution(\"1 10 3\") == \"YES\"\nassert solution(\"20 50 10\") == \"YES\"\nassert solution(\"5 3 7\") == \"NO\"\nassert solution(\"1 10 4\") == \"NO\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\" or \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 5 1\") == \"YES\\n\"\nassert solution(\"4 10 7\") == \"NO\\n\"\nassert solution(\"1 10 14\") == \"YES\\n\"\nassert solution(\"2 10 28\") == \"YES\\n\"\nassert solution(\"8 10 4\") == \"YES\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"5 7 1\") == \"YES\"\nassert solution(\"1 7 5\") == \"NO\"\nassert solution(\"1 7 11\") == \"YES\"\nassert solution(\"1 11 7\") == \"NO\"\nassert solution(\"1 11 10\") == \"YES\"\nassert solution(\"5 5 5\") == \"YES\"\nassert solution(\"5 5 10\") == \"NO\"\nassert solution(\"10 15 10\") == \"YES\"\nassert solution(\"10 15 5\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 20 1\") == \"NO\"\nassert solution(\"10 5 1\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"3 3\") == \"1\\n\", \"Test case 2 failed.\"\nassert solution(\"4 4\") == \"1\\n\", \"Test case 3 failed.\"\nassert solution(\"5 5\") == \"1\\n\", \"Test case 4 failed.\"\nassert solution(\"6 6\") == \"1\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"Test Case 1 Failed\"\n\nassert solution(\"3 4\") == \"2\\n\", \"Test Case 2 Failed\"\n\nassert solution(\"1 1\") == \"1\\n\", \"Test Case 3 Failed\"\n\nassert solution(\"5 5\") == \"5\\n\", \"Test Case 4 Failed\"\n\nassert solution(\"1 2\") == \"1\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\", \"The area is 1 square yard.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"4 4\") == \"6\"\nassert solution(\"5 5\") == \"25\"\nassert solution(\"3 3\") == \"12\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\", \"Output is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"1\\n\", \"Test 1\"\nassert solution(\"5 3\\n\") == \"10\\n\", \"Test 2\"\nassert solution(\"2 5\\n\") == \"60\\n\", \"Test 3\"\nassert solution(\"2 2\\n\") == \"1\\n\", \"Test 4\"\nassert solution(\"2 2\\n\") == \"1\\n\", \"Test 5\"\nassert solution(\"3 2\\n\") == \"6\\n\", \"Test 6\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"The area of this yard excluding the roads (in square yards) is not correct.\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\", \"The answer is incorrect. Please check the input values and constraints.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\", \"Test failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 3 1\") == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13 3 1\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"12 5 2\") == \"2\"\nassert solution(\"12 10 3\") == \"3\"\nassert solution(\"15 7 4\") == \"2\"\nassert solution(\"15 15 5\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13 3 1') == '3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13 3 1\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"Expected output: 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n3 4\\n4 6\\n5 8\") == \"3\\n\"\nassert solution(\"3\\n2 3\\n1 5\\n4 1\\n7 9\") == \"5\\n\"\nassert solution(\"3\\n1 3\\n3 5\\n5 7\\n7 9\") == \"2\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 138
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"\nassert solution(\"1\\n5 5\\n2 0\\n3 1\\n4 2\\n0 4\\n3 2\\n5 3\\n1 3\\n\") == \"1\\n\"\nassert solution(\"1\\n5 5\\n2 0\\n3 1\\n4 2\\n0 4\\n3 2\\n5 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"1\\n5 5\\n2 0\\n3 1\\n4 2\\n0 4\\n3 2\\n5 3\\n1 3\\n\") == \"0\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 204
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == 2\nassert solution('2\\n3\\n1\\n4\\n5') == 1\nassert solution('1\\n4\\n2\\n5\\n3') == 0\nassert solution('0\\n0\\n0\\n0\\n0') == 0\n",
        "num_ids_2": 60,
        "num_ids_4": 102
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"\nprint(\"All tests pass!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nprint(\"All Tests Pass!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\\n\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nassert solution(\"3 1\\n1 2\\n\") == \"4\"\nassert solution(\"4 2\\n1 2\\n\") == \"1\"\nassert solution(\"5 5\\n1 2\\n3 4\\n\") == \"12\"\nassert solution(\"6 3\\n1 2\\n3 4\\n\") == \"12\"\nassert solution(\"7 4\\n1 2\\n3 4\\n\") == \"12\"",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4\\n0 3') == '7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n1\\n2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n?\\nL 4\\n?\\nL 5\\n?') == '1\\n1\\n2\\n'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n?\\nL 10\\nR 115\\n?\\nR 110\\n?') == '0\\n2\\n1\\n'",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: {solution(input())}!= {output()}\"\n\nfor i, line in enumerate(stdin.splitlines()):\n    queries = line.split()\n    queries = [(int(query), int(query)) for query in queries]\n    # Your code here\n    pass",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(int(input())) + '\\n') == '1\\n1\\n2\\n'\nassert solution(str(int(input())) + '\\n') == '0\\n2\\n1\\n'\nassert solution(str(int(input())) + '\\n') == '2\\n1\\n'",
        "num_ids_2": 52,
        "num_ids_4": 75
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\") == \"1\\n1\\n2\\n\"\n\nassert solution(\"\"\"10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"\n\nassert solution(\"1\\n\") == \"1\\n1\\n1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 153,
        "num_ids_4": 1026
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n1\\n2\\n\\n0\\n2\\n1\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0, \"The expected output is 0, but it is {}\".format(solution(3))\nassert solution(5) == 0, \"The expected output is 0, but it is {}\".format(solution(5))\nassert solution(10) == 0, \"The expected output is 0, but it is {}\".format(solution(10))\nassert solution(15) == 0, \"The expected output is 0, but it is {}\".format(solution(15))\nassert solution(20) == 0, \"The expected output is 0, but it is {}\".format(solution(20))\nassert solution(25) == 0, \"The expected output is 0, but it is {}\".format(solution(25))\nassert solution(30) == 0, \"The expected output is 0, but it is {}\".format(solution(30))\nassert solution(35) == 0, \"The expected output is 0, but it is {}\".format(solution(35))\nassert solution(40) == 0, \"The expected output is 0, but it is {}\".format(solution(40))\nassert solution(45) == 0, \"The expected output is 0, but it is {}\".format(solution(45))\nassert solution(50) == 0, \"The expected output is 0, but it is {}\".format(solution(50))\nassert solution(55) == 0, \"The expected output is 0, but it is {}\".format(solution(55))\nassert solution(60) == 0, \"The expected output is 0, but it is {}\".format(solution(60))\nassert solution(65) == 0, \"The expected output is 0, but it is {}\".format(solution(65))\nassert solution(70) == 0, \"The expected output is 0, but it is {}\".format(solution(70))\nassert solution(75) == 0, \"The expected output is 0, but it is {}\".format(solution(75))\nassert solution(80) == 0, \"The expected output is 0, but it is {}\".format(solution(80))\nassert solution(85) == 0, \"The expected output is 0, but it is {}\".format(solution(85))\nassert solution(90) == 0, \"The expected output is 0, but it is {}\".format(solution(90))\nassert solution(95) == 0, \"The expected output is 0, but it is {}\".format(solution(95))\nassert solution(100000000000000000) == -1, \"The expected output is -1, but it is {}\".format(solution(1000000000000000000))",
        "num_ids_2": 56,
        "num_ids_4": 116
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abc') == 'abc'\nassert solution('123') == '123'\nassert solution('124') == '124'\nassert solution('125') == '125'\nassert solution('126') == '126'\nassert solution('127') == '127'\nassert solution('128') == '128'\nassert solution('129') == '129'\nassert solution('130') == '130'\nassert solution('131') == '131'\nassert solution('132') == '132'\nassert solution('133') == '133'\nassert solution('134') == '134'\nassert solution('135') == '135'\nassert solution('136') == '136'\nassert solution('137') == '137'\nassert solution('138') == '138'\nassert solution('139') == '139'\nassert solution('140') == '140'\nassert solution('141') == '141'\nassert solution('142') == '142'\nassert solution('143') == '143'\nassert solution('144') == '144'\nassert solution('145') == '145'\nassert solution('146') == '146'\nassert solution('147') == '147'\nassert solution('148') == '148'\nassert solution('149') == '149'\nassert solution('150') == '150'\nassert solution('151') == '151'\nassert solution('152') == '152'\nassert solution('153') == '153'\nassert solution('154') == '154'\nassert solution('155') == '155'\nassert solution('156') == '156'\nassert solution('157') == '157'\nassert solution('158') == '158'\nassert solution('159') == '159'\nassert solution('160') == '160'\nassert solution('161') == '161'\nassert solution('162') == '162'\nassert solution('163') == '163'\nassert solution('164') == '164'\nassert solution('165') == '165'\nassert solution('166') == '166'\nassert solution('167') == '167'\nassert solution('168') == '168'\nassert solution('169') == '169'\nassert solution('170') == '170'\nassert solution('171') == '171'\nassert solution('172') == '172'\nassert solution('173') == '173'\nassert solution('174') == '174'\nassert solution('175') == '175'\nassert solution('176') == '176'\nassert solution('177') == '177'\nassert solution('178') == '178'\nassert solution('179') == '179'\nassert solution('180') == '180'\nassert solution('181') == '181'\nassert solution('182') == '182'\nassert solution('183') == '183'\nassert solution('184') == '184'\nassert solution('185') == '185'\nassert solution('186') == '186'\nassert solution('187') == '187'\nassert solution('188') == '188'\nassert solution('189') == '189'\nassert solution('190') == '190'\nassert solution('191') == '191'\nassert solution('192') == '192'\nassert solution('193') == '193'\nassert solution('194') == '194'\nassert solution('195') ==",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0\nassert solution(2) == 4\nassert solution(4) == 6\nassert solution(14) == 6\nassert solution(100000000000000000000) == 72",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '4'\nassert solution(3) == '6'\nassert solution(4) == '6'\nassert solution(5) == '-1'\nassert solution(6) == '6'\nassert solution(7) == '72'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0\nassert solution(10) == 0\nassert solution(15) == 0\nassert solution(20) == 0\nassert solution(25) == 0\nassert solution(30) == 0\nassert solution(35) == 0\nassert solution(40) == 0\nassert solution(45) == 0\nassert solution(50) == 0\nassert solution(55) == 0\nassert solution(60) == 0\nassert solution(65) == 0\nassert solution(70) == 0\nassert solution(75) == 0\nassert solution(80) == 0\nassert solution(85) == 0\nassert solution(90) == 0\nassert solution(95) == 0\nassert solution(100) == 0\nassert solution(105) == 0\nassert solution(110) == 0\nassert solution(115) == 0\nassert solution(120) == 0\nassert solution(125) == 0\nassert solution(130) == 0\nassert solution(135) == 0\nassert solution(140) == 0\nassert solution(145) == 0\nassert solution(150) == 0\nassert solution(155) == 0\nassert solution(160) == 0\nassert solution(165) == 0\nassert solution(170) == 0\nassert solution(175) == 0\nassert solution(180) == 0\nassert solution(185) == 0\nassert solution(190) == 0\nassert solution(195) == 0\nassert solution(200) == 0\nassert solution(205) == 0\nassert solution(210) == 0\nassert solution(215) == 0\nassert solution(220) == 0\nassert solution(225) == 0\nassert solution(230) == 0\nassert solution(235) == 0\nassert solution(240) == 0\nassert solution(245) == 0\nassert solution(250) == 0\nassert solution(255) == 0\nassert solution(260) == 0\nassert solution(265) == 0\nassert solution(270) == 0\nassert solution(275) == 0\nassert solution(280) == 0\nassert solution(285) == 0\nassert solution(290) == 0\nassert solution(295) == 0\nassert solution(300) == 0\nassert solution(305) == 0\nassert solution(310) == 0\nassert solution(315) == 0\nassert solution(320) == 0\nassert solution(325) == 0\nassert solution(330) == 0\nassert solution(335) == 0\nassert solution(340) == 0\nassert solution(345) == 0\nassert solution(350) == 0\nassert solution(355) == 0\nassert solution(360) == 0\nassert solution(365) == 0\nassert solution(370) == 0\nassert solution(375) == 0\nassert solution(380) == 0\nassert solution(385) == 0\nassert solution(390) == 0\nassert solution(395) == 0\nassert solution(400) == 0\nassert solution(405) == 0\nassert solution(410) == 0\nassert solution(415) == 0\nassert solution(420) == 0\nassert solution(425) == 0\nassert solution(430) == 0\nassert solution(435) == 0\nassert solution(440) == 0\nassert solution(445) == 0\nassert solution(450) == 0\nassert solution(455) == 0\nassert solution(460) == ",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"\nassert solution(1) == \"0\\n\"\nassert solution(10) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"\nassert solution(25) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"\nassert solution(30) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"\nassert solution(14) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"\nassert solution(27) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"\nassert solution(100000000000000000) == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 104
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\"  # expected output",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 3\nassert solution(7) == 3\nassert solution(8) == 4\nassert solution(9) == 4\nassert solution(10) == 5\nassert solution(11) == 5\nassert solution(12) == 6\nassert solution(13) == 6\nassert solution(14) == 7\nassert solution(15) == 7\nassert solution(16) == 8\nassert solution(17) == 8\nassert solution(18) == 9\nassert solution(19) == 9\nassert solution(20) == 10\nassert solution(21) == 10\nassert solution(22) == 11\nassert solution(23) == 11\nassert solution(24) == 12\nassert solution(25) == 12\nassert solution(26) == 13\nassert solution(27) == 13\nassert solution(28) == 14\nassert solution(29) == 14\nassert solution(30) == 15\nassert solution(31) == 15\nassert solution(32) == 16\nassert solution(33) == 16\nassert solution(34) == 17\nassert solution(35) == 17\nassert solution(36) == 18\nassert solution(37) == 18\nassert solution(38) == 19\nassert solution(39) == 19\nassert solution(40) == 20\nassert solution(41) == 20\nassert solution(42) == 21\nassert solution(43) == 21\nassert solution(44) == 22\nassert solution(45) == 22\nassert solution(46) == 23\nassert solution(47) == 23\nassert solution(48) == 24\nassert solution(49) == 24\nassert solution(50) == 25\nassert solution(51) == 25\nassert solution(52) == 26\nassert solution(53) == 26\nassert solution(54) == 27\nassert solution(55) == 27\nassert solution(56) == 28\nassert solution(57) == 28\nassert solution(58) == 29\nassert solution(59) == 29\nassert solution(60) == 30\nassert solution(61) == 30\nassert solution(62) == 31\nassert solution(63) == 31\nassert solution(64) == 32\nassert solution(65) == 32\nassert solution(66) == 33\nassert solution(67) == 33\nassert solution(68) == 34\nassert solution(69) == 34\nassert solution(70) == 35\nassert solution(71) == 35\nassert solution(72) == 36\nassert solution(73) == 36\nassert solution(74) == 37\nassert solution(75) == 37\nassert solution(76) == 38\nassert solution(77) == 38\nassert solution(78) == 39\nassert solution(79) == 39\nassert solution(80) == 40\nassert solution(81) == 40\nassert solution(82) == 41\nassert solution(83) == 41\nassert solution(84) == 42\nassert solution(85) == 42\nassert solution(86) == 43\nassert solution(87) == 43\nassert solution(88) == 44\nassert solution(89) == 44\nassert solution(90) == 45\nassert solution(91) == 45\nassert solution(92) == 46\nassert solution(93) == 46\nassert solution(94) == 47\nassert solution(95) == 47\nassert solution(96) == 4",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(\"5\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"NO\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'YES'\nassert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('3\\n1 2 3\\n2\\n2 2 2\\n') == 'YES'",
        "num_ids_2": 70,
        "num_ids_4": 99
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=r'''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution(stdin=r'''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution(stdin=r'''\n3\n1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution(stdin=r'''\n3\n1\n1\n1\n1\n1\n1\n''') == 'NO'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'NO'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'NO'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'NO'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution(stdin=r'''\n1\n1\n1\n1\n1\n1\n1\n''') == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"\nassert solution(input()) == \"YES\" or solution(input()) == \"YES\" or solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nprint(\"NO\")\n\nfor i in range(1, 11):\n    for j in range(2, n+1):\n        a_i = int(input())\n        if a_i > 0:\n            a_i += 2\n        else:\n            a_i -= 1\n        for k in range(n):\n            field[j-1][k] = a_i\n\nprint(str(field))",
        "num_ids_2": 47,
        "num_ids_4": 57
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4\n    3\n    1 1 3\n    4\n    1 1 2 1\n    2\n    11 11\n    1\n    100\n    \"\"\"\n) == \"YES\\nNO\\nYES\\nYES\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    4\n    1 1 3\n    4\n    1 1 2 1\n    2\n    11 11\n    1\n    100\n    \"\"\"\n) == \"NO\\nNO\\nNO\\nYES\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    5\n    1 1 3\n    4\n    1 1 2 1\n    2\n    11 11\n    1\n    100\n    \"\"\"\n) == \"NO\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([r\"3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\"]) == \"YES\"\nassert solution([r\"4\n1 1 2 1\n2\n11 11\n1\n100\"]) == \"NO\"\nassert solution([r\"5\n1 1 2 2 1\n1\n100\"]) == \"YES\"\nassert solution([r\"6\n1 1 2 2 2\n1\n100\"]) == \"NO\"\nassert solution([r\"7\n1 1 2 2 3\n1\n100\"]) == \"YES\"\nassert solution([r\"8\n1 1 2 2 4\n1\n100\"]) == \"NO\"\nassert solution([r\"9\n1 1 2 2 5\n1\n100\"]) == \"YES\"\nassert solution([r\"10\n1 1 2 2 6\n1\n100\"]) == \"NO\"\nassert solution([r\"11\n1 1 2 2 7\n1\n100\"]) == \"YES\"\nassert solution([r\"12\n1 1 2 2 8\n1\n100\"]) == \"NO\"\nassert solution([r\"13\n1 1 2 2 9\n1\n100\"]) == \"YES\"\nassert solution([r\"14\n1 1 2 2 10\n1\n100\"]) == \"NO\"\nassert solution([r\"15\n1 1 2 2 11\n1\n100\"]) == \"YES\"\nassert solution([r\"16\n1 1 2 2 12\n1\n100\"]) == \"NO\"\nassert solution([r\"17\n1 1 2 2 13\n1\n100\"]) == \"YES\"\nassert solution([r\"18\n1 1 2 2 14\n1\n100\"]) == \"NO\"\nassert solution([r\"19\n1 1 2 2 15\n1\n100\"]) == \"YES\"\nassert solution([r\"20\n1 1 2 2 16\n1\n100\"]) == \"NO\"\nassert solution([r\"21\n1 1 2 2 17\n1\n100\"]) == \"YES\"\nassert solution([r\"22\n1 1 2 2 18\n1\n100\"]) == \"NO\"\nassert solution([r\"23\n1 1 2 2 19\n1\n100\"]) == \"YES\"\nassert solution([r\"24\n1 1 2 2 20\n1\n100\"]) == \"NO\"\nassert solution([r\"25\n1 1 2 2 21\n1\n100\"]) == \"YES\"\nassert solution([r\"26\n1 1 2 2 22\n1\n100\"]) == \"NO\"\nassert solution([r\"27\n1 1 2 2 23\n1\n100\"]) == \"YES\"\nassert solution([r\"28\n1 1 2 2 24\n1\n100\"]) == \"NO\"\nassert solution([r\"29\n1 1 2 2 25\n1\n100\"]) == \"YES\"\nassert solution([r\"30\n1 1 2 2 26\n1\n100\"]) == \"NO\"\nassert solution([r\"31\n1 1 2 2 27\n1\n100\"]) == \"YES\"\nassert solution([r\"32\n1 1 2 2 28\n1\n100\"]) == \"NO\"\nassert solution([r\"33\n1 1 2 2 29\n1\n100\"]) == \"YES\"\nassert solution([r\"34\n1 1 2 2 30\n1\n100\"]) == \"NO\"\nassert solution([r\"35\n1 1 2 2 31\n1\n100\"]) == \"YES\"\nassert solution([r\"36\n1 1 2 2 32\n1\n100\"]) == \"NO\"\nassert solution([r",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"NO\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"\nassert solution(\"4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\") == \"YES\"",
        "num_ids_2": 100,
        "num_ids_4": 200
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == 4\nassert solution(\"5\\nzcabd\\ndbacz\") == 0\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"4\"\nassert solution(\"bacabaa\") == \"0\"\nassert solution(\"zcabd\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Input {input()} should produce output {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\"\nfor t in range(1, int(input()) + 1):\n    a, b, k = map(int, input().split())\n    assert 1 <= a <= 10**9 and 1 <= b <= 10**9 and 1 <= k <= 10**9\n    result = solution(f\"Case #{t}: {a} {b} {k}\")\n    print(result)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == '8\\n198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    6\n    5 2 3\n    100 1 4\n    1 10 5\n    1000000000 1 6\n    1 1 1000000000\n    1 1 999999999\n    \"\"\"\n) == \"\"\"\n    8\n    198\n    -17\n    2999999997\n    0\n    1\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2\n    1 1\n    \"\"\"\n) == \"\"\"\n    2\n    0\n    1\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n8\n198\n-17\n2999999997\n0\n1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: '{expected_output}', Received output: '{solution(stdin)}'\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000000000000000000') == '1'\nassert solution('100000000000000000000000000') == '3'\nassert solution('100000000000000000000000000000') == '9'\nassert solution('100000000000000000000000000000000') == '13'\nassert solution('1000000000000000000000000000000000') == '27'\nassert solution('10000000000000000000000000000000000000') == '6561'\nassert solution('10000000000000000000000000000000000000000') == '19683'\nassert solution('10000000000000000000000000000000000000000000') == '1350851717672992089'",
        "num_ids_2": 64,
        "num_ids_4": 146
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(6) == \"6\\n\"\nassert solution(13) == \"13\\n\"\nassert solution(14) == \"14\\n\"\nassert solution(3620) == \"13\\n\"\nassert solution(10000) == \"27\\n\"\nassert solution(1000000000000000000) == \"6561\\n\"\nassert solution(19683) == \"1350851717672992089\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n10000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1') == '1\\n'\nassert solution(stdin='1\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n'\nassert solution(stdin='1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n20",
        "num_ids_2": 127,
        "num_ids_4": 1027
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Error: Please enter valid input.\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"\nassert solution(\"8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n10000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"",
        "num_ids_2": 220,
        "num_ids_4": 220
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10\\n11 2 1 5\\n10 11 9 1 10\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\"",
        "num_ids_2": 214,
        "num_ids_4": 470
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 404,
        "num_ids_4": 808
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12343 43 4543 39 123212 1000000000 1000000000 1 1 1\") == \"70\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"10 11 2 1 5\") == \"55\"\nassert solution(\"10 11 9 1 10\") == \"999999999\"",
        "num_ids_2": 105,
        "num_ids_4": 155
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 205,
        "num_ids_4": 205
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 205,
        "num_ids_4": 205
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n10 11 10 1 1\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n10 11 10 1 1\\n10 11 11 1 1\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 422,
        "num_ids_4": 654
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1000000000\\n1000000000\\n1\\n1\\n1000000000\\n') == '70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1000000000\\n1000000000\\n1\\n1\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n') == '70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n'",
        "num_ids_2": 228,
        "num_ids_4": 399
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 10\") == \"10\"\nassert solution(\"10 10 8 5 3\") == \"23\"\nassert solution(\"12 8 8 7 2\") == \"64\"\nassert solution(\"12343 43 4543 39 123212\") == \"11246262880\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"10000000000\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"100000000000000000\"\nassert solution(\"10 11 2 1 5\") == \"125\"\nassert solution(\"10 11 9 1 10\") == \"99999999900000000\"",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '1'\nassert solution(4) == '1'\nassert solution(5) == '2'\nassert solution(6) == '1'\nassert solution(7) == '2'\nassert solution(8) == '2'\nassert solution(9) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n0\\n2\\n2\\n1', \"The correct answer is 1.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n0\\n2\\n2\\n1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n\") == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n0\\n2\\n2\\n1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Solution {solution(input())} does not match expected output {output()}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777\\n') == '13\\n90\\n1\\n66'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"90\", \"Your solution should return the correct output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '13\\n90\\n1\\n66'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"13\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"13\"\nassert solution(9) == \"90\"\nassert solution(10) == \"1\"\nassert solution(11) == \"66\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 22, 9999, 1, 777) == 13\nassert solution(4, 1111, 1111, 2222, 2222, 2222, 2222) == 13\nassert solution(4, 1111, 1111, 2222, 2222, 2222, 2222, 2222, 2222) == 13\nassert solution(4, 2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222, 2222) == 13\nassert solution
        "num_ids_2": 74,
        "num_ids_4": 202
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '13\\n90\\n1\\n66'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777') == '13\\n90\\n1\\n66'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\\n\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Output: {output}, Error: {solution(input)}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n2 2\\n4 1\"",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin)) == \"YES\"\nassert solution(solution(stdin",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n') == 'YES\\n2 6\\n1 2\\n'\nassert solution('3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n') == 'NO\\n'\nassert solution('4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n') == 'YES\\n2 2\\n4 1\\n'",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == '''YES\n2 6\n1 2\n'''\n\nassert solution('''\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == '''NO\n'''\n\nassert solution('''\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == '''YES\n2 2\n4 1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution error: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Expected {expected_output}, got {solution(input)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2,3,-1,5,-4,7,-2,1\") == \"13\"\nassert solution(\"3,-1,0,2\") == \"6\"\nassert solution(\"4,2,3\") == \"5\"\nassert solution(\"2,3\") == \"0\"\nassert solution(\"2,1\") == \"0\"\nassert solution(\"3,4,-2,1\") == \"13\"",
        "num_ids_2": 41,
        "num_ids_4": 67
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'[\"input\"]') == 'input'\nassert solution(r'[\"output\"]') == 'output'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\nInput: A = [4,2,3], K = 1\nOutput: 5\nExplanation: Choose indices (1,) and A becomes [4,-2,3].\n\"\"\") == 5\n\nassert solution(r\"\"\"\nInput: A = [3,-1,0,2], K = 3\nOutput: 6\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\n\"\"\") == 6\n\nassert solution(r\"\"\"\nInput: A = [2,-3,-1,5,-4], K = 2\nOutput: 13\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\n\"\"\") == 13",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input: A = [4,2,3], K = 1\\nOutput: 5\\nExplanation: Choose indices (1,) and A becomes [4,-2,3].\\n\") == \"5\\n\"\nassert solution(\"Input: A = [3,-1,0,2], K = 3\\nOutput: 6\\nExplanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].\\n\") == \"6\\n\"\nassert solution(\"Input: A = [2,-3,-1,5,-4], K = 2\\nOutput: 13\\nExplanation: Choose indices (1, 4) and A becomes [2,3,-1,5,4].\\n\") == \"13\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 182
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4, 2, 3]) == 5\nassert solution([3, -1, 0, 2]) == 6\nassert solution([2, -3, -1, 5, -4]) == 13\nassert solution([2, -3, -1, 5, -4]) == 13",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4,2,3], 1) == \"5\"\nassert solution([3,-1,0,2], 3) == \"6\"\nassert solution([2,-3,-1,5,-4], 2) == \"13\"",
        "num_ids_2": 36,
        "num_ids_4": 58
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\"\n\nsolution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\n\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet\\nvet\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbete\\n\") == \"beet\\nvet\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeat\") == \"beet\\nvet\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nve\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nve\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"7\\nbeat\\nve\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nbeat\\nvet\\nbet\\nbet\\nbet\\n') == 'beet\\nbet\\n'\nassert solution('10\\nbeat\\nvet\\nbet\\nbet\\nbet\\n') == 'beet\\nbet\\n'\nassert solution('10\\nbeat\\nvet\\nbet\\nbet\\nbet\\n') == 'beet\\nbet\\n'\nassert solution('10\\nbeat\\nvet\\nbet\\nbet\\nbet\\n') == 'beet\\nbet\\n'\nassert solution('10\\nbeat\\nvet\\nbet\\nbet\\nbet\\n') == 'beet\\nbet\\n'",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeef\") == \"beet\\nbeet and vet are written on two sheets each, while beat, bed, and bet are written on one vote each.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeat\") == \"beet\\nvet\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\nbeat\\nvet\\nbet\\nbet\\nbet\\n') == 'beet\\nvet\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"8\\n\", \"Solution is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '8\\n', \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == \"8\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', but got '{solution(sample_input)}'.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\", \"Sample Output should be 8\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"1\\n3\") == \"3\\n\"\nassert solution(\"2\\n3 4\") == \"6\\n\"\nassert solution(\"3\\n5 6 7\") == \"11\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"3\\n4 8 10\") == \"8\\n\"\nassert solution(\"4\\n4 8 10 12\") == \"16\\n\"\nassert solution(\"5\\n4 8 10 12 14\") == \"20\\n\"\nassert solution(\"6\\n4 8 10 12 14 16\") == \"24\\n\"\nassert solution(\"7\\n4 8 10 12 14 16 18\") == \"28\\n\"\nassert solution(\"8\\n4 8 10 12 14 16 18 20\") == \"32\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 88
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234 150 100\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"84\"\nassert solution(\"100\") == \"84\"\nassert solution(\"100000\") == \"84\"\nassert solution(\"99999\") == \"84\"",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1234\\n150\\n100') == '84\\n'\nprint('All tests passed!')",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100') == '84\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234\") == \"84\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"84\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1234') == '84', 'Incorrect output'\nassert solution('150') == '1084', 'Incorrect output'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '8', \"Test case 1 failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\\n\", \"Test failed for the given input.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n\") == \"8\"\nassert solution(\"3 2\\n\") == \"16\"\nassert solution(\"5 2\\n\") == \"24\"\nassert solution(\"6 2\\n\") == \"36\"\nassert solution(\"1 4\\n\") == \"1\"\nassert solution(\"2 4\\n\") == \"2\"\nassert solution(\"3 4\\n\") == \"3\"\nassert solution(\"4 4\\n\") == \"4\"\nassert solution(\"5 4\\n\") == \"6\"\nassert solution(\"6 4\\n\") == \"10\"\nassert solution(\"7 4\\n\") == \"14\"\nassert solution(\"8 4\\n\") == \"18\"\nassert solution(\"9 4\\n\") == \"22\"\nassert solution(\"10 4\\n\") == \"26\"\nassert solution(\"11 4\\n\") == \"30\"\nassert solution(\"12 4\\n\") == \"34\"\nassert solution(\"13 4\\n\") == \"38\"\nassert solution(\"14 4\\n\") == \"42\"\nassert solution(\"15 4\\n\") == \"46\"\nassert solution(\"16 4\\n\") == \"50\"\nassert solution(\"17 4\\n\") == \"54\"\nassert solution(\"18 4\\n\") == \"58\"\nassert solution(\"19 4\\n\") == \"62\"\nassert solution(\"20 4\\n\") == \"66\"\nassert solution(\"21 4\\n\") == \"70\"\nassert solution(\"22 4\\n\") == \"74\"\nassert solution(\"23 4\\n\") == \"78\"\nassert solution(\"24 4\\n\") == \"82\"\nassert solution(\"25 4\\n\") == \"86\"\nassert solution(\"26 4\\n\") == \"90\"\nassert solution(\"27 4\\n\") == \"94\"\nassert solution(\"28 4\\n\") == \"98\"\nassert solution(\"29 4\\n\") == \"102\"\nassert solution(\"30 4\\n\") == \"106\"\nassert solution(\"31 4\\n\") == \"110\"\nassert solution(\"32 4\\n\") == \"114\"\nassert solution(\"33 4\\n\") == \"118\"\nassert solution(\"34 4\\n\") == \"122\"\nassert solution(\"35 4\\n\") == \"126\"\nassert solution(\"36 4\\n\") == \"130\"\nassert solution(\"37 4\\n\") == \"134\"\nassert solution(\"38 4\\n\") == \"138\"\nassert solution(\"39 4\\n\") == \"142\"\nassert solution(\"40 4\\n\") == \"146\"\nassert solution(\"41 4\\n\") == \"150\"\nassert solution(\"42 4\\n\") == \"154\"\nassert solution(\"43 4\\n\") == \"158\"\nassert solution(\"44 4\\n\") == \"162\"\nassert solution(\"45 4\\n\") == \"166\"\nassert solution(\"46 4\\n\") == \"170\"\nassert solution(\"47 4\\n\") == \"174\"\nassert solution(\"48 4\\n\") == \"178\"\nassert solution(\"49 4\\n\") == \"182\"\nassert solution(\"50 4\\n\") == \"186\"\nassert solution(\"51 4\\n\") == \"190\"\nassert solution(\"52 4\\n\") == \"194\"\nassert solution(\"53 4\\n\") == \"198\"\nassert solution(\"54 4\\n\") == \"202\"\nassert solution(\"55 4\\n\") == \"206\"\nassert solution(\"56 4\\n\") == \"210\"\nassert solution(\"57 4\\n\") == \"214\"\nassert solution(\"58 4\\n\") == \"218\"\nassert solution(\"59 4\\n\") == \"222\"\nassert solution(\"60 ",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"8\\n\", \"The solution should return the correct output.\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"\n\nThe solution seems correct. We can generate the 8 possible arrangements using the given constraints.\n\nThe first line of the solution is not relevant because we don't need to test it.\n\nThe second line of the solution generates the 8 possible arrangements, which we will call \"ABC\" \"ADB\" \"CBA\" \"DAC\" \"BCA\" \"CAB\" \"ADB\".\n\nThe third line of the solution generates the 4 possible arrangements, which we will call \"ABD\" \"CBA\" \"DAC\" \"BAC\".\n\nThe fourth line of the solution generates the 6 possible arrangements, which we will call \"CAB\" \"BAC\" \"DAC\" \"ABD\" \"CBA\" and \"ADB\".\n\nThe fifth line of the solution generates the 8 possible arrangements, which we will call \"ABC\" \"ADB\" \"CBA\" \"DAC\" \"BCA\" \"CAB\" \"ADB\".\n\nFinally, the sixth line of the solution generates the 6 possible arrangements, which we will call \"CAB\" \"BAC\" \"DAC\" \"ABD\" \"CBA\" and \"ADB\".\n\nTherefore, the total number of possible arrangements is 8.",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n\") == \"8\"\n\nSolution:\n\nTo find the number of possible arrangements, we need to consider the fact that there are two adjacent dogs and two adjacent monkeys, which will be present in the arrangement. We can use a nested loop to check all possible combinations of two dogs and two monkeys, and then we need to count the number of such arrangements.\n\nLet's denote the dogs by A and B, and the monkeys by C and D. The number of possible arrangements is given by the number of combinations of A, B, C, and D, and the number of such arrangements is given by the number of possible combinations of A, B, and C, and the number of such arrangements is given by the number of possible combinations of A, B, and D, and so on.\n\nThe number of possible combinations of A, B, C, and D is given by n^2 = 4 * n * (n-1) / 2, where n is the number of dogs and monkeys. Therefore, the number of possible combinations of A, B, and C, and the number of such arrangements is given by n * (n-1) / 2.\n\nNow, let's calculate the number of possible combinations of A, B, and C. Since we need to consider all the possible combinations of A, B, and C, the number of possible combinations of A, B, and C is given by n * (n-1) / 2.\n\nNow, let's calculate the number of possible combinations of A, B, and D. Since we need to consider all the possible combinations of A, B, and D, the number of possible combinations of A, B, and D is given by n * (n-1) / 2.\n\nTherefore, the total number of possible combinations of dogs and monkeys is given by 8 * 4 * 4 / 2 = 24.\n\nThe number of possible arrangements is given by the product of all the possible numbers from 1 to 24, and we can find the number of possible arrangements by multiplying the number of dogs by the number of monkeys. Therefore, the number of possible arrangements modulo 10^9+7 is 24 * 2 * 24.\n\nThe given problem statement is asking us to count the number of possible arrangements for a 2x2 grid of dogs and monkeys, and we need to find the count modulo 10^9+7.",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"8\\n\", \"The output is incorrect\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'POSSIBLE\\n'\nassert solution(input()) == 'IMPOSSIBLE\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"2 4\\n1 2\\n3 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\n1 1\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\") == \"POSSIBLE\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"POSSIBLE\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\na_1 b_1\\na_2 b_2') == 'POSSIBLE'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"4 3\\n2 3\\n1 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 4\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\") == \"POSSIBLE\"\nassert solution(\"4 3\\n1 3\\n2 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n4 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n4 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n4 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\") == \"POSSIBLE\"\nassert solution(\"4 3\\n1 2\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 4\\n1 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 2\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n3 4\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 4\") ==",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == 'POSSIBLE'\n\nassert solution('''\n4 2\n1 2\n2 3\n1 4\n''') == 'IMPOSSIBLE'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr', 'Expected acdr, but got {}'.format(solution('atcoder'))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test Case 1 Failed\"\nassert solution(\"abcde\") == \"acde\", \"Test Case 2 Failed\"\nassert solution(\"abcdefghij\") == \"acdfhikj\", \"Test Case 3 Failed\"\nassert solution(\"1234567890\") == \"1234567890\", \"Test Case 4 Failed\"\nassert solution(\"hello\") == \"olleh\", \"Test Case 5 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 95
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test Failed\"\nassert solution(\"hello world\") == \"dlrow\", \"Test Failed\"\nassert solution(\"python\") == \"yhtnr\", \"Test Failed\"\nassert solution(\"abcdefg\") == \"gfedcba\", \"Test Failed\"\nassert solution(\"123456\") == \"563412\", \"Test Failed\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Solution should return acdr\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Output should be acdr, but it's {}.\".format(solution(\"atcoder\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test Case Failed\"\nprint(\"Test Case Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Expected output: acdr, but got: {}.\".format(solution(\"atcoder\"))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Test failed\"\nassert solution(\"banana banana\") == \"NO\", \"Test failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"apple banana\") == \"YES\"\nassert solution(\"racecar cat\") == \"YES\"\nassert solution(\"monkey tortoise\") == \"NO\"\nassert solution(\"A B C\") == \"NO\"\nassert solution(\"A\") == \"YES\"\nassert solution(\"\") == \"YES\"\nassert solution(\"ABCDGHIJKLMNOPQRSTUVWXYZ\") == \"NO\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\\n\"\nassert solution(\"apple banana\") == \"NO\\n\"\nassert solution(\"racecar\") == \"YES\\n\"\nassert solution(\"zzz\") == \"YES\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rain down\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"You have not implemented the solution correctly\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"trumpet guns\") == \"NO\"\nassert solution(\"hello\") == \"YES\"\nassert solution(\"racecar\") == \"NO\"",
        "num_ids_2": 27,
        "num_ids_4": 48
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"GREATER\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"36 24\") == \"GREATER\"\nassert solution(\"12 12\") == \"EQUAL\"\nassert solution(\"012 012\") == \"EQUAL\"\nassert solution(\"02 02\") == \"LESS\"\nassert solution(\"1000000000 1000000000\") == \"LESS\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\", \"Solution 1 failed\"\n\nassert solution(\"64\\n12\") == \"LESS\", \"Solution 2 failed\"\n\nassert solution(\"128\\n64\") == \"EQUAL\", \"Solution 3 failed\"\n\nassert solution(\"0\\n0\") == \"EQUAL\", \"Solution 4 failed\"\n\nassert solution(\"0\\n1\") == \"LESS\", \"Solution 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 84
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"36\\n24\\n\") == \"EQUAL\"\nassert solution(\"36\\n24\\n\") == \"EQUAL\"\nassert solution(\"36\\n24\\n\") == \"EQUAL\"\nassert solution(\"36\\n24\\n\") == \"EQUAL\"\nassert solution(\"36\\n24\\n\") == \"EQUAL\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(36, 24) == \"GREATER\", \"The output should be GREATER.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\nother\\npineapple\\n1\\ngrapes\\n2\\nbanana\\n3\\ncherry\\n4\\npapaya\\n5\\ncherry\\n6\\nsapote\\n\") == \"2\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\napple\\no\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nb\\n2\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nb\\n1\\ngrape\\n\") == \"1\"\nassert solution(\"3\\napple\\nb\\n2\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\nb\\n3\\ngrape\\n\") == \"1\"\nassert solution(\"3\\napple\\nb\\n4\\ngrape\\n\") == \"0\"\nassert solution(\"3\\napple\\nb\\n5\\ngrape\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"4\\n123\\nabc\\n456\\n\") == \"10\"\nassert solution(\"10\\n\" * 10 + \"1\\n\") == \"100\"",
        "num_ids_2": 54,
        "num_ids_4": 79
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Solution is not correct\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\"\nassert solution(6) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\napple\\noffice\\n1\\ngrape\\napple\\noffice\\n2\\noffice\\napple') == '2\\n'\nprint(\"All tests passed.\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('1\\napple\\n2\\nother\\n') == '1\\n'\nassert solution('3\\napple\\nother\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('5\\ncat\\ndog\\ncat\\nelephant\\n') == '0\\n'\nassert solution('5\\ncat\\nElephant\\ncat\\nElephant\\n') == '0\\n'\nassert solution('1\\napple\\napple\\n') == '0\\n'\nassert solution('2\\napple\\nother\\napple\\nother\\n') == '0\\n'\nassert solution('4\\napple\\nother\\napple\\nother\\n') == '1\\n'\nassert solution('1\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\napple\\",
        "num_ids_2": 53,
        "num_ids_4": 111
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A') == 'T', \"Solution should return 'T' for input 'A'.\"\nassert solution('B') == 'G', \"Solution should return 'G' for input 'B'.\"\nassert solution('C') == 'C', \"Solution should return 'C' for input 'C'.\"\nassert solution('D') == 'A', \"Solution should return 'A' for input 'D'.\"\nassert solution('E') == 'G', \"Solution should return 'G' for input 'E'.\"\nassert solution('F') == 'A', \"Solution should return 'A' for input 'F'.\"\nassert solution('G') == 'T', \"Solution should return 'T' for input 'G'.\"\nassert solution('H') == 'C', \"Solution should return 'C' for input 'H'.\"\nassert solution('I') == 'G', \"Solution should return 'G' for input 'I'.\"\nassert solution('J') == 'A', \"Solution should return 'A' for input 'J'.\"\nassert solution('K') == 'T', \"Solution should return 'T' for input 'K'.\"\nassert solution('L') == 'C', \"Solution should return 'C' for input 'L'.\"\nassert solution('M') == 'A', \"Solution should return 'A' for input 'M'.\"\nassert solution('N') == 'G', \"Solution should return 'G' for input 'N'.\"\nassert solution('O') == 'C', \"Solution should return 'C' for input 'O'.\"\nassert solution('P') == 'G', \"Solution should return 'G' for input 'P'.\"\nassert solution('Q') == 'A', \"Solution should return 'A' for input 'Q'.\"\nassert solution('R') == 'T', \"Solution should return 'T' for input 'R'.\"\nassert solution('S') == 'C', \"Solution should return 'C' for input 'S'.\"\nassert solution('T') == 'T', \"Solution should return 'T' for input 'T'.\"\nassert solution('U') == 'G', \"Solution should return 'G' for input 'U'.\"\nassert solution('V') == 'C', \"Solution should return 'C' for input 'V'.\"\nassert solution('W') == 'G', \"Solution should return 'G' for input 'W'.\"\nassert solution('X') == 'T', \"Solution should return 'T' for input 'X'.\"\nassert solution('Y') == 'G', \"Solution should return 'G' for input 'Y'.\"\nassert solution('Z') == 'A', \"Solution should return 'A' for input 'Z'.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"T\", \"Your solution should output 'T'.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"A\"\nassert solution(\"T\") == \"C\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'T'\nassert solution('D') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"T\", \"Test failed: Incorrect result\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A') == 'T' # pass\nassert solution('C') == 'G' # pass\nassert solution('G') == 'T' # pass\nassert solution('T') == 'A' # pass",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'T'\nassert solution('G') == 'C'\nassert solution('T') == 'T'\nassert solution('a') == 'T'\nassert solution('b') == 'T'\nassert solution('c') == 'G'\nassert solution('d') == 'G'\nassert solution('e') == 'T'\nassert solution('f') == 'G'\nassert solution('g') == 'G'\nassert solution('h') == 'A'\nassert solution('i') == 'C'\nassert solution('j') == 'G'\nassert solution('k') == 'T'\nassert solution('l') == 'A'\nassert solution('m') == 'C'\nassert solution('n') == 'T'\nassert solution('o') == 'G'\nassert solution('p') == 'T'\nassert solution('q') == 'G'\nassert solution('r') == 'T'\nassert solution('s') == 'G'\nassert solution('t') == 'G'\nassert solution('u') == 'T'\nassert solution('v') == 'A'\nassert solution('w') == 'G'\nassert solution('x') == 'A'\nassert solution('y') == 'C'\nassert solution('z') == 'G'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\", \"Test case 1 failed\"\nassert solution(\"C\") == \"G\", \"Test case 2 failed\"\nassert solution(\"G\") == \"C\", \"Test case 3 failed\"\nassert solution(\"T\") == \"A\", \"Test case 4 failed\"\nassert solution(\"U\") == \"None\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"14\"\nprint(\"Test passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\\n\") == \"14\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1\\n') == '14\\n'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 2\") == \"12\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 3\") == \"10\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 4\") == \"8\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 5\") == \"6\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 6\") == \"4\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 7\") == \"2\"",
        "num_ids_2": 66,
        "num_ids_4": 131
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\"\nassert solution(\"3\\n5 4 3 2 1\\n1 2 2 1 2\") == \"3\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\", \"Test case failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '14'\nassert solution(input()) == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '14\\n', \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n1 2 3\\n\") == \"1\\n\"\nassert solution(\"3 5\\n3 4 4\\n2 4 3\\n1 3 4\\n\") == \"1\\n\"\nassert solution(\"5 6\\n1 3 5 4 2\\n4 2 4 4 5\\n3 5 5 2 4\\n\") == \"2\\n\"\nassert solution(\"4 10\\n2 3 4 5 6\\n1 4 5 6 7 8\\n3 2 4 5 6 7\\n5 6 3 8 7 5\\n6 5 4 9 8 7\\n\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 132
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\\n\"\n\nThe problem can be solved using dynamic programming approach. We can define a 2D array dp of size (N+1) x (x+1), where dp[i][j] represents the minimum number of operations required to eat j candies in the i-th box, considering all the neighboring boxes. The base case is when we reach the box containing only one candy, in which case there is only one operation to eat the candy. Otherwise, we need to compare the number of candies in the box and the number of candies in the neighboring box, and find the minimum among them. Finally, we return dp[N][x].\n\nThe time complexity of this solution is O(N^2), where N is the total number of boxes.",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\"\nassert solution(\"3 3\\n2 2 1\\n\") == \"2\"\nassert solution(\"3 3\\n2 1 1\\n\") == \"2\"\nassert solution(\"3 3\\n1 1 1\\n\") == \"3\"\nassert solution(\"3 3\\n1 1 2\\n\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Please provide the correct input\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"1\"\nassert solution(open('input_example.txt', 'r').read()) == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(stdin=\"4 4\\n1 1 1 1\") == \"1\\n\"\nassert solution(stdin=\"3 3\\n1 2 3 4\") == \"2\\n\"\nassert solution(stdin=\"5 3\\n1 2 3 4 5\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"3 2\\n1 2 2 1\") == \"1\\n\"\nassert solution(\"3 3\\n1 1 1 1\") == \"2\\n\"\nassert solution(\"3 3\\n1 1 1 2\") == \"3\\n\"\nassert solution(\"3 3\\n1 1 1 3\") == \"4\\n\"\nassert solution(\"3 3\\n1 1 1 4\") == \"5\\n\"\nassert solution(\"3 3\\n1 1 1 5\") == \"6\\n\"\nassert solution(\"3 3\\n1 1 1 6\") == \"7\\n\"\nassert solution(\"3 3\\n1 1 1 7\") == \"8\\n\"\nassert solution(\"3 3\\n1 1 1 8\") == \"9\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"0 1 1\\n1 0 0\\n1 0 1\\n\") == \"No\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"1 1 1\\n2 2 2\\n1 1 1\\n\") == \"Yes\\n\"\nassert solution(\"1 0 1\\n2 0 2\\n3 0 3\\n\") == \"No\\n\"\nassert solution(\"1 1 1\\n2 1 2\\n3 1 3\\n\") == \"No\\n\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n\") == \"No\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n3 2 3\") == \"No\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"No\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n0 0 0\\n\") == \"No\\n\"\nassert solution(\"1 0 1\\n2 0 1\\n1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"Yes\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n\") == \"No\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 135
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"\nassert solution(\"1 1 1\\n2 1 2\\n3 1 2\") == \"No\\n\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\") == \"No\\n\"\nassert solution(\"0 1 0\\n1 1 1\\n0 0 0\") == \"No\\n\"\nassert solution(\"1 0 1\\n1 0 1\\n1 0 1\") == \"Yes\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"\nassert solution(\"3 1 0\\n1 1 0\\n1 1 0\") == \"No\\n\"\nassert solution(\"1 1 0\\n1 1 0\\n1 1 0\") == \"No\\n\"\nassert solution(\"1 1 1\\n0 1 1\\n0 1 1\") == \"Yes\\n\"\nassert solution(\"1 1 0\\n1 1 0\\n1 1 1\") == \"No\\n\"\nassert solution(\"1 1 0\\n1 1 1\\n1 1 0\") == \"No\\n\"\nassert solution(\"1 1 0\\n1 1 0\\n1 1 0\") == \"No\\n\"\nassert solution(\"1 1 0\\n1 1 0\\n1 1 1\") == \"Yes\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('2 1 2\\n1 0 1\\n2 1 2') == 'No'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Test case 1 failed\"\nassert solution(\"ARC\") == \"ABC\", \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ABC') == 'ARC', \"Input should be 'ABC' to solve the problem\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"BCC\") == \"ABC\"\nassert solution(\"CCC\") == \"ABC\"\nassert solution(\"CCC\") == \"ARC\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC', \"The function should return 'ARC'.\"\nassert solution('ARC') == 'ABC', \"The function should return 'ABC'.\"\nassert solution('ABC') == 'ABC', \"The function should return 'ABC'.\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Test failed\"\nassert solution(\"ARC\") == \"ABC\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\", \"The output should be 3, but it is: \" + solution(input())\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"7 15 2\") == \"2\"\nassert solution(\"2 5 3\") == \"0\"\nassert solution(\"0 5 2\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"5 10 4\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"1 10 5\") == \"4\"\nassert solution(\"10 2 5\") == \"3\"\nassert solution(\"10 2 0\") == \"0\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nassert solution(\"5 9 3\") == \"2\\n\"\nassert solution(\"7 10 4\") == \"1\\n\"\nassert solution(\"1 10 5\") == \"0\\n\"\nassert solution(\"1 2 2\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"3 6 2\") == \"1\"\nassert solution(\"1 4 1\") == \"0\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"4 5 2\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test 1 Failed\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test 2 Failed\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test 3 Failed\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test 4 Failed\"\nassert solution(\"21\") == \"Christmas\", \"Test 5 Failed\"\nassert solution(\"20\") == \"New Years Day\", \"Test 6 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('25') == 'Christmas\\n', \"Solution does not match expected output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Christmas\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(25) == \"Christmas\", \"The solution should return Christmas if D = 25\"\nassert solution(24) == \"Christmas Eve\", \"The solution should return Christmas Eve if D = 24\"\nassert solution(23) == \"Christmas Eve Eve\", \"The solution should return Christmas Eve Eve if D = 23\"\nassert solution(22) == \"Christmas Eve Eve Eve\", \"The solution should return Christmas Eve Eve Eve if D = 22\"",
        "num_ids_2": 56,
        "num_ids_4": 128
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test Case 1 failed\"\n\nassert solution(\"24\") == \"Christmas\", \"Test Case 2 failed\"\n\nassert solution(\"23\") == \"Christmas\", \"Test Case 3 failed\"\n\nassert solution(\"22\") == \"Christmas\", \"Test Case 4 failed\"\n\nassert solution(\"26\") == \"Christmas\", \"Test Case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"26\") == \"Christmas\"\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(25) == \"Christmas\"\nassert solution(24) == \"Christmas Eve\"\nassert solution(23) == \"Christmas Eve Eve\"\nassert solution(22) == \"Christmas Eve Eve Eve\"\nassert solution(21) == \"Christmas\"\nassert solution(20) == \"Christmas\"\nassert solution(19) == \"Christmas\"\nassert solution(18) == \"Christmas\"\nassert solution(17) == \"Christmas\"\nassert solution(16) == \"Christmas\"\nassert solution(15) == \"Christmas\"\nassert solution(14) == \"Christmas\"\nassert solution(13) == \"Christmas\"\nassert solution(12) == \"Christmas\"\nassert solution(11) == \"Christmas\"\nassert solution(10) == \"Christmas\"\nassert solution(9) == \"Christmas\"\nassert solution(8) == \"Christmas\"\nassert solution(7) == \"Christmas\"\nassert solution(6) == \"Christmas\"\nassert solution(5) == \"Christmas\"\nassert solution(4) == \"Christmas\"\nassert solution(3) == \"Christmas\"\nassert solution(2) == \"Christmas\"\nassert solution(1) == \"Christmas\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Your code is missing the input check.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"26\") == \"Christmas\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Christmas\", \"The output must be 'Christmas'.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '4\\n', \"Test failed. Expected output: 4\\n, but got: \" + str(solution())",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"4\"\nassert solution(12) == \"2\"\nassert solution(16) == \"4\"\nassert solution(17) == \"6\"\nassert solution(20) == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '4\\n', \"Test failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"1 can be divided by 2 zero times.\"\nassert solution(7) == 7, \"8 can be divided by 2 three times.\"\nassert solution(10) == 6, \"6 can be divided by 2 once.\"\nassert solution(15) == 8, \"4 can be divided by 2 twice.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == \"4\", \"Takahashi loves numbers divisible by 2. You are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique.\"\n\nprint(\"Takahashi loves numbers divisible by 2. You are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique.\")",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == '4\\n'\nassert solution(16) == '4\\n'\nassert solution(32) == '16\\n'\nassert solution(64) == '32\\n'\nassert solution(100) == '48\\n'",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"4\", \"Takahashi loves numbers divisible by 2. You are given a positive integer N. Among the integers between 1 and N (inclusive), find the one that can be divisible by 2 for the most number of times. The solution is always unique. Here, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder. For example, - 6 can be divided by 2 once: 6 -> 3. - 8 can be divided by 2 three times: 8 -> 4 -> 2 -> 1. - 3 can be divided by 2 zero times.\"",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes', \"Incorrect output: {}\\n{}\".format(solution(input()), input())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"5 10 8 5\") == \"Yes\", \"Test case 2 failed\"\nassert solution(\"5 10 15 5\") == \"Yes\", \"Test case 3 failed\"\nassert solution(\"2 8 7 2\") == \"Yes\", \"Test case 4 failed\"\nassert solution(\"1 1 1 1\") == \"No\", \"Test case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"4 5 9 2\") == \"No\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"\nassert solution(\"4 5 9 5\") == \"Yes\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"5 6 7 8\") == \"Yes\"\nassert solution(\"2 4 6 8\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 6 9 3\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"2 2 2 2\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 7 9 3') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 8 10 1\") == \"No\"\nassert solution(\"10 10 10 10\") == \"No\"",
        "num_ids_2": 33,
        "num_ids_4": 53
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"1 100 50 100\") == \"Yes\\n\"\nassert solution(\"4 5 6 8\") == \"No\\n\"\nassert solution(\"4 7 9 10\") == \"No\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"Your solution is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', 'Test Failed'\nassert solution('hello world') == 'HWR', 'Test Failed'\nassert solution('abcde') == 'ABCDE', 'Test Failed'\nassert solution('python programming') == 'PYP', 'Test Failed'\nassert solution('hello world') == 'HWR', 'Test Failed'",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"The initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC.\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n\nassert solution(\"hello world\") == \"HW\"\n\nassert solution(\"abcd efgh\") == \"ABC\"\n\nassert solution(\"a b c\") == \"ABC\"\n\nassert solution(\"hello world\") == \"HW\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"300 500 700\") == \"No\\n\"\nassert solution(\"50 200 100\") == \"Yes\\n\"\nassert solution(\"500000000 500000000 500000000\") == \"No\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 104
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\n\nassert solution(\"50 100 999\") == \"No\\nTakahashi has no coins to spend to buy the toy.\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"50 10 120\") == \"No\\n\"\nassert solution(\"50 100 200\") == \"Yes\\n\"\nassert solution(\"500 100 200\") == \"No\\n\"\nassert solution(\"50 100 500\") == \"No\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8\\n7 9 8 9\\n\") == \"5\\n\"\nassert solution(\"4 7\\n7 9 8 9\\n\") == \"5\\n\"\nassert solution(\"4 5\\n7 9 8 9\\n\") == \"5\\n\"\nassert solution(\"4 3\\n7 9 8 9\\n\") == \"5\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"4 5\\n6 7 8\") == \"3\\n\"\nassert solution(\"2 2\\n2 1\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n\"\nassert solution(\"1 2\\n1 1\") == \"2\\n\"\nassert solution(\"1 1\\n2 1\") == \"3\\n\"\nassert solution(\"1 3\\n1 2\") == \"4\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\") == \"5\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\") == \"6\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"7\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\") == \"8\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\") == \"9\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\" # pass the test set",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\" # Test Case 1\nassert solution(\"4 8\\n9 10 11 12\") == \"0\" # Test Case 2\nassert solution(\"5 10\\n1 2 3 4 5\") == \"5\" # Test Case 3\nassert solution(\"5 10\\n6 7 8 9 10\") == \"24\" # Test Case 4\nassert solution(\"5 10\\n1 2 3 4 5\") == \"1\" # Test Case 5",
        "num_ids_2": 55,
        "num_ids_4": 115
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"5 5\") == \"0\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 53
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\nassert solution(\"4 12\\n6 7 8 9 10\") == \"17\"\nassert solution(\"4 18\\n9 7 8 9 10 11\") == \"100\"\nassert solution(\"4 24\\n10 8 7 6 5\") == \"160\"\nassert solution(\"4 30\\n12 9 8 7 6\") == \"216\"\n\nassert solution(\"4 24\\n10 8 7 6 5\") == \"160\"",
        "num_ids_2": 47,
        "num_ids_4": 104
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"5 6 7\") == \"5 6 7\"\nassert solution(\"10\") == \"10\"",
        "num_ids_2": 40,
        "num_ids_4": 52
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na_1 a_2... a_n\\n\") == \"4 2 1 3\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na_1 a_2... a_n\") == \"4 2 1 3\\n\", \"Test case failed.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na_1 a_2... a_n\") == \"4 2 1 3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4 2 1 3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4 2 1 3\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 1\\n1\") == \"No\"\nassert solution(\"2 2\\n1 1\") == \"Yes\"\nassert solution(\"5 5\\n1 1\") == \"No\"\nassert solution(\"1 10\\n5 10\") == \"No\"\nassert solution(\"2 2\\n3 2\") == \"No\"\nassert solution(\"1 1\\n1 1\") == \"Yes\"\nassert solution(\"2 2\\n1 1\") == \"Yes\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"15 2\\n5 6 7\") == \"Yes\"\nassert solution(\"3 2\\n1 2 3\") == \"Yes\"\nassert solution(\"1 2\\n3 4\") == \"No\"\nassert solution(\"10 10\") == \"No\"\nassert solution(\"5 5\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n4 5 6\\n\") == \"Yes\"\nassert solution(\"8 2\\n4 6\\n2 7\\n1 5\\n\") == \"No\"\nassert solution(\"6 4\\n2 6\\n2 7\\n3 5\\n\") == \"Yes\"\nassert solution(\"10 4\\n4 5\\n6 7\\n1 3\\n\") == \"Yes\"\nassert solution(\"10 5\\n4 5 6\\n2 7 8\\n3 5 4\\n1 3 2\\n\") == \"No\"",
        "num_ids_2": 51,
        "num_ids_4": 110
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 1\\n1 1\") == \"No\"\nassert solution(\"5 5\") == \"No\"\nassert solution(\"10 1\\n1 2\") == \"No\"\nassert solution(\"10 5\\n5 5\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"15 2\\n1 2 3\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"6\"\nassert solution(\"abaababa\") == \"6\"\nassert solution(\"abaabab\") == \"6\"\nassert solution(\"abaaba\") == \"6\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"0\"\nassert solution(\"abaababa\") == \"0\"\nassert solution(\"abaabab\") == \"0\"\nassert solution(\"abaaba\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"6\"\nassert solution(\"abaababa\") == \"6\"\nassert solution(\"abaabab\") == \"6\"\nassert solution(\"abaaba\") == \"6\"\nassert solution(\"\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abbabababab\") == \"0\"\nassert solution(\"abcaaac\") == \"0\"\nassert solution(\"aaa\") == \"1\"\nassert solution(\"abaababaabaa\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == '6', \"The solution should return 6 for input 'abaababaab'.\"\nassert solution('abaababaa') == '1', \"The solution should return 1 for input 'abaababaa'.\"\nassert solution('abaababa') == '1', \"The solution should return 1 for input 'abaababa'.\"\nassert solution('abaabab') == '1', \"The solution should return 1 for input 'abaabab'.\"\nassert solution('abaaba') == '1', \"The solution should return 1 for input 'abaaba'.\"",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"aaaaaaa\") == \"0\"\nassert solution(\"xyzxyzz\") == \"0\"\nassert solution(\"aaaabbbb\") == \"3\"\nassert solution(\"abababab\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abaababaab') == 6, \"Test Case 1\"\nassert solution('aaaaaaa') == 0, \"Test Case 2\"\nassert solution('ababab') == 0, \"Test Case 3\"\nassert solution('xyzxy') == 0, \"Test Case 4\"\nassert solution('abaababaabab') == 0, \"Test Case 5\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\n\nThis is the correct solution. We can simply use the length of the even string obtained by deleting one or more characters from the end of the string.\n\nHowever, we need to find the length of the longest even string that can be obtained by deleting one or more characters from the end of the string. Since the input string is an even string, we need to find a non-empty string that can be obtained by deleting one or more characters from the end of the string. The length of such a string is 6 in this case.\n\nWe can simply find the length of the longest even string by iterating over the even string from the end until we find a non-empty string that can be obtained by deleting one or more characters from the end. We can do this using a loop and the `find` method of strings.\n\nHere's the code:",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"2\"\nassert solution(\"abaababa\") == \"2\"\nassert solution(\"abaabab\") == \"2\"\nassert solution(\"abaaba\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bac\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\", \"Expected 'Yes' but got '{}' instead.\".format(solution(\"bac\"))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bac') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"acb\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"aabc\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\") == \"646\\n757402647\\n20\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == 20",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"",
        "num_ids_2": 71,
        "num_ids_4": 94
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n8\\n7\\n2\\n4\\n\\n9\\n7\\n2\\n9\\n3\\n\\n\\n\\n1000000\\n1000000\\n\\n2\\n4\\n\\n20\\n\\n1\\n3\\n4\\n2\\n\\n') == '646'\nassert solution('1\\n1000000\\n1000000\\n\\n2\\n4\\n\\n20\\n\\n1\\n3\\n4\\n2\\n\\n') == '757402647'\nassert solution('2\\n1\\n3\\n4\\n2\\n\\n') == '20'",
        "num_ids_2": 165,
        "num_ids_4": 192
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\") == 646\nassert solution(\"1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\") == 757402647",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"No solution exists\"\nassert solution(\"5\") == \"No solution exists\"\nassert solution(\"1 8 7 2 4\") == \"No solution exists\"\nassert solution(\"9 7 2 9 3\") == \"No solution exists\"\nassert solution(\"1 1000000\") == \"No solution exists\"\nassert solution(\"2 1 3\") == \"No solution exists\"\nassert solution(\"4 2\") == \"No solution exists\"",
        "num_ids_2": 24,
        "num_ids_4": 64
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"646\\n757402647\\n20\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input) == solution_output, f\"The output of the solution does not match the expected output. Expected: {solution_output}, Received: {solution(solution_input)}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed. Output: {output}, Expected: {expected}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\"",
        "num_ids_2": 105,
        "num_ids_4": 138
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 17\nassert solution(5) == 17\nassert solution(8) == 17\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\nspecial_offers = []\n\nfor i in range(m):\n    x, y = map(int, input().split())\n    special_offers.append((x, y))\n\nmin_cost = float('inf')\nfor i in range(n):\n    for j in range(i + 1, n + 1):\n        if i + k > j and sum([special_offers[i][0] - a[i], special_offers[j][1] - a[j]]) <= k:\n            cost = special_offers[i][0] + special_offers[j][1]\n            if cost < min_cost:\n                min_cost = cost\n\nprint(min_cost)\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(7, 4, 5)) == \"7\\n\"\nassert solution(str(9, 4, 8)) == \"17\\n\"\nassert solution(str(5, 1, 4)) == \"17\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 135
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Expected: {expected}, Received: {solution}\"\n\nn, m, k = map(int, stdin.readline().split())\na_list = list(map(int, stdin.readline().split()))\nspecial_offers = []\nfor _ in range(m):\n    x, y = map(int, stdin.readline().split())\n    special_offers.append((x, y))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Your code is wrong. Please fix the code and test it again.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\"",
        "num_ids_2": 103,
        "num_ids_4": 129
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\n\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\\n\"\n\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 135
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed: Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"2\"\n\nassert solution( \"\"\"7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"0\"\n\nassert solution( \"\"\"7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n\"\"\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == 2\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == 0\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == 1",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([7, '1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7']) == '2'\nassert solution([7, '1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7']) == '0'\nassert solution([7, '1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7']) == '1'",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(\"Test case passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\") == \"1\"\n",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nassert solution(\"4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"\nassert solution(\"5 10\\n2 7\\n3 8\\n4 9\\n5 10\\n\") == \"5\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100\\n105\\n110\\n115\\n120\\n125\\n130\\n135\\n140\\n145\\n150\\n155\\n160\\n165\\n170\\n175\\n180\\n185\\n190\\n195\\n200\\n205\\n210\\n215\\n220\\n225\\n230\\n235\\n240\\n245\\n250\\n255\\n260\\n265\\n270\\n275\\n280\\n285\\n290\\n295\\n300\\n305\\n310\\n315\\n320\\n325\\n330\\n335\\n340\\n345\\n350\\n355\\n360\\n365\\n370\\n375\\n380\\n385\\n390\\n395\\n400\\n405\\n410\\n415\\n420\\n425\\n430\\n435\\n440\\n445\\n450\\n455\\n460\\n465\\n470\\n475\\n480\\n485\\n490\\n495\\n500\\n505\\n510\\n515\\n520\\n525\\n530\\n535\\n540\\n545\\n550\\n555\\n560\\n565\\n570\\n575\\n580\\n585\\n590\\n595\\n600\\n605\\n610\\n615\\n620\\n625\\n630\\n635\\n640\\n645\\n650\\n655\\n660\\n665\\n670\\n675\\n680\\n685\\n690\\n695\\n700\\n705\\n710\\n715\\n720\\n725\\n730\\n735\\n740\\n745\\n750\\n755\\n760\\n765\\n770\\n775\\n780\\n785\\n790\\n795\\n800\\n805\\n810\\n815\\n820\\n825\\n830\\n835\\n840\\n845\\n850\\n855\\n860\\n865\\n870\\n875\\n880\\n885\\n890\\n895\\n900\\n905\\n9",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\") == \"10\\n15\\n1999999999\\n113\\n1000000001\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: expected output: {expected_output}, actual output: {solution(input())}\"\n\nfor test_case in range(int(stdin), int(stdin) + 1):\n    n, k = map(int, input().split())\n    expected_output = input().split()\n    solution(input())",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 2 1 3 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"7 2\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 47
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n2 3 3 1 1 2 1 2 3 3 4 5\\n\") == \"4\\n1 3 2\\n\"\nassert solution(\"10 2\\n1 2 3\\n2 3 4\\n\") == \"2\\n1\\n2\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 167
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n2 3 3 1 1 2 1 2 3 3 4 5\\n\") == \"3\\n1 3 2 4 5\\n\"\nassert solution(\"10 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 3\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"10 5\\n2 3 3 1 1 2 1 2 3 3 4 5\\n\") == \"3\\n1 3 2 4 5\\n\"\nassert solution(\"10 6\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"6\\n1 6\\n10 6\\n\"\n",
        "num_ids_2": 81,
        "num_ids_4": 171
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test cases failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1 \"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2 \"\nassert solution(\"1 2 3 4 5\\n\") == \"0\"\nassert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \"\nassert solution(\"1 2 3 4 5\\n\") == \"0\"\n",
        "num_ids_2": 73,
        "num_ids_4": 127
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n\") == \"2\\n1\\n\"\nassert solution(\"5 2\\n1 2\\n3 4\\n2 3\\n1 4\\n\") == \"3\\n2\\n1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 157
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\") == \"3\\n1 3 2 \"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"263\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    5\n    3\n    1 6\n    1 7\n    1 5\n    2\n    1 4\n    1 3\n    3\n    1 10\n    3 5\n    2 3\n    3\n    1 15\n    2 4\n    1 10\n    1\n    1 100\n    '''\n) == '263\\n'\n\nfrom typing import List",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n",
        "num_ids_2": 188,
        "num_ids_4": 376
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == '263'\nassert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == '263'",
        "num_ids_2": 184,
        "num_ids_4": 184
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n\") == \"263\\n\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n2\\n1 10\\n1\\n1 100\\n\") == \"263\\n\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n3\\n1 100\\n2\\n1 100\\n\") == \"263\\n\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n3\\n1 100\\n2\\n1 100\\n\") == \"263\\n\"\nassert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\\n3\\n1 100\\n2\\n1 100\\n3\\n1 100\\n2\\n1 100\\n\") == \"263\\n\"",
        "num_ids_2": 211,
        "num_ids_4": 443
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"263\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\\n\"\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case_id} failed. Expected output: {output_data}, but got: {solution(input_data)}\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"3\\n1\\n2\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\\n2\\n5\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n3\\n1\\n2\\n\\n3\\n2\\n5\\n2\\n6\\ndef solution(stdin: str) -> str: \\n    pass\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n\nsolution('abacaba') == '3'\nsolution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"123456789\\n987654321\\n674523109\\n341290876\\n119876543\\n867534210\\n532109876\\n209876543\\n965432108\\n732109875\\n419876542\\n187534211\\n754321098\\n321098765\\n109876543\\n675342110\\n243109876\\n812908765\\n489654321\\n157321098\\n729645835\\n386592714\\n975314628\\n512968357\\n286314579\\n859823647\\n422958357\\n163145798\\n619823647\\n315487329\") == \"123456789\\n987654321\\n674523109\\n341290876\\n119876543\\n867534210\\n532109876\\n209876543\\n965432108\\n732109875\\n419876542\\n187534211\\n754321098\\n321098765\\n109876543\\n675342110\\n243109876\\n812908765\\n489654321\\n157321098\\n729645835\\n386592714\\n975314628\\n512968357\\n286314579\\n859823647\\n422958357\\n163145798\\n619823647\\n315487329\"\nassert solution(\"123456789\\n987654321\\n674523109\\n341290876\\n119876543\\n867534210\\n532109876\\n209876543\\n965432108\\n732109875\\n419876542\\n187534211\\n754321098\\n321098765\\n109",
        "num_ids_2": 866,
        "num_ids_4": 1027
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n789615432\\n987653421\\n395478912\\n678945321\\n123456789\\n876543210\\n234567891\\n654321098\\n987654321\") == \"789615432\\n987653421\\n395478912\\n678945321\\n123456789\\n876543210\\n234567891\\n654321098\\n987654321\"\nassert solution(\"3\\n467891231\\n567891231\\n976543210\\n265432109\\n654321098\\n154321097\\n543210987\\n876543210\\n345678911\") == \"467891231\\n567891231\\n976543210\\n265432109\\n654321098\\n154321097\\n543210987\\n876543210\\n345678911\"\nassert solution(\"4\\n897654321\\n997654321\\n265432109\\n678945321\\n123456789\\n876543210\\n234567891\\n654321098\\n987654321\") == \"897654321\\n997654321\\n265432109\\n678945321\\n123456789\\n876543210\\n234567891\\n654321098\\n987654321\"\nassert solution(\"5\\n987654321\\n987654321\\n654321098\\n123456789\\n876543210\\n234567891\\n654321098\\n987654321\\n456789123\") == \"987654321\\n987654321\\n654321098\\n123456789\\n876543210\\n234567891\\n654321098\\n987654321\\n456789123\"\n",
        "num_ids_2": 410,
        "num_ids_4": 820
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '154873296\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nfor i in range(t):\n    # Test code here\n    pass",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n123456789\\n012345678\\n\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n123456789\\n012345678\"",
        "num_ids_2": 452,
        "num_ids_4": 452
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"154873296\") == \"154873396\", \"154873296\"\nassert solution(\"386592714\") == \"386592714\", \"386592714\"\nassert solution(\"729641835\") == \"729641835\", \"729641835\"\nassert solution(\"863725149\") == \"863725149\", \"863725149\"\nassert solution(\"975314628\") == \"975314628\", \"975314628\"\nassert solution(\"412968357\") == \"412968357\", \"412968357\"\nassert solution(\"631457982\") == \"631457982\", \"631457982\"\nassert solution(\"598236471\") == \"598236471\", \"598236471\"\nassert solution(\"247189563\") == \"247189563\", \"247189563\"\n\nt = int(input())\nfor _ in range(t):\n    n = list(map(int, input().split()))\n    if len(n)!= 9:\n        print(\"Invalid input\")\n        continue\n    result = solution(\"\".join(map(str, n)))\n    print(result)",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n\nassert solution('123456789\\n456789012\\n789012345\\n890123456\\n901234567\\n234567890\\n345678901\\n456789012\\n567890123') == '123456789\\n456789012\\n789012345\\n890123456\\n901234567\\n234567890\\n345678901\\n456789012\\n567890123'\n\nassert solution('123456789\\n456789012\\n789012345\\n890123456\\n901234567\\n234567890\\n345678901\\n456789012\\n567890123') == '123456789\\n456789012\\n789012345\\n890123456\\n901234567\\n234567890\\n345678901\\n456789012\\n567890123'",
        "num_ids_2": 404,
        "num_ids_4": 606
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\\n999999999\") == \"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\\n999999999\"\nassert solution(\"123456789\\n432167898\\n543278963\\n654389674\\n765498765\\n876510987\\n987621098\\n109832211\\n210943322\") == \"123456789\\n432167898\\n543278963\\n654389674\\n765498765\\n876510987\\n987621098\\n109832211\\n210943322\"\nassert solution(\"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\\n999999999\") == \"111111111\\n222222222\\n333333333\\n444444444\\n555555555\\n666666666\\n777777777\\n888888888\\n999999999\"\nassert solution(\"123456789\\n432167898\\n543278963\\n654389674\\n765498765\\n876510987\\n987621098\\n109832211\\n210943322\") == \"123456789\\n432167898\\n543278963\\n654389674\\n765498765\\n876510987\\n987621098\\n109832211\\n210943322\"",
        "num_ids_2": 404,
        "num_ids_4": 808
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\\n111111111\") == \"111111111\"\nassert solution(\"222222222\\n222222222\\n222222222\\n222222222\\n222222222\\n222222222\\n222222222\\n222222222\\n222222222\") == \"222222222\"\nassert solution(\"333333333\\n333333333\\n333333333\\n333333333\\n333333333\\n333333333\\n333333333\\n333333333\\n333333333\") == \"333333333\"\nassert solution(\"444444444\\n444444444\\n444444444\\n444444444\\n444444444\\n444444444\\n444444444\\n444444444\\n444444444\") == \"444444444\"\nassert solution(\"555555555\\n555555555\\n555555555\\n555555555\\n555555555\\n555555555\\n555555555\\n555555555\\n555555555\") == \"555555555\"\nassert solution(\"666666666\\n666666666\\n666666666\\n666666666\\n666666666\\n666666666\\n666666666\\n666666666\\n666666666\") == \"666666666\"\nassert solution(\"777777777\\n777777777\\n777777777\\n777777777\\n777777777\\n777777777\\n777777777\\n777777777\\n777777777\") == \"777777777\"\nassert solution(\"888888888\\n888888888\\n8",
        "num_ids_2": 316,
        "num_ids_4": 544
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(input()) == \"386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n154873296\"\nassert solution(input()) == \"729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n998236471\\n386592714\\n154873296\"\nassert solution(input()) == \"975314628\\n412968357\\n631457982\\n598236471\\n998236471\\n386592714\\n154873296\\n247189563\\n729641835\"\nassert solution(input()) == \"154873296\\n247789563\\n336592714\\n863725145\\n979314628\\n631457992\\n998236471\\n729641835\\n386592714\"",
        "num_ids_2": 212,
        "num_ids_4": 424
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()} -> expected output: {expected_output}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"\"\"\n3\n6\n8\n-1\n9\n4\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"3\n6\n8\n-1\n9\n4\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '3'\nassert solution(2) == '6'\nassert solution(3) == '8'\nassert solution(4) == '-1'\nassert solution(5) == '9'\nassert solution(6) == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"Expected solution: {expected_solution}, but got solution: {solution}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 6\\n1 1 1 3 5 3 5 7\\n3 1\\n1 5\\n3 4\\n7 3\\n1 8\\n1 9\") == \"3\\n6\\n8\\n-1\\n9\\n4\"\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1,1,1,3,5,3,5,7,3,1,8,1,9]) == \"3\"\nassert solution([3,1,1,5,4,3]) == \"6\"\nassert solution([7,3,1,8,1,9]) == \"-1\"\nassert solution([3,1,1,5,4,3,5,7,3,1,8,1,9,2]) == \"-1\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"10\\n10 20 15 14\\n101 101 101 3\\n1 1 1 1\\n10 20 15 14\") == \"NO\"",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n') == 'YES\\nYES\\nNO\\nNO\\nYES\\n'",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {i+1} failed. Expected output: '{expected_output}', received output: '{solution(input())}'\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test Case {i+1} failed\\nExpected output: {output}\\nActual output: {solution(stdin)}\"\nprint(\"PASS\") if test_case_passed else print(\"FAIL\")\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5 \"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8 \"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3 \"",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\n\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8\\n'\n\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3\\n'",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == \"\"\"3 3 12 8 12\"\"\"\n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"\"\"3 3 3 2 2\"\"\"\n\nassert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"\"\"3 4 6 5\"\"\"\n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == \"\"\"9 8 12 6 8\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5 \\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8 \\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3 \\n\"",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5 \"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8 \"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"3 4 6 5 \\n\"\nassert solution(\"5 5\\n2 1 5 3 5\") == \"9 8 12 6 8 \\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\") == \"3 3 \\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5 '\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8 '\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3 '\nassert solution('') == ''",
        "num_ids_2": 63,
        "num_ids_4": 107
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([10, 6] == \"YES\") # Test case 1\nassert solution([1, 2] == \"YES\") # Test case 2\nassert solution([1, 3] == \"YES\") # Test case 3\nassert solution([1, 4] == \"YES\") # Test case 4\nassert solution([2, 5] == \"YES\") # Test case 5\nassert solution([2, 6] == \"YES\") # Test case 6\nassert solution([3, 7] == \"YES\") # Test case 7\nassert solution([7, 8] == \"YES\") # Test case 8\nassert solution([7, 9] == \"YES\") # Test case 9\nassert solution([9, 10] == \"YES\") # Test case 10\nassert solution([4, 3, 8, 9, 10] == \"YES\") # Test case 11\nassert solution([3, 2, 4, 6] == \"YES\") # Test case 12\nassert solution([3, 2, 1, 5] == \"YES\") # Test case 13\nassert solution([3, 4, 8, 2] == \"YES\") # Test case 14\nassert solution([2, 6, 10] == \"YES\") # Test case 15\nassert solution([3, 5, 4, 7] == \"YES\") # Test case 16\nassert solution([1, 2, 3, 4, 5] == \"NO\") # Test case 17",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Yes\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'",
        "num_ids_2": 264,
        "num_ids_4": 396
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 214,
        "num_ids_4": 428
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4'\nprint('YES')\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n1 3\n1 4\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {solution(input())}!= {output}\" for i, input, output in enumerate([(\"YES\", \"1 3\", \"3 5\\n5 4\\n1 2\\nNO\", \"YES\\nYES\\nYES\\nYES\"), (\"YES\", \"1 2\", \"2 3\\n3 4\\nYES\", \"YES\\nYES\\nYES\\nYES\"), (\"NO\", \"1 1 1\\n1000 101 1000\\n1 2 3 4\", \"YES\\n1 2\\nYES\\nYES\\nYES\\nYES\\nYES\")])",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '010111100101111'\nassert solution(input()) == '010111100101111'\nassert solution(input()) == '0101111001011110'\nassert solution(input()) == '010111100101111'\nassert solution(input()) == '010111100101111000'",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110'.split()) == '01011110'\nassert solution('11011010'.split()) == '01011110'\nassert solution('1111100'.split()) == '0011111'\nassert solution('1111100'.split()) == '0011111'\nassert solution('11011010'.split()) == '01011110'\nassert solution('1111100'.split()) == '0011111'\nassert solution('1111100'.split()) == '0011111'",
        "num_ids_2": 126,
        "num_ids_4": 174
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"\nassert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"\nassert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"\nassert solution(\"1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110\") == \"01011110\"",
        "num_ids_2": 196,
        "num_ids_4": 392
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\\n0101111\\n0011111\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"11111111\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\\n0101111\\n0011111\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n\nfor _ in range(q):\n    n, k = map(int, stdin.split())\n    str_a = list(stdin.strip())\n    str_b = list(stdin.strip())\n    \n    operations = [\n        lambda x, y: (str_a[x], str_a[y]),\n        lambda x, y: (str_b[x], str_b[y]),\n        lambda x, y: (str_a[x], str_a[y]),\n        lambda x, y: (str_b[x], str_b[y]),\n        lambda x, y: (str_a[x], str_a[y]),\n        lambda x, y: (str_b[x], str_b[y]),\n        lambda x, y: (str_a[x], str_a[y]),\n        lambda x, y: (str_b[x], str_b[y]),\n    ]\n    \n    for operation in operations:\n        str_a, str_b = operation(0, n-1)\n        str_a, str_b = operation(0, n-2)\n        str_a, str_b = operation(0, n-3)\n        str_a, str_b = operation(0, n-4)\n        \n        if len(str_a) == n and len(str_b) == n and sorted(str_a) == sorted(str_b):\n            break\n        else:\n            str_a, str_b = str_b, str_a\n    \n    if len(str_a) == n:\n        print(\"0\"*(n//2)+str_a)\n    else:\n        print(\"0\"*k+str_a)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n') == '01011110\\n0101111\\n0011111'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"01011110\\n0101111\\n0011111\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 180
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\np_1=2\\np_2=4\\np_3=7'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\np_1=1\\np_2=2\\np_3=4'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\np_1=1\\np_2=3\\np_3=5\\np_4=6'",
        "num_ids_2": 138,
        "num_ids_4": 206
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output.\\nExpected: {}\\nGot: {}\".format(expected_output, solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example_input.txt\", \"r\").read()) == \"3\\n1 4 7 \\n3\\n1 2 4 \\n3\\n1 3 5 6\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1, 2) == \"3\"\nassert solution(1, 3) == \"3\"\nassert solution(1, 4) == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Output\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(stdin)) == solution(solution(stdin))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\\n-100 2 3\\n\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\\n\") == \"0\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 90
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nfor input_ in inputs:\n    assert solution(input_) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n\") == 3\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == 19\nassert solution(\"2\\n2 1\\n-3 0\\n\") == 0",
        "num_ids_2": 62,
        "num_ids_4": 84
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n5\\n2 1 4 3 5\\n2 2 2 3 4\\n2\\n2 1\\n-3 0\") == \"3\\n19\\n0\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(5) == 19\nassert solution(2) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 0 # 10 is the only valid input",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\\n\") == \"3\\n\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\\n\") == \"19\\n\"\nassert solution(\"2\\n2 1\\n-3 0\\n\") == \"0\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"3\\n\"\nassert solution(\"5\") == \"19\\n\"\nassert solution(\"2\\n-3 0\") == \"0\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 101,
        "num_ids_4": 142
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\\n\", \"The solution is incorrect.\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\\n\", \"The solution is incorrect.\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 113,
        "num_ids_4": 160
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3 \\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0 \\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3 \\n\"",
        "num_ids_2": 103,
        "num_ids_4": 144
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    7 5\n    1 2 1\n    3 2 3\n    2 4 1\n    4 5 2\n    5 7 4\n    3 6 2\n    5 2 3 4 1\n    \"\"\"\n) == '21 7 15 21 3 \\n'\n\nassert solution(\n    \"\"\"\n    1 2\n    1 2\n    \"\"\"\n) == '0 0 \\n'\n\nassert solution(\n    \"\"\"\n    3 3\n    1 2 1\n    2 3 2\n    1 3 2\n    \"\"\"\n) == '1 3 3 \\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3\\n'\nassert solution('''1 2\n1 2\n''') == '0 0\\n'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2''') == '1 3 3\\n'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\"\"\") == \"21 7 15 21 3\"\nassert solution(\"\"\"1 2\n1 2\n\"\"\") == \"0 0\"\nassert solution(\"\"\"3 3\n1 2 1\n2 3 2\n1 3 2\"\"\") == \"1 3 3\"\nassert solution(\"\"\"4 4\n1 2 1\n2 3 2\n1 3 2\n3 4 1\n1 2 4 1\n2 3 4 1\n3 4 1\"\"\") == \"5 12 18 24 30\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([7, 5] + ['1'] * 6 + ['5'] * 6) == '21 7 15 21 3'\nassert solution([1, 2] + ['1'] * 5) == '0 0'\nassert solution([3, 3] + ['1'] * 4 + ['1'] * 3) == '1 3 3'\n\nsolution = '''def solution(stdin: str) -> str:\n    n, m = map(int, stdin.split())\n    edges = []\n    for _ in range(n - 1):\n        u, v, w = map(int, stdin.split())\n        edges.append((u, v, w))\n    max_weight = 2 * 10**5\n    for _ in range(m):\n        query = map(int, stdin.split())\n        u, v, q = query\n        path = []\n        while u!= v:\n            path.append((u, v))\n            u, v = v, u\n        for i, edge in enumerate(edges):\n            if edge[1] in path and edge[2] <= q:\n                w = max(edge[2], max_weight - edge[2])\n                max_weight = min(max_weight, w)\n                if len(path) == 2:\n                    break\n    ans = [str(x) for x in range(max_weight + 1)]\n    return''.join(ans)\n'''",
        "num_ids_2": 62,
        "num_ids_4": 94
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n\") == \"21 7 15 21 3\\n\"\n\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\\n\"\n\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 144
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '21 7 15 21 3 \\n'\nassert solution() == '0 0 \\n'\nassert solution() == '1 3 3 \\n'",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n101\") == \"NO\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES\\nYES\\nNO\\nNO\\nYES'\n\nprint(\"YES\\nYES\\nNO\\nNO\\nYES\")",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(1) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(5) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 2, 2, 2, 2]) == \"YES\"\nassert solution([1, 2, 2, 4, 4, 5, 5, 5, 5, 100]) == \"YES\"\nassert solution([1, 3, 4, 4]) == \"NO\"\nassert solution([1]) == \"NO\"\nprint(\"YES\" if solution([3, 2, 2, 2, 2]) == \"YES\" else \"NO\")\nprint(\"YES\" if solution([1, 2, 2, 4, 4, 5, 5, 5, 5, 100]) == \"YES\" else \"NO\")\nprint(\"NO\" if solution([1, 3, 4, 4]) == \"NO\" else \"NO\")\nprint(\"NO\" if solution([1]) == \"NO\" else \"YES\")",
        "num_ids_2": 61,
        "num_ids_4": 90
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'YES'\nassert solution(4) == 'YES'\nassert solution(100) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"YES\\nYES\\nNO\\nNO\\nYES\") == \"YES\", \"Test 1 failed\"\nassert solution(\"YES\\nYES\\nNO\\nNO\\nYES\") == \"YES\", \"Test 2 failed\"\nassert solution(\"NO\\nNO\\nNO\\nNO\\nNO\") == \"NO\", \"Test 3 failed\"\nassert solution(\"NO\\nNO\\nNO\\nNO\\nNO\") == \"NO\", \"Test 4 failed\"\nassert solution(\"YES\\nYES\\nYES\\nYES\\nYES\") == \"YES\", \"Test 5 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\"\nassert solution(\"1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n20\") == \"NO\"\nassert solution(\"5 1 3 2 1 4\\n4\\n2 2 2 2\\n2\\n10 10 10 10\\n20 20 20 20\\n1\\n10\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 111,
        "num_ids_4": 1027
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: Expected {output()}, got {solution(input())}\"\n\ninput = \"\"\"\n4 4\n1010\n1101\n\"\"\"\noutput = \"\"\"\n12\n\"\"\"\n\ninput = \"\"\"\n4 5\n1001\n10101\n\"\"\"\noutput = \"\"\"\n11\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1010\\n1101') == '12'\nassert solution('4 5\\n1001\\n10101') == '11'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"\nassert solution(\"6 6\\n
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1010\\n1101\\n') == '12\\n'\nassert solution('4 5\\n1001\\n10101\\n') == '11\\n'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4\\n6\\n8\\n10\\n\") == \"YES\\n2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nNO\\n\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"YES\\n2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nYES\\n\"\nassert solution(\"5\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n\") == \"YES\\n2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nYES\\nYES\\n2 4 10 20 10 12 14 16 18 20\\nYES\\nYES\\n2 4 10 20 10 12 14 16 18 20\\n\"\nassert solution(\"2\\n4\\n6\\n8\\n10\\n\") == \"YES\\n2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nNO\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"YES\\n2 4 1 5\\nYES\\n2 4 6 8 1 3 5 11\\nYES\\nYES\\n2 4 10 20 10 12 14 16 18 20\\nYES\\nYES\\n2 4 10 20 10 12 14 16 18 20\\n\"",
        "num_ids_2": 129,
        "num_ids_4": 327
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"NO\"\nassert solution(10) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(8) == \"NO\"\nassert solution(12) == \"YES\"\nassert solution(20) == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"YES\\n\" + \"2 4 1 5\"\nassert solution(4) == \"YES\\n\" + \"2 4 6 8 1 3 5 11\"\nassert solution(6) == \"YES\\n\" + \"2 4 1 5\"\nassert solution(8) == \"YES\\n\" + \"2 4 6 8 1 3 5 11\"\nassert solution(10) == \"NO\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(10) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n6\\n8\\n10\") == \"YES\\nYES\\n2 4 1 5\"\nassert solution(\"2\\n4\\n6\\n8\\n12\") == \"NO\"\nassert solution(\"5\\n2\\n4\\n6\\n8\") == \"NO\"",
        "num_ids_2": 58,
        "num_ids_4": 80
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\" or solution(stdin) == \"YES\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 2, 4, 6, 8, 10) == \"NO\"\nassert solution(10, 10, 10, 10, 10, 10) == \"YES\"\nassert solution(10, 10, 10, 10, 10, 10) == \"YES\"",
        "num_ids_2": 57,
        "num_ids_4": 88
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"YES\\n\" + str(2) + \" \" + str(4) + \" \" + str(1) + \"\\n\"\nassert solution(4) == \"YES\\n\" + str(2) + \" \" + str(4) + \" \" + str(1) + \" \" + str(5) + \"\\n\"\nassert solution(6) == \"YES\\n\" + str(2) + \" \" + str(4) + \" \" + str(6) + \" \" + str(8) + \" \" + str(1) + \" \" + str(3) + \" \" + str(5) + \" \" + str(11) + \"\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 160
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed with input: {input()}\\nExpected output: {expected}\\nGot output: {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '5\\n1\\n0\\n4\\n0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\", \"Solution should return 5\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\", \"Expected output is 5, but got: \" + str(solution())\nassert solution() == \"1\", \"Expected output is 1, but got: \" + str(solution())\nassert solution() == \"0\", \"Expected output is 0, but got: \" + str(solution())\nassert solution() == \"4\", \"Expected output is 4, but got: \" + str(solution())\nassert solution() == \"0\", \"Expected output is 0, but got: \" + str(solution())\nassert solution() == \"0\", \"Expected output is 0, but got: \" + str(solution())",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(['5']) == '5'\nassert solution(['9']) == '5'\nassert solution(['3', '1', '4', '1', '5', '9', '2', '6', '5']) == '5'\nassert solution(['3']) == '1'\nassert solution(['1', '1', '2']) == '1'\nassert solution(['8', '7', '6', '5', '4', '3', '2', '1']) == '4'\nassert solution(['1']) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 64
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {test_case_id + 1} failed: {expected_output}!= {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n1\\n0\\n4\\n0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\", \"The given solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {tc} failed with output: {solution(input())}\"\n\nprint(f\"Test case {tc} passed successfully!\")\n\nfor tc in range(1, t+1):\n    assert solution(input()) == expected_output, f\"Test case {tc} failed with output: {solution(input())}\"\n    print(f\"Test case {tc} passed successfully!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n4\\n2\\n7', \"The output is incorrect.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"1\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\n\nassert solution",
        "num_ids_2": 254,
        "num_ids_4": 508
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n\") == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n4\\n2\\n7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n60\\n1439\\n1180\\n1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n\") == \"5\\n60\\n1439\\n1180\\n1\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23 55\") == \"60\"\nassert solution(\"23 0\") == \"1439\"\nassert solution(\"0 1\") == \"1180\"\nassert solution(\"4 20\") == \"1\"",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23 55\") == \"5\"\nassert solution(\"23 0\") == \"1\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"4 20\") == \"1440\"\nassert solution(\"23 59\") == \"60\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n60\\n1439\\n1180\\n1\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1]) == \"Error: Input must be a string.\"\nassert solution([1, 2]) == \"Error: Input must be a string.\"\nassert solution([1, 2, 3]) == \"Error: Input must be a string.\"\nassert solution([1, 2, 3, 4, 5]) == \"Error: Input must be a string.\"",
        "num_ids_2": 35,
        "num_ids_4": 85
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('23 55') == '60'\nassert solution('23 0') == '0'\nassert solution('0 1') == '1'\nassert solution('4 20') == '60'\nassert solution('23 59') == '1180'",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5\\n60\\n1439\\n1180\\n1\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1 2\\n1 4\\n3 4\\n-1'\nassert solution(stdin) == '-1'\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == ['1 2', '1 4', '3 4', '-1']\nassert solution(input()) == ['1 2', '1 4', '3 4', '-1']\nassert solution(input()) == ['1 2', '1 4', '3 4', '-1']\nassert solution(input()) == ['1 2', '1 4', '3 4', '-1']",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 2\\n1 4\\n3 4\\n-1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"LURD\") == \"1 2\"\nassert solution(\"RRUDU\") == \"3 4\"\nassert solution(\"LLDDR\") == \"-1\"\nassert solution(\"LURUDD\") == \"1 2\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '1 2\\n1 4\\n3 4\\n-1'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\n3\\nLUUDR\\n5\\nLRDRU\") == \"3 0\\n3 1\\n1 2\"\nassert solution(\"5\\n1\\nURDR\\n3\\nULDU\") == \"1 1\\n1 2\\n1 3\\n1 4\"\nassert solution(\"5\\n3\\nURLDR\\n3\\nLRDU\") == \"3 1\\n3 2\\n3 3\\n3 4\"",
        "num_ids_2": 94,
        "num_ids_4": 176
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\n\\nRRUD\\n\\nDRDU\\n\\nRRUR\\n\\nLLLD\") == \"-1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(input()) == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n1\\n0\\n2\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 7, 4, 2, 4, 1, 4, 3, 4, 5, 2, 1, 5, 4, 3, 1, 1, 1, 3) == 3\nassert solution(1, 2, 4, 1, 3) == 1\nassert solution(2, 1, 4, 5, 3) == 2\nassert solution(4, 1, 3, 3, 4, 4) == 0\n\nfrom typing import List",
        "num_ids_2": 84,
        "num_ids_4": 129
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == '3'\nassert solution(5) == '1'\nassert solution(1) == '0'\nassert solution(2) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3\\n1\\n0\\n2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4, 2, 4, 1, 4, 3, 4]) == \"3\\n1\\n0\\n2\"\nassert solution([5]) == \"2\\n1\\n0\\n0\"\nassert solution([1, 1, 1, 3]) == \"2\\n1\\n0\\n2\"\nassert solution([7]) == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 56,
        "num_ids_4": 103
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n1\\n0\\n2'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('tests/test_data.txt', 'r').read()) == '3\\n1\\n0\\n2\\n'\nassert solution(open('tests/test_data2.txt', 'r').read()) == '1\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([\n    \"8\",\n    \"9 4 1 7 10 1 6 5\",\n    \"1 2\",\n    \"2 3\",\n    \"1 4\",\n    \"1 5\",\n    \"5 6\",\n    \"5 7\",\n    \"5 8\",\n]) == \"121\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string), f\"Input: {input_string}\\nOutput: {solution(input_string)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\"\nassert solution(\"1\\n1337\\n\") == \"0\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 121, \"Solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\\n\"\nassert solution(\"1\\n1337\\n\") == \"0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\nassert solution('1\\n1337\\n') == '0'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please check the provided example and the provided constraints.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '121', 'Your solution is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"Expected solution: {expected_solution}, but got: {solution}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Testcase failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"127\"  # expected output: 6\nassert solution(4) == \"107\"  # expected output: 18\nassert solution(5) == \"0\"  # expected output: 0\nassert solution(6) == \"227\"  # expected output: 8\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n18\\n0\\n227\\n8\\n\", \"The correctness of the solution is not checked.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"6\\n18\\n0\\n227\\n8\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected: {expected}, Got: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\") == \"6\\n18\\n0\\n227\\n8\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 154,
        "num_ids_4": 154
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(['1', '2', '3'], ['1', '1']) == 1, \"Solution 1 is incorrect\"\nassert solution(['1', '2'], ['1', '2', '3']) == 2, \"Solution 2 is incorrect\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3],[1,1]) == 1\nassert solution([1,2],[1,2,3]) == 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\n\nassert solution(stdin) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input: [1,2,3], [1,1]\\nOutput: 1\\nExplanation: You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content. You need to output 1.') == 1\n\nassert solution('Input: [1,2], [1,2,3]\\nOutput: 2\\nExplanation: You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. You have 3 cookies and their sizes are big enough to gratify all of the children, You need to output 2.') == 2",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(['1','2', '3'], ['1','1']) == 1\nassert solution(['1','2'], ['1','2','3']) == 2\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == [1,3,3,1]\n\nSolution:\nTo solve the problem, we can use the following recurrence relation for the kth index row of Pascal's triangle:\n\nFor each row index i, the ith row is defined as follows:\n\n- For index j from 0 to i-1, the ith row element is the sum of the (i-j)th and (i-1)th rows.\n\nWe can implement this recurrence relation in a loop and store the result in a list. Here's the code to solve the problem:\n\n```python\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 1, 1]) == [1, 1, 1]\nassert solution([1, 2, 3, 5, 8, 13]) == [1, 3, 6, 10, 15, 21]\nassert solution([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\nassert solution([1, 2, 3, 4, 5, 6]) == [1, 2, 3, 6, 10, 15, 21]\nassert solution([1, 2, 3, 4, 5, 6, 7]) == [1, 2, 3, 4, 5, 7, 12]",
        "num_ids_2": 66,
        "num_ids_4": 146
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input: 3\\nOutput: [1,3,3,1]\") == \"[1,3,3,1]\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == [1,3,3,1] # Expected output: [1,3,3,1]",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [1,3,3,1]\nassert solution(1) == [1]\nassert solution(10) == [1,1,2,5,14,4,13,3,2,1]\nassert solution(100) == [1,21,34,65,121,243,510,1021,2042,4095]",
        "num_ids_2": 26,
        "num_ids_4": 105
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"000000000000000000000000000001011\") == 3\nassert solution(\"0000000000000000000000000001000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31",
        "num_ids_2": 83,
        "num_ids_4": 124
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"000000000000000000000000000001011\") == 3, \"Solution should return 3 for Example 1\"\nassert solution(\"0000000000000000000000000010000000\") == 1, \"Solution should return 1 for Example 2\"\nassert solution(\"1111111111111111111111111111101\") == 31, \"Solution should return 31 for Example 3\"",
        "num_ids_2": 107,
        "num_ids_4": 160
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 86,
        "num_ids_4": 128
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(00000000000000000000000000001011) == 3, \"Solution 1 incorrect\"\nassert solution(0000000000000000000000000010000000) == 1, \"Solution 2 incorrect\"\nassert solution(1111111111111111111111111111101) == 31, \"Solution 3 incorrect\"",
        "num_ids_2": 96,
        "num_ids_4": 143
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('11111111111111111111111111111101') == '31'",
        "num_ids_2": 82,
        "num_ids_4": 124
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 83,
        "num_ids_4": 125
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0000000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31\n",
        "num_ids_2": 85,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(00000000000000000000000000001011) == 3\nassert solution(00000000000000000000000010000000) == 1\nassert solution(11111111111111111111111111111101) == 31",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\n\nsolution = \"def solution(digits: List[int]) -> List[int]:\\n\\treturn digits\\n\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\", \"The output is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"The solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"4\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"5 2\") == \"8\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"1000 1000\") == \"1000\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"6 4\") == \"36\"\nassert solution(\"12 5\") == \"300\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1000 1000\") == \"3000\"\nassert solution(\"1000 -500\") == \"500\"\nassert solution(\"5 5\") == \"25\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 64
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\\n\", \"Test failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\\n\"\nassert solution(\"5 10\") == \"15\\n\"\nassert solution(\"0 10\") == \"0\\n\"\nassert solution(\"5 -2\") == \"0\\n\"\nassert solution(\"5 0\") == \"0\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"2 4\") == \"7\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"5 8\") == \"24\"\nassert solution(\"10 0\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"3\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3\\n', solution(stdin)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\", \"The output is incorrect.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"15\") == \"No\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"20\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(12) == \"Yes\\n\", \"Solution should return Yes for a Harshad number.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\\n\"\nassert solution(\"23\") == \"No\\n\"\nassert solution(\"100\") == \"Yes\\n\"\nassert solution(\"101\") == \"No\\n\"\nassert solution(\"123\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"12\") == \"Yes\", \"Test 1 failed\"\nassert solution(stdin=\"1000000\") == \"No\", \"Test 2 failed\"\nassert solution(stdin=\"123\") == \"Yes\", \"Test 3 failed\"\nassert solution(stdin=\"5\") == \"Yes\", \"Test 4 failed\"\nassert solution(stdin=\"10\") == \"No\", \"Test 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 81
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter an integer N: \")) == \"Yes\\n\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(12) == \"Yes\"\n\nHere, we are testing the solution for the given input. In the solution, we are using the fact that the sum of the digits in a number X is always divisible by 10. Since the sum of the digits of a number is always divisible by 10, we can test whether it is a Harshad number or not.\n\nTo find the sum of the digits of a number X in base 10, we can use the built-in function `int()` to convert the number to an integer. Then we can use the built-in function `sum()` to sum the digits.\n\nHere, we are using the following code:\n\n```python\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(12) == 'Yes\\n', \"The solution is incorrect. Please provide the correct input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"Yes\\n\", \"Test Case 1 failed\"\nassert solution(\"23\") == \"No\\n\", \"Test Case 2 failed\"\nassert solution(\"49\") == \"Yes\\n\", \"Test Case 3 failed\"\nassert solution(\"77\") == \"No\\n\", \"Test Case 4 failed\"\nassert solution(\"1000\") == \"No\\n\", \"Test Case 5 failed\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"1\\n1000000000\") == \"1\\n1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.readlines(), output.splitlines())\n\nN, *A = map(int, input().split())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10\\n'\nassert solution('5\\n2 3 -1\\n0 1 0 1\\n-1 0 1 0\\n2 3\\n2 3 -1\\n0 1 0 1') == '6\\n10\\n9\\n'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12\\n8\\n10\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '''12\n8\n10'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"Test case failed. Expected output: {expected_output}, Actual output: {solution(input_string)}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"\nassert solution(\"2\\n1 2 3 4\") == \"6\\n6\\n6\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '12\\n8\\n10\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"3\\n-1 -1 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"3\\n2 3 4\") == \"12\\n8\\n10\\n\"\nassert solution(\"4\\n4 5 6\") == \"24\\n12\\n14\\n\"\nassert solution(\"5\\n10 15 20\") == \"30\\n15\\n18\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\\n\"\nassert solution(\"4\\n5 7 -2\") == \"12\\n6\\n8\\n\"\nassert solution(\"5\\n10 2 -5\") == \"12\\n4\\n6\\n10\\n\"\nassert solution(\"6\\n0 -1 -3 4\") == \"12\\n4\\n6\\n10\\n\"\nassert solution(\"1\\n1 1 1 1 1\") == \"0\\n1\\n2\\n3\\n4\\n5\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 116
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\", \"Function should return vowel.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"vowel\", \"Test Failed\"\nassert solution(\"b\") == \"consonant\", \"Test Failed\"\nassert solution(\"c\") == \"consonant\", \"Test Failed\"\nassert solution(\"d\") == \"consonant\", \"Test Failed\"\nassert solution(\"e\") == \"vowel\", \"Test Failed\"\nassert solution(\"f\") == \"vowel\", \"Test Failed\"\nassert solution(\"g\") == \"consonant\", \"Test Failed\"\nassert solution(\"h\") == \"consonant\", \"Test Failed\"\nassert solution(\"i\") == \"vowel\", \"Test Failed\"\nassert solution(\"j\") == \"vowel\", \"Test Failed\"\nassert solution(\"k\") == \"vowel\", \"Test Failed\"\nassert solution(\"l\") == \"vowel\", \"Test Failed\"\nassert solution(\"m\") == \"consonant\", \"Test Failed\"\nassert solution(\"n\") == \"vowel\", \"Test Failed\"\nassert solution(\"o\") == \"vowel\", \"Test Failed\"\nassert solution(\"p\") == \"consonant\", \"Test Failed\"\nassert solution(\"q\") == \"vowel\", \"Test Failed\"\nassert solution(\"r\") == \"vowel\", \"Test Failed\"\nassert solution(\"s\") == \"vowel\", \"Test Failed\"\nassert solution(\"t\") == \"vowel\", \"Test Failed\"\nassert solution(\"u\") == \"vowel\", \"Test Failed\"\nassert solution(\"v\") == \"vowel\", \"Test Failed\"\nassert solution(\"w\") == \"consonant\", \"Test Failed\"\nassert solution(\"x\") == \"vowel\", \"Test Failed\"\nassert solution(\"y\") == \"vowel\", \"Test Failed\"\nassert solution(\"z\") == \"vowel\", \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel', \"Test Case 1: a is a vowel.\"\nassert solution('b') == 'consonant', \"Test Case 2: b is a consonant.\"\nassert solution('c') == 'consonant', \"Test Case 3: c is a consonant.\"\nassert solution('d') == 'vowel', \"Test Case 4: d is a vowel.\"\nassert solution('e') == 'vowel', \"Test Case 5: e is a vowel.\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a\") == \"vowel\", \"Test failed\"\nassert solution(\"B\") == \"consonant\", \"Test failed\"\nassert solution(\"c\") == \"consonant\", \"Test failed\"\nassert solution(\"d\") == \"consonant\", \"Test failed\"\nassert solution(\"e\") == \"vowel\", \"Test failed\"\nassert solution(\"F\") == \"consonant\", \"Test failed\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBWWW\") == \"1\"\nassert solution(\"BBBWW\") == \"0\"\nassert solution(\"WWWWW\") == \"0\"\nassert solution(\"WWWWWW\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('BBBWW') == '1', \"Test case not correct\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"BBBWW\") == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"BBBWW\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBWWW\") == \"1\"\nassert solution(\"BBWWWW\") == \"1\"\nassert solution(\"BBWWWWW\") == \"2\"\nassert solution(\"BBWWWWWW\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 21\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"5 6\") == \"No\"\nassert solution(\"7 8\") == \"No\"\nassert solution(\"9 10\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\"\nassert solution(\"1 1\") == \"No\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 100\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\"\nassert solution(\"1 1\") == \"No\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\"\nassert solution(\"1 22\") == \"No\\n\"\nassert solution(\"1 1\") == \"No\\n\"\nassert solution(\"2 3\") == \"No\\n\"\nassert solution(\"4 5\") == \"No\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes', \"The solution should return Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\", \"Your code is incorrect\" # Test Case 1\nassert solution(\"5 10\") == \"No\\n\", \"Your code is incorrect\" # Test Case 2\nassert solution(\"1 1\") == \"Yes\\n\", \"Your code is incorrect\" # Test Case 3\nassert solution(\"2 1\") == \"Yes\\n\", \"Your code is incorrect\" # Test Case 4\nassert solution(\"10 1\") == \"No\\n\", \"Your code is incorrect\" # Test Case 5",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4\\n', \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"8 4 2 1 10 1 11 1 12 1 13 1 14 1 15 1 16 1 17 1 18 1 19 1 20 1 21 1 22 1 23 1 24 1 25 1 26 1 27 1 28 1 29 1 30 1 31 1 32 1 33 1 34 1 35 1 36 1 37 1 38 1 39 1 40 1 41 1 42 1 43 1 44 1 45 1 46 1 47 1 48 1 49 1 50 1 51 1 52 1 53 1 54 1 55 1 56 1 57 1 58 1 59 1 60 1 61 1 62 1 63 1 64 1 65 1 66 1 67 1 68 1 69 1 70 1 71 1 72 1 73 1 74 1 75 1 76 1 77 1 78 1 79 1 80 1 81 1 82 1 83 1 84 1 85 1 86 1 87 1 88 1 89 1 90 1 91 1 92 1 93 1 94 1 95 1 96 1 97 1 98 1 99 1 100\") == \"4\"",
        "num_ids_2": 494,
        "num_ids_4": 494
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\\n\"\nassert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\\n\"\nassert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\\n\"\nassert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\\n\"\nassert solution(\"7\\n3 1 4 1 5 9 2\\n\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"4\"\nassert solution(\"2\\n2\\n3\\n2\\n6\\n9\\n2\\n\") == \"4\"\nassert solution(\"3\\n1\\n4\\n1\\n5\\n9\\n2\\n\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 96
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"\nassert solution(\"7\\n3 2 5 4 6 7 8\") == \"2\\n\"\nassert solution(\"7\\n3 2 5 4 6 7 9\") == \"3\\n\"\nassert solution(\"7\\n3 2 5 4 6 7 10\") == \"0\\n\"\nassert solution(\"7\\n3 2 5 4 6 7 1\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\nassert solution('7\\n1 2 3 4 5 6 7') == '1'\nassert solution('7\\n8 9 10 11 12 13 14') == '4'\nassert solution('7\\n1 2 3 4 5 6 7') == '1'",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\nassert solution('1\\n1 1') == '1'\nassert solution('1\\n1 1') == '1'\nassert solution('1\\n1 1') == '1'",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\", \"Input is not in the correct format.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"1\\n2\\n\") == \"0\\n\"\nassert solution(\"5\\n2\\n\") == \"1\\n\"\nassert solution(\"6\\n3\\n\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"4\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"\nassert solution(\"3\\n5\\n\") == \"5\"\nassert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"3\\n3\\n\") == \"0\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\") == \"5\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\") == \"5\\n\", \"The correct output is: 5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4') == '5', \"Test 1 failed\"\nassert solution('1\\n2') == '0', \"Test 2 failed\"\nassert solution('5\\n7') == '0', \"Test 3 failed\"\nassert solution('2\\n8') == '1', \"Test 4 failed\"\nassert solution('1\\n1') == '1', \"Test 5 failed\"\nassert solution('100\\n100') == '0', \"Test 6 failed\"\nassert solution('1\\n1000') == '1', \"Test 7 failed\"\nassert solution('100\\n1000') == '1', \"Test 8 failed\"\nassert solution('100000\\n100000') == '0', \"Test 9 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES', 'Solution should return YES'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Output should be YES\"\nassert solution(\"1 2 3\") == \"YES\", \"Output should be YES\"\nassert solution(\"5 5 5\") == \"YES\", \"Output should be YES\"\nassert solution(\"1 1 1\") == \"YES\", \"Output should be YES\"\nassert solution(\"2 2 2\") == \"NO\", \"Output should be NO\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Input is not valid\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"3 5 7\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Input is not as expected\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Incorrect output for sample input.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"Yes\\n\"\nassert solution(\"30\") == \"No\\n\"\nassert solution(\"12\") == \"No\\n\"\nassert solution(\"25\") == \"Yes\\n\"\nassert solution(\"31\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"29\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"30\") == \"No\"\nassert solution(\"10\") == \"No\"\nassert solution(\"100\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"55\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"12345\") == \"No\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(29) == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('29') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"1000\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"29\") == \"Yes\", \"Solution does not work as expected.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\", \"Invalid Output\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution('5 3 3\\n1 2 4\\n') == '1'\nassert solution('5 3 3\\n1 2 5\\n') == '2'\nassert solution('5 3 3\\n1 2 1\\n') == '1'",
        "num_ids_2": 33,
        "num_ids_4": 79
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 3\\n1 2 4\\n') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 3\\n1 2 4') == '1'\nassert solution('5 3 3\\n1 2 4\\n3 4 5') == '3'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n2 3 4') == '3'\nassert solution('5 3 3\\n1 2 4\\n1 2 3\\n2 3 4\\n3 4 5') == '3'",
        "num_ids_2": 49,
        "num_ids_4": 126
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1\\n', \"Test failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"#.#\") == \"Yes\"\nassert solution(\"#..\") == \"No\"\nassert solution(\"#....\") == \"No\"\nassert solution(\"#.....\") == \"No\"\nassert solution(\"#....#\") == \"No\"\nassert solution(\"#....#.\") == \"No\"\nassert solution(\"#....#..\") == \"No\"\nassert solution(\"#....#...#\") == \"No\"\nassert solution(\"#....#...#..\") == \"No\"\nassert solution(\"#....#...#...#\") == \"No\"\nassert solution(\"#....#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#..\") == \"No\"\nassert solution(\"#....#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Yes'\nprint('All tests passed!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"\nassert solution(\"4 4\\n#..\\n\\n\\n\") == \"No\"\nassert solution(\"5 5\\n#.#\\n#.#\\n\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n..#\\n..#\\n\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n.#.\\n') == 'Yes'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"\nassert solution(\"3 3\\n...#.\\n\") == \"No\"\nassert solution(\"4 4\\n..#.\\n\") == \"No\"\nassert solution(\"5 5\\n....#\\n\") == \"No\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\\n\", \"Test 1 failed\"\nassert solution(\"10 30 0\") == \"No\\n\", \"Test 2 failed\"\nassert solution(\"20 10 30\") == \"Yes\\n\", \"Test 3 failed\"\nassert solution(\"0 0 1\") == \"No\\n\", \"Test 4 failed\"\nassert solution(\"10 0 30\") == \"No\\n\", \"Test 5 failed\"",
        "num_ids_2": 49,
        "num_ids_4": 96
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 10 20\") == \"No\"\nassert solution(\"100 100 100\") == \"Yes\"\nassert solution(\"25 10 50\") == \"Yes\"",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 10 20\") == \"No\"\nassert solution(\"10 20 20\") == \"No\"\nassert solution(\"10 20 10\") == \"No\"\nassert solution(\"30 10 10\") == \"No\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"15 20 10\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\", \"Test 1\"\nassert solution(\"1 3 4 5\") == \"Right\\n\", \"Test 2\"\nassert solution(\"1 2 3 4\") == \"Left\\n\", \"Test 3\"\nassert solution(\"10 10 10 10\") == \"Right\\n\", \"Test 4\"\nassert solution(\"1 1 1 1\") == \"Balanced\\n\", \"Test 5\"\nassert solution(\"3 2 1 2\") == \"Left\\n\", \"Test 6\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\"\nassert solution(\"5 5 5 5\") == \"Balanced\\n\"\nassert solution(\"1 1 1 1\") == \"Right\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\"\nassert solution(\"5 6 7 10\") == \"Right\\n\"\nassert solution(\"1 1 1 1\") == \"Left\\n\"\nassert solution(\"10 10 10 10\") == \"Left\\n\"\nassert solution(\"100 100 100 100\") == \"Balanced\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\\n\", \"The output should be 'Left', but it is '{0}'\".format(solution(\"3 8 7 1\"))",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('5 6 7 10') == 'Right'\nassert solution('1 1 1 1') == 'Right'\nassert solution('2 2 2 2') == 'Balanced'\nassert solution('1000 1000 1000 1000') == 'Left'",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 8, 7, 1) == \"Left\", \"The function should return Left\"\nassert solution(1, 2, 3, 4) == \"Left\", \"The function should return Left\"\nassert solution(1, 1, 1, 1) == \"Left\", \"The function should return Left\"\nassert solution(1, 2, 2, 3) == \"Right\", \"The function should return Right\"\nassert solution(1, 2, 3, 2) == \"Right\", \"The function should return Right\"\nassert solution(1, 1, 2, 2) == \"Balanced\", \"The function should return Balanced\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 2 3 4\") == \"Right\"\nassert solution(\"5 6 7 8\") == \"Right\"\nassert solution(\"10 10 10 10\") == \"Left\"\nassert solution(\"100 100 100 100\") == \"Right\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"2 6 3 1\") == \"Left\"\nassert solution(\"10 12 9 5\") == \"Right\"\nassert solution(\"10 12 9 4\") == \"Right\"\nassert solution(\"5 8 7 6\") == \"Right\"",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input()) == \"8\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8') == '8'\n\nprint(solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n8'))",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n8') == '8'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    1\n    1 1 0 1 0 0 0 1 0 1\n    3 4 5 6 7 8 9 -2 -3 4 -2\n    \"\"\"\n) == \"8\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\nP_1 0\\nP_2 2\\nP_3 4\\nP_4 6\\nP_5 8\\nP_6 10\\nP_7 12\\nP_8 14\\nP_9 16\\nP_10 18\\n\") == \"8\\n\"\nassert solution(\"1\\n1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\nP_1 0\\nP_2 2\\nP_3 4\\nP_4 6\\nP_5 8\\nP_6 10\\nP_7 12\\nP_8 14\\nP_9 16\\nP_10 18\\n\") == \"8\\n\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\nP_1 1\\nP_2 2\\nP_3 4\\nP_4 6\\nP_5 8\\nP_6 10\\nP_7 12\\nP_8 14\\nP_9 16\\nP_10 18\\n\") == \"8\\n\"\nassert solution(\"1\\n1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\nP_1 0\\nP_2 1\\nP_3 4\\nP_4 6\\nP_5 8\\nP_6 10\\nP_7 12\\nP_8 14\\nP_9 16\\nP_10 18\\n\") == \"16\\n\"",
        "num_ids_2": 234,
        "num_ids_4": 469
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n3 2 1 0 1 1 1\\n1 2 1 0\\n\\n5\\n0 0 1 1 0 0 1\\n1 1 0\\n\\n10\\n1 0 1 0 0 0 1\\n0 1 0\\n\\n\") == \"8\\n\"\nassert solution(\"2\\n1 1 1 1 0 0 1\\n1 1 0\\n\\n3\\n0 0 1 0 0 1 0\\n0 1 0\\n\\n5\\n0 1 0 0 1 0 1\\n0 1 0\\n\\n10\\n1 0 1 0 0 1 0\\n0 1 0\\n\\n\") == \"8\\n\"",
        "num_ids_2": 264,
        "num_ids_4": 264
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n8\") == \"8\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n0\\n0\\n1\\n1 1 1 1 1 1 1 1 1 1\") == \"8\\n\"\nassert solution(\"2\\n0 0 0 0 0 0 0 0 0 0 1\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"8\\n\", \"Expected output: 8\\nReceived output: \" + solution(stdin)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n10 11 12 13 14 15 16 17 18 19\\n20 21 22 23 24 25 26 27 28 29\\n\") == \"8\"\nprint(\"Test Passed\")",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n269-6650\\n') == 'Yes'\nassert solution('4 1\\n123\\n') == 'Yes'\nassert solution('2 2\\nabc\\n') == 'Yes'\nassert solution('1 1\\n123\\n') == 'Yes'\nassert solution('5 2\\nabc\\n') == 'No'\n",
        "num_ids_2": 43,
        "num_ids_4": 79
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nprint(\"All test cases passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"1\", \"Output should be 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Expected '1', got '{}'\".format(solution(\"3 2 6\"))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 2 3') == '0'\nassert solution('5 3 4') == '3'\nassert solution('2 5 10') == '3'\nassert solution('7 3 8') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Input does not match expected output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Expected output: 1\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"Expected output: 1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nprint(solution(\"3 8 2\"))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(3, 2) == \"4\\n\"\nassert solution(3, 3) == \"7\\n\"\nassert solution(3, 4) == \"8\\n\"\nassert solution(3, 5) == \"\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"The output should be: '3\\n4\\n7\\n8\\n', but it is: {}\".format(solution(\"3 8 2\"))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 10 3\") == \"1\\n3\\n10\"\nassert solution(\"5 10 3\") == \"5\\n6\\n7\\n8\\n9\\n10\"\nassert solution(\"1 10 2\") == \"1\\n3\\n5\\n7\\n9\\n10\"\nassert solution(\"2 10 3\") == \"2\\n4\\n6\\n8\\n10\\n12\"\n",
        "num_ids_2": 45,
        "num_ids_4": 107
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8\\n', \"Test case 1 failed\"\nassert solution('1 2 5') == '1\\n2\\n5\\n', \"Test case 2 failed\"\nassert solution('1 10 3') == '1\\n10\\n3\\n', \"Test case 3 failed\"\nassert solution('1 100 10') == '1\\n100\\n10\\n', \"Test case 4 failed\"\nassert solution('1000000000 1000000000 1000000000') == '1000000000\\n1000000000\\n1000000000\\n', \"Test case 5 failed\"\n",
        "num_ids_2": 61,
        "num_ids_4": 127
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8\\n'\nassert solution('10 20 30') == '30\\n20\\n10\\n'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"Expected: ABC, but got: {}\".format(solution(\"AtCoder Beginner Contest\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Test failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Test failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"ATCODER S CENTER\") == \"ABC\"\nassert solution(\"ATCODER S CENTER123\") == \"ABC\"\nassert solution(\"ATCODER S CENTERABC\") == \"ABC\"\nassert solution(\"ATCODER S CENTERABC123\") == \"ABC\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AtCoder s Contest') == 'ABC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 6 3') == 'NO'\nassert solution('7 5 3') == 'YES'\nassert solution('10 10 2') == 'YES'\nassert solution('10 10 5') == 'NO'\nassert solution('10 10 0') == 'NO'\nassert solution('10 10 -1') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"5 3 2\") == \"NO\"\nassert solution(\"5 5 1\") == \"YES\"\nassert solution(\"2 1 1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"\nassert solution(\"3 6 4\") == \"NO\\n\"\nassert solution(\"2 3 5\") == \"YES\\n\"\nassert solution(\"1 1 1\") == \"YES\\n\"\nassert solution(\"1 1 2\") == \"NO\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 0 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"5 3 2\") == \"NO\"\nassert solution(\"3 4 3\") == \"NO\"\nassert solution(\"3 5 10\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5 4') == 'YES\\n'\nassert solution('5 10 2') == 'NO\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"6 3 2\") == \"NO\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"10 5 20\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"\nassert solution(\"1 1 1\") == \"YES\\n\"\nassert solution(\"4 2 3\") == \"YES\\n\"\nassert solution(\"4 5 4\") == \"NO\\n\"\nassert solution(\"3 4 5\") == \"NO\\n\"\nassert solution(\"2 2 2\") == \"NO\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"\nprint(\"Test Passed\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"\nassert solution(stdin=\"5 1\") == \"0\\n1 out of the initial 5 grams of sand will be consumed, resulting in 0 grams.\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"200 2\") == \"100\"\nassert solution(\"300 10\") == \"83\"\nassert solution(\"100 5\") == \"57\"\nassert solution(\"500 0\") == \"0\"\nassert solution(\"0 100\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == 1000000000000000000\nassert solution(\"3\\n1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"6\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"7\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"8\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"9\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"10\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"11\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"12\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == -1\nassert solution(\"13\\n1000000000 1000000000 1000000000 10000000",
        "num_ids_2": 97,
        "num_ids_4": 220
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"6\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"-1\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 250
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('2\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '1000000000000000000'\nassert solution('2\\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000') == '-1'\n",
        "num_ids_2": 135,
        "num_ids_4": 226
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\"\nassert solution(\"3\\n
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"10000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == \"10000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == -1\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == -1\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == -1\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == -1\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == -1\nassert solution(\"2\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 10000",
        "num_ids_2": 113,
        "num_ids_4": 294
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1000000000 1000000000\\n') == '1000000000000000000'\nassert solution('2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n') == '1000000000000000000'\nassert solution('2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n') == '-1'\nassert solution('2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n') == '-1'\nassert solution('2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n') == '-1'\nassert solution('2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n') == '-1'\nassert solution('2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 1000000000\\n2\\n1000000000 100000000",
        "num_ids_2": 132,
        "num_ids_4": 332
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\"\nassert solution(\"2\\n10000000000000000000 10000000000000000000\\n\") == -1\nassert solution(\"2\\n10000000000000000000 100000000000000000000\\n\") == \"1000000000000000000\"\nassert solution(\"3\\n10000000000000000000 10000000000000000000 10000000000000000000\\n\") == -1\nassert solution(\"3\\n10000000000000000000 10000000000000000000 10000000000000000000\\n\") == \"10000000000000000000\"",
        "num_ids_2": 107,
        "num_ids_4": 256
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 1000000000000000000\nprint(1000000000000000000)\nassert solution(input()) == -1\nprint(-1)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"\nassert solution(\"5\\n\") == \"No\\n\"\nassert solution(\"5\\n5\\n\") == \"Yes\\n\"\nassert solution(\"5\\n500\\n\") == \"No\\n\"\nassert solution(\"100\\n\") == \"No\\n\"\nassert solution(\"0\\n\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2018\") == \"Yes\"\nassert solution(\"218\") == \"No\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"\nassert solution(\"1\\n1\\n\") == \"Yes\\n\"\nassert solution(\"1001\\n1000\\n\") == \"No\\n\"\nassert solution(\"0\\n0\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n\") == \"No\\n\"\nassert solution(\"10001\\n500\\n\") == \"No\\n\"\nassert solution(\"100001\\n5000\\n\") == \"No\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"Solution should return Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"\nassert solution(\"100\\n50\\n\") == \"No\"\nassert solution(\"100\\n100\\n\") == \"Yes\"\nassert solution(\"1000000000\\n1000000000\\n\") == \"Yes\"\nassert solution(\"500\\n500\\n\") == \"No\"\nassert solution(\"500\\n1000\\n\") == \"Yes\"\n",
        "num_ids_2": 38,
        "num_ids_4": 90
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"\nassert solution(\"500\\n100\\n\") == \"No\"\nassert solution(\"10000\\n5000\\n\") == \"Yes\"",
        "num_ids_2": 39,
        "num_ids_4": 61
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 3, 6) =='safe'\n\nTakahashi has a strong stomach. He never gets a stomachache from eating something whose \"best-by\" date is at most X days earlier. He gets a stomachache if the \"best-by\" date of the food is X+1 or more days earlier, though.\nOther than that, he finds the food delicious if he eats it not later than the \"best-by\" date. Otherwise, he does not find it delicious.\nTakahashi bought some food A days before the \"best-by\" date, and ate it B days after he bought it.\nWrite a program that outputs delicious if he found it delicious, safe if he did not found it delicious but did not get a stomachache either, and dangerous if he got a stomachache.",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"safe\"\nassert solution(\"4 3 6\") == \"safe\"\nassert solution(\"5 3 6\") == \"safe\"\nassert solution(\"6 3 6\") == \"safe\"\nassert solution(\"4 4 6\") == \"dangerous\"\nassert solution(\"5 4 6\") == \"dangerous\"\nassert solution(\"6 4 6\") == \"dangerous\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"safe\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"safe\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"safe\"\nassert solution(stdin) == \"safe\"\nassert solution(stdin) == \"safe\"\nassert solution(stdin) == \"safe\"\nassert solution(stdin) == \"safe\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 5 3\") == \"safe\"\nassert solution(\"2 5 3\") == \"safe\"\nassert solution(\"1 3 3\") == \"safe\"\nassert solution(\"1 10 1\") == \"safe\"\nassert solution(\"3 5 10\") == \"safe\"\nassert solution(\"2 3 5\") == \"safe\"\nassert solution(\"2 10 5\") == \"safe\"\nassert solution(\"5 10 3\") == \"safe\"\nassert solution(\"1 10 2\") == \"safe\"\nassert solution(\"1 5 10\") == \"safe\"\nassert solution(\"1 5 1\") == \"dangerous\"\nassert solution(\"2 3 5\") == \"dangerous\"\nassert solution(\"1 10 1\") == \"dangerous\"\nassert solution(\"1 10 5\") == \"dangerous\"\nassert solution(\"1 10 10\") == \"dangerous\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 6\") == \"safe\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"3 4 6\") == \"safe\"\nassert solution(\"3 6 4\") == \"safe\"\nassert solution(\"5 3 6\") == \"dangerous\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"2 1 3\") == \"safe\"\nassert solution(\"3 2 1\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 6\") == \"safe\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"4 3 1\") == \"safe\"\nassert solution(\"3 2 1\") == \"safe\"\nassert solution(\"10 5 3\") == \"safe\"\nassert solution(\"4 5 3\") == \"safe\"\nassert solution(\"6 4 3\") == \"safe\"\nassert solution(\"7 3 6\") == \"safe\"\nassert solution(\"8 4 5\") == \"safe\"\nassert solution(\"6 5 4\") == \"safe\"\nassert solution(\"9 6 5\") == \"safe\"\nassert solution(\"5 4 6\") == \"safe\"\nassert solution(\"7 6 5\") == \"safe\"\nassert solution(\"3 5 6\") == \"safe\"\nassert solution(\"2 4 5\") == \"safe\"\nassert solution(\"4 5 6\") == \"safe\"\nassert solution(\"1 2 4\") == \"safe\"\nassert solution(\"2 3 4\") == \"safe\"\nassert solution(\"1 1 2\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 2 3\") == \"safe\"\nassert solution(\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\nassert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"Not a square number, but 5 = 25 is.\"\nassert solution(\"100\") == \"Not a square number, but 100 = 1000 is.\"",
        "num_ids_2": 21,
        "num_ids_4": 71
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"9\"\nassert solution(20) == \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"\nassert solution(25) == \"25 is not square, but 25 = 4 \u00d7 4 is. Thus, we print 25.\"\nassert solution(26) == \"26 is not square, but 26 = 4 \u00d7 6 is. Thus, we print 26.\"\nassert solution(30) == \"30 is not square, but 30 = 6 \u00d7 6 is. Thus, we print 30.\"",
        "num_ids_2": 44,
        "num_ids_4": 114
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"9\"\nassert solution(5) == \"9\"\nassert solution(8) == \"10\"\nassert solution(16) == \"10\"\nassert solution(20) == \"10\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"9\", \"Sample Input is not correct.\"\nassert solution(\"11\") == \"9\", \"Sample Input is not correct.\"\nassert solution(\"100\") == \"100\", \"Sample Input is not correct.\"\nassert solution(\"101\") == \"100\", \"Sample Input is not correct.\"\nassert solution(\"1000000000\") == \"9\", \"Sample Input is not correct.\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\"\n",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='10') == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10') == '9'\nassert solution('15') == '16'\nassert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('1000000') == '1000000'",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'10\\n') == \"9\\n\"\nassert solution(b'11\\n') == \"10\\n\"\nassert solution(b'100\\n') == \"9\\n\"\nassert solution(b'500\\n') == \"10\\n\"\nassert solution(b'1000\\n') == \"9\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\nassert solution(\"1\\n1 1\\n1 1\") == \"2\\n\"\nassert solution(\"5\\n1 1\\n1 1\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 72
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('5\\n3 4\\n7 8\\n9 10') == '37'\nassert solution('6\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12') == '75'",
        "num_ids_2": 53,
        "num_ids_4": 97
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"4\\n1 3\\n2 4\\n1 2\") == \"12\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3\") == \"3\"\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 65
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('1\\n1 1\\n2 2\\n3 3') == '0'\nassert solution('1\\n2 3\\n1 1\\n3 2') == '10'",
        "num_ids_2": 51,
        "num_ids_4": 77
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2''') == '10'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 10",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test 1: uncopyrightable\"\nassert solution(\"hello\") == \"no\", \"Test 2: hello\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"no\", \"Test 3: abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"qwertyuiop\") == \"no\", \"Test 4: qwertyuiop\"\nassert solution(\"1234567890\") == \"yes\", \"Test 5: 1234567890\"",
        "num_ids_2": 38,
        "num_ids_4": 88
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"no\", \"Solution 1 failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"unicorporate\") == \"no\"\nassert solution(\"punctuation\") == \"yes\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"no\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"a\") == \"no\"\nassert solution(\"abbccc\") == \"yes\"\nassert solution(\"abcdef\") == \"no\"\nassert solution(\"\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nprint(\"All characters in S are different.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\n\nHere's the code for the solution:\n\n```python\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"\"\"2\n2\n1\n1\"\"\"\nprint(solution(\"4 3\\n1 2\\n2 3\\n1 4\"))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '2\\n1\\n1\\n1'\nassert solution('4 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('2 3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5') == '2\\n1\\n1\\n1'",
        "num_ids_2": 82,
        "num_ids_4": 184
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"\\n2\\n2\\n1\\n1\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n2\\n1\\n1'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n5\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\\n10\") == \"25\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('3\\n5\\n10\\n15\\n') == '30\\n'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n5\\n10\\n15\\n\"\n) == \"25\\n\"\n\nassert solution(\n    \"3\\n5\\n10\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"3\\n5\\n10\\n15\\n\"\n) == \"25\\n\"\n\nassert solution(\n    \"3\\n5\\n10\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"3\\n5\\n10\\n15\\n\"\n) == \"25\\n\"\n\nassert solution(\n    \"3\\n5\\n10\\n\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n10\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n10\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n10\\n\") == \"0\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n10\\n\") == \"0\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n10\\n10\\n\") == \"0\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 124
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n2\\n\") == \"25\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 198
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"4\\n10\\n15\\n20\\n\") == \"20\\n\"\nassert solution(\"3\\n10\\n15\\n20\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"25\\n\", \"Your grade will be 25 if the 10-point and 15-point questions are answered correctly and the 5-point question is not, and this grade will be displayed correctly. Your grade will become 30 if the 5-point question is also answered correctly, but this grade will be incorrectly displayed as 0.\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n2\\n2\\n\") == \"4\"",
        "num_ids_2": 45,
        "num_ids_4": 87
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n6\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n15\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n10\\n\") == \"30\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n10\\n15\\n6\\n\") == \"30\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 115
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2, but got: \" + solution(input())",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\"\nassert solution(\"7\\nabcde\") == \"0\\n\"\nassert solution(\"8\\nuvwxyz\") == \"0\\n\"\nassert solution(\"9\\nzyxwvutsrqponmlkjihgfedcba\") == \"2\\n\"\nassert solution(\"10\\nabcdefghij\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 75
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\naabbca') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Expected output 2, got: \" + solution(input())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabbca\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2'\nprint(\"All tests passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the length of string: \")) == \"Enter the length of string: \" + str(solution(input(\"Enter the length of string: \")))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\\n\"\nassert solution(\"4\\nabcde\\n\") == \"3\\n\"\nassert solution(\"3\\nabcde\\n\") == \"2\\n\"\nassert solution(\"2\\nabcde\\n\") == \"2\\n\"\nassert solution(\"1\\nabcde\\n\") == \"1\\n\"\nassert solution(\"0\\nabcde\\n\") == \"0\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"The given input is not correct.\"\nassert solution(\"Cloudy\") == \"Rainy\", \"The given input is not correct.\"\nassert solution(\"Rainy\") == \"Sunny\", \"The given input is not correct.\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"Test case 1 failed\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Test case 2 failed\"\nassert solution(\"Rainy\") == \"Sunny\", \"Test case 3 failed\"\nassert solution(\"Sunny\") == \"Cloudy\", \"Test case 4 failed\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\", \"Test 1 failed\"\nassert solution(\"Cloudy\") == \"Cloudy\", \"Test 2 failed\"\nassert solution(\"Rainy\") == \"Cloudy\", \"Test 3 failed\"\nassert solution(\"Sunny\") == \"Cloudy\", \"Test 4 failed\"\nassert solution(\"Cloudy\") == \"Rainy\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"8 20 100\") == \"1090\"\nassert solution(\"10 30 150\") == \"1550\"\nassert solution(\"12 15 200\") == \"2000\"\nassert solution(\"15 20 300\") == \"2000\"\nassert solution(\"18 30 400\") == \"2250\"\nassert solution(\"20 40 500\") == \"2500\"",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"The minimum fee should be 119 yen.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 17 120\") == \"119\\n\", \"The minimum fee is incorrect.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='7 17 120\\n') == '119\\n' # Plan 1\nassert solution(stdin='4 5 10\\n') == '50\\n' # Plan 2\nassert solution(stdin='1 1 1\\n') == '1 yen\\n' # Plan 1\nassert solution(stdin='2 3 5\\n') == '50 yen\\n' # Plan 2",
        "num_ids_2": 55,
        "num_ids_4": 108
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 17 120') == '119\\n', 'The output should be 119'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == \"119\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Incorrect output. Please check the code for the correctness of the solution.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"119\\n\", \"The minimum fee is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"119\", \"Expected output: 119, got: \" + solution(input())",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3800\\n\"\nassert solution(\"3 4\") == \"1666\\n\"\nassert solution(\"5 6\") == \"3888\\n\"\nassert solution(\"7 8\") == \"6666\\n\"\nassert solution(\"1 5\") == \"1000\\n\"\nassert solution(\"1 10\") == \"40000\\n\"\nassert solution(\"1 100\") == \"100000\\n\"\nassert solution(\"100 100\") == \"1000000\\n\"\nassert solution(\"1000 1000\") == \"10000000\\n\"\nassert solution(\"10000 10000\") == \"100000000\\n\"\nassert solution(\"100000 100000\") == \"1000000000\\n\"\nassert solution(\"1000000 1000000\") == \"10000000000\\n\"\nassert solution(\"10000000 10000000\") == \"100000000000\\n\"\nassert solution(\"100000000 100000000\") == \"1000000000000\\n\"\nassert solution(\"1000000000 1000000000\") == \"10000000000000\\n\"\nassert solution(\"10000000000 10000000000\") == \"100000000000000\\n\"\nassert solution(\"100000000000 100000000000\") == \"1000000000000000\\n\"\nassert solution(\"1000000000000 1000000000000\") == \"10000000000000000\\n\"\nassert solution(\"10000000000000 10000000000000\") == \"100000000000000000\\n\"\nassert solution(\"100000000000000 100000000000000000\\n\") == \"10000000000000000000\\n\"\nassert solution(\"1000000000000000 10000000000000000000\\n\") == \"1000000000000000000000\\n\"\nassert solution(\"10000000000000000000000 100000000000000000000000\\n\") == \"1000000000000000000000000\\n\"\nassert solution(\"1000000000000000000000000 1000000000000000000000000000\\n\") == \"10000000000000000000000000000\\n\"\nassert solution(\"100000000000000000000000000 100000000000000000000000000000\\n\") == \"10000000000000000000000000000000",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"3800\\n\", \"Output should be 3800.\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3800\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"2 1\") == \"1900\"\nassert solution(\"3 1\") == \"1900\"\nassert solution(\"4 1\") == \"2700\"\nassert solution(\"5 1\") == \"3400\"\nassert solution(\"6 1\") == \"4100\"\nassert solution(\"7 1\") == \"4700\"\nassert solution(\"8 1\") == \"5400\"\nassert solution(\"9 1\") == \"6100\"\nassert solution(\"10 1\") == \"6800\"\nassert solution(\"11 1\") == \"7500\"\nassert solution(\"12 1\") == \"8200\"\nassert solution(\"13 1\") == \"8900\"\nassert solution(\"14 1\") == \"9600\"\nassert solution(\"15 1\") == \"10300\"\nassert solution(\"16 1\") == \"11000\"\nassert solution(\"17 1\") == \"11700\"\nassert solution(\"18 1\") == \"12400\"\nassert solution(\"19 1\") == \"13100\"\nassert solution(\"20 1\") == \"13800\"\nassert solution(\"21 1\") == \"14500\"\nassert solution(\"22 1\") == \"15200\"\nassert solution(\"23 1\") == \"15900\"\nassert solution(\"24 1\") == \"16600\"\nassert solution(\"25 1\") == \"17300\"\nassert solution(\"26 1\") == \"18000\"\nassert solution(\"27 1\") == \"18700\"\nassert solution(\"28 1\") == \"19400\"\nassert solution(\"29 1\") == \"20100\"\nassert solution(\"30 1\") == \"20800\"\nassert solution(\"31 1\") == \"21500\"\nassert solution(\"32 1\") == \"22200\"\nassert solution(\"33 1\") == \"22900\"\nassert solution(\"34 1\") == \"23600\"\nassert solution(\"35 1\") == \"24300\"\nassert solution(\"36 1\") == \"25000\"\nassert solution(\"37 1\") == \"25700\"\nassert solution(\"38 1\") == \"26400\"\nassert solution(\"39 1\") == \"27100\"\nassert solution(\"40 1\") == \"27800\"\nassert solution(\"41 1\") == \"28500\"\nassert solution(\"42 1\") == \"29200\"\nassert solution(\"43 1\") == \"29900\"\nassert solution(\"44 1\") == \"30600\"\nassert solution(\"45 1\") == \"31300\"\nassert solution(\"46 1\") == \"32000\"\nassert solution(\"47 1\") == \"32700\"\nassert solution(\"48 1\") == \"33400\"\nassert solution(\"49 1\") == \"34100\"\nassert solution(\"50 1\") == \"34800\"\nassert solution(\"51 1\") == \"35500\"\nassert solution(\"52 1\") == \"36200\"\nassert solution(\"53 1\") == \"36900\"\nassert solution(\"54 1\") == \"37600\"\nassert solution(\"55 1\") == \"38300\"\nassert solution(\"56 1\") == \"39000\"\nassert solution(\"57 1\") == \"39700\"\nassert solution(\"58 1\") == \"40400\"\nassert solution(\"59 1\") == \"41100\"\nassert solution(\"60 1\") == \"41800\"\nassert solution(\"61 1\") == \"42500\"\nassert solution(\"62 1\") == \"43",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3800\\n\", \"The expected output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3800', 'Expected output: 3800, got {}'.format(solution(stdin))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3800\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3800\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3800\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3800\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('atcoderregularcontest') == 'b' # expected output: 'b'\n\nsolution('atcoderregularcontest') # test case 1\nassert solution('hello') == None # expected output: None\n\nsolution('hello') # test case 2\nassert solution('abc') == None # expected output: None\n\nsolution('abc') # test case 3\nassert solution('abcd') == None # expected output: None\n\nsolution('abcd') # test case 4\nassert solution('leetcode') == None # expected output: None\n\nsolution('leetcode') # test case 5\nassert solution('Hello') == None # expected output: None",
        "num_ids_2": 33,
        "num_ids_4": 59
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\", \"Test case 1 failed\"\nassert solution(\"\") == None, \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\" # Correct solution",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b', 'Your solution is incorrect. It should return \"b\", but it returns \"{}\" instead.'.format(solution('atcoderregularcontest'))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('atcoderregularcontest') == 'b', 'Your solution is not correct.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\\n\\n\"\nassert solution(\"4\\n1 2 3\") == \"4\\n1\\n2\\n3\\n\\n\"\nassert solution(\"3\\n3 5 7\") == \"3\\n3\\n5\\n7\\n\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n1\\n1\\n2\\n\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"4\\n1\\n2\\n3\\n4\\n\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 122
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n2 5 6 4\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n2 4 6 4\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n2 4 6 3\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n2 4 4 2\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n2 4 4 2\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4\\n2 4 6 4\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"2 3 4 5 6\") == \"4\\n3\\n3\\n4\"\nassert solution(\"1 2 3 4 5\") == \"4\\n3\\n3\\n4\"\nassert solution(\"2 3 4 5\") == \"3\\n3\\n3\\n4\"\nassert solution(\"1 2 3 4 5 6\") == \"4\\n3\\n3\\n4\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the value of N: \")) == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n2 4 4 3\n\"\"\"\n) == \"\"\"\n4\n3\n3\n4\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n3 5 7 11 13\n\"\"\"\n) == \"\"\"\n5\n7\n11\n13\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n2 4 6 8 10\n\"\"\"\n) == \"\"\"\n3\n4\n6\n8\n10\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"\"\"\n5\n4\n3\n2\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"\"\"\n4\n3\n2\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n\"\"\"\n) == \"\"\"\n3\n2\n1\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"\"\"\n5\n4\n3\n2\n1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 4 3') == '4\\n3\\n3\\n4\\n'\n\nassert solution('4 5 6 7 8 9') == '4\\n5\\n6\\n7\\n8\\n9\\n'\n\nassert solution('5') == '5\\n'",
        "num_ids_2": 64,
        "num_ids_4": 76
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 4 4 3\n    \"\"\"\n) == \"4\\n3\\n3\\n4\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    1 2 3 4 5 6\n    \"\"\"\n) == \"6\\n5\\n5\\n6\\n5\\n6\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2 3 4 5 6 7 8\n    \"\"\"\n) == \"8\\n7\\n7\\n8\\n7\\n8\\n7\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"10\\n9\\n9\\n10\\n9\\n9\\n9\\n10\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n1 rectangle can be formed.\\n\", \"Incorrect solution\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\nassert solution(\"6\") == \"0\\nNo rectangle can be formed.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n1 \\times 2 rectangle can be formed.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"6\\n3 1 2 4 2 1\\n2 3 1 4 5 2\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\nprint(\"Test Passed\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Expected output: 2. Actual output: {}.\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\\n\"\nassert solution(\"6\") == \"0\\n\"\nassert solution(\"7 1 2 3 4\") == \"0\\n\"\nassert solution(\"8 5 6 7 8\") == \"0\\n\"\nassert solution(\"9 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n1 \\times 2 rectangle can be formed.\\n', \"Test case failed.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"8\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"4\\n1\\n1\\n1\") == \"0\\n\"\nassert solution(\"3\\n10 0\") == \"10\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 67
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '8', 'Test case failed'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"5\\n4\\n3\\n2\\n1\") == \"5\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n7 1\n2\n5\n10\n\"\"\"\n) == \"8\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'3\\n7 1\\n2\\n5\\n10') == '8\\n'\nassert solution(r'2\\n1\\n1\\n2') == '4\\n'\nassert solution(r'4\\n10\\n1\\n5') == '16\\n'\nassert solution(r'3\\n100\\n1\\n1') == '100\\n'\nassert solution(r'1\\n100\\n100\\n100') == '100\\n'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\\n\"\nassert solution(\"100\") == \"2\\n\"\nassert solution(\"500\") == \"2\\n2\\n\"\nassert solution(\"1000\") == \"2\\n2\\n2\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    2\n    2\n    2\n    100\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    0\n    0\n    0\n    0\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    0\n    0\n    0\n    100\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    100\n    0\n    0\n    0\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    200\n    100\n    0\n    0\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    500\n    100\n    100\n    50\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    500\n    0\n    100\n    0\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    200\n    100\n    0\n    0\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    500\n    0\n    100\n    0\n    '''\n) == '0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"1\\n2\\n3\\n50\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\\n1\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n2\\n2\\n1\") == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"3\\n4\\n5\\n10\") == \"2\"\nassert solution(\"5\\n10\\n15\\n20\") == \"3\"\nassert solution(\"10\\n20\\n30\\n40\") == \"3\"\nassert solution(\"5\\n50\\n50\\n100\") == \"3\"",
        "num_ids_2": 41,
        "num_ids_4": 86
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"3\\n2\\n1\\n50\\n\") == \"3\\n\"\nassert solution(\"3\\n3\\n2\\n25\\n\") == \"6\\n\"\nassert solution(\"4\\n2\\n2\\n100\\n\") == \"12\\n\"\nassert solution(\"5\\n2\\n2\\n100\\n\") == \"12\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"1\\n3\\n5\\n10\\n\") == \"12\\n\"\nassert solution(\"1\\n4\\n10\\n50\\n\") == \"120\\n\"\nassert solution(\"1\\n4\\n10\\n100\\n\") == \"400\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n\") == \"20\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nprint(\"Test Passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"\nassert solution(\"1 5 4\") == \"No\\n\"\nassert solution(\"3 1 4\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"\nassert solution(\"4 2 5\") == \"No\\n\"\nassert solution(\"2 1 4\") == \"Yes\\n\"\nassert solution(\"1 1 1\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"4 3 5\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 10 10\") == \"No\"\nassert solution(\"-100 -100 -100\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"No\")\n\nprint(\"C=2 is not less than A=1 and not greater than B=3, and thus the output should be Yes.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"\nassert solution(\"4 3 2\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nprint(\"Correct!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('5 7 8') == 'No'\nassert solution('1 1000000 1000000') == 'Yes'\nassert solution('5 5 5') == 'Yes'\nassert solution('1000000 1000000 1000000') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 68
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\", \"Test case failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9\\n'\nassert solution('10 1000\\n120\\n100\\n140') == '1\\n'\nassert solution('5 1000\\n120\\n100\\n140') == '6\\n'\nassert solution('2 1000\\n120\\n100\\n140') == '2\\n'\nassert solution('1 1000\\n120\\n100\\n140') == '1\\n'",
        "num_ids_2": 65,
        "num_ids_4": 129
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\noctopus\\ngrape\\n\") == \"2\\n\"\nassert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\n\") == \"1\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\", \"Input is incorrect\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output.\"\nassert solution(\"3\\napple\\norange\\napple\") == \"2\\n\", \"Incorrect output.\"\nassert solution(\"4\\nbanana\\npanama\\nbananas\\npanama\") == \"0\\n\", \"Incorrect output.\"",
        "num_ids_2": 41,
        "num_ids_4": 73
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2', 'Expected \"2\", but got \"{}\"'.format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\napple\\noranges\\napple\") == \"2\\n\"\nassert solution(\"3\\norange\\nappl\\noa\") == \"2\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\napple\\no\\napple') == '2\\n'\nassert solution('3\\nbanana\\nc\\nbanana') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\no range\\napple\\n\") == \"2\\napple\\n\"\nassert solution(\"1\\napple\\n2\\norange\\n3\\napple\\n\") == \"2\\napple\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\napple\\noff\\napple\\n\") == \"2\\napple\\noff\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\noption\\napple\\n\") == \"2\"\nassert solution(\"1\\na\\n\") == \"1\"\nassert solution(\"2\\nab\\nca\\n\") == \"2\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\n\"\nassert solution(\"2\\nbanana\\nbanana\\n\") == \"2\\n\"\nassert solution(\"5\\napple\\nbanana\\nbanana\\n\") == \"3\\n\"\nassert solution(\"3\\npanama\\nsalmon\\n\") == \"1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 92
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2 2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 2\\n\", solution(stdin)",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '2 2\\n' # correct output\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"5\\n2100 2500 2700 2700 3200\") == \"2 2\"\nassert solution(\"6\\n2100 2500 2700 2700 3200 3200\") == \"2 2\"\nassert solution(\"7\\n2100 2500 2700 2700 3200 3200 3200\") == \"2 2\"\nassert solution(\"8\\n2100 2500 2700 2700 3200 3200 3200 3200\") == \"2 2\"",
        "num_ids_2": 71,
        "num_ids_4": 162
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 3200\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 3200 2500 2900 3100 3100 3100 3100 3100\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 3200 2500 2900 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100\") == \"2 2\"\nassert solution(\"4\\n2100 2500 2700 3200 2500 2900 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100 3100\") == \"2 2\"",
        "num_ids_2": 66,
        "num_ids_4": 237
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"2 2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\", \"Test 1 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"oox\") == \"900\"\nassert solution(\"oxx\") == \"900\"\nassert solution(\"xxo\") == \"900\"\nassert solution(\"xoo\") == \"900\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All tests passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\", \"Solution should return 900\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\", \"The solution should return H\"\nassert solution(\"H H\") == \"H\", \"The solution should return H\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H H\") == \"H\", \"Test Failed: Expected output: H, Actual output: {output}\"\nassert solution(\"H H\") == \"H\", \"Test Failed: Expected output: H, Actual output: {output}\"\nassert solution(\"H H\") == \"H\", \"Test Failed: Expected output: H, Actual output: {output}\"\nassert solution(\"H H\") == \"H\", \"Test Failed: Expected output: H, Actual output: {output}\"\nassert solution(\"H H\") == \"H\", \"Test Failed: Expected output: H, Actual output: {output}\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H H\") == \"H\"\nprint(\"All test cases pass\")",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'H'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H H\") == \"H\", \"Input1\"\nassert solution(\"H D\") == \"D\", \"Input2\"\nassert solution(\"D H\") == \"D\", \"Input3\"\nassert solution(\"D D\") == \"H\", \"Input4\"\nassert solution(\"H H\") == \"H\", \"Input5\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\", \"Test 1 failed\"\nassert solution(\"H D\") == \"D\", \"Test 2 failed\"\nassert solution(\"D H\") == \"D\", \"Test 3 failed\"\nassert solution(\"D D\") == \"H\", \"Test 4 failed\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\", \"Expected H, got: {}\".format(solution(\"H H\"))\nassert solution(\"H D\") == \"D\", \"Expected D, got: {}\".format(solution(\"H D\"))\nassert solution(\"D H\") == \"D\", \"Expected D, got: {}\".format(solution(\"D H\"))\nassert solution(\"D D\") == \"H\", \"Expected H, got: {}\".format(solution(\"D D\"))",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The output is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\\n\", \"The solution is incorrect\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The given input is invalid.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"3456\") == \"3+4+5+6=15\"\nassert solution(\"7890\") == \"7+8+9+0=42\"\nassert solution(\"1000\") == \"1+0+0=10\"\nassert solution(\"2000\") == \"2+0+0=20\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Please enter a valid input.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n\nHere is the code for the solution:\n\n```python\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\\n\"\nassert solution(\"1223\") == \"1-2-2+3=7\\n\"\nassert solution(\"3122\") == \"3-1-2+2=7\\n\"\nassert solution(\"4321\") == \"4-3-2+1=7\\n\"\nassert solution(\"5432\") == \"5-4-3+2=7\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Incorrect output\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"\"\"\n2\n2\n0\n0\n0\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution(stdin='5\\n1 1 2 2 1\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution(stdin='5\\n1 1 2 3 2\\n') == '1\\n0\\n1\\n0\\n0\\n'\nassert solution(stdin='5\\n1 1 2 3 4\\n') == '1\\n0\\n1\\n0\\n0\\n'\nassert solution(stdin='5\\n1 1 2 3 5\\n') == '0\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 76,
        "num_ids_4": 154
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 3\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 4\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 5\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 6\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 7\") == \"0\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 64,
        "num_ids_4": 130
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0\\n'\nassert solution('10\\n1 1 2 2\\n1 3 3 3\\n1 4 4 4\\n1 5 5 5\\n') == '2\\n2\\n0\\n0\\n0\\n'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(stdin) == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(stdin) == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(stdin) == \"2\\n2\\n0\\n0\\n0\\n\"\nassert solution(stdin) == \"2\\n2\\n0\\n0\\n0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"6\") == \"3\\n\", \"Test failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6') == '3', \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Invalid input\"\nassert solution(\"100\") == \"Invalid input\"\nassert solution(\"9\") == \"Invalid input\"\nassert solution(\"5\") == \"Invalid input\"\nassert solution(\"1\") == \"Invalid input\"\nassert solution(\"0\") == \"Invalid input\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\", \"The output of the function should be 'Yes'.\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1118\") == \"Yes\", \"N is not good\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1118\") == \"Yes\", \"Test case 1 failed\"\nassert solution(\"2222\") == \"No\", \"Test case 2 failed\"\nassert solution(\"3333\") == \"No\", \"Test case 3 failed\"\nassert solution(\"4444\") == \"No\", \"Test case 4 failed\"\nassert solution(\"5555\") == \"Yes\", \"Test case 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1118\") == \"Yes\", \"Please enter a valid 4-digit integer\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\\n\", \"The given solution is incorrect\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1118\") == \"Yes\", \"Please modify the code as required.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\", \"Your code is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1118\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\", \"Incorrect Output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\", \"The correct output is not provided.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n', \"Expected output: 3\\n, but got: \" + str(solution())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Invalid input. Please provide valid input.\"\nassert solution(\"2\") == \"Invalid input. Please provide valid input.\"\nassert solution(\"3\") == \"Invalid input. Please provide valid input.\"\nassert solution(\"1\\n\") == \"Invalid input. Please provide valid input.\"\nassert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"Invalid input. Please provide valid input.\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"The given constraints are not satisfied.\"\n\nassert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\\n\", \"The number of different altars cannot be found.\"\n\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"6\\n\", \"The number of different altars cannot be found.\"\n\nassert solution(\"6\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 101\\n100 102\\n101 103\\n102 104\\n103 105\\n104 106\\n105 107\\n106 108\\n107 109\\n108 110\\n109 111\\n110 112\\n111 113\\n112 114\\n113 115\\n114 116\\n115 117\\n116 118\\n117 119\\n118 120\\n119 121\\n120 122\\n121 123\\n122 124\\n123 125\\n124 126\\n125 127\\",
        "num_ids_2": 60,
        "num_ids_4": 1024
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\\n\"\nassert solution(\"1\\n2\\n3\") == \"0\\n\"\nassert solution(\"4\\n3\\n2\") == \"0\\n\"\nassert solution
        "num_ids_2": 45,
        "num_ids_4": 1027
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\\n\") == \"3\"\nassert solution(\"3\\n1 5\\n2 4\\n3 6\\n\") == \"3\"\nassert solution(\"2\\n1 5\\n2 4\\n1 6\\n\") == \"2\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output {solution(input())} does not match the expected output {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('A B') == '<\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A B\") == \"<\\n\", \"Test 1 Failed\"\nassert solution(\"C B\") == \"\\n>\", \"Test 2 Failed\"\nassert solution(\"A E\") == \"=\", \"Test 3 Failed\"\nassert solution(\"B D\") == \"<\\n\", \"Test 4 Failed\"\nassert solution(\"F C\") == \"\\n>\", \"Test 5 Failed\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \"<\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C D\") == \"<\\n\"\nassert solution(\"E F\") == \"<\\n\"\nassert solution(\"a b\") == \"<\\n\"\nassert solution(\"c d\") == \"<\\n\"\nassert solution(\"e f\") == \"<\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"C F\") == \"<\"\nassert solution(\"D H\") == \">\"\nassert solution(\"E I\") == \"<\"\nassert solution(\"F G\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C D\") == \"<\\n\"\nassert solution(\"E F\") == \"<\\n\"\nassert solution(\"G H\") == \"<\\n\"\nassert solution(\"I J\") == \"<\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Your implementation is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\", \"Test 1\"\nassert solution(\"C D\") == \"<\\n11 < 13.\\n\", \"Test 2\"\nassert solution(\"E F\") == \"<\\n12 < 15.\\n\", \"Test 3\"\nassert solution(\"A C\") == \"=\", \"Test 4\"\nassert solution(\"B D\") == \"=\", \"Test 5\"",
        "num_ids_2": 50,
        "num_ids_4": 89
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"11111\\n11111\\n11111\\n11111\\n11111\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No strings after processing.\"\nassert solution(\"3 5\\n.....\\n.#.#. \\n.....\") == \"11211\\n1#2#1\\n11211\"\nassert solution(\"3 5\\n.....\\n.#.#. \\n.....\") == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 52,
        "num_ids_4": 93
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\\n\"\nassert solution(\"5 3\\n......\\n......\\n......\\n\") == \"11211\\n11211\\n1#2#1\\n11211\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n1#2#1\\n11211'\nassert solution() == '11211\\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150') == 3\nassert solution('5 3 10\\n10 20 30') == 1\nassert solution('2 1 1') == 1\nassert solution('4 1000 1') == 1\nassert solution('3 1000 1000') == 1\nassert solution('5 1000 10000') == 1\nassert solution('3 1 1') == 1\nassert solution('3 1000 1000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\nassert solution('3 1000 10000') == 1\n",
        "num_ids_2": 65,
        "num_ids_4": 94
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nassert solution(\"3 3 1000000\") == \"1000000\\n\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\"\nassert solution(\"2 3 4 5 6\") == \"2\\n\"\nassert solution(\"1000000000 0 0\") == \"1000000000\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 112
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n\", \"Incorrect output. Expected '3\\n', but got '{}'.\".format(solution(input()))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nassert solution(\"1 2 3\") == \"Invalid input. Please enter integers for N, M, and K.\"\nassert solution(\"5 10 20\") == \"Invalid input. Please enter integers for N, M, and K.\"",
        "num_ids_2": 70,
        "num_ids_4": 98
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '7900'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == 7900",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"10000 10000 10000 3 2\") == \"16000\"\nassert solution(\"30000 30000 30000 3 2\") == \"21000\"\nassert solution(\"15000 15000 15000 3 2\") == \"25000\"\nassert solution(\"50000 50000 50000 3 2\") == \"30000\"",
        "num_ids_2": 64,
        "num_ids_4": 132
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\", \"Test failed: solution(1500 2000 1600 3 2) returned wrong output.\"\nprint(\"Test passed\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 1\") == \"15900\"\nassert solution(\"1500 2000 1600 3 4\") == \"3300\"\nassert solution(\"1500 2000 1600 2 4\") == \"1800\"\nassert solution(\"1500 2000 1600 3 5\") == \"15000\"",
        "num_ids_2": 61,
        "num_ids_4": 121
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\", \"Test Case 1\"\nassert solution(\"500 1000 1500 2000 1500\") == \"3100\", \"Test Case 2\"\nassert solution(\"10000 20000 10000 20000 10000\") == \"20000\", \"Test Case 3\"\nassert solution(\"1000000 2000000 1000000 2000000 1000000\") == \"5000000\", \"Test Case 4\"\nassert solution(\"100000000 200000000 100000000 200000000 100000000\") == \"150000000\", \"Test Case 5\"",
        "num_ids_2": 77,
        "num_ids_4": 185
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\\n\", \"There are four divisors of 3! =6: 1, 2, 3 and 6. Thus, the output should be 4.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 4\nassert solution(4) == 2\nassert solution(5) == 4\nassert solution(6) == 1\nassert solution(7) == 4\nassert solution(8) == 4\nassert solution(9) == 4\nassert solution(10) == 4\nassert solution(11) == 4\nassert solution(12) == 4\nassert solution(13) == 4\nassert solution(14) == 4\nassert solution(15) == 4\nassert solution(16) == 4\nassert solution(17) == 4\nassert solution(18) == 4\nassert solution(19) == 4\nassert solution(20) == 4\nassert solution(21) == 4\nassert solution(22) == 4\nassert solution(23) == 4\nassert solution(24) == 4\nassert solution(25) == 4\nassert solution(26) == 4\nassert solution(27) == 4\nassert solution(28) == 4\nassert solution(29) == 4\nassert solution(30) == 4\nassert solution(31) == 4\nassert solution(32) == 4\nassert solution(33) == 4\nassert solution(34) == 4\nassert solution(35) == 4\nassert solution(36) == 4\nassert solution(37) == 4\nassert solution(38) == 4\nassert solution(39) == 4\nassert solution(40) == 4\nassert solution(41) == 4\nassert solution(42) == 4\nassert solution(43) == 4\nassert solution(44) == 4\nassert solution(45) == 4\nassert solution(46) == 4\nassert solution(47) == 4\nassert solution(48) == 4\nassert solution(49) == 4\nassert solution(50) == 4\nassert solution(51) == 4\nassert solution(52) == 4\nassert solution(53) == 4\nassert solution(54) == 4\nassert solution(55) == 4\nassert solution(56) == 4\nassert solution(57) == 4\nassert solution(58) == 4\nassert solution(59) == 4\nassert solution(60) == 4\nassert solution(61) == 4\nassert solution(62) == 4\nassert solution(63) == 4\nassert solution(64) == 4\nassert solution(65) == 4\nassert solution(66) == 4\nassert solution(67) == 4\nassert solution(68) == 4\nassert solution(69) == 4\nassert solution(70) == 4\nassert solution(71) == 4\nassert solution(72) == 4\nassert solution(73) == 4\nassert solution(74) == 4\nassert solution(75) == 4\nassert solution(76) == 4\nassert solution(77) == 4\nassert solution(78) == 4\nassert solution(79) == 4\nassert solution(80) == 4\nassert solution(81) == 4\nassert solution(82) == 4\nassert solution(83) == 4\nassert solution(84) == 4\nassert solution(85) == 4\nassert solution(86) == 4\nassert solution(87) == 4\nassert solution(88) == 4\nassert solution(89) == 4\nassert solution(90) == 4\nassert solution(91) == 4\nassert solution(92) == 4\nassert solution(93) == 4\nassert solution(94) == 4\nassert solution(95) == 4\nassert solution(96) == 4\nassert solution(97) == 4\nassert solution(98) == 4\nassert solution(99) == 4\nassert solution(100) == 4\nassert solution(101) == 4\nassert solution(102) == 4\nassert solution(103) == 4\nassert solution(104) == 4\nassert solution(105) ==",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 4, \"Output does not match expected output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"4\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"2\\n\"\nassert solution(\"7\\n\") == \"2\\n\"\nassert solution(\"9\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"0\\n\"\nassert solution(\"11\\n\") == \"0\\n\"\nassert solution(\"12\\n\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == 4, \"Expected output 4, but got {}\".format(solution(\"3\"))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\", \"Please provide a valid input.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"9\"\nassert solution(2) == \"2\"\nassert solution(15) == \"17\"\nassert solution(5000) == \"169530\"",
        "num_ids_2": 21,
        "num_ids_4": 51
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"9\"\nassert solution(100) == \"99\"\nassert solution(1000) == \"999\"\nassert solution(10000) == \"9999\"\nassert solution(100000) == \"99999\"\nassert solution(1000000) == \"999999\"",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"9\" # assert statement to check if the solution is correct",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter an integer: \")) == \"9\\n\", \"The correct output should be 9.\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == '9'\nassert solution(20) == '256'\nassert solution(1000) == '9'\nassert solution(1001) == '1000'\nassert solution(10000000) == '9'\nassert solution(10000001) == '10000000'",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"9\\n\", \"Test failed for X = 10\"\nassert solution(20) == \"9\\n\", \"Test failed for X = 20\"\nassert solution(50) == \"9\\n\", \"Test failed for X = 50\"\nassert solution(100) == \"9\\n\", \"Test failed for X = 100\"\nassert solution(1000) == \"9\\n\", \"Test failed for X = 1000\"\n",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"5\\n10\\n8\\n8\\n6\\n\") == \"5\"\nassert solution(\"6\\n10\\n8\\n8\\n6\\n\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n\nassert solution(\"1\\n5\") == \"1\"\n\nassert solution(\"5\\n20\\n20\\n10\\n5\") == \"4\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n2\") == \"1\\n\"\nassert solution(\"1000000\\n1\") == \"1000000\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"4\\n10\\n8\\n8\\n12\") == \"4\\n\"\nassert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"4\\n10\\n8\\n8\\n12\") == \"4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"Test Failed\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"The output should be 5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"5\"\nassert solution(\"HELLO\") == \"3\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"13\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"The output should be 2.\"\nassert solution(\"4\\n6 8 20\") == \"3\\n\", \"The output should be 3.\"\nassert solution(\"1\\n\") == \"0\\n\", \"The output should be 0.\"\nassert solution(\"3\\n8 12 40 24 60\") == \"6\\n\", \"The output should be 6.\"",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 3\nassert solution(6) == 4\nassert solution(7) == 4\nassert solution(8) == 5\nassert solution(9) == 5\nassert solution(10) == 6\nassert solution(11) == 6\nassert solution(12) == 7\nassert solution(13) == 7\nassert solution(14) == 8\nassert solution(15) == 8\nassert solution(16) == 9\nassert solution(17) == 9\nassert solution(18) == 10\nassert solution(19) == 10\nassert solution(20) == 11\nassert solution(21) == 11\nassert solution(22) == 12\nassert solution(23) == 12\nassert solution(24) == 13\nassert solution(25) == 13\nassert solution(26) == 14\nassert solution(27) == 14\nassert solution(28) == 15\nassert solution(29) == 15\nassert solution(30) == 16\nassert solution(31) == 16\nassert solution(32) == 17\nassert solution(33) == 17\nassert solution(34) == 18\nassert solution(35) == 18\nassert solution(36) == 19\nassert solution(37) == 19\nassert solution(38) == 20\nassert solution(39) == 20\nassert solution(40) == 21\nassert solution(41) == 21\nassert solution(42) == 22\nassert solution(43) == 22\nassert solution(44) == 23\nassert solution(45) == 23\nassert solution(46) == 24\nassert solution(47) == 24\nassert solution(48) == 25\nassert solution(49) == 25\nassert solution(50) == 26\nassert solution(51) == 26\nassert solution(52) == 27\nassert solution(53) == 27\nassert solution(54) == 28\nassert solution(55) == 28\nassert solution(56) == 29\nassert solution(57) == 29\nassert solution(58) == 30\nassert solution(59) == 30\nassert solution(60) == 31\nassert solution(61) == 31\nassert solution(62) == 32\nassert solution(63) == 32\nassert solution(64) == 33\nassert solution(65) == 33\nassert solution(66) == 34\nassert solution(67) == 34\nassert solution(68) == 35\nassert solution(69) == 35\nassert solution(70) == 36\nassert solution(71) == 36\nassert solution(72) == 37\nassert solution(73) == 37\nassert solution(74) == 38\nassert solution(75) == 38\nassert solution(76) == 39\nassert solution(77) == 39\nassert solution(78) == 40\nassert solution(79) == 40\nassert solution(80) == 41\nassert solution(81) == 41\nassert solution(82) == 42\nassert solution(83) == 42\nassert solution(84) == 43\nassert solution(85) == 43\nassert solution(86) == 44\nassert solution(87) == 44\nassert solution(88) == 45\nassert solution(89) == 45\nassert solution(90) == 46\nassert solution(91) == 46\nassert solution(92) == 47\nassert solution(93) == 47\nassert solution(94) == 48\nassert solution(95) == 48\nassert solution(96) == 49\nassert solution(97) == 49\nassert solution(",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"4\\n8 12 40\") == \"1\"\nassert solution(\"5\\n8 12 40\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"4\\n16 8 48\") == \"2\"\nassert solution(\"5\\n10 20 30\") == \"3\"\nassert solution(\"6\\n10 10 10\") == \"3\"\nassert solution(\"7\\n12 10 20\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Test failed\" # Test Case 1\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\", \"Test failed\" # Test Case 2\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"0\\n\", \"Test failed\" # Test Case 3\nassert solution(\"9\\n2 4 6 8 10 12 14 16\") == \"4\\n\", \"Test failed\" # Test Case 4\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9\") == \"2\\n\", \"Test failed\" # Test Case 5",
        "num_ids_2": 62,
        "num_ids_4": 140
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"4\\n5 10 20\") == \"2\"\nassert solution(\"2\\n7 15 30\") == \"2\"\nassert solution(\"10\\n10 20 30\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\"\nassert solution(\"6\\n8 12 40\") == \"2\\n\"\nassert solution(\"9\\n8 12 40\") == \"2\\n\"\nassert solution(\"10\\n8 12 40\") == \"3\\n\"\nassert solution(\"11\\n8 12 40\") == \"3\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n8 12 40\\n\") == \"2\"\nassert solution(\"5\\n1 2 3\\n\") == \"0\"\nassert solution(\"2\\n4 8 16\\n\") == \"2\"\nassert solution(\"3\\n5 10 15\\n\") == \"2\"\nassert solution(\"5\\n3 6 9\\n\") == \"0\"\nassert solution(\"3\\n6 12 18\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\\n\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '6', \"The expected output is: '6'.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '6'\nprint('All test cases passed!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"All tests passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\", \"The answer is 1+2+3=6.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6, \"Incorrect output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"6\\n\", \"Sample Output should be 6\"\nassert solution(\"4\\n\") == \"8\\n\", \"Sample Output should be 8\"\nassert solution(\"5\\n\") == \"10\\n\", \"Sample Output should be 10\"\nassert solution(\"10\\n\") == \"24\\n\", \"Sample Output should be 24\"\nassert solution(\"15\\n\") == \"40\\n\", \"Sample Output should be 40\"",
        "num_ids_2": 44,
        "num_ids_4": 93
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\") == \"6\", \"The answer is 1+2+3=6.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\") == \"6\"\nassert solution(stdin=\"5\") == \"30\"\nassert solution(stdin=\"10\") == \"100\"\nassert solution(stdin=\"20\") == \"200\"\nassert solution(stdin=\"50\") == \"500\"\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1\\n') == '2'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1\\n') == '2\\n'\nassert solution('3\\n1 2\\n') == '3\\n'\nassert solution('4\\n1 2 3\\n') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '3\\n'",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\", \"Solution should return 2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\\n\", \"Expected output: '2'\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"\nprint(\"All test cases pass\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2\\n3 1\\n\") == \"2\\n\", \"Output must be 2\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('3\\n1 2') == '3'\nassert solution('4\\n1 2 3 4') == '4'\nassert solution('1\\n1') == '0'\nassert solution('1\\n') == '0'\nassert solution('5\\n1 2 3 4 5') == '10'",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\", \"Takahashi participated in a contest on AtCoder.\\nThe contest had N problems.\\nTakahashi made M submissions during the contest.\\nThe i-th submission was made for the p_i-th problem and received the verdict S_i (AC or WA).\\nThe number of Takahashi's correct answers is the number of problems on which he received an AC once or more.\\nThe number of Takahashi's penalties is the sum of the following count for the problems on which he received an AC once or more: the number of WAs received before receiving an AC for the first time on that problem.\"\n\nfrom typing import List",
        "num_ids_2": 174,
        "num_ids_4": 174
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"2 5\\n1 AC\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    4 1 5\n    \"\"\"\n) == \"5\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\", \"Test failed\"\nassert solution(input()) == \"5\", \"Test failed\"\nassert solution(input()) == \"5\", \"Test failed\"\nassert solution(input()) == \"5\", \"Test failed\"\nassert solution(input()) == \"5\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n4 1 5\\n') == '5'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\"\nassert solution(\"2 1\\n1 1 2 3 4\") == \"5\\n\"\nassert solution(\"1 1\\n5\") == \"2\\n\"\nassert solution(\"3 3\\n1 1 2 3 4\") == \"5\\n\"\nassert solution(\"1 5\") == \"2\\n\"\nassert solution(\"2 2\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt', 'r')) == '5\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\", \"Incorrect output\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\", \"Invalid output\"\nassert solution(\"5\\n5\\n5\\n\") == \"10\\n\", \"Invalid output\"\nassert solution(\"6\\n6\\n6\\n\") == \"15\\n\", \"Invalid output\"\nassert solution(\"7\\n7\\n7\\n\") == \"21\\n\", \"Invalid output\"\nassert solution(\"8\\n8\\n8\\n\") == \"28\\n\", \"Invalid output\"\nassert solution(\"9\\n9\\n9\\n\") == \"36\\n\", \"Invalid output\"\nassert solution(\"10\\n10\\n10\\n\") == \"45\\n\", \"Invalid output\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"4\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 449
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"1\\n10\\n3\\n\") == \"4\"\nassert solution(\"1\\n10\\n4\\n\") == \"4\"\nassert solution(\"1\\n10\\n5\\n\") == \"4\"\nassert solution(\"1\\n10\\n6\\n\") == \"4\"\nassert solution(\"1\\n10\\n7\\n\") == \"4\"\nassert solution(\"1\\n10\\n8\\n\") == \"4\"\nassert solution(\"1\\n10\\n9\\n\") == \"4\"\nassert solution(\"1\\n10\\n10\\n\") == \"4\"\nassert solution(\"1\\n10\\n11\\n\") == \"4\"\nassert solution(\"1\\n10\\n12\\n\") == \"4\"\nassert solution(\"1\\n10\\n13\\n\") == \"4\"\nassert solution(\"1\\n10\\n14\\n\") == \"4\"\nassert solution(\"1\\n10\\n15\\n\") == \"4\"\nassert solution(\"1\\n10\\n16\\n\") == \"4\"\nassert solution(\"1\\n10\\n17\\n\") == \"4\"\nassert solution(\"1\\n10\\n18\\n\") == \"4\"\nassert solution(\"1\\n10\\n19\\n\") == \"4\"\nassert solution(\"1\\n10\\n20\\n\") == \"4\"\nassert solution(\"1\\n10\\n21\\n\") == \"4\"\nassert solution(\"1\\n10\\n22\\n\") == \"4\"\nassert solution(\"1\\n10\\n23\\n\") == \"4\"\nassert solution(\"1\\n10\\n24\\n\") == \"4\"\nassert solution(\"1\\n10\\n25\\n\") == \"4\"\nassert solution(\"1\\n10\\n26\\n\") == \"4\"\nassert solution(\"1\\n10\\n27\\n\") == \"4\"\nassert solution(\"1\\n10\\n28\\n\") == \"4\"\nassert solution(\"1\\n10\\n29\\n\") == \"4\"\nassert solution(\"1\\n10\\n30\\n\") == \"4\"\nassert solution(\"1\\n10\\n31\\n\") == \"4\"\nassert solution(\"1\\n10\\n32\\n\") == \"4\"\nassert solution(\"1\\n10\\n33\\n\") == \"4\"\nassert solution(\"1\\n10\\n34\\n\") == \"4\"\nassert solution(\"1\\n10\\n35\\n\") == \"4\"\nassert solution(\"1\\n10\\n36\\n\") == \"4\"\nassert solution(\"1\\n10\\n37\\n\") == \"4\"\nassert solution(\"1\\n10\\n38\\n\") == \"4\"\nassert solution(\"1\\n10\\n39\\n\") == \"4\"\nassert solution(\"1\\n10\\n40\\n\") == \"4\"\nassert solution(\"1\\n10\\n41\\n\") == \"4\"\nassert solution(\"1\\n10\\n42\\n\") == \"4\"\nassert solution(\"1\\n10\\n43\\n\") == \"4\"\nassert solution(\"1\\n10\\n44\\n\") == \"4\"\nassert solution(\"1\\n10\\n45\\n\") == \"4\"\nassert solution(\"1\\n10\\n46\\n\") == \"4\"\nassert solution(\"1\\n10\\n47\\n\") == \"4\"\nassert solution(\"1\\n10\\n48\\n\") == \"4\"\nassert solution(\"1\\n10\\n49\\n\") == \"4\"\nassert solution(\"1\\n10\\n50\\n\") == \"4\"\nassert solution(\"1\\n10\\n51\\n\") == \"4\"\nassert solution(\"1\\n10\\n52\\n\") == \"4\"\nassert solution(\"1\\n10\\n53\\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\", \"The output should be 4.\"\nassert solution(\"2\\n10\\n3\\n\") == \"8\", \"The output should be 8.\"\nassert solution(\"3\\n10\\n4\\n\") == \"16\", \"The output should be 16.\"\nassert solution(\"5\\n10\\n5\\n\") == \"25\", \"The output should be 25.\"\nassert solution(\"1\\n10\\n2\\n3\\n4\\n5\\n\") == \"25\", \"The output should be 25.\"",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n'\nassert solution('1\\n10\\n1 2\\n') == '4\\n'\nassert solution('1\\n10\\n1 2 3\\n') == '4\\n'\nassert solution('1\\n10\\n1 2\\n10\\n10\\n1\\n') == '4\\n'\nassert solution('1\\n10\\n1 2 3\\n10\\n10\\n1 2\\n') == '4\\n'",
        "num_ids_2": 44,
        "num_ids_4": 103
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n', 'Incorrect output'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n2\\n3\\n4\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n2\\n5\\n6\\n\") == \"16\\n\"\nassert solution(\"1\\n10\\n10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"32\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 127
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"520\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"520\"\nprint(\"Correct\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"1200\\n700\\n200\\n400\") == \"750\"\nassert solution(\"1200\\n700\\n200\\n400\\n100\\n50\\n20\\n10\") == \"1250\"\n",
        "num_ids_2": 59,
        "num_ids_4": 107
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"\") == \"\"\nassert solution(\"A\\nB\\nC\\nD\") == \"520\"\n",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"520\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 3 4 0 1\") == \"3\"\nassert solution(\"5\\n1 2 3 4 0\") == \"0\"\nassert solution(\"5\\n1 3 4 5 2\") == \"0\"\nassert solution(\"5\\n1 4 5 2 3\") == \"0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"\") == \"0\\n\"\nassert solution(\"2\\n1\\n\") == \"0\\n\"\nassert solution(\"5\\n5\\n\") == \"0\\n\"\nassert solution(\"5\\n3\\n2\\n1\\n\") == \"4\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n1 1 2 1 3\") == \"0\"\nassert solution(\"5\\n1 1 3 1 1\") == \"1\"\nassert solution(\"5\\n2 3 4 2 2\") == \"4\"\nassert solution(\"5\\n1 1 1 1 3\") == \"0\"\n\nprint(solution(\"5\\n2 4 4 0 2\"))",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test failed for input: {}\".format(stdin)\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'5\\n2 4 4 0 2\\n') == '4\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\", \"The solution is incorrect\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4\\n', \"Test Failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"Test 1 failed\"\nassert solution(\"5 4 10\") == \"310\", \"Test 2 failed\"\nassert solution(\"20 10 15\") == \"235\", \"Test 3 failed\"\nassert solution(\"100 10 20\") == \"1000\", \"Test 4 failed\"\nassert solution(\"300 5 10\") == \"1500\", \"Test 5 failed\"",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"Your implementation is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 2 5') == '84', \"The solution is incorrect. Expected '84', but got '{}'.\".format(solution('20 2 5'))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"Test Case 1\"\nassert solution(\"5 1 4\") == \"15\", \"Test Case 2\"\nassert solution(\"10 1 3\") == \"70\", \"Test Case 3\"\nassert solution(\"50 1 9\") == \"100000\", \"Test Case 4\"\nassert solution(\"100 2 6\") == \"75\", \"Test Case 5\"\n",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('20 2 5') == '84'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nprint(\"All assertions passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 2 5') == '84'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"ABC100\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"100\\n\") == \"ABC100\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\") == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"100\") == \"ABC100\", \"Test failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"100\") == \"ABC100\"\nassert solution(stdin=\"101\") == \"ABC101\"\nassert solution(stdin=\"102\") == \"ABC102\"\nassert solution(stdin=\"103\") == \"ABC103\"\nassert solution(stdin=\"104\") == \"ABC104\"\nassert solution(stdin=\"105\") == \"ABC105\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'ABC100', 'The solution is not correct'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"1\") == \"ABC1\"\nassert solution(\"200\") == \"ABC200\"\nassert solution(\"400\") == \"ABC400\"\nassert solution(\"2500\") == \"ABC2500\"",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"ABC100\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n\") == \"ABC100\", \"Sample Output does not match the expected output.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ABC100\", \"The 100th round of ABC is ABC100.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"5\\n\"  # correct output\nprint(\"All tests passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"The output should be 5.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Enter a valid input.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5') == '5\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"5\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"5\", \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 5\\n\") == \"5\\n\"\nassert solution(stdin=\"1 5\\n\") == \"1\\n\"\nassert solution(stdin=\"12 5\\n\") == \"12\\n\"\nassert solution(stdin=\"1 10\\n\") == \"5\\n\"\nassert solution(stdin=\"1 31\\n\") == \"10\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 5) == \"5\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '-1', 'Not Possible'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"4\\n4\\n1\\n1\\n\") == \"-1\\n\"\nassert solution(\"5\\n5\\n1\\n1\\n\") == \"-1\\n\"\nassert solution(\"6\\n6\\n1\\n1\\n\") == \"-1\\n\"\nassert solution(\"7\\n7\\n1\\n1\\n\") == \"-1\\n\"\nassert solution(\"8\\n8\\n1\\n1\\n\") == \"-1\\n\"\nassert solution(\"9\\n9\\n1\\n1\\n\") == \"-1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"-1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == -1\nassert solution(input()) == 2\nassert solution(input()) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1\nassert solution() == 2\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '-1' # impossible to lighten up Button 2\nassert solution(input()) == '2' # find the minimum number of times we need to press buttons in order to lighten up Button 2",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"2\\n3\\n2\\n3\\n\") == \"-1\\n\"\nassert solution(\"2\\n3\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"2\\n3\\n2\\n3\\n\") == \"-1\\n\"\nassert solution(\"2\\n3\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"2\\n3\\n2\\n3\\n\") == \"-1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == -1\nassert solution(\"3\\n3\\n1\\n2\\n\") == 2\nassert solution(\"4\\n3\\n1\\n2\\n\") == -1\nassert solution(\"2\\n2\\n1\\n2\\n\") == 3",
        "num_ids_2": 29,
        "num_ids_4": 69
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '-1'\n\ninput_str = input()\nN = int(input_str)\na_list = list(map(int, input_str.split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"6\\n3\\n1\\n2\\n4\\n\") == \"-1\\n\"\nassert solution(\"7\\n3\\n1\\n2\\n4\\n5\\n\") == \"-1\\n\"\nassert solution(\"5\\n2\\n1\\n3\\n4\\n\") == \"-1\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 104
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"5\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\", \"The solution is not correct\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"1\\n\", \"The solution is not correct\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"2\\n\", \"The solution is not correct\"",
        "num_ids_2": 65,
        "num_ids_4": 112
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n3\\n\") == \"2\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n3\\n4\\n\") == \"2\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n3\\n4\\n5\\n\") == \"3\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"3\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 110
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"3\\n6\\n2\\n\") == \"1\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Test failed. Expected '{output_str}', got '{solution(input_str)}'.\" for input_str, output_str in zip(test_input, test_output)\n\ntest_input = [\n    \"3\",\n    \"6\",\n    \"2\",\n    \"6\"\n]\n\ntest_output = [\n    \"1\"\n]\n\nsolution(input_str)",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3), \"The test case 3 is incorrect\"\nassert solution(4), \"The test case 4 is incorrect\"\nassert solution(5), \"The test case 5 is incorrect\"\nassert solution(6), \"The test case 6 is incorrect\"\nassert solution(7), \"The test case 7 is incorrect\"\nassert solution(8), \"The test case 8 is incorrect\"\nassert solution(9), \"The test case 9 is incorrect\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n7\\n\") == \"2\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n7\\n8\\n\") == \"3\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n7\\n8\\n9\\n\") == \"4\\n\"\nassert solution(\"3\\n6\\n2\\n6\\n7\\n8\\n9\\n10\\n\") == \"5\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 110
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1\\n'\nassert solution('3 2\\n1 1 2 2 3') == '2\\n'\nassert solution('4 2\\n1 1 2 2 4') == '2\\n'\nassert solution('2 2\\n1 1 2 2 2') == '1\\n'\nassert solution('1 2\\n1 1 2 2 1') == '1\\n'\nassert solution('5 1\\n1 1 2 2 5') == '1\\n'\nassert solution('5 3\\n1 1 2 2 5') == '1\\n'",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n1 1 2 2 5\\n') == '1'\nassert solution('5 1\\n2\\n') == '1'\nassert solution('5 3\\n1 2 3\\n') == '2'\nassert solution('1 2 3 4 5\\n') == '1'\nassert solution('1 1\\n') == '0'\nassert solution('1 2\\n3\\n') == '1'\nassert solution('1 2\\n4\\n') == '2'\nassert solution('1 2\\n5\\n') == '3'\nassert solution('1 2\\n6\\n') == '3'",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 1\") == \"0\"\nassert solution(\"5 2\\n1 1 2 2 3\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 4\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1\\n'\nassert solution('3 3\\n1 2 3 4 5') == '0\\n'\nassert solution('1 2\\n3 4 5') == '1\\n'\nassert solution('1 2\\n1 2') == '1\\n'\nassert solution('5 1\\n1 1 2 2 5') == '1\\n'",
        "num_ids_2": 50,
        "num_ids_4": 90
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9\") == \"1\\n\"\nassert solution(\"4 3\\n1 2 3\") == \"1\\n\"\nassert solution(\"3 1\\n1\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\") == \"1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 97
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected: 1\\nActual: \" + solution(stdin)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"10 2\\n1 1 2 2 5\") == \"2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 1 2\n6 1 1\n''') == 'Yes'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"3\\n1 2 3\\n4 5 6\") == \"No\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n3 1 2\n6 1 1\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n5\n0 0 1 0 0\n0 1 1 0 0\n0 0 1 1 0\n0 0 1 0 1\n0 0 1 0 0\n\"\"\") == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"3\\n3 1 2\\n6 1 1\") == \"No\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n3 1 2\n6 1 1\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n4\n2 1 1 2\n2 2 1 1\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n1\n1 1\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n4\n2 1 1 2\n1 1 2 1\n\"\"\") == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    2\n    3 1 2\n    6 1 1\n    \"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    3\n    1 2\n    1 1\n    1 0\n    \"\"\") == \"No\"\n\nassert solution(\"\"\"\n    2\n    1 1\n    2 2\n    2 1\n    \"\"\") == \"Yes\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n5 3\\n\") == \"No\"\nassert solution(\"5\\n1 1\\n2 2\\n\") == \"Yes\"\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n\") == \"No\"",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2', \"The function should return 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 3\") == \"2\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\\n\"\nassert solution(\"5 8\") == \"9\\n\"\nassert solution(\"0 0\") == \"0\\n\"\nassert solution(\"5 0\") == \"5\\n\"\nassert solution(\"2 3\") == \"3\\n\"\nassert solution(\"10 20\") == \"30\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\", \"Test case 1\"\nassert solution(\"4 6\") == \"7\", \"Test case 2\"\nassert solution(\"10 5\") == \"10\", \"Test case 3\"\nassert solution(\"100 100\") == \"100\", \"Test case 4\"\nassert solution(\"100 0\") == \"100\", \"Test case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution('1 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"5 3\") == \"6\"\nassert solution(\"7 3\") == \"7\"\nassert solution(\"10 3\") == \"10\"\nassert solution(\"10 0\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"4 5\") == \"5\"\nassert solution(\"1 10\") == \"11\"\nassert solution(\"100 100\") == \"100\"\nassert solution(\"200 100\") == \"200\"\nassert solution(\"500 500\") == \"500\"",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('5 7') == '7'\nassert solution('10 15') == '15'\nassert solution('100 200') == '200'\nassert solution('1000 2000') == '2000'\n",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\", \"Your code is not correct.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nprint(\"Test Passed\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n1 2\\n\") == \"2\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nprint(\"All test cases passed\")",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\nassert solution(\"1 2\\n1 4\") == \"1\"\nassert solution(\"2 3\\n3 4\") == \"2\"\nassert solution(\"3 1\\n4 2\\n5 3\") == \"3\"\nassert solution(\"4 5\\n5 6\") == \"4\"\nassert solution(\"4 6\\n5 6\\n6 7\") == \"4\"\n\nfrom typing import List",
        "num_ids_2": 64,
        "num_ids_4": 103
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter three integers: \")) == \"7\", \"The output should be 7.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The output should be 7 but it is \" + solution(\"5 7 5\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Expected output: 7, received: \" + solution(\"5 7 5\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7\", \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\"\nassert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The given integer is different from the rest\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"110 10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"110 10\\n\"\nassert solution(input()) == \"110 10\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\\n\", \"The solution is incorrect\"\nassert solution(\"2 5 20 15 30 50\") == \"400 0\\n\", \"The solution is incorrect\"\nassert solution(\"3 7 50 150 400 1000\") == \"1150 20\\n\", \"The solution is incorrect\"\nassert solution(\"1 10 0 0 0 0\") == \"0 0\\n\", \"The solution is incorrect\"",
        "num_ids_2": 74,
        "num_ids_4": 147
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '110 10\\n', 'The output is incorrect.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"Test case 1 failed\"\n\nassert solution(\"the quick brown fox jumps over the lazy dog\") == \"the qck brwn flxmjs ovrth lazy d\", \"Test case 2 failed\"\n\nassert solution(\"hello, world!\") == \"he,ll, wrld!\", \"Test case 3 failed\"\n\nassert solution(\"1234567890\") == \"1234567890\", \"Test case 4 failed\"\n\nassert solution(\"abcde\") == \"abcde\", \"Test case 5 failed\"",
        "num_ids_2": 59,
        "num_ids_4": 118
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"Your solution is incorrect.\"\nassert solution(\"not_internationalization\") == \"not_i18n\", \"Your solution is incorrect.\"\nassert solution(\"abc\") == \"abc\", \"Your solution is incorrect.\"\nassert solution(\"123\") == \"123\", \"Your solution is incorrect.\"\nassert solution(\"\") == \"\", \"Your solution is incorrect.\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"The solution should return 'i18n'.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"The solution should return i18n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\"\nassert solution(\"ppot\\nppop\\n\") == \"YES\"\nassert solution(\"poo\\npoo\\n\") == \"NO\"\nassert solution(\"poo\\ntop\\n\") == \"NO\"\nassert solution(\"poo\\ntop\\n\") == \"YES\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\"\nassert solution(\"ped\\nbot\\n\") == \"NO\"\nassert solution(\"ped\\nbot\\n\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\", \"Test 1 failed\"\n\nassert solution(\"puzzle\") == \"NO\", \"Test 2 failed\"\n\nassert solution(\"test\") == \"NO\", \"Test 3 failed\"\n\nassert solution(\"abcdef\") == \"YES\", \"Test 4 failed\"\n\nassert solution(\"a\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"YES\", \"Test 5 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pot\") == \"YES\", \"Expected YES but got {}\".format(solution(\"pot\"))\nassert solution(\"top\") == \"YES\", \"Expected YES but got {}\".format(solution(\"top\"))\nassert solution(\"pot\") == \"NO\", \"Expected NO but got {}\".format(solution(\"pot\"))\nassert solution(\"top\") == \"NO\", \"Expected NO but got {}\".format(solution(\"top\"))",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('pot\\ntop') == 'YES\\n', 'Your code is incorrect'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aba') == 'b'\nprint('All tests passed.')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\\n4\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abbc\") == \"a\"\nassert solution(\"xyz\") == \"z\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aba') == 'b', \"Incorrect output. Expected: b, but got: {}\".format(solution('aba'))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcde') == 'ab'\nassert solution('abcdeabc') == 'ab'\nassert solution('aabbcde') == 'ba'\nassert solution('abacde') == 'ab'\nassert solution('aabbcde') == 'ba'",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\\n4\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\\n4\\n\") == \"b\\n\"\nassert solution(\"aabbc\\n3\\n\") == \"a\\n\"\nassert solution(\"abb\\n3\\n\") == \"a\\n\"\nassert solution(\"abcd\\n3\\n\") == \"a\\n\"\nassert solution(\"xyz\\n3\\n\") == \"x\\n\"\nassert solution(\"aabbccdd\\n4\\n\") == \"aa\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\\n4\") == \"b\"\n\nimport string",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"aaa\") == \"a\"\nassert solution(\"aab\") == \"b\"\nassert solution(\"abab\") == \"b\"\nassert solution(\"accb\") == \"a\"\nassert solution(\"aaab\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa\") == \"a\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abba\") == \"b\"\nassert solution(\"abcde\") == \"b\"\nassert solution(\"abcd\") == \"a\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ac\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"aa",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\\n4\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 1\") == \"0\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 2\") == \"21\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\\n\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n1 1 1\") == \"9\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter W H N: \")) == \"9\", \"Test case failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\nassert solution(\"5 4 1\\n2 3 1\\n3 4 2\\n\") == \"3\"\nassert solution(\"5 4 2\\n2 1 3\\n3 3 4\\n\") == \"9\"\nassert solution(\"5 4 1\\n2 3 2\\n3 4 3\\n\") == \"1\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\\n\"\nassert solution(\"3\\n6 5 1\\n2 10 1\") == \"12\\n11\\n0\\n\"\nassert solution(\"3\\n6 5 1\\n2 10 1\\n3 10 1\") == \"12\\n11\\n0\\n\"\nassert solution(\"3\\n6 5 1\\n3 10 1\\n2 10 1\") == \"12\\n11\\n0\\n\"\nassert solution(\"3\\n6 5 1\\n2 10 1\\n1 10 1\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 156
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('railroad.in').read()) == '12\\n11\\n0\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\"\nassert solution(\"4\\n4 1\\n1 1\\n\") == \"2\\n2\\n0\"\nassert solution(\"2\\n4 1\\n1 1\\n\") == \"4\\n3\\n0\"\nassert solution(\"3\\n3 1\\n1 1\\n\") == \"4\\n3\\n0\"\nassert solution(\"4\\n3 1\\n1 1\\n\") == \"5\\n4\\n0\"\nassert solution(\"5\\n2 1\\n1 1\\n\") == \"6\\n5\\n0\"\nassert solution(\"3\\n5 1\\n1 1\\n\") == \"10\\n8\\n0\"\nassert solution(\"3\\n5 1\\n1 1\\n\") == \"12\\n10\\n0\"\nassert solution(\"3\\n5 1\\n1 1\\n\") == \"13\\n11\\n0\"",
        "num_ids_2": 63,
        "num_ids_4": 119
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\\n\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"\nassert solution(\"1\\n10 1\") == \"0\"\nassert solution(\"3\\n1 1\\n10\") == \"0\\n10\\n1\"\nassert solution(\"5\\n5 1\") == \"0\\n0\"\nassert solution(\"2\\n3 2\") == \"0\\n1\"\nassert solution(\"3\\n4 2\\n2\") == \"0\\n2\"\nassert solution(\"2\\n5 1\\n1\") == \"0\\n1\"\nassert solution(\"4\\n6 2\\n2\") == \"0\\n2\"\nassert solution(\"3\\n5 1\\n1\") == \"0\\n1\"\nassert solution(\"4\\n7 3\\n2\") == \"0\\n3\"\nassert solution(\"5\\n8 3\\n2\") == \"0\\n3\"\nassert solution(\"6\\n9 3\\n2\") == \"0\\n3\"\nassert solution(\"7\\n10 4\\n2\") == \"0\\n4\"\nassert solution(\"8\\n11 4\\n2\") == \"0\\n4\"\nassert solution(\"9\\n12 5\\n3\") == \"0\\n5\"\nassert solution(\"10\\n13 5\\n3\") == \"0\\n5\"\nassert solution(\"11\\n14 6\\n3\") == \"0\\n6\"\nassert solution(\"12\\n15 6\\n3\") == \"0\\n6\"\n",
        "num_ids_2": 49,
        "num_ids_4": 93
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"3 3\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n.*\\n\"\nassert solution(\"4 4\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n.*\\n.*\\n.*\\n\"\nassert solution(\"5 5\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*\\n.*",
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n*.\\n.*') == '*.\\n*.\\n.*\\n.*\\n'\nassert solution('3 3\\n.*\\n.*\\n.*\\n.*\\n') == '.*\\n.*\\n.*\\n.*\\n'\nassert solution('5 5\\n*.\\n.*\\n.*\\n.*\\n') == '*.\\n*.\\n*.\\n*.\\n'\nassert solution('10 10\\n.*\\n.*\\n.*\\n.*\\n') == '.*\\n.*\\n.*\\n.*\\n'\nassert solution('1 1\\n.*\\n.*\\n.*\\n.*\\n') == '.*\\n.*\\n.*\\n.*\\n'",
        "num_ids_2": 65,
        "num_ids_4": 140
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".\\n*.\\n*.\\n*.\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n*.\\n.*\\n') == '*.\\n*.\\n.*\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*****\\n*****\\n*****\\n*****\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".\\n.*\\n*.\\n\"\nassert solution(\"1 1\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"\nassert solution(\"2 3\\n*.\\n.*\\n\") == \".\\n.*\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \".\\n.*\\n*.\\n\"\nassert solution(\"1 1\\n*.\\n.*\\n\") == \".*\\n.*\\n.*\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 112
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n*.\\n.*\\n') == '*******\\n*******\\n*******\\n*******\\n'\nassert solution('2 2\\n*.\\n.*\\n\\n') == '*******\\n*******\\n*******\\n*******\\n'\nassert solution('2 2\\n*.\\n.*\\n\\n\\n') == '*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\n*******\\",
        "num_ids_2": 64,
        "num_ids_4": 1027
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\", \"Test 1: Empty input\"\nassert solution(\"1 1\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\", \"Test 2: Test Case 1\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\", \"Test 3: Test Case 2\"\nassert solution(\"3 3\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\", \"Test 4: Test Case 3\"\nassert solution(\"4 4\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\", \"Test 5: Test Case 4\"",
        "num_ids_2": 52,
        "num_ids_4": 128
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\", \"The output is not YES\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 6 1 4 5\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6 1 4 5\") == \"YES\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"4\\n3\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"3\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"1\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\"",
        "num_ids_2": 195,
        "num_ids_4": 375
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n3\\n4\\n1\\n2\\n\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n3\\n4\\n1\\n2\", \"Test case 1 failed\"\nassert solution(stdin) == \"3\\n4\\n1\\n2\", \"Test case 2 failed\"\nassert solution(stdin) == \"2\\n1\\n2\", \"Test case 3 failed\"\nassert solution(stdin) == \"3\\n1\\n2\", \"Test case 4 failed\"\nassert solution(stdin) == \"4\\n2\\n1\", \"Test case 5 failed\"",
        "num_ids_2": 55,
        "num_ids_4": 101
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 201,
        "num_ids_4": 390
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 5, [1, 2, 3, 4, 5], 8, [6, 6, 6, 6, 6, 6, 8, 8], 8, [1, 2, 2, 1, 2, 1, 1, 2], 3, [1, 3, 3], 6, [1, 1, 3, 4, 2, 2]) == 2\nassert solution(5, 5, [1, 2, 3, 4, 5], 8, [6, 6, 6, 6, 6, 6, 8, 8], 8, [1, 2, 2, 1, 2, 1, 1, 2], 3, [1, 3, 3], 6, [1, 1, 3, 4, 2, 2]) == 3\nassert solution(5, 5, [1, 2, 3, 4, 5], 8, [6, 6, 6, 6, 6, 6, 8, 8], 8, [1, 2, 2, 1, 2, 1, 1, 2], 3, [1, 3, 3], 6, [1, 1, 3, 4, 2, 2]) == 4\nassert solution(5, 5, [1, 2, 3, 4, 5], 8, [6, 6, 6, 6, 6, 6, 8, 8], 8, [1, 2, 2, 1, 2, 1, 1, 2], 3, [1, 3, 3], 6, [1, 1, 3, 4, 2, 2]) == 1\nassert solution(5, 5, [1, 2, 3, 4, 5], 8, [6, 6, 6, 6, 6, 6, 8, 8], 8, [1, 2, 2, 1, 2, 1, 1, 2], 3, [1, 3, 3], 6, [1, 1, 3, 4, 2, 2]) == 2",
        "num_ids_2": 228,
        "num_ids_4": 456
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\n\nfor i in range(1, 6):\n    assert solution(f\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 {i*i} {i*i}\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == f\"{i}\\n{i}\\n{i}\\n1\\n2\"\n    assert solution(f\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 {i*i} {i*i}\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == f\"{i}\\n{i}\\n{i}\\n1\\n2\"\n\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 204,
        "num_ids_4": 408
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2\\n3\\n4\\n1\\n2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3\\n1\\n5\\n77\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5\\n22 5\\n987 13\\n7 3\\n') == '3\\n1\\n5\\n77'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\", \"Expected output '3' but got: \" + solution(input())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3\\n1\\n5\\n77\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n1\\n5\\n77\", \"Test Case 1 failed\"\n\nassert solution(input()) == \"1\\n\", \"Test Case 2 failed\"\n\nassert solution(input()) == \"5\\n77\", \"Test Case 3 failed\"\n\nassert solution(input()) == \"77\", \"Test Case 4 failed\"\n\nassert solution(input()) == \"3\\n1\\n5\\n77\", \"Test Case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 85
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Test case {i + 1} failed. Expected: {expected}, got: {solution(input)}\"\nfor i, (n, x) in enumerate(stdin.split()):\n    print(solution(f\"{n} {x}\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"3\\n1\\n5\\n77\"\nassert solution(3) == \"1\\n5\\n77\"\nassert solution(2) == \"5\\n77\"\nassert solution(1) == \"77\"",
        "num_ids_2": 37,
        "num_ids_4": 62
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4, 7, 3, 1, 5, 22, 987, 13) == \"3\\n1\\n5\\n77\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 118,
        "num_ids_4": 236
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0', 'Test case 1'\nassert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0', 'Test case 2'\nassert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0', 'Test case 3'\nassert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0', 'Test case 4'\nassert solution('abca') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0', 'Test case 5'",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"10 1 2 3 5 10 5 9 4 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 0 0 0 0 0 0\"\n\nfor t in range(int(input())):\n    n, m = map(int, input().split())\n    s = input()\n    p = list(map(int, input().split()))\n    wrong_tries = []\n\n    for i in range(n):\n        count = 0\n        while p[i] > 0:\n            if s[i] == 'a':\n                count += 1\n            p[i] -= 1\n\n    for i in range(m):\n        wrong_tries.append(s[i])\n\n    print(\" \".join(map(str, wrong_tries)))",
        "num_ids_2": 122,
        "num_ids_4": 206
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n4 2\\nabca\\n1 3\\n10 5\\ncdeforces\\n2 8 3 2 9\\n26 10\\nwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 195,
        "num_ids_4": 195
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"42\"\nassert solution(\"abca\") == \"26\"\nassert solution(\"abca\") == \"26\"\nassert solution(\"abca
        "num_ids_2": 24,
        "num_ids_4": 1027
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '120'\nassert solution() == '1",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3, 4) == \"0\"\nassert solution(10, 20, 30) == \"36\"\nassert solution(5, 5, 5) == \"0\"\nassert solution(2, 4, 3) == \"0\"\nassert solution(1, 1000000000, 1000000000) == \"0\"\nassert solution(1, 1000000000, 999999999) == \"0\"\nassert solution(3, 2, 5) == \"4\"\nassert solution(3, 2, 6) == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} failed.\\nOutput: {output}\\nExpected output: {output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Answer: The minimum total pairwise distance they can reach after one minute is 0.\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\"\n",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test failed. Expected output: {}\\nGot: {}\".format(expected_output, solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\nassert solution(\"10\\n15 20 30\\n10 25 35\\n15 30 40\\n5 10 5\\n20 25 20\\n\") == \"36\"\nassert solution(\"10\\n15 20 30\\n10 25 35\\n15 30 40\\n5 10 5\\n20 25 20\\n3 4 6\") == \"2\"\nassert solution(\"8\\n2 1 3\\n5 3 10\\n7 6 15\\n1 9 20\\n4 8 10\\n\") == \"2\"\nassert solution(\"3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n\") == \"12\"\nassert solution(\"3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n2 1 3\\n\") == \"0\"\n\nfor _ in range(q):\n    a, b, c = map(int, input().split())\n    print(solution(str(a) + \" \" + str(b) + \" \" + str(c)))",
        "num_ids_2": 206,
        "num_ids_4": 323
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\"",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([4, 11, 14, 16, 12]) == \"YES\\nYES\"\nassert solution([1, 8, 4, 1, 1, 1, 1]) == \"YES\\nNO\"\nassert solution([1, 2, 5, 6, 12, 13, 6, 1, 6, 3, 10, 5, 8, 6, 1, 12, 3, 10, 5, 8]) == \"YES\\nYES\"",
        "num_ids_2": 60,
        "num_ids_4": 135
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"NO\"\nassert solution(\"11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"NO\"",
        "num_ids_2": 194,
        "num_ids_4": 388
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8') == 'YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO'",
        "num_ids_2": 242,
        "num_ids_4": 242
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'YES', \"Solution should return YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\", \"No solution found\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'\nassert solution('10 10 10\\n5 1 5\\n10 2 10\\n10 3 10\\n10 4 10\\n5 5 10\\n5 10 10\\n10 10 10\\n5 5 10\\n10 10 10\\n') == '2500'",
        "num_ids_2": 134,
        "num_ids_4": 235
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"22\\n\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\\n\"",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n') == '13'",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"22\", \"Expected output: 22, got: {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"\n",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"Solution not provided.\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\n\nassert solution(\"\"\"5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"22\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\\n\") == \"13\"",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, got: {solution(stdin)}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'''\n7\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Wrong output for {stdin}\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nfor case in test_cases:\n    n = int(case.pop())\n    m = solution(case)\n    assert m == case[0]\n    assert m % n == 0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n1\n3\n9\n13\n27\n6561\n19683\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"6\") == \"3\\n\"\nassert solution(\"13\") == \"3\\n\"\nassert solution(\"14\") == \"7\\n\"\nassert solution(\"3620\") == \"30\\n\"\nassert solution(\"10000\") == \"10000\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1\\n'\nassert solution(2) == '2\\n'\nassert solution(6) == '3\\n'\nassert solution(13) == '9\\n'\nassert solution(14) == '13\\n'\nassert solution(3620) == '19\\n'\nassert solution(10000) == '27\\n'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"1 1 1 1 1\"\nassert solution(1) == \"3\"\nassert solution(2) == \"1 3 3\"\nassert solution(3) == \"2 3 3\"\nassert solution(4) == \"1\"\nassert solution(5) == \"3 3 3 3 3\"\nassert solution(6) == \"1 3 3 5 2\"\nassert solution(7) == \"3 3 3 2 3 3 1\"\nassert solution(8) == \"1 3 3 2 3 3 3 3\"\nassert solution(9) == \"3 3 3 2 3 3 2 2\"\nassert solution(10) == \"1 3 3 2 3 3 3 3 1\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 3 2 2 1 3\"\nassert solution() == \"1 1 1 1 1\"\nassert solution() == \"2 2 2 2 2 2\"\nassert solution() == \"3 3 3 3 2 3\"\nassert solution() == \"1 1 1 1 1 1\"\nassert solution() == \"2 2 2 2 2 2\"\nassert solution() == \"3 3 3 3 2 3\"\nassert solution() == \"1 1 1 1 1 1\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(input())) == \"1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"1 1 1 1 1\n3 3 3\n2 3 3 2 1 3\n1\n2 2 2 2\n4 4 4 1 4\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\nprint(\"All test cases passed\")",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n2 6\") == \"8\\n-1 2 6 4 0 3 \"\nassert solution(\"3 5\\n0 3 1\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"8\\n-1 2 6 4 0 3\"\nassert solution(solution) == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 6\\n1 5') == '8\\n-1 2 6 4 0 3'\nassert solution('3 5\\n0 3 1') == '7\\n5 -2 4 -1 2'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3\\n'\nassert solution('3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"8\\n-1 2 6 4 0 3\"\nassert solution() == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2 6\\n1 5\\n') == '8\\n-1 2 6 4 0 3\\n'\nassert solution(stdin='3 5\\n0 3 1\\n') == '7\\n5 -2 4 -1 2\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 6\\n1 5\") == \"8\\n-1 2 6 4 0 3\"\nassert solution(\"3 5\\n0 3 1\") == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'\n\nfrom collections import defaultdict",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"1\\n1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"YES\\nRRRRRRRRRR\\nYES\\nRRRRRRRRRR\\nYES\\nRRRRRRRRRR\"\nassert solution(\"2\\n2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"YES\\nUUUUUUUUUU\\nYES\\nUUUUUUUUUU\\nYES\\nUUUUUUUUUU\"",
        "num_ids_2": 166,
        "num_ids_4": 248
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\\n\\n\\n\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'output', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1') == 8\nassert solution('1 1') == 0\nassert solution('500 4') == 500\nassert solution('217871987498122 10') == 2128012501878\nassert solution('100000000000000001 1') == 899999999999999999",
        "num_ids_2": 22,
        "num_ids_4": 75
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"0\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"0\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"0\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"0\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt')) == '2\\n0\\n2\\n4\\n1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n0\\n2\\n4\\n1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n0\\n2\\n4\\n1\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed\"\nassert solution(input()) == \"0\", \"Test case 2 failed\"\nassert solution(input()) == \"2\", \"Test case 3 failed\"\nassert solution(input()) == \"4\", \"Test case 4 failed\"\nassert solution(input()) == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"4\"\nassert solution(open(\"input5.txt\", \"r\").read()) == \"1\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n0\\n2\\n4\\n1\", \"The solution is incorrect\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n0\\n2\\n4\\n1\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n0\\n2\\n4\\n1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\\nabcd\\nbaabab\"\nassert solution(\"2\\n3 4\\n5 6\\n\") == \"abcaba\\nabcabb\\nababab\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution should return {expected_output}, but returned {solution(input())}.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"cbcacab\"\nassert solution(4) == \"abcd\"\nassert solution(6) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"cbcacab\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcab\") == \"cba\"\nassert solution(\"cba\") == \"cba\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcd\") == \"abda\"\nassert solution(\"ac\") == \"ab\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed with output: {solution(stdin)}, expected {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 7, 4, 6, 2) == \"cbcacab\"\nassert solution(3, 7, 4, 6, 1) == \"abcd\"\nassert solution(3, 7, 4, 6, 0) == \"baabab\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"cbcacab\"\nassert solution(4) == \"abcd\"\nassert solution(6) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == [\"cbcacab\", \"abcd\", \"baabab\"]\n\nfrom collections import defaultdict",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == 'cbcacab'\nassert solution('4') == 'abcd'\nassert solution('6') == 'baabab'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\\n\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\n",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\\n\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\nassert solution(\"7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\\n\") == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"",
        "num_ids_2": 376,
        "num_ids_4": 376
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"\n\ninput_data = [\n    [\"11\", \"3 1 4 1 5 9 2 6 5 3 5\", \"1\"],\n    [\"1\", \"1000\", \"3\", \"1 1 1\"],\n    [\"2\", \"2 1\", \"6\", \"1 1 1 1 1 1\"],\n    [\"7\", \"1 1 1 1 1 1 1\"],\n]\n\noutput = [\n    \"6 23 21\",\n    \"1 1000 0\",\n    \"2 1 2\",\n    \"6 45 46\",\n    \"2 2 1\",\n    \"3 4 2\",\n    \"4 4 3\",\n]\n\nfor i, data in enumerate(input_data):\n    print(f\"Case {i + 1}: {output[i]}\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1 1 1 1\\n7\\n1 1 1 1 1 1 1\\n') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'",
        "num_ids_2": 188,
        "num_ids_4": 188
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\", \"Incorrect output.\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output\\n6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '6 23 21'\nassert solution() == '1 1000 0'\nassert solution() == '2 1 2'\nassert solution() == '6 45 46'\nassert solution() == '2 2 1'\nassert solution() == '3 4 2'\nassert solution() == '4 4 3'",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6\\n27\\n39\\n11\\n17'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 143,
        "num_ids_4": 143
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\\n\", \"Test case 1\"\n\nassert solution(input()) == \"6\\n27\\n39\\n11\\n17\\n\", \"Test case 2\"\n\nassert solution(input()) == \"17\\n27\\n39\\n11\\n\", \"Test case 3\"\n\nassert solution(input()) == \"17\\n27\\n39\\n11\\n\", \"Test case 4\"\n\nassert solution(input()) == \"27\\n39\\n11\\n17\\n\", \"Test case 5\"",
        "num_ids_2": 68,
        "num_ids_4": 130
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6\\n27\\n39\\n11\\n17\\n'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5, 2, 1, 1, 2, 3, 4, 5, 5, 5, 1, 2, 5, 4, 3, 5, 3, 1, 2, 3, 4, 5, 10, 9, 10, 10, 9, 4, 0, 2, 2, 4, 3, 2, 4, 2, 3, 4, 4, 5, 4, 5, 4, 5, 1, 2, 2, 1, 4, 4, 5, 4]) == '6\\n27\\n39\\n11\\n17'\n",
        "num_ids_2": 182,
        "num_ids_4": 182
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '6\\n27\\n39\\n11\\n17\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45\\n'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17\\n'",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\\n\", \"Test 1\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\\n\", \"Test 2\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0 7 13 18 24 35 36 37 40 45 \\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5') == '0 7 13 18 24 35 36 37 40 45\\n'\n\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3') == '0 2 4 7 8 11 13 14 16 17\\n'",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['0', '7', '13', '18', '24', '35', '36', '37', '40', '45']",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\"",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\n\"\nassert solution(\"5 10\") == \"abba\\n\"\nassert solution(\"3 1\\n3 2\\n20 100\") == \"abba\\n\"\nassert solution(\"5 100\") == \"\"\nassert solution(\"5 1000\") == \"\"",
        "num_ids_2": 65,
        "num_ids_4": 105
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"aaabb\"\nassert solution(input()) == \"aabab\"\nassert solution(input()) == \"baaba\"\nassert solution(input()) == \"bbaaa\"\nassert solution(input()) == \"abb\"\nassert solution(input()) == \"bab\"\nassert solution(input()) == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"aaabb\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\n\"\nassert solution(\"1 1\\n1 2\\n1 5\\n1 10\") == \"aaaaabaaaaabaaaaaaaa\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"aaabb\"\nassert solution() == \"aabab\"\nassert solution() == \"baaba\"\nassert solution() == \"bbaaa\"\nassert solution() == \"abb\"\nassert solution() == \"bab\"\nassert solution() == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\n\"\nassert solution(\"1\\n3 1\\n3 2\\n20 100\") == \"aaabb\\n\"\nassert solution(\"1\\n1 1\\n2 1\\n3 1\\n4 1\\n10 1\\n10 2\\n10 3\\n20 1\\n20 2\\n20 3\\n20 4\\n20 5\\n20 6\\n20 7\\n20 8\\n20 9\\n20 10\\n20 11\\n20 12\\n20 13\\n20 14\\n20 15\\n20 16\\n20 17\\n20 18\\n20 19\\n20 20\\n20 21\\n20 22\\n20 23\\n20 24\\n20 25\\n20 26\\n20 27\\n20 28\\n20 29\\n20 30\\n20 31\\n20 32\\n20 33\\n20 34\\n20 35\\n20 36\\n20 37\\n20 38\\n20 39\\n20 40\\n20 41\\n20 42\\n20 43\\n20 44\\n20 45\\n20 46\\n20 47\\n20 48\\n20 49\\n20 50\\n20 51\\n20 52\\n20 53\\n20 54\\n20 55\\n20 56\\n20 57\\n20 58\\n20 59\\n20 60\\n20 61\\n20 62\\n20 63\\n20 64\\n20 65\\n20 66\\n20 67\\n20 68\\n20 69\\n20 70\\n20 71\\n20 72\\n20 73\\n20 74\\n20 75\\n20 76\\n20 77\\n20 78\\n20 79\\n20 80\\n20 81\\n20 82\\n20 83\\n20 84\\n20 85\\n20 86\\n20 87\\n20 88\\n20 89\\n20 90\\n20 91\\n20 92\\n20 93\\n20 94\\n20 95\\n20 96\\n20 97\\n20 98\\n20 99\\n20 100\\n\" == \"aaabb\\n\"\nassert solution(\"1\\n1 1\\n2 1\\n3 1\\n4 1\\n10 1\\n10 2\\n10 3\\n20 1\\n20 2\\n20 3\\n20 4\\n20 5\\n20 6\\n20 7\\n20 8\\n20 9\\n20 10\\n20 11\\n20 12\\n20 13\\n20 14\\n20 15\\n20 16\\n20 17\\n20 18\\n20 19\\n20 20\\n20 21\\n20 22\\n20 23\\n20",
        "num_ids_2": 83,
        "num_ids_4": 1027
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"aaabb\"\nassert solution(input()) == \"aabab\"\nassert solution(input()) == \"baaba\"\nassert solution(input()) == \"bbaaa\"\nassert solution(input()) == \"abb\"\nassert solution(input()) == \"bab\"\nassert solution(input()) == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\\n\") == \"aaabb\\naabab\\nbaaab\\nbaaba\\nbbaaa\\nabb\\nbab\\naaaaabaaaaabaaaaaaaa\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == \"aaabb\"\nassert solution(5, 2) == \"aabab\"\nassert solution(5, 8) == \"abaaa\"\nassert solution(5, 10) == \"baaa\"\nassert solution(3, 1) == \"aaabb\"\nassert solution(3, 2) == \"ababb\"\nassert solution(20, 100) == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == 'aaabb\\n'\nassert solution(5, 1) == 'aaabb\\n'\nassert solution(5, 2) == 'aabab\\n'\nassert solution(5, 8) == 'ababba\\n'\nassert solution(5, 10) == 'aaabab\\n'\nassert solution(3, 1) == 'aab\\n'\nassert solution(3, 2) == 'aaba\\n'\nassert solution(20, 100) == 'aaaaabaaaaabaaaaaaaa\\n'",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"\n6\n1\n5\n10\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\\n\"",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000000000\") == \"1\"\nassert solution(\"1000000000\") == \"5\"\nassert solution(\"1000000000\") == \"10\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3') == '6\\n1\\n5\\n10\\n'\nassert solution(r'3\\n1 3\\n2 5\\n3 7') == '1\\n'\nassert solution(r'2\\n1 1\\n') == '1\\n'\nassert solution(r'1\\n5') == '0\\n'",
        "num_ids_2": 218,
        "num_ids_4": 256
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i+1} failed. Output: {solution(input_str)}, Expected: {expected_output}\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '6\\n1\\n5\\n10'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_result, f\"The function should return {expected_result}, but it returns {solution}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6\\n1\\n5\\n10'\n\nassert solution('''\n1\n''') == '1\\n'\n\nassert solution('''\n2\n''') == '1\\n'\n\nassert solution('''\n3\n''') == '1\\n'\n\nassert solution('''\n4\n''') == '1\\n'\n\nassert solution('''\n5\n''') == '1\\n'\n\nassert solution('''\n6\n''') == '1\\n'\n\nassert solution('''\n7\n''') == '1\\n'\n\nassert solution('''\n8\n''') == '1\\n'\n\nassert solution('''\n9\n''') == '1\\n'\n\nassert solution('''\n10\n''') == '1\\n'\n\nassert solution('''\n11\n''') == '1\\n'\n\nassert solution('''\n12\n''') == '1\\n'\n\nassert solution('''\n13\n''') == '1\\n'\n\nassert solution('''\n14\n''') == '1\\n'\n\nassert solution('''\n15\n''') == '1\\n'\n\nassert solution('''\n16\n''') == '1\\n'\n\nassert solution('''\n17\n''') == '1\\n'\n\nassert solution('''\n18\n''') == '1\\n'\n\nassert solution('''\n19\n''') == '1\\n'\n\nassert solution('''\n20\n''') == '1\\n'\n\nassert solution('''\n21\n''') == '1\\n'\n\nassert solution('''\n22\n''') == '1\\n'\n\nassert solution('''\n23\n''') == '1\\n'\n\nassert solution('''\n24\n''') == '1\\n'\n\nassert solution('''\n25\n''') == '1\\n'\n\nassert solution('''\n26\n''') == '1\\n'\n\nassert solution('''\n27\n''') == '1\\n'\n\nassert solution('''\n28\n''') == '1\\n'\n\nassert solution('''\n29\n''') == '1\\n'\n\nassert solution('''\n30\n''') == '1\\n'\n\nassert solution('''\n31\n''') == '1\\n'\n\nassert solution('''\n32\n''') == '1\\n'\n\nassert solution('''\n33\n''') == '1\\n'\n\nassert solution('''\n34\n''') == '1\\n'\n\nassert solution('''\n35\n''') == '1\\n'\n\nassert solution('''\n36\n''') == '1\\n'\n\nassert solution('''\n37\n''') == '1\\n'\n\nassert solution('''\n38\n''') == '1\\n'\n\nassert solution('''\n39\n''') == '1\\n'\n\nassert solution('''\n40\n''') == '1\\n'\n\nassert solution('''\n41\n''') == '1\\n'\n\nassert solution('''\n42\n''') == '1\\n'\n\nassert solution('''\n43\n''') == '1\\n'\n\nassert solution('''\n44\n''') == '1\\n'\n\nassert solution('''\n45\n''') == '1\\n'\n\nassert solution('''\n46\n''') == '1\\n'\n\nassert solution('''\n47\n''') == '1\\n'\n\nassert solution('''\n48\n''') == '1\\n'\n\nassert solution('''\n49\n''') == '1\\n'\n\nassert solution('''\n50\n''') == '1\\n'\n\nassert solution('''\n51\n''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n\nassert solution(\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(\"\"\"\n5 2\n0\n1\n2\n3\n4\n5\n\"\"\") == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(\"\"\"\n6 4\n0\n1\n2\n3\n4\n5\n6\n\"\"\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '3'\nassert solution() == '3'\nassert solution() == '4'\nassert solution() == '4'\nassert solution() == '7'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'\\n'.join(map(str, [7, 3, 0, 1, 2, 2, 0, 0, 10])) == b'1\\n2\\n3\\n3\\n4\\n4\\n7\\n')\nassert solution(b'\\n'.join(map(str, [4, 3, 1, 2, 1, 2])) == b'0\\n0\\n0\\n0\\n')\nassert solution(b'\\n'.join(map(str, [0, 1, 2, 2, 0, 0, 10])) == b'0\\n0\\n0\\n0\\n')\nassert solution(b'\\n'.join(map(str, [0, 1, 2, 2, 0, 0, 10, 0])) == b'0\\n0\\n0\\n0\\n')",
        "num_ids_2": 115,
        "num_ids_4": 222
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('3 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('5 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\n",
        "num_ids_2": 93,
        "num_ids_4": 167
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Expected output:\\n{}\\nGot output:\\n{}\".format(output(), solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n",
        "num_ids_2": 93,
        "num_ids_4": 169
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n0\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n0\\n0\\n0\\n1\") == \"0\\n0\\n0\\n0\\n\"\n",
        "num_ids_2": 89,
        "num_ids_4": 175
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n\nassert solution(\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"0\\n0\\n0\\n0\\n\"\n\nassert solution(\"\"\"\n5 4\n0\n1\n2\n1\n2\n\"\"\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"10 0\\n0\\n1\\n2\\n3\\n4\\n5\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 135
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([7, 3, 0, 1, 2, 2, 0, 0, 10]) == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution([4, 3, 1, 2, 1, 2]) == \"0\\n0\\n0\\n0\\n\"\nassert solution([0]) == \"0\\n\"\nassert solution([2]) == \"3\\n\"\nassert solution([0, 1, 2, 2, 0, 0, 10]) == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 115
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    5\n    2 1 49\n    5 20 50\n    6 20 50\n    5 3 8\n    9 13 22\n    '''\n) == '''\n1 49 \n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\n'''\n\nfor case in range(int(input())):\n    n, x, y = map(int, input().split())\n    a = [x, y] + list(map(int, input().split()))\n    a.sort()\n    a = [a[i] for i in range(n - 1)]\n    min_max = min(a[1:], a[2:])\n    print(f'{n} {min_max}')",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Testcase failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"1\\n2\\n\"\nassert solution(3) == \"1\\n2\\n3\\n\"\nassert solution(4) == \"1\\n2\\n3\\n4\\n\"\nassert solution(5) == \"1\\n2\\n3\\n4\\n5\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 66
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\\n1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output\\n1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"No solution found.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\", \"Expected output 1 2 3, got {}\".format(solution(\"3 3 1 2\"))",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n\") == \"1 2 3\", \"Your code is not correct.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3\"\nassert solution(\"4 3 2 1\") == \"1 2 3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nprint('All tests passed')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3' # Correct Output",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"5 5 5 5 5\") == \"5 5 5 5 5\"\nassert solution(\"1 2 3\") == \"1 2 3\"",
        "num_ids_2": 46,
        "num_ids_4": 64
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"3\\n2 3 3\\n4\\n5 5 5\\n2\\n1 1 1\") == \"NO\"\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nprint(\"YES\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'YES'\nassert solution('5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'NO'\nassert solution('1\\n1 1 1 1\\n1\\n1 1 1 1') == 'YES'\nassert solution('2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1') == 'NO'",
        "num_ids_2": 125,
        "num_ids_4": 217
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\nassert solution(\"5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\\nNO\\nYES\\nNO\\nNO\"",
        "num_ids_2": 149,
        "num_ids_4": 149
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"NO\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() # test cases are defined as input() and output() functions",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"1\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"1\\n2\\n13\\n\") == \"-1\"\nassert solution(\"1\\n1\\n13\\n\") == \"-1\"\nassert solution(\"1\\n13\\n\") == \"-1\"\nassert solution(\"1\\n1\\n13\\n\") == \"-1\"",
        "num_ids_2": 101,
        "num_ids_4": 139
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n') == '9 6 10 8 4 7 3 1 5 2 '\nassert solution('2\\n4\\n6\\n8\\n10\\n12\\n') == '-1'\nassert solution('2\\n4\\n6\\n8\\n10\\n12\\n\\n3\\n1\\n4\\n2\\n5\\n3\\n6\\n2\\n4\\n1\\n5\\n3\\n6\\n2\\n4\\n7\\n13\\n9\\n7\\n11\\n8\\n4\\n1\\n3\\n5\\n2\\n6\\n10\\n12\\n') == '3 1 4 2 5 3 6 2 4 1 5 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2 6 10 12'\nprint(solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n'))  # Output: '9 6 10 8 4 7 3 1 5 2 '\nprint(solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n'))  # Output: '9 6 10 8 4 7 3 1 5 2 '\nprint(solution('2\\n4\\n6\\n8\\n10\\n12\\n'))  # Output: '-1'\nprint(solution('2\\n4\\n6\\n8\\n10\\n12\\n\\n3\\n1\\n4\\n2\\n5\\n3\\n6\\n2\\n4\\n1\\n5\\n3\\n6\\n2\\n4\\n7\\n13\\n9\\n7\\n11\\n8\\n4\\n1\\n3\\n5\\n2\\n6\\n10\\n12\\n'))  # Output: '3 1 4 2 5 3 6 2 4 1 5 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 128,
        "num_ids_4": 339
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12\"\nassert solution(\"1\\n5\\n4\\n8\\n\") == \"1 2 3 4 5 \\n-1\"\nassert solution(\"1\\n2\\n1\\n4\\n\") == \"1 4 2 \\n-1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n-1\" == \"-1\"\n",
        "num_ids_2": 156,
        "num_ids_4": 588
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9 6 10 8 4 7 3 1 5 2\\n-1\\n3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"3 1 4 2\\n5 3 6 2 4 1\\n5 1 3 6 2 4 7\\n13 9 7 11 8 4 1 3 5 2 6 10 12\"",
        "num_ids_2": 111,
        "num_ids_4": 186
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"-1\\n6 10 1 2 5 3\\n-1\\n1 4 5 3 6 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\n6\\n10\\n8\\n12\\n7\\n10\\n9\\n11\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"12\\n13\\n1\\n3\\n5\\n12\\n4\\n1\\n5\\n12\\n2\\n7\\n11\\n3\\n8\\n10\\n4\\n10\\n13\\n4\\n5\\n9\\",
        "num_ids_2": 280,
        "num_ids_4": 548
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n6\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"2\\n4\\n6\\n8\\n10\\n12\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"3\\n7\\n11\\n15\\n19\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"4\\n10\\n14\\n18\\n22\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"5\\n12\\n16\\n20\\n24\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"6\\n13\\n17\\n23\\n27\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"7\\n19\\n23\\n27\\n31\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"8\\n22\\n26\\n30\\n34\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"9\\n24\\n28\\n32\\n36\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"10\\n27\\n31\\n35\\n39\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"11\\n30\\n34\\n38\\n42\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"12\\n31\\n35\\n39\\n43\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"13\\n33\\n37\\n41\\n45\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"14\\n34\\n38\\n42\\n46\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"15\\n35\\n39\\n43\\n47\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"16\\n36\\n40\\n44\\n48\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"17\\n37\\n41\\n45\\n49\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"18\\n38\\n42\\n46\\n50\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"19\\n39\\n43\\n47\\n51\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"20\\n40\\n44\\n48\\n52\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"21\\n41\\n45\\n49\\n53\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"22\\n42\\n46\\n50\\n54\\n\")",
        "num_ids_2": 98,
        "num_ids_4": 191
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '''9 6 10 8 4 7 3 1 5 2\n-1\n3 1 4 2\n5 3 6 2 4 1\n5 1 3 6 2 4 7\n13 9 7 11 8 4 1 3 5 2 6 10 12\n'''\nprint(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n10\\n2\\n4\\n6\\n7\\n13\\n') == '9 6 10 8 4 7 3 1 5 2 \\n-1\\n3 1 4 2 \\n5 3 6 2 4 1 \\n5 1 3 6 2 4 7 \\n13 9 7 11 8 4 1 3 5 2 6 10 12'",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '9 6 10 8 4 7 3 1 5 2'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output\nfor test_case in range(int(stdin)):\n    n = int(stdin.readline().strip())\n    solution(stdin)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\nprint(solution(input()))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"1\\n1000\\n0\\n1000\\n1000\\n1000\\n1000\") == \"0\"\nassert solution(\"3\\n1 2 3\\n2\") == \"-1\"\nassert solution(\"3\\n1 2 3\\n4\") == \"0\"\n",
        "num_ids_2": 107,
        "num_ids_4": 147
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Solution is incorrect, expected {output_str}, got {solution(input_str)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 128,
        "num_ids_4": 256
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2, \"The solution is incorrect\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"-1\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"0\"",
        "num_ids_2": 134,
        "num_ids_4": 248
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2', \"The minimum number of moves to make the given array a[0...n-1] good is 2.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"The solution should return 2, but instead it returned {}\".format(solution())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Invalid solution\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2 \\n\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1 \\n\"\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''2 2 2 2 2 1 1 0 2'''\nprint(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([9, '0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n'].splitlines()) == [2, 2, 2, 2, 2, 1, 1, 0, 2]\n\nassert solution([4, '0 0 1 0\\n1 2\\n1 3\\n1 4\\n'].splitlines()) == [0, -1, 1, -1]",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2 2 2 2 2 1 1 0 2 \\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == [\"2 2 2 2 2 1 1 0 2 \", \"0 -1 1 -1 \"]\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Output mismatch: {output()}, expected {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [2, 2, 2, 2, 2, 1, 1, 0, 2]",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n2 2 2 2 2 1 1 0 2\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The function should return {output}, but it returned {solution(input())} instead.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Output doesn't match. \\nInput: {input()} \\nExpected Output: {expected_output} \\nSolution: {solution(input())}\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0, \"Test case 1 failed\"\nassert solution(4) == 1, \"Test case 2 failed\"\nassert solution(5) == 1, \"Test case 3 failed\"\nassert solution(6) == 2, \"Test case 4 failed\"\nassert solution(7) == 2, \"Test case 5 failed\"\nassert solution(8) == 2, \"Test case 6 failed\"\nassert solution(9) == 3, \"Test case 7 failed\"\nassert solution(10) == 3, \"Test case 8 failed\"\nassert solution(11) == 3, \"Test case 9 failed\"\nassert solution(12) == 3, \"Test case 10 failed\"\nassert solution(13) == 3, \"Test case 11 failed\"\nassert solution(14) == 4, \"Test case 12 failed\"\nassert solution(15) == 4, \"Test case 13 failed\"\nassert solution(16) == 4, \"Test case 14 failed\"\nassert solution(17) == 4, \"Test case 15 failed\"\nassert solution(18) == 5, \"Test case 16 failed\"\nassert solution(19) == 5, \"Test case 17 failed\"\nassert solution(20) == 5, \"Test case 18 failed\"\nassert solution(21) == 5, \"Test case 19 failed\"\nassert solution(22) == 5, \"Test case 20 failed\"\nassert solution(23) == 6, \"Test case 21 failed\"\nassert solution(24) == 6, \"Test case 22 failed\"\nassert solution(25) == 6, \"Test case 23 failed\"\nassert solution(26) == 6, \"Test case 24 failed\"\nassert solution(27) == 6, \"Test case 25 failed\"\nassert solution(28) == 6, \"Test case 26 failed\"\nassert solution(29) == 7, \"Test case 27 failed\"\nassert solution(30) == 7, \"Test case 28 failed\"\nassert solution(31) == 7, \"Test case 29 failed\"\nassert solution(32) == 7, \"Test case 30 failed\"\nassert solution(33) == 7, \"Test case 31 failed\"\nassert solution(34) == 7, \"Test case 32 failed\"\nassert solution(35) == 8, \"Test case 33 failed\"\nassert solution(36) == 8, \"Test case 34 failed\"\nassert solution(37) == 8, \"Test case 35 failed\"\nassert solution(38) == 8, \"Test case 36 failed\"\nassert solution(39) == 8, \"Test case 37 failed\"\nassert solution(40) == 9, \"Test case 38 failed\"\nassert solution(41) == 9, \"Test case 39 failed\"\nassert solution(42) == 9, \"Test case 40 failed\"\nassert solution(43) == 9, \"Test case 41 failed\"\nassert solution(44) == 10, \"Test case 42 failed\"\nassert solution(45) == 10, \"Test case 43 failed\"\nassert solution(46) == 10, \"Test case 44 failed\"\nassert solution(47) == 10, \"Test case 45 failed\"\nassert solution(48) == 10, \"Test case 46 failed\"\nassert solution(49) == 11, \"Test case 47 failed\"\nassert solution(50) == 11, \"Test case 48 failed\"\nassert solution(51) == 11, \"Test case 49 failed\"\nassert solution(52) == 11, \"Test case 50 failed\"\nassert solution(53) == 11, \"Test case 51 failed\"\nassert solution(54) == 12, \"Test case 52 failed\"\nassert solution(55) == 12, \"Test case 53 failed\"\nassert solution(56) == 12, \"Test case 54 failed\"\nassert solution(",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0\n\nassert solution() == -1\n\nassert solution() == 2\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == 12\n\nassert solution() == 36\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == 15116544\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == -1\n\nassert solution() == -1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0\nassert solution() == -1\nassert solution() == 2\nassert solution() == -1\nassert solution() == -1\nassert solution() == 12\nassert solution() == 36",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"\"\"\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n\"\"\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\n\nassert solution(b\"\"\"\n7\n4\n6\n8\n10\n12\n14\n16\n\"\"\") == \"-1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(5) == 0\nassert solution(1000000) == -1",
        "num_ids_2": 18,
        "num_ids_4": 33
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(stdin=\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\ninput = '''7\n1\n2\n3\n12\n12345\n15116544\n387420489'''\noutput = '0\\n-1\\n2\\n-1\\n-1\\n12\\n36'\n\ninput = '''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489'''\noutput = '0\\n-1\\n2\\n-1\\n-1\\n12\\n36'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1\\n0\\n3'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGGBBRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BGGGG\") == \"R\"\nassert solution(\"RBRGR\") == \"RGR\"\nassert solution(\"BBBRR\") == \"B\"",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('RGGGBBBBRRRRR') == 'RRRRRR'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2\\nBGGGG\\n5 2\\nRBRGR\\n5 3\\nBBBRR') == '1\\n0\\n3'\n\nassert solution('1 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1\\n0\\n3'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(4) == 0\nassert solution(5) == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RBRGR\") == \"1\"\nassert solution(\"BBBRR\") == \"0\"\nassert solution(\"RBRGR\") == \"1\"\nassert solution(\"BGGGG\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"The function should return {output}, but it returns {solution(stdin)}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('5 2') == '0'\nassert solution('BGGGG') == '1'\nassert solution('5 3') == '0'\nassert solution('RBRGR') == '1'\nassert solution('5 5') == '1'\nassert solution('BBBRR') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'\nassert solution('Input\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'\nassert solution('Input\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'\nassert solution('Input\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'\nassert solution('Input\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'\nassert solution('Input\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3\\n3\\n'",
        "num_ids_2": 104,
        "num_ids_4": 208
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\n\nprint('All tests passed!')",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"3\n3\n3\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\nprint('All test cases passed.')",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed for {stdin}\\nExpected: {expected}\\nGot: {solution(stdin=input())}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test failed for solution: {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n10\\n1 1 1 1 1 2 2\\n20\\n1 1 1 1 1 2 2\\n30\\n1 1 1 1 1 2 2\\n40\\n1 1 1 1 1 2 2\\n50\\n1 1 1 1 1 2 2\\n60\\n1 1 1 1 1 2 2\\n70\\n1 1 1 1 1 2 2\\n80\\n1 1 1 1 1 2 2\\n90\\n1 1 1 1 1 2 2\\n100\\n1 1 1 1 1 2 2\\n110\\n1 1 1 1 1 2 2\\n120\\n1 1 1 1 1 2 2\\n130\\n1 1 1 1 1 2 2\\n140\\n1 1 1 1 1 2 2\\n150\\n1 1 1 1 1 2 2\\n160\\n1 1 1 1 1 2 2\\n170\\n1 1 1 1 1 2 2\\n180\\n1 1 1 1 1 2 2\\n190\\n1 1 1 1 1 2 2\\n200\\n1 1 1 1 1 2 2\\n210\\n1 1 1 1 1 2 2\\n220\\n1 1 1 1 1 2 2\\n230\\n1 1 1 1 1 2 2\\n240\\n1 1 1 1 1 2 2\\n250\\n1 1 1 1 1 2 2\\n260\\n1 1 1 1 1 2 2\\n270\\n1 1 1 1 1 2 2\\n280\\n1 1 1 1 1 2 2\\n290\\n1 1 1 1 1 2 2\\n300\\n1 1 1 1 1 2 2\\n310\\n1 1 1 1 1 2 2\\n320\\n1 1 1 1 1 2 2\\n330\\n1 1 1 1 1 2 2\\n340\\n1 1 1 1 1 2 2\\n350\\n1 1 1 1 1 2 2\\n360\\n1 1 1 1 1 2 2\\n370\\n1 1 1 1 1 2 2\\n380\\n1 1 1 1 1 2 2\\n390\\n1 1 1 1 1 2 2\\n400\\n1 1 1 1 1 2 2\\n410\\n1 1 1 1 1 2 2\\n420\\n1 1 1 1 1 2 2\\n430\\n1 1 1 1 1 2 2\\n440\\n1 1 1 1 1 2 2\\n450\\n1 1 1 1 1 2 2\\n460\\n1 1 1 1 1 2 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}.\"\nfor t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    t = int(input())\n    ans = -1\n    for _ in range(t):\n        target = sum(a)\n        target //= 3\n        count = 0\n        while target > 0:\n            if target % 3 == 0:\n                count += 1\n                target //= 3\n            else:\n                break\n        ans = max(ans, count)\n    print(ans)",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2 \"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''1 5 2 4 3\n1 2 3 4 \n1 \n1 4 3 2 '''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"4\\n1 2 4 3\\n1\\n1\") == \"1 2 3 4\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n1\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '''\n1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2\n'''\n\nassert solution('''\n1\n2\n4 3 2 1\n''') == '''\n1 2 3 4\n'''\n\nassert solution('''\n1\n4\n4 3 2 1\n''') == '''\n1 4 3 2\n'''\n\nassert solution('''\n2\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '''\n5 1 4 3 2\n4 1 3 2 5\n3 2 4 1 5\n2 4 1 3 5\n1 3 2 4 5\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"4\\n2 3 2 1\\n1\\n1\\n4\\n4 3 2 1\") == \"1 2 3 4\"",
        "num_ids_2": 126,
        "num_ids_4": 169
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('permutation_swap.in', 'r')) == '1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2'\nassert solution(open('permutation_swap.in', 'r')) == '1 2 3 4\\n1 4 3 2'\nassert solution(open('permutation_swap.in', 'r')) == '1 4 3 2'",
        "num_ids_2": 82,
        "num_ids_4": 107
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''1 5 2 4 3\n1 2 3 4\n1\n1\n4\n4 3 2 1'''",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'YES\\nYES\\nNO\\nYES\\nYES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'YES\\nYES\\nNO\\nYES\\nYES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'NO\\nYES\\nYES\\nYES\\nYES'",
        "num_ids_2": 156,
        "num_ids_4": 234
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\") == \"YES\\nYES\\nNO\\nYES\\nYES\\nYES\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\\n\") == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"\nassert solution(\"10\\n20\\n1 2 3 4 5 6 7 8 9\\n10\\n1 10 10 10 10 10 10 10 10\\n3\\n10 3 3\\n15\\n15 15 15 15 15 15 15 15 15\\n10\\n1 10 10 10 10 10 10 10 10\\n1\\n10 10\\n\") == \"YES\\nYES\\nYES\\nYES\\nYES\\n\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4\\n10\\n1 10 10 10 10 10 10 10 10\\n3\\n10 3 3\\n15\\n15 15 15 15 15 15 15 15 15\\n10\\n1 10 10 10 10 10 10 10 10\\n1\\n10 10\\n1 10\\n1\\n10 10\\n\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES",
        "num_ids_2": 247,
        "num_ids_4": 1027
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\") == \"YES\"\nassert solution(stdin=\"5\") == \"YES\"\nassert solution(stdin=\"1\") == \"NO\"\nassert solution(stdin=\"2\") == \"YES\"\nassert solution(stdin=\"1 2 3 4\") == \"YES\"\nassert solution(stdin=\"3 1 2\") == \"YES\"\nassert solution(stdin=\"5 1 2 3 4\") == \"YES\"\nassert solution(stdin=\"1 1 5 3 2\") == \"YES\"\nassert solution(stdin=\"1 1 5 4 3\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4''') == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, \"Test case failed. Expected output: {}, Received output: {}\".format(expected_output, solution(input_string))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\nassert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 1 Failed\"\n\nassert solution(input()) == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 2 Failed\"\n\nassert solution(input()) == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 3 Failed\"\n\nassert solution(input()) == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 4 Failed\"\n\nassert solution(input()) == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n18\\n10\\n6\\n75015\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_file) == expected_output, f\"Solution does not match expected output for input file {input_file}\" for input_file, expected_output in [\n    (\"input.txt\", \"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n\"),\n    (\"input_2.txt\", \"2\\n2 3\\n1 1\\n\"),\n]",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\n\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n18\\n10\\n6\\n75015\", \"The solution is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution(\"8\\n10\\n30\\n5\\n\") == \"NO\"\nassert solution(\"1000000000 0\\n1000000000 1000000000\\n1000000000 1000000000\\n\") == \"NO\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 230,
        "num_ids_4": 299
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 208,
        "num_ids_4": 208
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('1\\n10 4\\n100 2\\n8 6\\n97 1\\n8 10\\n3 11\\n5 4\\n1000000000 10') == 'YES\\n5 2 2\\nYES\\n25 2 10\\nNO\\nNO\\nYES\\n3 2 2\\nYES\\n111111111 111111111 111111111 111111111 111111111 111111111 111111111 111111111'\nassert solution('1\\n10 1\\n100 1\\n8 5\\n97 3\\n8 9\\n3 12\\n5 5\\n1000000000 11') == 'YES\\n1 2 2\\nYES\\n35 5 10\\nNO\\nNO\\nYES\\n4 2 2\\nYES\\n111111111 111111111 111111111 111111111 111111111 111111111 111111111'\nassert solution('1\\n10 2\\n100 3\\n8 4\\n97 4\\n8 11\\n3 13\\n5 6\\n1000000000 12') == 'NO'",
        "num_ids_2": 403,
        "num_ids_4": 643
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120', 'Test 1'",
        "num_ids_2": 169,
        "num_ids_4": 169
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\\n22 23 24\\n25 26 27\\n28 29 30\\n31 32 33\\n34 35 36\\n37 38 39\\n40 41 42\\n43 44 45\\n46 47 48\\n49 50 51\\n52 53 54\\n55 56 57\\n58 59 60\\n61 62 63\\n64 65 66\\n67 68 69\\n70 71 72\\n73 74 75\\n76 77 78\\n79 80 81\\n82 83 84\\n85 86 87\\n88 89 90\\n91 92 93\\n94 95 96\\n97 98 99\\n100 101 102\\n103 104 105\\n106 107 108\\n109 110 111\\n112 113 114\\n115 116 117\\n118 119 120\\n121 122 123\\n124 125 126\\n127 128 129\\n130 131 132\\n133 134 135\\n136 137 138\\n139 140 141\\n142 143 144\\n145 146 147\\n148 149 150\\n151 152 153\\n154 155 156\\n157 158 159\\n160 161 162\\n163 164 165\\n166 167 168\\n169 170 171\\n172 173 174\\n175 176 177\\n178 179 180\\n181 182 183\\n184 185 186\\n187 188 189\\n190 191 192\\n193 194 195\\n196 197 198\\n199 200 201\\n202 203 204\\n205 206 207\\n208 209 210\\n211 212 213\\n214 215 216\\n217 218 219\\n220 221 222\\n223 224 225\\n226 227 228\\n229 230 231\\n232 233 234\\n235 236 237\\n238 239 240\\n241 242 243\\n244 245 246\\n247 248 249\\n250 251 252\\n253 254 255\\n256 257 258\\n259 260 261\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == 'NO'\nassert solution('8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n",
        "num_ids_2": 272,
        "num_ids_4": 1027
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES\\n5 1 1 1 1 1 1 1\\nNO\\nNO'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"4 2 4\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"55 5 5 35\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"1 1 1 1 1 1 1 1\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\nprint('YES')\n",
        "num_ids_2": 219,
        "num_ids_4": 219
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1, 3, 4, 10000000000000000, 10000000000000000, 23, 34, 45]) == \"4\\n55\\n15000000000000000\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example) == expected, f\"Test case {case} failed\" for case, example, expected in enumerate(tests)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n4\\n1\\n10\\n10000000000000000\\n23\\n34\\n45\\n') == '4\\n55\\n15000000000000000\\n51'\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000') == '4\\n55\\n150000000000000000'\nassert solution('23 34 45') == '51\\n'\nassert solution('50000000000000000 50000000000000000 50000000000000000') == '100000000000000000'",
        "num_ids_2": 123,
        "num_ids_4": 202
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\") == \"4\\n55\\n150000000000000000\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n55\\n150000000000000000\\n51\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed\"\nfor i, (input, expected) in enumerate(test_cases):\n    assert solution(input) == expected, f\"Test case {i+1} failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4\\n55\\n150000000000000000'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"55\\n150000000000000000\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nfor test_case in range(input()):\n    a, b, c = map(int, input().split())\n    print(solution(a, b, c))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\"\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Output: {solution(stdin)}, Expected: {expected}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\ababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"\n\nfrom typing import List",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcbac\") == \"3\"\nassert solution(\"aaa\") == \"1\"\nassert solution(\"abczgyo\") == \"15\"\nassert solution(\"5 4\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\\nNO\\n\"\nassert solution() == \"YES\\n1 3 5\\nNO\\nNO\\n\"\nassert solution() == \"YES\\n1 3 5\\nNO\\nNO\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n') == 'YES\\n1 3 5\\nNO\\nNO'",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\\nNO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"YES\\n1 3 5\"\nassert solution(stdin=\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(stdin=\"5\\n3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"NO\"",
        "num_ids_2": 97,
        "num_ids_4": 160
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"YES\\n1 3 5\\nNO\\nNO\"\nassert solution(\"2\\n3\\n5\\n7\\n11\\n\") == \"YES\\n1 2 3\\nNO\"\nassert solution(\"1\\n4\\n6\\n8\\n10\\n12\\n\") == \"YES\\n1 2\\nNO\"",
        "num_ids_2": 113,
        "num_ids_4": 150
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"The solution should return the correct binary representation\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\", \"The solution should return the correct binary representation\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(00000010100101000001111010011100) == \"964176192\"\nassert solution(1111111111111111111111111111101) == \"3221225471\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192 (00111001011110000010100101000000)\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471 (1011111111111111111111111111111)\"",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Test 1\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\", \"Test 2\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1010101010101010\") == \"00111001011110000010100101000000\"\nassert solution(\"1111111111111111111111111111101\") == \"10111111111111111111111111111111\"\nassert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 127,
        "num_ids_4": 225
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input: 5\\nOutput: [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\\ndef solution(stdin: str) -> str:\\n    pass\") == \"Output: [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '''\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"  \\n [1]\\n [1,1]\\n [1,2,1]\\n [1,3,3,1]\\n [1,4,6,4,1]\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == [[1]]\nassert solution(\"10\") == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n\") == []\nassert solution(\"2\\nhello@example.com\\nworld@example.net\\n\") == [\"example.com\", \"example.net\"]\nassert solution(\"3\\nhello@example.com.tw\\nworld@example.net\\n\") == [\"example.com\", \"example.net\"]\nassert solution(\"4\\nhello@example.com\\nworld@example.net.tw\\n\") == [\"example.com\", \"example.net\"]\nassert solution(\"5\\nhello@example-com\\nworld@example-net.tw\\n\") == [\"example-com\", \"example-net\", \"example-com.tw\"]\nassert solution(\"6\\nhello@example_com\\nworld@example_net.tw\\n\") == [\"example_com\", \"example_net\", \"example_com.tw\"]\nassert solution(\"7\\nhello@example.com.tw\\nworld@example.net.tw\\n\") == [\"example.com\", \"example.net\"]\nassert solution(\"8\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\"]\nassert solution(\"9\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\"]\nassert solution(\"10\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"11\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"12\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"13\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"14\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"15\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"16\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"17\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"18\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"19\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]\nassert solution(\"20\\nhello@example.com.tw\\nworld@example.net.tw.tw\\n\") == [\"example.com\", \"example.net\", \"example.com.tw\"]",
        "num_ids_2": 16,
        "num_ids_4": 84
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\njohn.doe@example.com\\npanama@example.com\\n\") == [\"john.doe@example.com\", \"panama@example.com\"]\nassert solution(\"2\\njohn.doe@example.com\\ndoe.com@example.com\\nbla@example.net\\n\") == []\nassert solution(\"3\\njohn.doe@example.com\\ndoe.com@example.com\\njohn.doe.com\\n\") == [\"john.doe@example.com\", \"doe.com@example.com\"]\nassert solution(\"4\\na@example.com\\n1@example.com\\n2@example.com\\n3@example.com\\n\") == []\nassert solution(\"5\\njohn.doe@example.com\\ndoe.com@example.com\\nbla@example.net\\njohn.doe.com\\n1@example.com\\n\") == [\"john.doe@example.com\", \"doe.com@example.com\"]\nassert solution(\"6\\njohn.doe@example.com\\ndoe.com@example.com\\nbla@example.net\\njohn.doe.com\\n1@example.com\\n2@example.com\\n\") == []\nassert solution(\"7\\njohn.doe@example.com\\ndoe.com@example.com\\nbla@example.net\\njohn.doe.com\\n1@example.com\\n2@example.com\\n3@example.com\\n\") == [\"john.doe@example.com\", \"doe.com@example.com\"]\nassert solution(\"8\\njohn.doe@example.com\\ndoe.com@example.com\\nbla@example.net\\njohn.doe.com\\n1@example.com\\n2@example.com\\n3@example.com\\n4@example.com\\n\") == [\"john.doe@example.com\", \"doe.com@example.com\"]\nassert solution(\"9\\njohn.doe@example.com\\ndoe.com@example.com\\nbla@example.net\\njohn.doe.com\\n1@example.com\\n2@example.com\\n3@example.com\\n4@example.com\\n5@example.com\\n\") == []",
        "num_ids_2": 78,
        "num_ids_4": 167
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5\nhello@example.com\nworld@example.com\nuser-1@example.com\nuser_2@example.com\nuser.example.com\nexample.com\n4\na@example.com\nb@example.com\nc@example.com\nd@example.com\ne@example.com''') == ['a@example.com', 'b@example.com', 'c@example.com', 'd@example.com', 'e@example.com']",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == [\n    '<EMAIL>',\n    '<EMAIL>',\n    '<EMAIL>',\n    '<EMAIL>',\n    '<EMAIL>',\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\njohn.doe@example.com\\npatrick.smith@example.com\\n\") == [\"john.doe@example.com\", \"patrick.smith@example.com\"]",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5 # Test case",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 1 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 2 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 3 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 4 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 5 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 6 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 7 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 8 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 9 failed.'\n\nassert solution(input()) == 'Output a list containing the valid email addresses in lexicographical order. If the list is empty, just output an empty list, [].', 'Test case 10 failed.'",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\njohn.doe\\nlisa.user@example.com\\nsandeep.user@example.com\\n123.email@example.com\\n1@example.com\\n\") == \"john.doe\\nsandeep.user@example.com\\nlisa.user@example.com\\n123.email@example.com\\n1@example.com\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    10\n    1234567890@example.com\n    9876543210@example.com\n    1234567890@example.org\n    1234567890@example.com\n    1234567890@example.net\n    1234567890@example.org\n    1234567890@example.net\n    1234567890@example.com\n    ''') == ['1234567890@example.com', '1234567890@example.net', '1234567890@example.org']",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\njohn.doe@example.com\\njohn.doe@example.com\\npeter.smith@example.com\") == \"john.doe@example.com\\npeter.smith@example.com\"\nassert solution(\"3\\njohn.doe@example.com\\njohn.doe@example.com\\npeter.smith@example.com\\n\") == \"john.doe@example.com\\npeter.smith@example.com\"\nassert solution(\"1\\njohn.doe@example.com\\njohn.doe@example.com\\npeter.smith@example.com\\n\") == []",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == ['1', '8', '27', '64', '125']",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == ['0', '1', '8', '27', '120']",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == [\"0\", \"1\", \"8\", \"27\", \"125\"]",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"[4, 6, 27, 1024, 729]\"\nassert solution(10) == \"[4, 6, 27, 1024, 729]\"\nassert solution(5) == \"[16, 96, 4032, 18432, 67680]\"\nassert solution(1) == \"[1]\"",
        "num_ids_2": 55,
        "num_ids_4": 100
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['0', '1', '8', '27', '1024']\nassert solution(5) == ['0', '1', '8', '27', '1024', '20480']\nassert solution(10) == ['0', '1', '8', '27', '1024', '20480', '409600', '10485760', '22517993600', '4611686018427387904']",
        "num_ids_2": 59,
        "num_ids_4": 145
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == [8, 64, 256]\nassert solution(\"5\") == [32, 216, 1832, 14032, 102432]",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['0', '1', '1', '2', '8']\nprint(solution())  # Here's how you can test the solution:",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == [3, 8, 27]\nassert solution(\"5\") == [25, 49, 125, 302, 817]",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == [1, 8, 27, 64, 125], \"Test Failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\\n\", \"Invalid input\"\n\nfibonacci = list(map(lambda x: x**3, range(1, 11)))\nprint(\" \".join(map(str, fibonacci)))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n<root><a><b><c/></b><d/><e/><f/></a><g/></root>\") == 3\nassert solution(\"3\\n<root><a/><b/><c/></root><d/><e/><f/></root>\") == 3\nassert solution(\"4\\n<a><b/><c/></a><d/><e/><f/></root>\") == 4\nassert solution(\"5\\n<root><a/><b/><c/></root><d/><e/><f/></root>\") == 5\n",
        "num_ids_2": 62,
        "num_ids_4": 118
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<level1>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.1.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.1.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.2.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.2.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t</level1>\\n</root>\") == 4, \"Expected output: 4, Actual output: {}\".format(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<level1>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.1.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.1.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.2.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.2.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t</level1>\\n</root>\")))\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<level1>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.1.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.1.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.2.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.2.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t</level1>\\n</root>\") == 5, \"Expected output: 5, Actual output: {}\".format(solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<level1>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.1.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.1.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t\\t<level2>\\n\\t\\t\\t<level3>\\n\\t\\t\\t\\t<level4>Element 1.2.1</level4>\\n\\t\\t\\t\\t<level4>Element 1.2.2</level4>\\n\\t\\t\\t</level3>\\n\\t\\t</level2>\\n\\t</level1>\\n</root>\")))",
        "num_ids_2": 904,
        "num_ids_4": 904
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('') == 0, \"The input should be empty.\"\nassert solution('<?xml version=\"1.0\"?>\\n<root></root>') == 0, \"The input should have one level of nesting.\"\nassert solution('<?xml version=\"1.0\"?>\\n<root>\\n<sub1></sub1>\\n</root>') == 1, \"The input should have one level of nesting.\"\nassert solution('<?xml version=\"1.0\"?>\\n<root>\\n<sub1>\\n<sub2></sub2>\\n</sub1>\\n<sub3></sub3>\\n</root>') == 2, \"The input should have two levels of nesting.\"\nassert solution('<?xml version=\"1.0\"?>\\n<root>\\n<sub1>\\n<sub2>\\n<sub3>\\n<sub4>\\n<sub5></sub5>\\n</sub4>\\n</sub3>\\n</sub2>\\n<sub6></sub6>\\n</sub1>\\n</root>') == 3, \"The input should have three levels of nesting.\"",
        "num_ids_2": 48,
        "num_ids_4": 152
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"\"\"<root></root>\"\"\") == 1\nassert solution(\"\"\"<root><child1><child2><child3></child3></child2></root>\"\"\") == 3\nassert solution(\"\"\"<root><child1><child2><child3></child3></child2></root>\"\"\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 76
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"2\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc<def<ghi>jkl</ghi>mno</def>pqr\") == 2\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n<title>Harry Potter</title>\\n<author>J.R.R. Tolkien</author>\\n<publisher>Marvel Comics</publisher>\\n</book>\") == 5\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<sub1>\\n<sub2>\\n<sub3>\\n<sub4>\\n<sub5>\\n<sub6>\\n<sub7>\\n<sub8>\\n<sub9>\\n<sub10>\\n<sub11>\\n<sub12>\\n<sub13>\\n<sub14>\\n<sub15>\\n<sub16>\\n<sub17>\\n<sub18>\\n<sub19>\\n<sub20>\\n<sub21>\\n<sub22>\\n<sub23>\\n<sub24>\\n<sub25>\\n<sub26>\\n<sub27>\\n<sub28>\\n<sub29>\\n<sub30>\\n<sub31>\\n<sub32>\\n<sub33>\\n<sub34>\\n<sub35>\\n<sub36>\\n<sub37>\\n<sub38>\\n<sub39>\\n<sub40>\\n</sub40>\\n<sub39>\\n<sub38>\\n<sub37>\\n<sub36>\\n<sub35>\\n<sub34>\\n<sub33>\\n<sub32>\\n<sub31>\\n<sub30>\\n<sub29>\\n<sub28>\\n<sub27>\\n<sub26>\\n<sub25>\\n<sub24>\\n<sub23>\\n<sub22>\\n<sub21>\\n<sub20>\\n<sub19>\\n<sub18>\\n<sub17>\\n<sub16>\\n<sub15>\\n<sub14>\\n<sub13>\\n<sub12>\\n<sub11>\\n<sub10>\\n<sub9>\\n<sub8>\\n<sub7>\\n<sub6>\\n<sub5>\\n<sub4>\\n<sub3>\\n<sub2>\\n<sub1>\\n</sub1>\\n<sub1>\\n</sub2>\\n<sub2>\\n</sub3>\\n<sub3>\\n</sub4>\\n<sub4>\\n</sub5>\\n<sub5>\\n</sub6>\\n<sub6>\\n</sub7>\\n<sub7>\\n</sub8>\\n<sub8>\\n</sub9>\\n<sub9>\\n</sub10>\\n<sub10>\\n</sub11>\\n<sub11>\\n</sub12>\\n<sub12>\\n</sub13>\\n<sub13>\\n</sub14>\\n<sub14>\\n</sub15>\\n<sub15>\\n</sub16>\\n<sub16>\\n</sub17>\\n<sub17>\\n</sub18>\\n<sub18>\\n</sub19>\\n<sub19>\\n</sub20>\\n<sub20>\\n</sub21>\\n<sub21>\\n</sub22>\\n<sub22>\\n</sub23>\\n<sub23>\\n</sub24>\\n<sub24>\\n</sub25>\\n<sub25>\\n</sub26>\\n<sub26>\\n</sub27>\\n<sub27>\\n</sub28>\\n<sub28>\\n</sub29>\\n<sub29>\\n</sub30>\\n<sub30>\\n</sub31>\\n<sub31>\\n</sub32>\\n<sub32>\\n</sub33>\\n<sub33>\\n</sub34>\\n<sub34>\\n</sub35>\\n<sub35>\\n</sub36>\\n<sub36>\\n</sub37>\\n<sub37>\\n</sub38>\\n<sub38>\\n</sub39>\\n",
        "num_ids_2": 96,
        "num_ids_4": 1027
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Incorrect output\" # Test 1\nassert solution() == 1, \"Incorrect output\" # Test 2\nassert solution() == 2, \"Incorrect output\" # Test 3\nassert solution() == 3, \"Incorrect output\" # Test 4\nassert solution() == 4, \"Incorrect output\" # Test 5",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n<root>\n    <child>\n        <grandchild>\n            <greatgrandchild>\n                <lastchild>\n                    <root>\n                        <child>\n                            <grandchild>\n                                <greatgrandchild>\n                                    <lastchild>\n                                        <root>\n                                            <child>\n                                                <grandchild>\n                                                    <greatgrandchild>\n                                                        <lastchild>\n                                                            <root>\n                                                                <child>\n                                                                    <grandchild>\n                                                                        <greatgrandchild>\n                                                                            <lastchild>\n                                                                                <root>\n                                                                                    <child>\n                                                                                        <grandchild>\n                                                                                            <greatgrandchild>\n                                                                                                <lastchild>\n                                                                                                    <root>\n                                                                                                        <child>\n                                                                                                            <grandchild>\n                                                                                                                <greatgrandchild>\n                                                                                                                    <lastchild>\n                                                                                                                        <root>\n                                                                                                                            <child>\n                                                                                                                                <grandchild>\n                                                                                                                                    <greatgrandchild>\n                                                                                                                                        <lastchild>\n                                                                                                                                            <root>\n                                                                                                                                                <child>\n                                                                                                                                                    <grandchild>\n                                                                                                                                                        <greatgrandchild>\n                                                                                                                                                            <lastchild>\n                                                                                                                                                                <root>\n                                                                                                                                                                    <child>\n                                                                                                                                                                        <grandchild>\n                                                                                                                                                                            <greatgrandchild>\n                                                                                                                                                                                <lastchild>\n                                                                                                                                                                                    <root>\n                                                                                                                                                                                        <child>\n                                                                                                                                                                                            <grandchild>\n                                                                                                                                                                                                <greatgrandchild>\n                                                                                                                                                                                                    <lastchild>\n                                                                                                                                                                                                        <root>\n                                                                                                                                                                                                            <child>\n                                                                                                                                                                                                                    <grandchild>\n                                                                                                                                                                                                                    <greatgrandchild>\n                                                                                                                                                                                                                        <lastchild>\n                                                                                                                                                                                                                            <root>\n                                                                                                                                                                                                                                <child>\n                                                                                                                                                                                                                                    <grandchild>\n                                                                                                                                                                                                                                        <greatgrandchild>\n                                                                                                                                                                                                                                            <lastchild>\n                                                                                                                                                                                                                                                <root>\n                                                                                                                                                                                                                                                    <child>\n                                                                                                                                                                                                                                                        <grandchild>\n                                                                                                                                                                                                                                                            <greatgrandchild>\n                                                                                                                                                                                                                                                                <lastchild>\n                                                                                                                                                                                                                                                                    <root>\n                                                                                                                                                                                                                                                                        <child>\n                                                                                                                                                                                                                                                                                                                                            <grandchild>\n                                                                                                                                                                                                                                                                                                                                                    <greatgrandchild>\n                                                                                                                                                                                                                                                                                                                                                        <lastchild>\n                                                                                                                                                                                                                                                                                                                                                            <root>\n                                                                                                                                                                                                                                                                                                                                                                <child>\n                                                                                                                                                                                                                                                                                                                                                                    <grandchild>\n                                                                                                                                                                                                                                                                                                                                                                        <greatgrandchild>\n                                                                                                                                                                                                                                                                                                                                                                            <lastchild>\n                                                                                                                                                                                                                                                                                                                                                                                <root>\n                                                                                                                                                                                                                                                                                                                                                                                    <child>\n                                                                                                                                                                                                                                                                                                                                                                                        <grandchild>\n                                                                                                                                                                                                                                                                                                                                                                                            <greatgrandchild>\n                                                                                                                                                                                                                                                                                                                                                                                                <lastchild>\n                                                                                                                                                                                                                                                                                                                                                                                                    <root>\n                                                                                                                                                                                                                                                                                                                                                                                                        <child>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <grandchild>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    <greatgrandchild>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <lastchild>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <root>\nchild>\ngrandchild>\ngreatgrandchild>\nlastchild>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('') == 0, \"No XML document\"\n\nimport re\nfrom collections import deque",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution does not return the expected output: {output}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7912345678\") == \"YES\"\nassert solution(\"0912345678\") == \"YES\"\nassert solution(\"791234567\") == \"NO\"\nassert solution(\"79123456789\") == \"NO\"\nassert solution(\"791234567890\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123456789012345678901234567890\") == \"YES\\n\"\nassert solution(\"12345678901234567890123456789\") == \"NO\\n\"\nassert solution(\"12345678901234567890123456789012345\") == \"YES\\n\"\nassert solution(\"123456789012345678901234567890123456\") == \"NO\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 174
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234567\") == \"YES\"\nassert solution(\"789123\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"123456789\") == \"YES\"\nassert solution(\"789123456789\") == \"NO\"",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7987654321\") == \"YES\"\nassert solution(\"55555555555\") == \"NO\"\nassert solution(\"99999999999\") == \"YES\"\nassert solution(\"09123456789\") == \"YES\"\nassert solution(\"1234567890\") == \"NO\"\nassert solution(\"1234567891\") == \"YES\"\nassert solution(\"1234567892\") == \"NO\"\nassert solution(\"1234567893\") == \"YES\"\nassert solution(\"1234567894\") == \"NO\"\nassert solution(\"1234567895\") == \"YES\"\nassert solution(\"1234567896\") == \"NO\"\nassert solution(\"1234567897\") == \"YES\"\nassert solution(\"1234567898\") == \"NO\"\nassert solution(\"1234567899\") == \"YES\"\nassert solution(\"1234567900\") == \"NO\"\nassert solution(\"1234567901\") == \"YES\"\nassert solution(\"1234567902\") == \"NO\"\nassert solution(\"1234567903\") == \"YES\"\nassert solution(\"1234567904\") == \"NO\"\nassert solution(\"1234567905\") == \"YES\"\nassert solution(\"1234567906\") == \"NO\"\nassert solution(\"1234567907\") == \"YES\"\nassert solution(\"1234567908\") == \"NO\"\nassert solution(\"1234567909\") == \"YES\"\nassert solution(\"1234567910\") == \"NO\"\nassert solution(\"1234567911\") == \"YES\"\nassert solution(\"1234567912\") == \"NO\"\nassert solution(\"1234567913\") == \"YES\"\nassert solution(\"1234567914\") == \"NO\"\nassert solution(\"1234567915\") == \"YES\"\nassert solution(\"1234567916\") == \"NO\"\nassert solution(\"1234567917\") == \"YES\"\nassert solution(\"1234567918\") == \"NO\"\nassert solution(\"1234567919\") == \"YES\"\nassert solution(\"1234567920\") == \"NO\"\nassert solution(\"1234567921\") == \"YES\"\nassert solution(\"1234567922\") == \"NO\"\nassert solution(\"1234567923\") == \"YES\"\nassert solution(\"1234567924\") == \"NO\"\nassert solution(\"1234567925\") == \"YES\"\nassert solution(\"1234567926\") == \"NO\"\nassert solution(\"1234567927\") == \"YES\"\nassert solution(\"1234567928\") == \"NO\"\nassert solution(\"1234567929\") == \"YES\"\nassert solution(\"1234567930\") == \"NO\"\nassert solution(\"1234567931\") == \"YES\"\nassert solution(\"1234567932\") == \"NO\"\nassert solution(\"1234567933\") == \"YES\"\nassert solution(\"1234567934\") == \"NO\"\nassert solution(\"1234567935\") == \"YES\"\nassert solution(\"1234567936\") == \"NO\"\nassert solution(\"1234567937\") == \"YES\"\nassert solution(\"1234567938\") == \"NO\"\nassert solution(\"1234567939\") == \"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n1234567\\n+919999999999\\n7894321\\n9876543\\n+1234567890\\n0123456789\\n9876543210\\n\") == \"YES\"\nassert solution(\n    \"5\\n1234567\\n+919999999999\\n7894321\\n9876543\\n+1234567890\\n0123456789\\n9876543210\\n\") == \"YES\\nNO\"\nassert solution(\n    \"5\\n1234567\\n+919999999999\\n7894321\\n9876543\\n+1234567890\\n0123456789\\n9876543210\\n\") == \"YES\\nNO\"\nassert solution(\n    \"5\\n1234567\\n+919999999999\\n7894321\\n9876543\\n+1234567890\\n0123456789\\n9876543210\\n\") == \"YES\\nNO\"\nassert solution(\n    \"5\\n1234567\\n+919999999999\\n7894321\\n9876543\\n+1234567890\\n0123456789\\n9876543210\\n\") == \"YES\\nNO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567890\\n9876543210\\n7890123456\") == \"YES\"\nassert solution(\"1234567890\\n9876543210\\n789012345678901234567890123456\") == \"NO\"\nassert solution(\"1234567890\\n9876543210\\n789012345678901234567890123456\") == \"YES\"\nassert solution(\"1234567890\\n9876543210\\n789012345678901234567890123456\") == \"NO\"\nassert solution(\"1234567890\\n9876543210\\n78901234567890123456789012345678901234567890123456\") == \"YES\"\nassert solution(\"1234567890\\n9876543210\\n
        "num_ids_2": 106,
        "num_ids_4": 232
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123456789\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"12345678\") == \"YES\\nYES\\nNO\\nNO\\nNO\"\nassert solution(\"12345679\") == \"NO\\nNO\\nNO\\nNO\\nNO\"\nassert solution(\"123456\") == \"YES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"123457\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"12345\") == \"NO\\nNO\\nNO\\nNO\\nNO\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n23456789012345678\\n79876543210\") == \"YES\"\nassert solution(\"1\\n23456789012345678\\n8765432109876543\") == \"NO\"\nassert solution(\"1\\n23456789012345678\\n\") == \"YES\"\nassert solution(\"1\\n23456789012345678\") == \"YES\"\nassert solution(\"1\\n23456789012345678\\n9\") == \"NO\"",
        "num_ids_2": 89,
        "num_ids_4": 149
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12345678901234567890\") == \"NO\"\nassert solution(\"12345678901234567891\") == \"YES\"\nassert solution(\"12345678901234567892\") == \"YES\"\nassert solution(\"12345678901234567893\") == \"YES\"\nassert solution(\"12345678901234567894\") == \"YES\"\nassert solution(\"12345678901234567895\") == \"YES\"\nassert solution(\"12345678901234567896\") == \"YES\"\nassert solution(\"12345678901234567897\") == \"YES\"\nassert solution(\"12345678901234567898\") == \"YES\"\nassert solution(\"12345678901234567899\") == \"YES\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n555-1234\\n999-1234\\n777-1234\\n111-1234\\n\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\nassert solution(\n    \"2\\n555-555-5555\\n999-555-5555\\n777-555-5555\\n111-555-5555\\n\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\nassert solution(\n    \"3\\n5555555555\\n9995555555\\n7775555555\\n1115555555\\n\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\nassert solution(\n    \"4\\n555-1234-5678\\n999-1234-5678\\n777-1234-5678\\n111-1234-5678\\n\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\nassert solution(\n    \"5\\n5555555555\\n9995555555\\n7775555555\\n1115555555\\n\") == \"YES\\nNO\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4\\n3\\n2\\n\") == [\"5\", \"4\", \"3\", \"2\"]\nassert solution(\"10\\n15\\n20\\n\") == [\"10\", \"15\", \"20\", \"9\"]\nassert solution(\"1\\n5\\n7\\n\") == [\"1\", \"5\", \"7\", \"6\", \"4\"]\nassert solution(\"1\\n5\\n6\\n11\\n\") == [\"1\", \"5\", \"6\", \"11\", \"10\", \"7\", \"3\", \"2\"]\nassert solution(\"1\\n5\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(\"1\\n5\\n6\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(\"1\\n5\\n6\\n7\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\"]\nassert solution(\"1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\") == [\"1\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11",
        "num_ids_2": 63,
        "num_ids_4": 138
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nM\n5\nN\n10\n\"\"\") == '5 10'\nassert solution(\"\"\"\nM\n10\nN\n5\n\"\"\") == '5'\nassert solution(\"\"\"\nM\n5\nN\n\"\"\") == '5'\nassert solution(\"\"\"\nM\n\"\"\") == ''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n        2\n        5 6 7 8 9\n        10\n        1 3 5 7\n        ''') == '7 9 11'\n\nassert solution('''\n        2\n        5 6 7 8 9\n        10\n        1 3 5 7\n        ''') == '7 9 11'\n\nassert solution('''\n        2\n        5 6 7 8 9\n        10\n        1 3 5 7\n        ''') == '7 9 11'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n    5\n    4\n    3\n    2\n    \"\"\") == r\"\"\"\n    1\n    5\n    2\n    \"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n4\n3\n2\n\"\"\") == \"2 3 4 5\\n3 4 5 2\\n\"\n\nassert solution(\"\"\"\n10\n5\n6\n7\n8\n9\n10\n\"\"\") == \"11 12 13 14 15\\n16 17 18 19 20\\n\"\n\nassert solution(\"\"\"\n3\n1 2 3\n1 2 4\n2 3 5\n\"\"\") == \"3 4 5\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\\n5 2\\n1 3 5\\n1\\n\") == \"2 1 4 3 5\"\nassert solution(\"5\\n10\\n5 7 13\\n11\\n\") == \"10 5 7 13 11\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3 2\\n5\\n4 3 2\\n\") == \"5 4 3 2\\n4 3 2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['2', '4']\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n5\n4 3 2\n10\n6 7 12\n'''\n) == \"11\\n12\\n\"\n\nassert solution(\n    '''\n5\n4 3 2\n5\n7 8\n6\n'''\n) == \"13\\n\"\n\nassert solution(\n    '''\n3\n2\n3\n4\n5\n'''\n) == \"1\\n2\\n3\\n4\\n5\\n\"\n\nassert solution(\n    '''\n2\n3\n4\n5\n'''\n) == \"1\\n\"\n\nassert solution(\n    '''\n2\n4\n6\n8\n10\n'''\n) == \"13\\n\"\n\nassert solution(\n    '''\n2\n3\n5\n7\n9\n'''\n) == \"1\\n3\\n5\\n7\\n9\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0\\nID,MARKS,CLASS,NAME\\n1,25,Y,John\\n2,30,Y,Jane\\n3,25,Y,David\\n4,30,Y,Sarah\\n5,25,Y,Emma') == '25.00'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\nID\\tMARKS\\tCLASS\\tNAME\\n1\\nAlice\\t85\\tB\\t10\\n2\\nBob\\t90\\tB\\t9\\n3\\nCharlie\\t88\\tB\\t11\\n4\\nDavid\\t88\\tA\\t8\\n5\\nEve\\t87\\tA\\t9\\n6\\nFrank\\t88\\tA\\t10\\n7\\nGrace\\t88\\tA\\t11\\n8\\nHannah\\t90\\tB\\t12\\n9\\nIvan\\t89\\tB\\t13\\n10\\nJuan\\t90\\tB\\t14\\n') == 89.5",
        "num_ids_2": 196,
        "num_ids_4": 196
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nID,Marks,Class,Name\\n101,85.8,Math,John\\n102,90.3,English,Sarah\\n103,75.5,Science,Sarah\\n104,92.1,Science,Sarah\") == \"91.75\"\nassert solution(\"5\\nID,Marks,Class,Name\\n101,85.8,Math,John\\n102,90.3,English,Sarah\\n103,75.5,Science,Sarah\\n104,92.1,Science,Sarah\") == \"91.75\"\nassert solution(\"5\\nID,Marks,Class,Name\\n101,85.8,Math,John\\n102,90.3,English,Sarah\\n103,75.5,Science,Sarah\\n104,92.1,Science,Sarah\") == \"91.75\"\nassert solution(\"5\\nID,Marks,Class,Name\\n101,85.8,Math,John\\n102,90.3,English,Sarah\\n103,75.5,Science,Sarah\\n104,92.1,Science,Sarah\") == \"91.75\"\nassert solution(\"5\\nID,Marks,Class,Name\\n101,85.8,Math,John\\n102,90.3,English,Sarah\\n103,75.5,Science,Sarah\\n104,92.1,Science,Sarah\") == \"91.75\"",
        "num_ids_2": 164,
        "num_ids_4": 328
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11.0\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(0) == \"0.00\"\nassert solution(1) == \"1.00\"\nassert solution(2) == \"2.00\"\nassert solution(3) == \"3.00\"\nassert solution(4) == \"4.00\"\nassert solution(5) == \"5.00\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '35.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '35.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90, ARABIC, Alaa\n''') == '30.00'\nassert solution('''\n3\nID, MARKS, CLASS, NAME\nA, 80, ENGLISH, John Smith\nB, 70, JAPANESE, Tomohisa\nC, 90, CHINESE, Ming Ming\nD, 80, SPANISH, Dani\nE, 90",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_01.input) == solution_01.output, \"Test 01 failed\"\nassert solution(solution_02.input) == solution_02.output, \"Test 02 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\nID,MARKS,CLASS,NAME\\n1,50,Y,John\\n2,75,Y,Jane\\n3,90,X,Bob\\n4,80,Y,Mark\\n5,90,Y,Lisa\\n') == '42.5'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nID,Marks,Class,Name\\n1,50,Maths,Alice\\n2,80,Science,Bob\\n3,90,Physics,Charlie\\n4,70,Biology,David\\n5,60,Chemistry,Eve\\n\") == \"38.00\"\nassert solution(\"10\\nID,Marks,Class,Name\\n1,50,Maths,Alice\\n2,80,Science,Bob\\n3,90,Physics,Charlie\\n4,70,Biology,David\\n5,60,Chemistry,Eve\\n\") == \"38.00\"",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7') == 'Weird'\nassert solution('21') == 'Not Weird'\nassert solution('14') == 'Weird'\nassert solution('16') == 'Not Weird'\nassert solution('23') == 'Weird'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('42') == 'Not Weird'\nassert solution('3') == 'Not Weird'\nassert solution('13') == 'Not Weird'\nassert solution('22') == 'Weird'\nassert solution('10') == 'Weird'\nassert solution('25') == 'Not Weird'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Not Weird\", \"The solution should print Not Weird, but instead it prints {}.\".format(solution(input()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"Not Weird\"\nassert solution(\"8\") == \"Not Weird\"\nassert solution(\"15\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"25\") == \"Not Weird\"\nassert solution(\"28\") == \"Not Weird\"\nassert solution(\"33\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"Not Weird\"\nassert solution(\"8\") == \"Weird\"\nassert solution(\"15\") == \"Weird\"\nassert solution(\"25\") == \"Weird\"\nassert solution(\"20\") == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Weird\"\nassert solution(\"25\") == \"Not Weird\"\nassert solution(\"23\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"20\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"Weird\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(9) == \"Not Weird\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"Weird\"\nassert solution(\"7\") == \"Not Weird\"\nassert solution(\"10\") == \"Weird\"\nassert solution(\"13\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"25\") == \"Not Weird\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"Weird\"\nassert solution(\"16\") == \"Weird\"\nassert solution(\"14\") == \"Weird\"\nassert solution(\"6\") == \"Not Weird\"\nassert solution(\"21\") == \"Not Weird\"\nassert solution(\"23\") == \"Not Weird\"\nassert solution(\"24\") == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n  <name>John</name>\\n  <age>30</age>\\n  <address>\\n    <street>123 Main St</street>\\n    <city>Anytown</city>\\n    <state>CA</state>\\n  </address>\\n</root>\") == 7",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0\nprint(0)",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element1 attribute1=\\\"value1\\\" attribute2=\\\"value2\\\">\\n<element2 attribute1=\\\"value1\\\" attribute2=\\\"value2\\\">\\n</root>\") == 15\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element1/>\\n<element2/>\\n</root>\") == 10\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element1 attribute1=\\\"value1\\\">\\n<element2 attribute1=\\\"value1\\\">\\n<element3/>\\n</root>\") == 12\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element1 attribute1=\\\"value1\\\"/>\\n<element2 attribute1=\\\"value1\\\"/>\\n</root>\") == 11\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n<element1 attribute1=\\\"value1\\\" attribute2=\\\"value2\\\"/>\\n<element2 attribute1=\\\"value1\\\" attribute2=\\\"value2\\\"/>\\n</root>\") == 20",
        "num_ids_2": 108,
        "num_ids_4": 222
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n\\t<element attr3=\\\"value3\\\">\\n\\t\\t<subelement attr4=\\\"value4\\\">\\n\\t\\t\\t<innerelement />\\n\\t\\t</subelement>\\n\\t</element>\\n</root>\") == 15\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n\\t<element attr3=\\\"value3\\\">\\n\\t\\t<subelement attr4=\\\"value4\\\">\\n\\t\\t\\t<innerelement />\\n\\t\\t\\t<innerelement />\\n\\t\\t</subelement>\\n\\t</element>\\n</root>\") == 18\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root attr1=\\\"value1\\\" attr2=\\\"value2\\\">\\n\\t<element attr3=\\\"value3\\\">\\n\\t\\t<subelement attr4=\\\"value4\\\">\\n\\t\\t\\t<innerelement />\\n\\t\\t\\t<innerelement />\\n\\t\\t</subelement>\\n\\t</element>\\n</root>\") == 15",
        "num_ids_2": 202,
        "num_ids_4": 309
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><name>John</name><age>25</age><city>New York</city></root>') == 6\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><name>Peter</name></root>') == 1\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><name>Jane</name><age>30</age><city>New York</city><country>USA</country></root>') == 10\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><name>John</name><age>25</age><city>New York</city><country>USA</country></root><root><name>Peter</name></root><root><name>Jane</name><age>30</age><city>New York</city><country>USA</country></root><root><name>Judy</name><age>20</age><city>San Francisco</city><country>USA</country></root>') == 35\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root><name>Judy</name><age>20</age><city>San Francisco</city><country>USA</country></root><root><name>John</name><age>25</age><city>New York</city><country>USA</country></root><root><name>Peter</name></root><root><name>Jane</name><age>30</age><city>New York</city><country>USA</country></root>') == 30",
        "num_ids_2": 83,
        "num_ids_4": 267
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '9', 'The score of the given XML document is not correct.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>') == 1\nassert solution('<book><title>The Catcher in the Rye</title><author>J.D. Salinger</author></book>') == 4\nassert solution('<book><title>The Catcher in the Rye</title><author>J.D. Salinger</author><price>12.99</price></book>') == 5\nassert solution('<book><title>The Catcher in the Rye</title><author>J.D. Salinger</author><price>12.99</author><price>19.99</price></book>') == 8\n",
        "num_ids_2": 29,
        "num_ids_4": 107
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n<root><elem a='1' b='2' c='3'><elem1 a='4' b='5' c='6'/><elem2 a='7' b='8' c='9'/></root>\") == \"15\"\nassert solution(\"1\\n<root><elem a='1' b='2' c='3'><elem1 a='4' b='5' c='6'/><elem2 a='7' b='8' c='9'/></root>\") == \"25\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<person id=\\\"1\\\">\\n\\t\\t<name>John</name>\\n\\t\\t<age>30</age>\\n\\t</person>\\n\\t<person id=\\\"2\\\">\\n\\t\\t<name>Jane</name>\\n\\t\\t<age>25</age>\\n\\t</person>\\n</root>\") == 10, \"Test 1\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<person id=\\\"1\\\">\\n\\t\\t<name>John</name>\\n\\t\\t<age>30</age>\\n\\t</person>\\n\\t<person id=\\\"2\\\">\\n\\t\\t<name>Jane</name>\\n\\t\\t<age>25</age>\\n\\t</person>\\n</root>\") == 7, \"Test 2\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<person id=\\\"1\\\">\\n\\t\\t<name>John</name>\\n\\t\\t<age>30</age>\\n\\t</person>\\n\\t<person id=\\\"2\\\">\\n\\t\\t<name>Jane</name>\\n\\t\\t<age>25</age>\\n\\t</person>\\n</root>\") == 6, \"Test 3\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<person id=\\\"1\\\">\\n\\t\\t<name>John</name>\\n\\t\\t<age>30</age>\\n\\t</person>\\n\\t<person id=\\\"2\\\">\\n\\t\\t<name>Jane</name>\\n\\t\\t<age>25</age>\\n\\t</person>\\n</root>\") == 5, \"Test 4\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n\\t<person id=\\\"1\\\">\\n\\t\\t<name>John</name>\\n\\t\\t<age>30</age>\\n\\t</person>\\n\\t<person id=\\\"2\\\">\\n\\t\\t<name>Jane</name>\\n\\t\\t<age>25</age>\\n\\t</person>\\n</root>\") == 4, \"Test 5\"",
        "num_ids_2": 237,
        "num_ids_4": 473
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0 # Correct solution\nprint(\"Correct solution\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.0 0.0 0.0 1.0\") == \"180.0\" # (A, B, C, D) (B, C, D, A)\nassert solution(\"1.0 0.0 0.0 0.0\") == \"90.0\" # (A, B, C, D) (B, C, A, D)\nassert solution(\"-1.0 0.0 0.0 0.0\") == \"0.0\" # (A, B, C, D) (C, D, A, B)\nassert solution(\"0.0 1.0 0.0 0.0\") == \"0.0\" # (A, B, C, D) (A, C, B, D)\nassert solution(\"0.0 -1.0 0.0 0.0\") == \"0.0\" # (A, B, C, D) (B, D, A, C)",
        "num_ids_2": 93,
        "num_ids_4": 183
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 3.0 4.0 5.0\") == \"63.13\"\nassert solution(\"1.0 0.0 0.0 1.0\") == \"360.0\"\nassert solution(\"1.0 0.0 1.0 0.0\") == \"90.0\"\nassert solution(\"0.0 0.0 1.0 0.0\") == \"180.0\"\nassert solution(\"1.0 -1.0 -1.0 -1.0\") == \"180.0\"",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 4 5\") == \"27.57735080593761\", \"The output should be equal to 27.57735080593761.\"\nassert solution(\"2 -3 4 5\") == \"3.141592653589793\", \"The output should be equal to 3.141592653589793.\"\nassert solution(\"2 3 -4 5\") == \"3.141592653589793\", \"The output should be equal to 3.141592653589793.\"\nassert solution(\"2 3 4 -5\") == \"3.141592653589793\", \"The output should be equal to 3.141592653589793.\"\nassert solution(\"2 -3 -4 5\") == \"0\", \"The output should be equal to 0.\"",
        "num_ids_2": 116,
        "num_ids_4": 232
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20 30 40\") == \"60.00\", \"Test case 1 failed.\"\nassert solution(\"20 20 30 30\") == \"90.00\", \"Test case 2 failed.\"\nassert solution(\"20 30 20 40\") == \"0.00\", \"Test case 3 failed.\"\nassert solution(\"30 30 40 40\") == \"45.00\", \"Test case 4 failed.\"\nassert solution(\"40 40 30 20\") == \"90.00\", \"Test case 5 failed.\"",
        "num_ids_2": 62,
        "num_ids_4": 123
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 1 4 2\") == \"45.00\"\nassert solution(stdin=\"2 3 5 4\") == \"45.00\"\nassert solution(stdin=\"1 4 3 2\") == \"45.00\"\nassert solution(stdin=\"1 5 3 4\") == \"45.00\"\nassert solution(stdin=\"2 4 1 5\") == \"45.00\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3.141592653589793\", \"Incorrect Output\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n\") == \"180.0\"\nassert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n\") == \"45.0\"\nassert solution(\"1 0 0 1\\n0 0 1 0\\n0 1 0 0\\n0 1 0 0\\n\") == \"67.748\"",
        "num_ids_2": 104,
        "num_ids_4": 154
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n\") == \"90.00\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5.0 4.0 3.0 2.0') == 45.0\nassert solution('1.0 1.0 1.0 1.0') == 0.0\nassert solution('0.0 0.0 0.0 0.0') == 0.0\nassert solution('-5.0 -4.0 -3.0 -2.0') == -45.0\n",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"36.28\"\nassert solution(\"1 0 0 0 0 0 0 0 0 0 0 0\") == \"90\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"157.89\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0\") == \"0\"\nassert solution(\"1 0 0 0 0 0 0 0 0 0 0 0\") == \"90\"\n",
        "num_ids_2": 72,
        "num_ids_4": 147
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(f'{n}') == f'{correct_score}'\n\nfor i in range(n):\n    word = stdin.readline().strip()\n    if len(word) > 20:\n        continue\n    vowels = set(['a', 'e', 'i', 'o', 'u', 'y'])\n    if not all(c in vowels for c in word):\n        score += 1\n\nprint(score)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Score: 2\", \"Debug the given function score_words such that it returns a correct score.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\" # Empty input\nassert solution(\"2\\nhello world\\npython\") == \"1\" # Single word, no vowels\nassert solution(\"3\\napple\\nbanana\\npie\\n\") == \"2\" # Two words, no vowels\nassert solution(\"4\\napple\\nbanana\\npie\\norange\\n\") == \"2\" # Three words, no vowels\nassert solution(\"5\\napple\\nbanana\\npie\\norange\\ny\\n\") == \"1\" # Four words, only two vowels",
        "num_ids_2": 36,
        "num_ids_4": 99
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"The score of the given list of words is: 2\", \"Function score_words should return the correct score.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nword1\\nword2\\nword3\\nword4\\nword5\") == \"2\"\nassert solution(\"2\\napple\\nbanana\\npie\\nnugget\\nsoda\\n\") == \"2\"\nassert solution(\"3\\napple\\nbanana\\npie\\nnugget\\nsoda\\norange\\n\") == \"1\"\nassert solution(\"3\\napple\\nbanana\\npie\\nnugget\\nsoda\\no\\norange\\n\") == \"1\"\nassert solution(\"3\\napple\\nbanana\\npie\\nnugget\\nsoda\\no\\no\\norange\\n\") == \"1\"\nassert solution(\"5\\napple\\nbanana\\npie\\nnugget\\nsoda\\no\\no\\no\\no\\norange\\n\") == \"2\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 59,
        "num_ids_4": 125
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\napple\\norange\\nbanana\\ngrape\\n\") == \"3\"\nassert solution(\"2\\nhello\\nworld\\npython\\n\") == \"2\"\nassert solution(\"3\\nI\\nam\\nnot\\nallowed\\nto\\ndivide\\n\") == \"2\"\nassert solution(\"4\\nMy\\nage\\nis\\n28\\n\") == \"1\"\nassert solution(\"5\\nThe\\nquick\\nbrown\\fox\\njumps\\nover\\nthe\\nlazy\\ndog.\\n\") == \"2\"",
        "num_ids_2": 47,
        "num_ids_4": 100
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nhello\\n\") == \"4\\n\"\nassert solution(\"2\\nworld\\n\") == \"1\\n\"\nassert solution(\"3\\npython\\n\") == \"2\\n\"\nassert solution(\"4\\napple\\n\") == \"2\\n\"\nassert solution(\"5\\nworld\\n\") == \"1\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nhello\\nworld\\napple\\nbanana\\norange\") == 4.0\nassert solution(\"2\\nHello\\nWorld\\napple\\nbanana\\norange\") == 2.0\nassert solution(\"3\\npython\\njava\\nC\\nRuby\\nPython\") == 4.0",
        "num_ids_2": 54,
        "num_ids_4": 80
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\neverything\\n\") == \"3\"\nassert solution(\"2\\na\\nb\\nc\\nd\\ne\\n\") == \"2\"\nassert solution(\"3\\napple\\nbananas\\npapaya\\noranges\\n\") == \"5\"\nassert solution(\"4\\nspam\\nham\\nsandwich\\n\") == \"2\"\nassert solution(\"5\\napple\\nbananas\\npapaya\\noranges\\nyam\\n\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 87
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\need\\nto\\nbuy\\nmy\\nbananas\\n') == '1'\nassert solution('2\\napple\\nbanana\\nbanana\\norange\\nbanana\\n') == '3'\nassert solution('1\\nsally\\n') == '2'\nassert solution('1\\nsally\\n') == '2'\nassert solution('1\\nsally\\n') == '2'",
        "num_ids_2": 57,
        "num_ids_4": 87
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"MCCXCIV\") == True\nassert solution(\"MCMLXXXIX\") == True\nassert solution(\"MCMLXXXIV\") == False\nassert solution(\"MCMXCIV\") == False\nassert solution(\"MMMCMXCIX\") == False",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"MMIX\") == False\nassert solution(\"IV\") == True\nassert solution(\"XIV\") == False\nassert solution(\"MMMCMXCIX\") == False",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"MCMXCIV\") == \"True\", \"Invalid Roman numeral\"\nassert solution(\"M\") == \"False\", \"Invalid Roman numeral\"\nassert solution(\"MMM\") == \"True\", \"Invalid Roman numeral\"\nassert solution(\"MMMCMXCIV\") == \"False\", \"Invalid Roman numeral\"\nassert solution(\"MMMCMXCIV\") == \"False\", \"Invalid Roman numeral\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('MCMXCIV') == True, \"MCMXCIV is a valid Roman numeral\"\nassert solution('MMXX') == True, \"MMXX is a valid Roman numeral\"\nassert solution('MMMCMXCIX') == True, \"MMMCMXCIX is a valid Roman numeral\"\nassert solution('DCCC') == False, \"DCCC is not a valid Roman numeral\"\nassert solution('M') == False, \"M is not a valid Roman numeral\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"MCMLXXXVI\") == True\nassert solution(\"MMMCMXCIV\") == False\nassert solution(\"XXX\") == True\nassert solution(\"MMXX\") == False\nassert solution(\"MMMIV\") == True",
        "num_ids_2": 23,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"MCMXCIV\") == \"True\"\nassert solution(\"MMM\") == \"False\"\nassert solution(\"MMXIX\") == \"True\"\nassert solution(\"XXIX\") == \"False\"\nassert solution(\"XXXIV\") == \"False\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"M\") == True\nassert solution(\"MM\") == True\nassert solution(\"MMM\") == True\nassert solution(\"MMMM\") == True\nassert solution(\"MMMCMXCIX\") == True\nassert solution(\"MCMXCIX\") == False",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"III\") == \"True\"\nassert solution(\"IV\") == \"False\"\nassert solution(\"IX\") == \"True\"\nassert solution(\"V\") == \"False\"\nassert solution(\"X\") == \"True\"\nassert solution(\"L\") == \"True\"\nassert solution(\"C\") == \"True\"\nassert solution(\"M\") == \"False\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"III\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"XL\") == True\nassert solution(\"XC\") == True\nassert solution(\"CD\") == True\nassert solution(\"CM\") == True\nassert solution(\"D\") == False\nassert solution(\"M\") == False",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"MCMLXXXIV\") == \"True\"\nassert solution(\"MCMLXXXV\") == \"False\"\nassert solution(\"MCMXCIX\") == \"False\"\nassert solution(\"MMMCMXCIX\") == \"True\"\nassert solution(\"MMMCMXC\") == \"False\"\nassert solution(\"MMMMMMMMM\") == \"True\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"91 1234567890 1234567890 91 9234567890\") == \"+91 1234567890 9234567890\"\nassert solution(\"1234567890 91 1234567890 91 9234567890\") == \"+91 1234567890 9234567890\"\nassert solution(\"1234567890 91 1234567890\") == \"+91 1234567890\"\nassert solution(\"1234567890 91\") == \"+91 1234567890\"\nassert solution(\"1234567890\") == \"+91 1234567890\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 140,
        "num_ids_4": 219
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('91234567890 9876543210') == '+91 234 5678 90'\nassert solution('912345678900') == '+91 234 5678 90'\nassert solution('9123456789') == '+91 234 5678 90'\nassert solution('091234567890') == '+91 234 5678 90'\nassert solution('09123456789') == '+91 234 5678 90'\nassert solution('') == ''\nassert solution('1234567890') == ''",
        "num_ids_2": 78,
        "num_ids_4": 144
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9123456789\\n9109876543\\n911234567890\\n912345678901\\n9123456789012\") == \"+91 91 09 23 45 67 89 01 23 45 67 89 01 23 45 67 89 01 23 45 67 89 01\"\nassert solution(\"91\\n910\\n911\\n912\\n913\") == \"+91 91 09 23 45 67 89 01 23 45 67 89 01\"\nassert solution(\"9123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 209,
        "num_ids_4": 1027
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1234567890\n9876543210\n0987654321\n0123456789\n''') == '0123456789 0987654321 9876543210 1234567890\\n'\n\nassert solution('''\n123456789\n987654321\n0987654321\n0123456789\n''') == '0123456789 0987654321 987654321\\n'\n\nassert solution('''\n1234567890\n9876543210\n0987654321\n0123456789\n''') == '0123456789 0987654321 9876543210 1234567890\\n'\n\nassert solution('''\n123456789\n987654321\n0987654321\n0123456789\n''') == '0123456789 0987654321 987654321\\n'\n\nassert solution('''\n1234567890\n9876543210\n0987654321\n0123456789\n''') == '0123456789 0987654321 9876543210 1234567890\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n+911234567890\\n+123456789012\\n+1234567890123\\n991111111111\") == \"+1234567890123\"\nassert solution(\"1\\n+911234567890\\n+123456789012\\n+1234567890123\\n991111111111\") == \"+123456789012\"\nassert solution(\"1\\n+911234567890\\n+123456789012\\n+1234567890123\\n991111111111\") == \"+123456789012\"\nassert solution(\"1\\n+911234567890\\n+123456789012\\n+1234567890123\\n991111111111\") == \"+123456789012\"\nassert solution(\"1\\n+911234567890\\n+123456789012\\n+1234567890123\\n991111111111\") == \"+123456789012\"\n",
        "num_ids_2": 163,
        "num_ids_4": 325
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567890\") == \"+91 1234567890\"\nassert solution(\"01234567890\") == \"+91 1234567890\"\nassert solution(\"123456789\") == \"+91 123456789\"\nassert solution(\"0123456789\") == \"+91 123456789\"\nassert solution(\"+911234567890\") == \"+91 1234567890\"",
        "num_ids_2": 63,
        "num_ids_4": 122
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9123456789\") == \"+91 234 5678\", \"Test case 1\"\nassert solution(\"91\") == \"+91\", \"Test case 2\"\nassert solution(\"0\") == \"\", \"Test case 3\"\nassert solution(\"+9123456789\") == \"+91 234 5678\", \"Test case 4\"\nassert solution(\"+91\") == \"+91\", \"Test case 5\"\nassert solution(\"+0\") == \"\", \"Test case 6\"\n",
        "num_ids_2": 53,
        "num_ids_4": 102
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '91 123456 7890'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234567890, 9876543210, 0987654321\") == \"0987654321 9123456789 0\"\nassert solution(\"1234567890, 9876543210, 0987654321, 1234567890\") == \"1234567890 0987654321 9123456789 0\"\nassert solution(\"1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890\") == \"0987654321 9123456789 1234567890 0987654321 9123456789 0\"\nassert solution(\"1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234567890, 9876543210, 0987654321, 1234",
        "num_ids_2": 153,
        "num_ids_4": 1027
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"91 72345678 4567\\n91 09876543 2109\\n91 1234567890 0123\\n91 5678901234 5678\\n91 0987654321 0987\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name beta\") == \"50\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nalpha 20\\nbeta 30\\nbeta 50\\nbeta 70\\nquery_name beta\\n\") == \"50.00\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '50.0'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_format) == output_format",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"Testcase failed: {input_string}\\nExpected output: {expected_output}\\nOutput: {solution(input_string)}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nalpha 20\\nbeta 30 50 70\\nbeta\\n\") == \"50.00\\n\"\nassert solution(\"2\\nalpha 20\\nbeta 30 50 70\\nbeta\\n\") == \"50.00\\n\"\nassert solution(\"2\\nalpha 20\\nbeta 30 50 70\\nbeta\\n\") == \"50.00\\n\"\nassert solution(\"2\\nalpha 20\\nbeta 30 50 70\\nbeta\\n\") == \"50.00\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"50.00\", \"Output should be '50.00'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nalpha: [20, 30, 40]\\nbeta: [30, 50, 70]\\nquery_name = 'beta'\\n\") == \"50.00\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"50\", \"Expected Output: 50. Actual Output: \" + solution()",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nJohn Smith 25 M\\nSarah Williams 30 F\\nKate Lane 28 F\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"3\\nMary Smith 25 M\\nJohn Williams 30 F\\nKate Lane 28 F\") == \"Ms. Mary George\\nMr. Henry Davids\\n\"\nassert solution(\"3\\nMary Smith 25 M\\nKate Williams 30 F\\nJohn Lane 28 F\") == \"Ms. Mary George\\nMr. Henry Davids\\n\"\nassert solution(\"3\\nKate Smith 25 M\\nMary Williams 30 F\\nJohn Lane 28 F\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"3\\nKate Smith 25 M\\nJohn Williams 30 F\\nMary Lane 28 F\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nMary George 30 F\\nJohn Smith 25 F\\nJane Doe 40 M\\nTom Brown 15 F\\n\") == \"Ms. Mary George\\nMr. Henry Davids\\nMs. Tom Brown\\n\"\nassert solution(\"2\\nHenry Davids 25 F\\nGeorge Washington 35 M\\nJohn Smith 28 F\\nJane Doe 25 F\\nTom Brown 18 M\\n\") == \"Ms. George Washington\\nMr. Henry Davids\\nMs. Tom Brown\\n\"",
        "num_ids_2": 150,
        "num_ids_4": 150
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nJohn Doe 25 M\\nJane Doe 30 F\\nAlice Doe 28 M\\nBob Doe 23 F\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n\nassert solution(\"2\\nAlice Doe 28 M\\nJane Doe 30 F\\nBob Doe 23 F\\nHenry Doe 25 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n\nassert solution(\"3\\nBob Doe 23 F\\nJane Doe 30 F\\nAlice Doe 28 M\\nHenry Doe 25 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n\nassert solution(\"4\\nHenry Doe 25 M\\nJane Doe 30 F\\nBob Doe 23 F\\nAlice Doe 28 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n\nassert solution(\"5\\nAlice Doe 28 M\\nBob Doe 23 F\\nJane Doe 30 F\\nHenry Doe 25 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 250
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nMary George 25\\nJohn Doe 22\\nHenry 21\\nJane Doe 23') == 'Ms. Mary George\\nMr. Henry Davids\\nMr. Jane Doe\\nMs. John Doe'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\nJohn Doe 30 M\nJane Smith 25 F\nHenry Davids 30 M\nMary George 28 F\n''') == 'Mr. Henry Davids\\nMs. Mary George'\nassert solution('''\n3\nAlice John 25 M\nBob Smith 23 F\nCharlie Davis 30 M\nDavid Johnson 28 F\n''') == 'Ms. David Johnson\\nMr. Bob Smith\\nMr. Charlie Davis\\nMr. David Johnson'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nHenry Davids 25\\nMary George 20\\nOliver Johnson 30\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\nMr. Oliver Johnson\\n\"\n\nassert solution(\"3\\nAlice 25\\nBob 20\\nCharlie 30\\nDavid 18\\n\") == \"Mr. Alice\\nMr. Bob\\nMr. Charlie\\nMr. David\\n\"\n\nassert solution(\"2\\nAlice 25\\nBob 20\\n\") == \"Mr. Alice\\nMs. Bob\\n\"\n\nassert solution(\"1\\nBob 25\\n\") == \"Ms. Bob\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 177
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nHenry Davids M 25\\nJane Doe Jane Doe 26\\nMary George Mary George 28\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\n\nassert solution(\"3\\nAlice Brown 18\\nBob Johnson 19\\nCharlie Brown 20\") == \"Bob Johnson\\nAlice Brown\\nCharlie Brown\\n\"\n\nassert solution(\"3\\nAlice Brown 18\\nBob Johnson 19\\nCharlie Brown 20\") == \"Bob Johnson\\nAlice Brown\\nCharlie Brown\\n\"\n\nassert solution(\"3\\nAlice Brown 18\\nBob Johnson 19\\nCharlie Brown 20\") == \"Bob Johnson\\nAlice Brown\\nCharlie Brown\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 200
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 250 F\\n1 240 F\\n2 250 F\\n1 230 F\\n2 240 F\\n1 220 F\\n') == 'Mr. Henry Davids\\nMr. Mary George\\n'\nassert solution('2 250 F\\n1 240 F\\n2 250 F\\n1 230 F\\n2 240 F\\n1 220 F\\n') == 'Ms. Mary George\\nMs. Henry Davids\\n'\nassert solution('1 250 M\\n1 240 M\\n2 250 M\\n1 230 M\\n2 240 M\\n1 220 M\\n') == 'Mr. Henry Davids\\nMr. Mary George\\n'\nassert solution('2 250 M\\n1 240 M\\n2 250 M\\n1 230 M\\n2 240 M\\n1 220 M\\n') == 'Ms. Mary George\\nMs. Henry Davids\\n'",
        "num_ids_2": 146,
        "num_ids_4": 292
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nMr. Henry Davids\\nMs. Mary George\\nMary George\\nHenry Davids') == 'Mr. Henry Davids\\nMs. Mary George\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 2 3\\n') == '[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 2]]\\n'\nassert solution('1 1 3 3\\n') == '[[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\\n'\nassert solution('2 2 3 3\\n') == '[[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 0], [1, 1, 1], [1, 2, 0], [2, 0, 0], [2, 1, 0], [2, 2, 0]]\\n'\nassert solution('2 2 4 3\\n') == '[[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 0], [1, 1, 1], [1, 2, 0], [2, 0, 0], [2, 1, 0], [2, 2, 0], [2, 2, 1]]\\n'\nassert solution('3 3 4 3\\n') == '[[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 0], [1, 1, 1], [1, 2, 0], [2, 0, 0], [2, 1, 0], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 1, 0], [3, 2, 0], [3, 2, 1], [3, 2, 2]]\\n'",
        "num_ids_2": 173,
        "num_ids_4": 382
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Print an array of the elements that do not sum to n = 3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"1 1 2 4\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"1 1 2 5\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"1 1 2 6\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"1 1 2 7\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 156,
        "num_ids_4": 312
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n\") == \"\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"2 1 3 1\") == \"[[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"2 2 3 1\") == \"[[0,0,0],[0,1,0],[1,0,0],[1,1,0]]\"\nassert solution(\"2 3 2 1\") == \"[[0,0,0],[0,1,0],[1,0,0],[1,1,0]]\"\nassert solution(\"2 4 3 1\") == \"[[0,0,0],[0,1,0],[1,0,0],[1,1,0]]\"",
        "num_ids_2": 140,
        "num_ids_4": 220
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution() == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\nprint(solution(\"1\\n1\\n2\\n3\"))",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n\"\nassert solution(\"3 2 3 4\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n\"\nassert solution(\"1 1 2 10\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 205
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3+4i\"\nassert solution(\"3 4\") == \"5-6i\"\nassert solution(\"5 6\") == \"7*8i\"\nassert solution(\"7 8\") == \"13/9i\"\nassert solution(\"11 12\") == \"13+2i\"\nassert solution(\"13 14\") == \"21-3i\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"5+6.000000i\"\nassert solution(\"1 -2\") == \"-1+2.000000i\"\nassert solution(\"2 -3\") == \"5-6.000000i\"\nassert solution(\"2 5i\") == \"10+0.000000i\"\nassert solution(\"0 0i\") == \"0+0.000000i\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1+3i 5-2i\") == \"1+3i 5-2i\\n5+4i\"\nassert solution(\"1+-3i 5-2i\") == \"1-3i 5+2i\"\nassert solution(\"2+3i 0+4i\") == \"2+3i 0+4i\\n2+3i\"\nassert solution(\"2+-3i 0-4i\") == \"2-3i 0-4i\\n2-3i\"\nassert solution(\"1+3i 5-2i\") == \"1+3i 5-2i\\n5+4i\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 1i\") == \"2 + 0.0000i\", \"Solution 1\"\nassert solution(\"1 - 1i\") == \"0 - 1.0000i\", \"Solution 2\"\nassert solution(\"2 - 1.5i\") == \"3.5 - 1.1667i\", \"Solution 3\"\nassert solution(\"2 * 3i\") == \"6 + 3.0000i\", \"Solution 4\"\nassert solution(\"3 / 2i\") == \"1.5 + 0.5000i\", \"Solution 5\"\nassert solution(\"1 + 2i\") == \"2 + 1.0000i\", \"Solution 6\"\nassert solution(\"3 - 1i\") == \"0 + 1.0000i\", \"Solution 7\"\nassert solution(\"4 * 5i\") == \"20 + 12.0000i\", \"Solution 8\"\nassert solution(\"5 / 3i\") == \"3 + 1.0000i\", \"Solution 9\"\nassert solution(\"1 + 2i\") == \"2 + 1.0000i\", \"Solution 10\"\nassert solution(\"3 + 4i\") == \"7 + 1.0000i\", \"Solution 11\"\nassert solution(\"5 - 2i\") == \"5 + 2.0000i\", \"Solution 12\"\nassert solution(\"2 - 3i\") == \"1.5 - 1.5000i\", \"Solution 13\"\nassert solution(\"4 - 5i\") == \"5 + 1.0000i\", \"Solution 14\"\nassert solution(\"6 * 7i\") == \"28 + 24.0000i\", \"Solution 15\"\nassert solution(\"7 / 8i\") == \"2.1250 + 0.2500i\", \"Solution 16\"\nassert solution(\"1 + 2i\") == \"2 + 1.0000i\", \"Solution 17\"\nassert solution(\"3 - 4i\") == \"1 + 1.0000i\", \"Solution 18\"\nassert solution(\"5 + 6i\") == \"9 + 2.0000i\", \"Solution 19\"\nassert solution(\"8 + 9i\") == \"16 + 3.0000i\", \"Solution 20\"\nassert solution(\"10 - 11i\") == \"5 + 1.0000i\", \"Solution 21\"\nassert solution(\"12 * 13i\") == \"30 + 24.0000i\", \"Solution 22\"\nassert solution(\"13 / 14i\") == \"1.5 + 0.5000i\", \"Solution 23\"\nassert solution(\"15 + 16i\") == \"30 + 24.0000i\", \"Solution 24\"\nassert solution(\"17 - 18i\") == \"8 + 2.0000i\", \"Solution 25\"\nassert solution(\"19 * 20i\") == \"48 + 40.0000i\", \"Solution 26\"\nassert solution(\"21 / 22i\") == \"2.0625 + 0.1875i\", \"Solution 27\"\nassert solution(\"1 + 2i\") == \"2 + 1.0000i\", \"Solution 28\"\nassert solution(\"3 - 4i\") == \"1 + 1.0000i\", \"Solution 29\"\nassert solution(\"5 + 6i\") == \"9 + 2.0000i\", \"Solution 30\"\nassert solution(\"7 * 8i\") == \"24 + 32.0000i\", \"Solution 31\"\nassert solution(\"9 / 10i\") == \"0.5 + 0.5000i\", \"Solution 32\"\nassert solution(\"15 + 16i\") == \"30 + 24.0000i\", \"Solution 33\"\nassert solution(\"17 - 18i\") == \"8 + 2.0000i\",",
        "num_ids_2": 56,
        "num_ids_4": 116
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3.4 1.2 + 2.3i\") == \"6.8 + -2.1i\"\nassert solution(\"5 0.1 + 2.3i\") == \"0.6666666666666667 + 0.3333333333333333i\"\nassert solution(\"4 0.5 + 2.3i\") == \"2.1 + 0.5i\"\nassert solution(\"1 0.5 - 2.3i\") == \"1.05 - 0.2666666666666667i\"\nassert solution(\"2 0.5 * 2.3i\") == \"4.6 + 1.2i\"\nassert solution(\"0 0.5 / 2.3i\") == \"0.0000000000000000 + 0.6666666666666667i\"\nassert solution(\"1 1.5 mod 2.3i\") == \"0.0000000000000000 + 1.0000000000000000i\"\nassert solution(\"2 0.5 mod 2.3i\") == \"0.0000000000000000 + 1.0000000000000000i\"",
        "num_ids_2": 88,
        "num_ids_4": 160
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 -2 +3.14i') == '1.00-2.00i'\nassert solution('0 +0.00i') == '0.00+0.00i'\nassert solution('1 +0.00i') == '1.00+0.00i'\nassert solution('0 +1.00i') == '1.00+0.00i'\nassert solution('0 +0.00') == '0.00+0.00i'",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+2i\") == \"3.00+5.00i\"\nassert solution(\"1+-2i\") == \"-3.00+5.00i\"\nassert solution(\"1*2i\") == \"2.00+4.00i\"\nassert solution(\"1/-2i\") == \"-0.7071067811865476+2.0000000000000006i\"\nassert solution(\"100*2i\") == \"200.00+400.00i\"\nassert solution(\"1000/2i\") == \"500.00000000000001+500.00000000000001i\"",
        "num_ids_2": 44,
        "num_ids_4": 116
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5.0 7.0\") == \"8.00+2.00i\"\nassert solution(\"-5.0 -7.0\") == \"8.00-2.00i\"\nassert solution(\"2.0 +3.0i\") == \"5.0+4.00i\"\nassert solution(\"3.0 -5.0i\") == \"5.0-4.00i\"\nassert solution(\"1.0 +0.00i\") == \"1.0+0.00i\"\nassert solution(\"0.0 -0.00i\") == \"0.0-0.00i\"\nassert solution(\"0.0 +0.00i\") == \"0.0+0.00i\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected output: {expected_output}, Received output: {solution(input())}\"\nprint(\"Test passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1+2i\") == \"3-4i\"\nassert solution(\"1+2+3i\") == \"3-4i\"\nassert solution(\"4-5i\") == \"3+2i\"\nassert solution(\"5-4-3i\") == \"3+2i\"\nassert solution(\"6/3i\") == \"1.50+1.50i\"\nassert solution(\"2*7i\") == \"6.00+2.00i\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"xyz\\nabc\\n\") == \"xaybzc\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"xyz\") == \"xaybzc\", \"Invalid output\"\nassert solution(\"abc\") == \"xaybzc\", \"Invalid output\"\n\nassert solution(\"\") == \"\", \"Invalid input\"\nassert solution(\"abcxyz\") == \"\", \"Invalid input\"\nassert solution(\"xyzabc\") == \"\", \"Invalid input\"\n\nassert solution(\"abc\") == \"xaybzc\", \"Invalid output\"",
        "num_ids_2": 34,
        "num_ids_4": 57
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"xyz\\nabc\\n\") == \"xaybzc\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\", \"The original password is xaybzc\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\\n\"\nassert solution(\"ab\\nef\") == \"ab\\nef\\n\"\nassert solution(\"xyz\\nab\\nabc\\n\") == \"xaybzc\\nab\\nabc\\n\"\nassert solution(\"abcd\\nefg\\nhijkl\\nmno\") == \"abcd\\nefg\\nhijkl\\nmno\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 97
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc', \"Solution should return 'xaybzc' for input 'xyz'.\"\nassert solution('abc') == 'xaybzc', \"Solution should return 'xaybzc' for input 'abc'.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\", \"The correct answer is '00'.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"12B0\") == \"01\"\nassert solution(\"012B0\") == \"010\"\nassert solution(\"ABB0\") == \"001\"\nassert solution(\"123B0\") == \"012\"\nassert solution(\"123C4D56B0\") == \"0123\"",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('01B0') == '00'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('01B0') == '00', 'Expected output: \"00\", but got: \"%s\"' % solution('01B0')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"01B0\")) == \"00\", \"The solution should return 00\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"02\") == \"0\"\nassert solution(\"1000000000\") == \"1101101101\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 25,
        "num_ids_4": 63
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('01B0') == '00'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('01B0') == '00'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"10\\n1 1 1 1 1\") == \"4\"\nassert solution(\"5\\n1 0 0 0 0\") == \"0\"\nassert solution(\"5\\n2 1 1 1 1\") == \"1\"\nassert solution(\"5\\n3 3 3 3 3\") == \"6\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 1 0 1 2\") == \"4\"\nassert solution(\"5\\n2 1 0 1 2 3\") == \"4\"\nassert solution(\"5\\n2 1 0 1 2 3 4\") == \"6\"\nassert solution(\"5\\n2 1 0 1 2 3 4 5\") == \"6\"\nassert solution(\"5\\n2 1 0 1 2 3 4 5 6\") == \"6\"",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"5\\n2 1 0 1 2\") == \"4\\n\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3\\n2 0 1 1 0\") == \"4\"\nassert solution(\"5\\n2 1 5 4 3\\n2 0 1 1 2\") == \"3\"",
        "num_ids_2": 53,
        "num_ids_4": 85
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"1\\n5\") == \"5\\n\"\nassert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\nassert solution(\"1\\n5\") == \"5\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"4\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5\\n2 1 5 4 3\") == \"4\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aca\\naccc\\nca\") == \"A\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aca\\naccc\\nc\") == \"A\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aca\\naccc\\nca\\n\") == \"A\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 2\") == \"YES\"\nassert solution(\"1 1 3\") == \"YES\"\nassert solution(\"2 2 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the three phrases separated by space: \")) == \"YES\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"10 5 7\") == \"NO\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES', 'Invalid input'\n\nsolution(\"5 5 7\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5 7') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\", \"Test 1 failed\"\nassert solution(\"1 2 3\") == \"NO\", \"Test 2 failed\"\nassert solution(\"4 5 6\") == \"YES\", \"Test 3 failed\"\nassert solution(\"7 8 9\") == \"YES\", \"Test 4 failed\"\nassert solution(\"10 11 12\") == \"NO\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"2 4 6 8 10\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\\n\", \"Solution does not work as expected.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"11\", \"The 5-th Lucas number is not correct.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"11\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"11\\n\", \"The solution should output 11, but it is currently outputting {}\".format(solution())",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n\") == \"11\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"11\\n\", \"Your solution is incorrect. The expected output should be '11\\n'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '11'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5\") == \"11\\n\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"11\\n\", \"Solution should return 11\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"11\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\", \"Test 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the lengths of the upper base, lower base, and height of the trapezoid: \")) == \"7\", \"The correct area of the given trapezoid is 7.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\", \"Test Case 1\"\n\nassert solution(\"4\\n6\\n10\") == \"40\", \"Test Case 2\"\n\nassert solution(\"6\\n8\\n12\") == \"48\", \"Test Case 3\"\n\nassert solution(\"10\\n12\\n16\") == \"60\", \"Test Case 4\"\n\nassert solution(\"12\\n14\\n18\") == \"72\", \"Test Case 5\"",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\"\nassert solution(\"6\\n12\\n10\\n\") == \"22\"\nassert solution(\"8\\n16\\n20\\n\") == \"40\"\nassert solution(\"12\\n16\\n24\\n\") == \"56\"\nassert solution(\"16\\n20\\n28\\n\") == \"80\"\n",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"Test case 1 failed.\"\nassert solution(\"4\\n10\\n5\\n\") == \"25\\n\", \"Test case 2 failed.\"\nassert solution(\"5\\n5\\n10\\n\") == \"35\\n\", \"Test case 3 failed.\"\nassert solution(\"6\\n10\\n7\\n\") == \"46\\n\", \"Test case 4 failed.\"\nassert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\", \"The area of the trapezoid should be 7.\"\nassert solution(\"2\\n5\\n3\\n\") == \"12\\n\", \"The area of the trapezoid should be 12.\"\nassert solution(\"2\\n3\\n5\\n\") == \"15\\n\", \"The area of the trapezoid should be 15.\"\nassert solution(\"5\\n6\\n4\\n\") == \"20\\n\", \"The area of the trapezoid should be 20.\"\nassert solution(\"3\\n4\\n6\\n\") == \"12\\n\", \"The area of the trapezoid should be 12.\"",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\", \"Your code is wrong.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 3\n    \"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    4 -1 6\n    \"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    5 2 2\n    \"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    3 3 3\n    \"\"\"\n) == \"11\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1 -1\n    \"\"\"\n) == \"11\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"11\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"11\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"39\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"1464\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 497
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\nassert solution(\"5\\n10 11 12 13 14\") == \"29\\n\"\nassert solution(\"1\\n1\") == \"2\\n\"\nassert solution(\"3\\n1000000000\") == \"18446744073709551615\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 107
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\", \"Test 1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\", \"Expected 'YES' but got: {}\".format(solution(\"4 3 2\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"3 2 4\") == \"NO\"\nassert solution(\"4 6 1\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"6 5 4\") == \"NO\"\nassert solution(\"7 7 7\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"6 4 7\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4 5 6\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 5 8\") == \"NO\"\nassert solution(\"7 2 9\") == \"YES\"\nassert solution(\"6 2 9\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 4 1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 11 1\") == \"30\"\nassert solution(\"5 5 5\") == \"15\"\nassert solution(\"3 5 10\") == \"40\"\nassert solution(\"4 8 20\") == \"60\"\nassert solution(\"2 4 6\") == \"72\"\nassert solution(\"5 7 9\") == \"85\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11 1\") == \"30\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11 1\\n\") == \"30\"\nassert solution(\"5 3 11\\n\") == \"30\"\nassert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n3\") == \"28\"\nassert solution(\"5 3 11\\n5\") == \"28\"\nassert solution(\"5 3 11\\n7\") == \"25\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11 1\") == \"30\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11 1\") == \"30\", \"Test case 1 failed\"\nassert solution(\"1 1 1 1\") == \"10\", \"Test case 2 failed\"\nassert solution(\"1 1 1 2\") == \"10\", \"Test case 3 failed\"\nassert solution(\"1 1 1 3\") == \"10\", \"Test case 4 failed\"\nassert solution(\"1 1 1 4\") == \"10\", \"Test case 5 failed\"\nassert solution(\"1 1 1 5\") == \"10\", \"Test case 6 failed\"",
        "num_ids_2": 49,
        "num_ids_4": 97
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"5 5 10\\n1\\n\") == \"25\"\nassert solution(\"10000 10000 10000\\n1\\n\") == \"10000\"\nassert solution(\"1 2 3\\n1\\n\") == \"3\"\nassert solution(\"100000 100000 100000\\n1\\n\") == \"100000\"",
        "num_ids_2": 42,
        "num_ids_4": 96
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Solution should return Yes\"\nassert solution(\"defghijklmno\") == \"No\", \"Solution should return No\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"The output should be Yes.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aabbccddee\") == \"No\"\nassert solution(\"abbcdddde\") == \"No\"\nassert solution(\"baabcb\") == \"No\"\nassert solution(\"aaaaa\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abc') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Test case 1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 1\n2 2\n3 3\n''') == '3\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\nassert solution(\"3 5\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\nassert solution(\"2 4\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"4 2\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 114
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\nassert solution(\"4 5\\n2 2\\n3 3\\n4 4\\n\") == \"4\\n\"\nassert solution(\"2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n\") == \"3\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 660
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\\n\", \"The output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"24\"\nassert solution(\"5 5\") == \"125\"\nassert solution(\"6 6\") == \"729\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\\n\", \"Test 1\"\nassert solution(\"3 2\") == \"3\\n\", \"Test 2\"\nassert solution(\"4 3\") == \"3\\n\", \"Test 3\"\nassert solution(\"5 3\") == \"6\\n\", \"Test 4\"\nassert solution(\"6 3\") == \"6\\n\", \"Test 5\"\nassert solution(\"7 3\") == \"10\\n\", \"Test 6\"\nassert solution(\"8 3\") == \"10\\n\", \"Test 7\"\nassert solution(\"9 3\") == \"15\\n\", \"Test 8\"\nassert solution(\"10 3\") == \"15\\n\", \"Test 9\"\nassert solution(\"11 3\") == \"21\\n\", \"Test 10\"\nassert solution(\"12 3\") == \"21\\n\", \"Test 11\"\nassert solution(\"13 3\") == \"28\\n\", \"Test 12\"\nassert solution(\"14 3\") == \"28\\n\", \"Test 13\"\nassert solution(\"15 3\") == \"36\\n\", \"Test 14\"\nassert solution(\"16 3\") == \"36\\n\", \"Test 15\"\nassert solution(\"17 3\") == \"45\\n\", \"Test 16\"\nassert solution(\"18 3\") == \"45\\n\", \"Test 17\"\nassert solution(\"19 3\") == \"55\\n\", \"Test 18\"\nassert solution(\"20 3\") == \"55\\n\", \"Test 19\"\nassert solution(\"21 3\") == \"66\\n\", \"Test 20\"\nassert solution(\"22 3\") == \"66\\n\", \"Test 21\"\nassert solution(\"23 3\") == \"79\\n\", \"Test 22\"\nassert solution(\"24 3\") == \"79\\n\", \"Test 23\"\nassert solution(\"25 3\") == \"94\\n\", \"Test 24\"\nassert solution(\"26 3\") == \"94\\n\", \"Test 25\"\nassert solution(\"27 3\") == \"111\\n\", \"Test 26\"\nassert solution(\"28 3\") == \"111\\n\", \"Test 27\"\nassert solution(\"29 3\") == \"130\\n\", \"Test 28\"\nassert solution(\"30 3\") == \"130\\n\", \"Test 29\"\nassert solution(\"31 3\") == \"151\\n\", \"Test 30\"\nassert solution(\"32 3\") == \"151\\n\", \"Test 31\"\nassert solution(\"33 3\") == \"174\\n\", \"Test 32\"\nassert solution(\"34 3\") == \"174\\n\", \"Test 33\"\nassert solution(\"35 3\") == \"200\\n\", \"Test 34\"\nassert solution(\"36 3\") == \"200\\n\", \"Test 35\"\nassert solution(\"37 3\") == \"228\\n\", \"Test 36\"\nassert solution(\"38 3\") == \"228\\n\", \"Test 37\"\nassert solution(\"39 3\") == \"259\\n\", \"Test 38\"\nassert solution(\"40 3\") == \"259\\n\", \"Test 39\"\nassert solution(\"41 3\") == \"293\\n\", \"Test 40\"\nassert solution(\"42 3\") == \"293\\n\", \"Test 41\"\nassert solution(\"43 3\") == \"330\\n\", \"Test 42\"\nassert solution(\"44 3\") == \"330\\n\", \"Test 43\"\nassert solution(\"45 3\") == \"370\\n\", \"Test 44\"\nassert solution(\"46 3\") == \"370\\n\", \"Test 45\"\nassert solution(\"47 3\") == \"414\\n\", \"Test 46\"\nassert solution(\"48 3\") == \"414\\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\\n\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"20 5\\n5 10 20\") == \"15\"\nassert solution(\"10 20\\n5 10 20\") == \"20\"\nassert solution(\"5 10 20\\n10 20 30\") == \"30\"\nassert solution(\"5 10 20\\n10 20 30\\n15 20 35\") == \"40\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 3\\n5 10 15') == '10'\nassert solution('10 3\\n10 10 10') == '20'\nassert solution('4 5\\n1 2 3') == '6'\nassert solution('7 8\\n2 3 4') == '16'\nassert solution('10 10\\n1 2 3 4 5') == '100'\nassert solution('1 2\\n3 4 5') == '6'\nassert solution('10 10\\n5 4 3 2 1') == '100'\n",
        "num_ids_2": 47,
        "num_ids_4": 86
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"1 10 20 20\\n5\") == \"20\"\nassert solution(\"1 1 1\\n1 2 3 4 5\") == \"3\"\n",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(20) +'' + str(3)) == '10'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"10 5\\n15 20 25\") == \"20\"\nassert solution(\"30 5\\n10 15 20\") == \"20\"",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Incorrect output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"4 4 1 2\") == \"6\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"1 3 4 2\") == \"12\"\nassert solution(\"1 5 2 1\") == \"12\"\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Input should be '3 5 2 7', not '3 5 2 7'.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Incorrect output\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"Test 1\"\nassert solution(\"5 1 4 9\") == \"12\\n\", \"Test 2\"\nassert solution(\"3 5 5 3\") == \"15\\n\", \"Test 3\"\nassert solution(\"4 5 3 6\") == \"75\\n\", \"Test 4\"\nassert solution(\"3 5 2 4\") == \"15\\n\", \"Test 5\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"15\", \"Test Case 1 Failed\"\nassert solution(input()) == \"14\", \"Test Case 2 Failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"4 3 5 8\") == \"14\"\nassert solution(\"3 1 2 5\") == \"10\"\nassert solution(\"4 2 3 1\") == \"6\"\nassert solution(\"1 1 1 1\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\"\nassert solution(\"5 10 4 6\") == \"30\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\"\nassert solution(\"5 10 10 10\") == \"250\\n\"\nassert solution(\"1 1 1 2\") == \"1\\n\"\nassert solution(\"1 2 3 4\") == \"1\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nassert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nprint(solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\"))",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    6\n    AC\n    TLE\n    AC\n    AC\n    WA\n    TLE\n    \"\"\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(21) == 27, \"Test failed. Expected 27, but got {}\".format(solution(21))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"21\") == \"27\", \"Test failed\" # Pass\nprint(\"Test passed\") # Pass",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"21\\n\") == \"27\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"21\") == \"27\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"21\") == \"27\", \"Test case 1 failed\"\nassert solution(\"12\") == \"21\", \"Test case 2 failed\"\nassert solution(\"03\") == \"0\", \"Test case 3 failed\"\nassert solution(\"24\") == \"1\", \"Test case 4 failed\"\nassert solution(\"25\") == \"1\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='21') == '27', \"Incorrect output. Expected '27', got '{}'.\".format(solution(stdin='21'))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"9\", \"Input error\"\nassert solution(\"1 10\") == \"error\", \"Input error\"\nassert solution(\"3 3\") == \"6\", \"Input error\"\nassert solution(\"1 5\") == \"error\", \"Input error\"\nassert solution(\"4 7\") == \"error\", \"Input error\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"1 10\") == \"error\"\nassert solution(\"11 12\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='6 3') == '9\\n' # Expected output: 9",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3') == '9\\n'\nassert solution('10 3') == 'error\\n'\nassert solution('2 3') == 'error\\n'\nassert solution('11 3') == 'error\\n'\nassert solution('1 0') == 'error\\n'",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"7 4\") == \"error\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n\") == \"9\\n\"\nassert solution(\"10 5\\n\") == \"error\\n\"\nassert solution(\"7 8\\n\") == \"9\\n\"\nassert solution(\"3 4\\n\") == \"11\\n\"\nassert solution(\"20 -10\\n\") == \"error\\n\"\nassert solution(\"20 1000\\n\") == \"error\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 3\") == \"error\"\nassert solution(\"10 3.5\") == \"error\"\nassert solution(\"10 0\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\na_1 a_2 a_3 a_4\\na_2 a_3 a_4 a_5\\na_3 a_4 a_5 a_6\\na_4 a_5 a_6 a_7\\n') == '7'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"Your solution is incorrect.\"\nprint(\"Corrected!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '7', \"Expected output: 7, but got: {}\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\"\nassert solution(\"5\\n3 8 5 6\") == \"3\"\nassert solution(\"3\\n100 100 100\") == \"100\"\nassert solution(\"1000\\n\") == \"1000\"",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 7 9\\n\") == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"\n\nassert solution(\"2 4\") == \"No\"\n\nassert solution(\"12 12\") == \"Yes\"\n\nassert solution(\"2 12\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\\n\"\nassert solution(\"2 4\") == \"No\\n\"\nassert solution(\"3 4\") == \"No\\n\"\nassert solution(\"4 4\") == \"Yes\\n\"\nassert solution(\"5 5\") == \"Yes\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\\n\"\nassert solution(\"2 5\\n\") == \"No\\n\"\nassert solution(\"7 1\\n\") == \"Yes\\n\"\nassert solution(\"12 10\\n\") == \"No\\n\"\nassert solution(\"15 15\\n\") == \"Yes\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\\n\"\nassert solution(\"2 5\\n\") == \"No\\n\"\nassert solution(\"1 12\\n\") == \"Yes\\n\"\nassert solution(\"12 12\\n\") == \"Yes\\n\"\nassert solution(\"0 12\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n\") == \"Yes\"\nassert solution(\"2 5\\n\") == \"Yes\"\nassert solution(\"4 6\\n\") == \"Yes\"\nassert solution(\"8 11\\n\") == \"Yes\"\nassert solution(\"10 12\\n\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'No'  # Line 1: Correct answer",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"4 1\") == \"Yes\"\nassert solution(\"7 7\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"Even\"\nprint(\"Odd\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Even\"\nprint(\"Even\")\n\nassert solution(\"10 3\") == \"Odd\"\nprint(\"Odd\")\n\nassert solution(\"5 6\") == \"Odd\"\nprint(\"Odd\")\n\nassert solution(\"10 10\") == \"Even\"\nprint(\"Even\")\n\nassert solution(\"0 0\") == \"Even\"\nprint(\"Even\")\n\nassert solution(\"10 0\") == \"Even\"\nprint(\"Even\")",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Even\\n\", \"The output is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Even\", \"The product should be even\"\nassert solution(\"6 8\") == \"Odd\", \"The product should be odd\"\nassert solution(\"9 12\") == \"Even\", \"The product should be even\"\nassert solution(\"2 2\") == \"Even\", \"The product should be even\"\nassert solution(\"1 1\") == \"Odd\", \"The product should be odd\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Even\", \"The output should be 'Even', but it is '{}'.\".format(solution(\"3 4\"))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 6\") == \"Odd\"\nassert solution(\"1 1\") == \"Even\"\nassert solution(\"1 2\") == \"Odd\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Even\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 6') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\", \"The output is not as expected.\"\nprint(\"The output is correct.\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\nassert solution(\"5 3\") == \"3\\n\"\nassert solution(\"1 0\") == \"1\\n\"\nassert solution(\"1 4\") == \"4\\n\"\nassert solution(\"5 0\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6\") == \"2\\n\"\nassert solution(\"2 4\") == \"3\\n\"\nassert solution(\"3 4\") == \"4\\n\"\nassert solution(\"4 4\") == \"4\\n\"\nassert solution(\"5 4\") == \"5\\n\"\nassert solution(\"6 4\") == \"6\\n\"\nassert solution(\"7 4\") == \"7\\n\"\nassert solution(\"8 4\") == \"8\\n\"\nassert solution(\"9 4\") == \"9\\n\"\nassert solution(\"10 4\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6\") == \"2\\n\", \"Test Case 1 Failed\"\nassert solution(\"3 4\") == \"4\\n\", \"Test Case 2 Failed\"\nassert solution(\"10 10\") == \"2\\n\", \"Test Case 3 Failed\"\nassert solution(\"1 2\") == \"2\\n\", \"Test Case 4 Failed\"\nassert solution(\"4 5\") == \"4\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"The maximum number of Scc groups is not defined.\"\nassert solution(\"\") == \"The maximum number of Scc groups is not defined.\"\nassert solution(\"1 6\") == \"The maximum number of Scc groups is not defined.\"\nassert solution(\"5 4\") == \"The maximum number of Scc groups is not defined.\"\nassert solution(\"1 2\") == \"The maximum number of Scc groups is not defined.\"\nassert solution(\"2 1\") == \"The maximum number of Scc groups is not defined.\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"4\\n1 2 3\\n5\\n6 7 8\\n9\") == \"5\\n6\"\nassert solution(\"2\\n3\\n4\") == \"0\"\nassert solution(\"4\\n1 2 3\\n5\\n6 7 8\\n9\") == \"5\\n6\"\nassert solution(\"3\\n1 1\\n3 2\") == \"3\\n3\"\nassert solution(\"5\\n2 3\\n4 5\") == \"0\\n1\"",
        "num_ids_2": 66,
        "num_ids_4": 115
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\\n\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\\n\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\\n\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"3\n    2 1 4\n    2\n    1 1\n    2 3\"\"\"\n) == \"\"\"6\n9\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"\nassert solution(input()) == \"6\\n9\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\\n9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6\\n9\\n'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2\\n1 2\\n2 3\\n4\\n3 4\\n2\\n1 2\\n2 3\\n1 3\\n2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nprint(\"Test Passed\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 1\") == \"1000\"\nassert solution(\"1000 2\") == \"2000\"\nassert solution(\"1000 3\") == \"3000\"\nassert solution(\"1000 4\") == \"4000\"\nassert solution(\"1000 5\") == \"5000\"\nassert solution(\"1000 6\") == \"6000\"\nassert solution(\"1000 7\") == \"7000\"\nassert solution(\"1000 8\") == \"8000\"\nassert solution(\"1000 9\") == \"9000\"\nassert solution(\"1001 1\") == \"1000\"\nassert solution(\"1001 2\") == \"2000\"\nassert solution(\"1001 3\") == \"3000\"\nassert solution(\"1001 4\") == \"4000\"\nassert solution(\"1001 5\") == \"5000\"\nassert solution(\"1001 6\") == \"6000\"\nassert solution(\"1001 7\") == \"7000\"\nassert solution(\"1001 8\") == \"8000\"\nassert solution(\"1001 9\") == \"9000\"\nassert solution(\"1000 10\") == \"1000\"\nassert solution(\"1000 11\") == \"2000\"\nassert solution(\"1000 12\") == \"3000\"\nassert solution(\"1000 13\") == \"4000\"\nassert solution(\"1000 14\") == \"5000\"\nassert solution(\"1000 15\") == \"6000\"\nassert solution(\"1000 16\") == \"7000\"\nassert solution(\"1000 17\") == \"8000\"\nassert solution(\"1000 18\") == \"9000\"\nassert solution(\"1000 19\") == \"1000\"\nassert solution(\"1000 20\") == \"2000\"\nassert solution(\"1000 21\") == \"3000\"\nassert solution(\"1000 22\") == \"4000\"\nassert solution(\"1000 23\") == \"5000\"\nassert solution(\"1000 24\") == \"6000\"\nassert solution(\"1000 25\") == \"7000\"\nassert solution(\"1000 26\") == \"8000\"\nassert solution(\"1000 27\") == \"9000\"\nassert solution(\"1000 28\") == \"1000\"\nassert solution(\"1000 29\") == \"2000\"\nassert solution(\"1000 30\") == \"3000\"\nassert solution(\"1000 31\") == \"4000\"\nassert solution(\"1000 32\") == \"5000\"\nassert solution(\"1000 33\") == \"6000\"\nassert solution(\"1000 34\") == \"7000\"\nassert solution(\"1000 35\") == \"8000\"\nassert solution(\"1000 36\") == \"9000\"\nassert solution(\"1000 37\") == \"1000\"\nassert solution(\"1000 38\") == \"2000\"\nassert solution(\"1000 39\") == \"3000\"\nassert solution(\"1000 40\") == \"4000\"\nassert solution(\"1000 41\") == \"5000\"\nassert solution(\"1000 42\") == \"6000\"\nassert solution(\"1000 43\") == \"7000\"\nassert solution(\"1000 44\") == \"8000\"\nassert solution",
        "num_ids_2": 53,
        "num_ids_4": 89
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 2\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 2 3 4 5 6 7 8 9 0 2\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2\") == \"2000\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\\n0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8 9 0 2 3 4 5 6 7 8",
        "num_ids_2": 75,
        "num_ids_4": 227
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"100 8\\n1 3 4 5 6 7 8 9\") == \"200\"\nassert solution(\"100 8\\n1 3 4 5 6 7 8 9\") == \"200\"\nassert solution(\"100 8\\n1 3 4 5 6 7 8 9\") == \"200\"\nassert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 68,
        "num_ids_4": 134
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000\\n'\nassert solution('1000 8\\n1 3 4 5 6 7 8 9\\n0 2') == '1000\\n'\nassert solution('1000 9\\n1 3 4 5 6 7 8 9\\n2 4') == '9000\\n'\nassert solution('1000 9\\n1 3 4 5 6 7 8 9\\n1 3') == '2000\\n'\nassert solution('1000 9\\n1 3 4 5 6 7 8 9\\n0 0') == '0\\n'\nassert solution('1000 9\\n1 3 4 5 6 7 8 9\\n9 9') == '0\\n'\nassert solution('1000 9\\n1 3 4 5 6 7 8 9\\n10 10') == '0\\n'\n",
        "num_ids_2": 79,
        "num_ids_4": 163
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9\\n') == '2000\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nprint('All tests passed.')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n6 7\n8 9\n10 11\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n2 3\n1 2 3 4 5\n6 7\n8 9\n10 11\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n10000000 10000000\n1 2 3 4 5 6 7 8 9\n10000000 10000000\n10000000 10000000\n10000000 10000000\n\"\"\") == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"\nassert solution(\"3 2\\n2 1\\n1 3\\n2 4\") == \"2\\n\"\nassert solution(\"3 2\\n2 1\\n1 3\\n2 4\") == \"2\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 96
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 4\\n2 3\\n2 4\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 3\\n2 3\\n1 3\\n1 4\\n2 3\\n2 4\") == \"3\\n\"\nassert solution(\"4 5\\n1 2 3 4 5\\n1 4\\n2 3\\n2 4 6\\n3 3 5 4\") == \"0\\n\"\nassert solution(\"6 7\\n1 2 3 4 5 6 7\\n1 4\\n2 3\\n2 4 6\\n3 3 5 4 7 8\") == \"2\\n\"\nassert solution(\"7 10\\n1 2 3 4 5 6 7 8 9 10\\n1 4\\n2 3\\n2 4 6\\n3 3 5 4 7 8\\n1 7\\n2 6\\n3 5\\n4 4\\n5 3\\n6 2\\n7 1\\n8 0\\n9 0\\n10 0\") == \"0\\n\"\n",
        "num_ids_2": 78,
        "num_ids_4": 175
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n3\\n\") == \"10\", \"Incorrect Output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\"\nassert solution(\"5\\n3\\n\") == \"16\"\nassert solution(\"1\\n2\\n\") == \"4\"\nassert solution(\"10\\n3\\n\") == \"10\"\nassert solution(\"3\\n4\\n\") == \"8\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\", \"The output is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"10\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\", \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"3\\n5\") == \"16\"\nassert solution(\"5\\n7\") == \"23\"\nassert solution(\"1\\n1\") == \"2\"\nassert solution(\"5\\n1\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1, \"Error: Solution for x = 1 is not correct\"\nassert solution(0) == 0, \"Error: Solution for x = 0 is not correct\"\nassert solution(0.5) == 0, \"Error: Solution for x = 0.5 is not correct\"\nassert solution(1.5) == 1, \"Error: Solution for x = 1.5 is not correct\"\nassert solution(2) == 0, \"Error: Solution for x = 2 is not correct\"\n",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"0\"\nassert solution(0) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '1'\nprint('0' if solution(input()) == '1' else '1')",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1') == '0'\nassert solution(stdin='2') == '1'\nassert solution(stdin='0') == '1'\nassert solution(stdin='1') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"125\") == \"176\", \"Test case failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"125\") == \"176\", \"Test 1 failed\"\nassert solution(\"150\") == \"176\", \"Test 2 failed\"\nassert solution(\"180\") == \"176\", \"Test 3 failed\"\nassert solution(\"190\") == \"176\", \"Test 4 failed\"\nassert solution(\"210\") == \"176\", \"Test 5 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('125') == '176'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\", \"Expected output: 176, but got: \" + solution(\"125\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"15\") == \"16\"\nassert solution(\"101\") == \"111\"\nassert solution(\"10001\") == \"10011\"\nassert solution(\"110100\") == \"110111\"",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\", \"Test Case Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6 7 8 9\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 111
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9\") == \"1\\n\"\nassert solution(\"11\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 83
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\na_1 a_2... a_{N}\") == \"1\\n\"\nassert solution(\"6\\na_1 a_2... a_{N}\") == \"0\\n\"\nassert solution(\"6\\na_1 a_2... a_{N}\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\", \"Test case 1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6') == '1\\n', \"Expected output: 1\\n\"\nassert solution('10 10 10 10 10 10') == '10\\n', \"Expected output: 10\\n\"\nassert solution('2 3 5 7 9') == '0\\n', \"Expected output: 0\\n\"\nassert solution('1 1 2 2 3 3') == '1\\n', \"Expected output: 1\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 130
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"15800\\n\", \"Output should be 15800\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"N: \")) == \"15800\", \"Incorrect output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20\") == \"15800\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"15800\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"15800\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20') == '15800'\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 15800, \"Error: Please implement the solution\"\nprint(\"Success: Test Passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"15800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"15800\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"The letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid are a, b and c from top-right to bottom-left. Concatenate these letters and print abc.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ant\\nobe\\nrec\\n\") == \"abc\\n\", \"Incorrect output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('c_{11}c_{12}c_{13}\\nc_{21}c_{22}c_{23}\\nc_{31}c_{32}c_{33}') == 'abc'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"The output should be abc\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ant\\nobe\\nrec\") == \"abc\"\nprint(\"Test case passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ant\\nobe\\rec') == 'abc', \"Solution should return 'abc'\"\nassert solution('cat\\nbot\\ndog') == 'cdef', \"Solution should return 'cdef'\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"2\\n\", \"The solution should output 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"2\", \"Expected output: 2\"\nprint(\"Test Passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\", \"Your code is missing an assertion.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"2\", \"The solution should return the correct output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"2\" # expected output: \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\", \"The number of squares on which Snuke will place a marble should be 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"48000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"48000\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"48000\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\nprint(\"All test cases pass\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No input provided.\"\nassert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"55000\"\nassert solution(\"6\\n7\\n8\\n9\\n10\\n\") == \"No input provided.\"",
        "num_ids_2": 42,
        "num_ids_4": 97
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '48000\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, got: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Evaluate the formula and print the result.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Test Failed\"\nassert solution(\"2 - 1\") == \"1\", \"Test Failed\"\nassert solution(\"5 * 2\") == \"10\", \"Test Failed\"\nassert solution(\"5 / 2\") == \"2\", \"Test Failed\"\nassert solution(\"10 % 2\") == \"0\", \"Test Failed\"\nassert solution(\"2**3\") == \"8\", \"Test Failed\"\nassert solution(\"3 % 2\") == \"1\", \"Test Failed\"\nassert solution(\"100\") == \"100\", \"Test Failed\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"The output should be 3\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"5 - 2\") == \"7\"\nassert solution(\"2 * 3\") == \"6\"\nassert solution(\"100 / 2\") == \"50\"\nassert solution(\"5 / 2\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"3 + 2\") == \"5\"\nassert solution(\"5 - 2\") == \"3\"\nassert solution(\"-3 + 2\") == \"1\"\nassert solution(\"-5 - 2\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '3', \"The output should be 3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3', \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1000\") == \"ABC\"\nprint(\"ABC\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000') == 'ABC', 'Test case 1 failed'\nassert solution('5000') == 'ARC', 'Test case 2 failed'\nassert solution('10000') == 'ABC', 'Test case 3 failed'\nassert solution('12000') == 'ABC', 'Test case 4 failed'\nassert solution('12500') == 'ARC', 'Test case 5 failed'",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"ABC\", \"Test failed: ABC should be printed.\"\nassert solution(\"5000\") == \"ABC\", \"Test failed: ABC should be printed.\"\nassert solution(\"1200\") == \"ARC\", \"Test failed: ARC should be printed.\"\nassert solution(\"0\") == \"ABC\", \"Test failed: ABC should be printed.\"\nassert solution(\"3000\") == \"ABC\", \"Test failed: ABC should be printed.\"",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC', \"The code is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the rating: \")) == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1000) == 'ABC'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"ABC\", \"Output should be ABC\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1000) == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1 2 3\") == \"Invalid input\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1300\\n\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"700 600 780\") == \"1300\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"900 1200 1100\") == \"1800\"\nassert solution(\"300 200 100\") == \"400\"\nassert solution(\"200 400 600\") == \"1200\"\nassert solution(\"10000 10000 10000\") == \"20000\"",
        "num_ids_2": 48,
        "num_ids_4": 93
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\\n\", \"The minimum total price of two different bells is 1300 yen.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\", \"Expected output: 1300, actual output: {}\".format(solution(\"700 600 780\"))",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\\n#####\\n#abc#\\n#arc#\\n#####\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#\\nabc#\\narc#\\n#\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nabc\\narc\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\nabc\\narc') == '#####\\n#abc#\\n#arc#\\n#####'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nassert solution(\"5\\nIDDDD\") == \"2\\n\"\nassert solution(\"5\\nDDDDD\") == \"2\\n\"\nassert solution(\"5\\nDDDDDD\") == \"2\\n\"\nassert solution(\"5\\nDDDDDDD\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\", \"Expected 2, but got {}\".format(solution(\"5\\nIIDID\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2', 'Input error'\nprint(solution(input()))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"1\\nIL\\n\\n\") == \"1\"\nassert solution(\"100\\n
        "num_ids_2": 31,
        "num_ids_4": 1027
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"Test Case 1\"\nassert solution(\"5\\nIDDDI\") == \"2\\n\", \"Test Case 2\"\nassert solution(\"5\\nDIIDD\") == \"3\\n\", \"Test Case 3\"\nassert solution(\"5\\nIDIDI\") == \"4\\n\", \"Test Case 4\"\nassert solution(\"5\\nIDDID\") == \"3\\n\", \"Test Case 5\"",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"10\\nAAAADDDD\") == \"13\"\nassert solution(\"5\\nAAAA\") == \"2\"\nassert solution(\"20\\nGGGGG\") == \"15\"\nassert solution(\"10\\nDDDD\") == \"10\"",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\", \"The maximum value taken by x during the operations should be 2.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11009 11332\") == \"4\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\\n\", \"The output should be 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"11009 11332\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"10000 99999\") == \"5\"\nassert solution(\"10000 100000\") == \"5\"\nassert solution(\"100000 999999\") == \"5\"\nassert solution(\"1000000 9999999\") == \"5\"",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Output should be '3\\n' but is: '{}'\".format(solution(\"3 1 4\"))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\", \"Input is invalid\"\nassert solution(\"5 2 7\") == \"2\", \"Input is invalid\"\nassert solution(\"2 100 2\") == \"1\", \"Input is invalid\"\nassert solution(\"2 2 2\") == \"1\", \"Input is invalid\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The given code is incorrect.\"\n\nfrom collections import Counter",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Test 1\"\nassert solution(\"1 2 3\") == \"0\\n\", \"Test 2\"\nassert solution(\"3 2 1\") == \"3\\n\", \"Test 3\"\nassert solution(\"2 3 1\") == \"0\\n\", \"Test 4\"\nassert solution(\"4 1 2\") == \"2\\n\", \"Test 5\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3 1 4') == '3\\n'\nassert solution(stdin='1 2 3') == '0\\n'\nassert solution(stdin='2 1 2') == '1\\n'\nassert solution(stdin='2 3 1') == '2\\n'\nassert solution(stdin='1 3 4') == '3\\n'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '3\\n'\nassert solution(stdin='3 1 4') == '3\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\", \"The output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == '12'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"5 2 7\") == \"B\"\nassert solution(b\"5 7 2\") == \"B\"\nassert solution(b\"2 5 7\") == \"A\"\nassert solution(b\"7 5 2\") == \"A\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"B\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"B\", \"Test failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 7\") == \"B\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"B\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/12/31\") == \"2019/01/01\"\nassert solution(\"2018/01/32\") == \"2019/01/01\"\nassert solution(\"2018/01/01\") == \"2018/01/01\"\nassert solution(\"2018/12/32\") == \"2019/01/01\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\\n\", \"Test 1 failed\"\nassert solution(\"2017/01/08\") == \"2017/01/07\\n\", \"Test 2 failed\"\nassert solution(\"2017/01/09\") == \"2017/01/08\\n\", \"Test 3 failed\"\nassert solution(\"2017/01/10\") == \"2017/01/09\\n\", \"Test 4 failed\"\nassert solution(\"2018/01/10\") == \"2018/01/09\\n\", \"Test 5 failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n\nSolution:\nThe solution is straightforward. We can iterate through the input string and modify the first four characters to 2018. We can then print the modified string. Here is the code: \n\n```python\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/01/23\") == \"2018/01/23\"\nassert solution(\"2017/01/31\") == \"2018/01/01\"\nassert solution(\"2018/01/32\") == \"2018/02/01\"\nassert solution(\"2018/01/31/12\") == \"2018/02/01\"\nassert solution(\"2018/01/31/123\") == \"2018/02/01\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/15\") == \"2017/01/15\"\nassert solution(\"2018/12/31\") == \"2018/12/31\"\nassert solution(\"2017/02/01\") == \"2018/02/01\"\nassert solution(\"2017/03/31\") == \"2018/03/31\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(\"Test passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"aac\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"aabbbbbbcccccdddddd\") == \"accccddddeeeed\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 40,
        "num_ids_4": 56
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('cbaa\\ndaacc\\nacacac\\n') == 'aac'\nassert solution('abcd\\n') == ''\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\ncbaa\\ndaac\\nacacac\") == \"aac\"\nassert solution(\"4\\ncbaa\\ndaac\\nabaac\\n\") == \"abaac\"\nassert solution(\"1\\ncbaa\\n\") == \"cbaa\"\nassert solution(\"2\\ncbaa\\ndaac\\nabaac\\n\") == \"abaac\"\nassert solution(\"3\\ncbaa\\ndaac\\nabaac\\n\") == \"abaac\"\nassert solution(\"3\\ncbaa\\ndaac\\nabaac\\n\") == \"abaac\"\nassert solution(\"3\\ncbaa\\ndaac\\nabaac\\n\") == \"abaac\"",
        "num_ids_2": 45,
        "num_ids_4": 86
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac'\nprint('All test cases passed')",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nb\\nc\") == \"c\"\nassert solution(\"1\\nc\\nd\") == \"cd\"\nassert solution(\"1\\nd\\ne\") == \"ed\"\nassert solution(\"1\\ne\\nf\") == \"ef\"\nassert solution(\"1\\nf\\ng\") == \"fg\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"acacac\") == \"acacac\"\nassert solution(\"aaabbb\") == \"\"\n\nsolution = lambda s: \"\" if not s.strip() else s.strip().split()[0]",
        "num_ids_2": 33,
        "num_ids_4": 43
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\", \"The number of people sitting at the theater should be 7.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"2\\n10 20\\n15\\n20 25\\n\") == \"2\\n\"\nassert solution(\"1\\n100000 100000\\n\") == \"100000\\n\"\nassert solution(\"1\\n100000 100000\\n100001 100001\\n100002 100002\\n100003 100003\\n\") == \"100000\\n\"\nassert solution(\"1\\n100000 100000\\n100001 100001\\n100002 100002\\n100003 100003\\n100004 100004\\n100005 100005\\n100006 100006\\n100007 100007\\n100008 100008\\n100009 100009\\n100010 100010\\n100011 100011\\n100012 100012\\n100013 100013\\n100014 100014\\n100015 100015\\n100016 100016\\n100017 100017\\n100018 100018\\n100019 100019\\n100020 100020\\n100021 100021\\n100022 100022\\n100023 100023\\n100024 100024\\n100025 100025\\n100026 100026\\n100027 100027\\n100028 100028\\n100029 100029\\n100030 100030\\n100031 100031\\n100032 100032\\n100033 100033\\n100034 100034\\n100035 100035\\n100036 100036\\n100037 100037\\n100038 100038\\n100039 100039\\n100040 100040\\n100041 100041\\n100042 100042\\n100043 100043\\n100044 100044\\n100045 100045\\n100046 100046\\n100047 100047\\n100048 100048\\n100049 100049\\n100050 100050\\n100051 100051\\n100052 100052\\n100053 100053\\n100054 100054\\n100055 100055\\n100056 100056\\",
        "num_ids_2": 53,
        "num_ids_4": 166
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n24 30') == '7'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\"\nassert solution(\"2\\n24 30\") == \"7\\n\"\nassert solution(\"3\\n24 30\") == \"10\\n\"\nassert solution(\"4\\n24 30\") == \"10\\n\"\nassert solution(\"5\\n24 30\") == \"10\\n\"\nassert solution(\"6\\n24 30\") == \"10\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\"\nassert solution(\"1\\n24 30\\n36 42\") == \"7\\n\"\nassert solution(\"1\\n24 30\\n36 42\\n48 54\") == \"7\\n\"\nassert solution(\"1\\n24 30\\n36 42\\n48 54\\n60 66\") == \"7\\n\"\nassert solution(\"1\\n24 30\\n36 42\\n48 54\\n60 66\\n72 78\") == \"7\\n\"\nassert solution(\"1\\n24 30\\n36 42\\n48 54\\n60 66\\n72 78\\n84 90\") == \"7\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 118
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n24 30\\n') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\", \"Please provide the correct input.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"5 5\") == \"10\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"6\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"6\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"6\\n\", \"Input should be 3 4\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6\\n', 'Test case 1 failed'\nassert solution('5 6') == '12\\n', 'Test case 2 failed'\nassert solution('7 8') == '20\\n', 'Test case 3 failed'\nassert solution('9 10') == '24\\n', 'Test case 4 failed'\nassert solution('11 12') == '32\\n', 'Test case 5 failed'",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\", \"Please fill in the solution\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"2 4\") == \"Impossible\"\nassert solution(\"5 3\") == \"Impossible\"\nassert solution(\"8 6\") == \"Possible\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Possible' # Test Case 1",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"8 3\") == \"Possible\"\nassert solution(\"10 2\") == \"Impossible\"\nassert solution(\"2 3\") == \"Impossible\"\nassert solution(\"3 3\") == \"Impossible\"\nassert solution(\"4 6\") == \"Impossible\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Possible\"\nprint(\"Possible\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"10 6\") == \"Impossible\"\nassert solution(\"3 2\") == \"Possible\"\nassert solution(\"10 10\") == \"Possible\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"7 3\") == \"Possible\"\nassert solution(\"10 5\") == \"Possible\"\nassert solution(\"15 8\") == \"Possible\"\nassert solution(\"0 0\") == \"Impossible\"\nassert solution(\"5 5\") == \"Impossible\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\nassert solution(\"2 3\\n\") == \"Impossible\"\nassert solution(\"4 5\\n\") == \"Possible\"\nassert solution(\"1 1\\n\") == \"Impossible\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"10 20\\n\") == \"Impossible\"\nassert solution(\"5 5\\n\") == \"Possible\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 1\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\nabc') == 'UNRESTORABLE'\nassert solution('?tc????\\ncoder\\n123') == 'UNRESTORABLE'\nassert solution('?tc????\\ncoder\\nabcdef') == 'UNRESTORABLE'\nassert solution('?tc????\\ncoder\\nabc123') == 'UNRESTORABLE'\nassert solution('?tc????\\ncoder\\nabc1234') == 'UNRESTORABLE'\nassert solution('?tc????\\ncoder\\nabc12345') == 'UNRESTORABLE'",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('?tc????') == 'atcoder', 'Test case 1 failed'\nassert solution('coder') == 'atcoder', 'Test case 2 failed'\nassert solution('?atcoder') == 'atcoder', 'Test case 3 failed'\nassert solution('?btcoder') == 'unrestorable', 'Test case 4 failed'\nassert solution('ctcoder') == 'unrestorable', 'Test case 5 failed'",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"UNRESTORABLE\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"hello\") == \"UNRESTORABLE\"\nassert solution(\"\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\") == \"atcoder\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\n\nfor input_str, expected_output in [\n    ('?tc????', 'atcoder'),\n    ('coder', 'atcoder'),\n]:\n    assert solution(input_str) == expected_output\n\nprint('All tests passed')",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\", \"Expected 'atcoder', got '{}' instead.\".format(solution(\"?tc????\\ncoder\"))\nassert solution(\"A???A\") == \"UNRESTORABLE\", \"Expected 'UNRESTORABLE', got '{}' instead.\".format(solution(\"A???A\"))",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('?tc????\\ncoder') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n?') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n\\n') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n??') == 'atcoder\\n'\nassert solution('?tc????\\ncoder\\n????\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n??\\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"UNRESTORABLE\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"?tc????coder\") == \"atcoder\"\nassert solution(\"?tc????atcoder\") == \"atcoder\"\nassert solution(\"?tc????atcoder\") == \"atcoder\"\nassert solution(\"?tc????atcoder\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\"\nassert solution(\"100\\n50\\n\") == \"150\"\nassert solution(\"500\\n300\\n\") == \"750\"\nassert solution(\"4500\\n4000\\n\") == \"9000\"\nassert solution(\"1000\\n1000\\n\") == \"10000\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\\n\", \"Test 1 Failed\"\nassert solution(\"1500\\n2000\") == \"1700.5\\n\", \"Test 2 Failed\"\nassert solution(\"2000\\n2000\") == \"2000\\n\", \"Test 3 Failed\"\nassert solution(\"1000\\n2000\") == \"1100.5\\n\", \"Test 4 Failed\"\nassert solution(\"4500\\n4500\") == \"4500\\n\", \"Test 5 Failed\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\nassert solution(\"2001\\n2000\\n\") == \"2001\\n\"\nassert solution(\"2016\\n2021\\n\") == \"2026\\n\"\nassert solution(\"1988\\n2000\\n\") == \"2000\\n\"\nassert solution(\"1988\\n1999\\n\") == \"1999\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2032\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\nassert solution(\"2002\\n2017\\n\") == \"2032\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2032'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('string') == 4, 'Test Input 1 failed'\nassert solution('letter') == 2, 'Test Input 2 failed'\nassert solution('aaaaaa') == 0, 'Test Input 3 failed'\nassert solution('uncopyrightable') == 13, 'Test Input 4 failed'\nassert solution('ambidextrously') == 12, 'Test Input 5 failed'\nassert solution('assesses') == 1, 'Test Input 6 failed'",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"string\") == 4, \"Test case 1 failed\"\nassert solution(\"letter\") == 2, \"Test case 2 failed\"\nassert solution(\"aaaaaa\") == 0, \"Test case 3 failed\"\nassert solution(\"uncopyrightable\") == 13, \"Test case 4 failed\"\nassert solution(\"ambidextrously\") == 12, \"Test case 5 failed\"\nassert solution(\"assesses\") == 1, \"Test case 6 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"TLE\"\nassert solution(stdin=input()) == \"TLE\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"TLE\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input()) == \"AC\"\nassert solution(stdin=input",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"AC\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The output '{solution(input())}' does not match the expected output '{output}'.\"\nfor i in range(3):\n    assert solution(input()) == output[i], f\"The output '{solution(input())}' does not match the expected output '{output}'.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4\\n2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '''\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n'''\n\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '''\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n'''\n\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '''\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 203,
        "num_ids_4": 406
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 203,
        "num_ids_4": 406
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == solution(open('input.txt').read()) == '\\n'.join([''.join(map(str, [2 if x & 1 else 4 for x in line])) for line in input().split()])",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('H 2\\nO\\n') == '0\\n'\nassert solution('C2H6 10\\nC3H8\\n') == '6\\n'\nassert solution('CH3OH 1\\nCH4\\n') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0\\n'\nassert solution('C6H14 10\\nC5H10\\n') == '12\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    H 2\n    O\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    C2H6 10\n    C3H8\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    CH3OH 1\n    CH4\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    C6H6OCH2O 10\n    HCN\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    C6H14 10\n    C5H10\n    \"\"\"\n) == \"12\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"\n\nfrom typing import List",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H 2\\nO\\nSample Output 1:\\n0\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\nSample Output 2:\\n6\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\nSample Output 3:\\n1\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\nSample Output 4:\\n0\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\nSample Output 5:\\n12\\n\") == \"12\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 131
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H 2\\nO\\nSample Input 1\\nSample Output 1: 0\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\nSample Input 2\\nSample Output 2: 6\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\nSample Input 3\\nSample Output 3: 1\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\nSample Input 4\\nSample Output 4: 0\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\nSample Input 5\\nSample Output 5: 12\\n\") == \"12\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 155
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('H 2\\nO\\n') == '0\\n'\nassert solution('C2H6 10\\nC3H8\\n') == '6\\n'\nassert solution('CH3OH 1\\nCH4\\n') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0\\n'\nassert solution('C6H14 10\\nC5H10\\n') == '12\\n'",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('H 2\\nO') == '0\\n'\nassert solution('C2H6 10\\nC3H8') == '6\\n'\nassert solution('CH3OH 1\\nCH4') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN') == '0\\n'\nassert solution('C6H14 10\\nC5H10') == '12\\n'",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Sample Input 1 failed\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Sample Input 2 failed\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Sample Input 3 failed\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Sample Input 4 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 102
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS', \"Test failed\"\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL', \"Test failed\"\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL', \"Test failed\"\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS', \"Test failed\"",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Sample Input 1\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Sample Input 2\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Sample Input 3\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Sample Input 4\"",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'8') == b']'\nassert solution(b'13') == b'ok so far'\nassert solution(b'21') == b']'\nassert solution(b'27') == b'ok so far'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"([] [] ]\") == \"] 7\")\nassert solution(\"(([] [[]] ())\") == \"ok so far\")\nassert solution(\"[ { { () () () } ] ]\") == \"] 20\"\nassert solution(\"([({})) ] () {}\") == \"ok so far\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'8\\n([] [] ]') == b'] 7\\n', 'Test case 1')\nassert solution(b'13\\n(([] [[]] ())\\n', 'Test case 2')\nassert solution(b'21\\n[ { { () () () () } ]\\n', 'Test case 3')\nassert solution(b'27\\n[ { [[()]] (({})) } ] () {}\\n', 'Test case 4')\n\nfrom typing import List",
        "num_ids_2": 52,
        "num_ids_4": 110
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the length of the program: \")) == 'ok so far'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3\nassert solution(sample_input4) == sample_output4",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n8\n([] [] ]\n''') == '[] 7\\n'\n\nassert solution('''\n13\n(([] [[]] ())\n''') == 'ok so far\\n'\n\nassert solution('''\n21\n[ { { () () () () } ]\n''') == '] 20\\n'\n\nassert solution('''\n27\n[ { [[()]] (({})) } ] () {}\n''') == 'ok so far\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 5\nassert solution(2) == 7\nassert solution(3) == 20\nassert solution(4) == 20\nassert solution(5) == 26\nassert solution(6) == 30\nassert solution(7) == 7\nassert solution(8) == 7\nassert solution(9) == 7\nassert solution(10) == 7\nassert solution(11) == 7\nassert solution(12) == 7\nassert solution(13) == 7\nassert solution(14) == 7\nassert solution(15) == 7\nassert solution(16) == 7\nassert solution(17) == 7\nassert solution(18) == 7\nassert solution(19) == 7\nassert solution(20) == 7\nassert solution(21) == 7\nassert solution(22) == 7\nassert solution(23) == 7\nassert solution(24) == 7\nassert solution(25) == 7\nassert solution(26) == 7\nassert solution(27) == 7\nassert solution(28) == 7\nassert solution(29) == 7\nassert solution(30) == 7\nassert solution(31) == 7\nassert solution(32) == 7\nassert solution(33) == 7\nassert solution(34) == 7\nassert solution(35) == 7\nassert solution(36) == 7\nassert solution(37) == 7\nassert solution(38) == 7\nassert solution(39) == 7\nassert solution(40) == 7\nassert solution(41) == 7\nassert solution(42) == 7\nassert solution(43) == 7\nassert solution(44) == 7\nassert solution(45) == 7\nassert solution(46) == 7\nassert solution(47) == 7\nassert solution(48) == 7\nassert solution(49) == 7\nassert solution(50) == 7\nassert solution(51) == 7\nassert solution(52) == 7\nassert solution(53) == 7\nassert solution(54) == 7\nassert solution(55) == 7\nassert solution(56) == 7\nassert solution(57) == 7\nassert solution(58) == 7\nassert solution(59) == 7\nassert solution(60) == 7\nassert solution(61) == 7\nassert solution(62) == 7\nassert solution(63) == 7\nassert solution(64) == 7\nassert solution(65) == 7\nassert solution(66) == 7\nassert solution(67) == 7\nassert solution(68) == 7\nassert solution(69) == 7\nassert solution(70) == 7\nassert solution(71) == 7\nassert solution(72) == 7\nassert solution(73) == 7\nassert solution(74) == 7\nassert solution(75) == 7\nassert solution(76) == 7\nassert solution(77) == 7\nassert solution(78) == 7\nassert solution(79) == 7\nassert solution(80) == 7\nassert solution(81) == 7\nassert solution(82) == 7\nassert solution(83) == 7\nassert solution(84) == 7\nassert solution(85) == 7\nassert solution(86) == 7\nassert solution(87) == 7\nassert solution(88) == 7\nassert solution(89) == 7\nassert solution(90) == 7\nassert solution(91) == 7\nassert solution(92) == 7\nassert solution(93) == 7\nassert solution(94) == 7\nassert solution(95) == 7\nassert solution(96) == 7\nassert solution(97) == 7\nassert solution(98) == 7\nassert solution(99) == 7\nassert solution(100) == 7\nassert solution(101) == 7\nassert solution(102) == 7\nassert solution(103) ==",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"[] [] ]\") == \"]\"  # Right delimiter\nassert solution(\"(() ) )\") == \")\"  # Wrong closing delimiter\nassert solution(\"((())(())\") == \"ok so far\"  # Missing closing delimiter\nassert solution(\"({ {} } {})\") == \"}\"  # Missing closing delimiter\n\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('[(]([][])]') == ']'\nassert solution('[({()()})()]') == ']'\nassert solution('[({(())})] { }') == 'ok so far'\nassert solution('[][[()][]]') == ']'\nassert solution('[{}[{}()]]') == 'ok so far'\nassert solution('[') =='syntax error'\nassert solution(']') =='syntax error'\nassert solution('()()()') == 'ok so far'\nassert solution('[[()]]') =='syntax error'\nassert solution('[[()()]]') == 'ok so far'\nassert solution('[]()[]') =='syntax error'\nassert solution('()()') == 'ok so far'\nassert solution('()()[]()') =='syntax error'\nassert solution('()()[]') == 'ok so far'\nassert solution('()') == 'ok so far'\nassert solution('()[]') =='syntax error'\nassert solution('()[][]') == 'ok so far'\nassert solution('()[]') =='syntax error'\nassert solution('()[][]()') =='syntax error'\nassert solution('()[]()[]') =='syntax error'\nassert solution('()[]()[]()') =='syntax error'\nassert solution('()[]()[][]') =='syntax error'\nassert solution('()[]()[][]()') =='syntax error'\nassert solution('()[]()[][]()[]') =='syntax error'\nassert solution('()[]()[][]()[]') =='syntax error'\nassert solution('()[]()[][]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]') =='syntax error'\nassert solution('()[]()[][]()[]()[]') =='syntax error'\nassert solution('()[]()[][]()[]()[]') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]()[]()[]()') =='syntax error'\nassert solution('()[]()[][]",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Fair Game\"\nassert solution(2) == \"Player 1 lost\"\nassert solution(3) == \"Player 2 lost\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\")) == \"Fair Game\"\nassert solution(open(\"sample_input2.txt\")) == \"Player 1 lost\"\nassert solution(open(\"sample_input3.txt\")) == \"Player 2 lost\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'Fair Game'\n\nassert solution(open('input2.txt', 'r')) == 'Player 1 lost'\n\nassert solution(open('input3.txt', 'r')) == 'Player 2 lost'\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"Fair Game\"\nassert solution(stdin: str) == \"Player 1 lost\"\nassert solution(stdin: str) == \"Player 2 lost\"\n\nfrom typing import List\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'Fair Game'\nassert solution(open('sample_input_1.txt', 'r')) == 'Fair Game'\nassert solution(open('sample_input_2.txt', 'r')) == 'Player 1 lost'\nassert solution(open('sample_input_3.txt', 'r')) == 'Player 2 lost'",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\\n\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\\n\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\\n\") == \"Player 2 lost\"",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Fair Game\" or solution() == \"Player 1 lost\" or solution() == \"Player 2 lost\", \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"Fair Game\"\nassert solution(\"abcf\") == \"Fair Game\"\nassert solution(\"abcdef\") == \"Fair Game\"\nassert solution(\"abcdefg\") == \"Fair Game\"\nassert solution(\"abcfgh\") == \"Fair Game\"\nassert solution(\"abcdefgh\") == \"Fair Game\"\nassert solution(\"abcdefghi\") == \"Fair Game\"\nassert solution(\"abcdefghij\") == \"Player 1 lost\"\nassert solution(\"abcdefghijk\") == \"Player 2 lost\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"Fair Game\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"Player 1 lost\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"Player 2 lost\"",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, \"apple\", \"extra\", \"apple\", \"neat\") == \"Player 2 lost\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000') == '100000', \"The result of adding 1000 with itself is 100000.\"\nassert solution('10000') == '10010', \"The result of adding 10000 with 10 is 10010.\"\nassert solution('10') == '1010', \"The result of adding 10 with itself is 1010.\"",
        "num_ids_2": 80,
        "num_ids_4": 111
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\", \"Incorrect result for sample input 1\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\", \"Incorrect result for sample input 2\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\", \"Incorrect result for sample input 3\"",
        "num_ids_2": 71,
        "num_ids_4": 104
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"100000\", \"Test 1\"\nassert solution(\"10000\") == \"10010\", \"Test 2\"\nassert solution(\"10\") == \"1010\", \"Test 3\"",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed! Input: {input()}, Output: {output()}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000\") == 100000, \"Test 1 Failed\"\nassert solution(\"10000\") == 100100, \"Test 2 Failed\"\nassert solution(\"10\") == 1010, \"Test 3 Failed\"",
        "num_ids_2": 49,
        "num_ids_4": 69
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '100100'\nassert solution('10') == '1010'\n",
        "num_ids_2": 37,
        "num_ids_4": 51
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000\\n*\") == \"100000\"\nassert solution(\"10000\\n+\") == \"10010\"\nassert solution(\"10\\n+\") == \"1010\"\n",
        "num_ids_2": 41,
        "num_ids_4": 57
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"",
        "num_ids_2": 53,
        "num_ids_4": 77
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"100000\", \"Test 1 failed\"\nassert solution(\"10000\") == \"100100\", \"Test 2 failed\"\nassert solution(\"10\") == \"1010\", \"Test 3 failed\"\n",
        "num_ids_2": 49,
        "num_ids_4": 69
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\", \"Test 1 failed.\"\nassert solution(\"8 in\") == \"6\", \"Test 2 failed.\"\nassert solution(\"52 out\") == \"8\", \"Test 3 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 out\") == \"3\", \"Test case 1 failed.\"\nassert solution(\"8 in\") == \"6\", \"Test case 2 failed.\"\nassert solution(\"52 out\") == \"8\", \"Test case 3 failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Sample Input 1\"\nassert solution(\"8 in\") == \"6\\n\", \"Sample Input 2\"\nassert solution(\"52 out\") == \"8\\n\", \"Sample Input 3\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Your solution is incorrect\"\nassert solution(\"8 in\") == \"6\\n\", \"Your solution is incorrect\"\nassert solution(\"52 out\") == \"8\\n\", \"Your solution is incorrect\"\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 out\") == \"3\", \"Incorrect output\"\nassert solution(\"8 in\") == \"6\", \"Incorrect output\"\nassert solution(\"52 out\") == \"8\", \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('52 out') == '8\\n', \"Error: Incorrect output\"\nassert solution('8 in') == '6\\n', \"Error: Incorrect output\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 out') == '3', \"Test case 1 failed.\"\nassert solution('8 in') == '6', \"Test case 2 failed.\"\nassert solution('52 out') == '8', \"Test case 3 failed.\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8) == \"3\", \"Example 1\"\nassert solution(8) == \"3\", \"Example 2\"\nassert solution(52) == \"8\", \"Example 3\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"8\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor i, (input_, output_) in enumerate(zip(input(), output())):\n    assert int(input_) == int(output_)\n    assert int(input_) <= 1000",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox', \"The solution is incorrect\"\nassert solution('alemaxe maxos') == 'alemaxexmaxos', \"The solution is incorrect\"\nassert solution('pamoli toxes') == 'pamolextoxes', \"The solution is incorrect\"\nprint(\"All tests passed\")",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox', '1'\nassert solution('alemaxe maxos') == 'alemaxexmaxos', '2'\nassert solution('pamoli toxes') == 'pamolextoxes', '3'",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"yes\"\nassert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"yes\"\nassert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2018\\n2019\\n2020\") == \"yes\"\nassert solution(\"2018\\n2021\\n2022\") == \"no\"\nassert solution(\"2021\\n2022\\n2023\") == \"yes\"\n\nfrom typing import List\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"yes\"\nassert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2018') == 'yes', \"Expected 'yes', but got '{}'.\".format(solution('2018'))\nassert solution('2019') == 'no', \"Expected 'no', but got '{}'.\".format(solution('2019'))\nassert solution('2020') == 'yes', \"Expected 'yes', but got '{}'.\".format(solution('2020'))",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"yes\", \"Incorrect output for sample input 1\"\nassert solution(stdin) == \"no\", \"Incorrect output for sample input 2\"\nassert solution(stdin) == \"yes\", \"Incorrect output for sample input 3\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '64\\n'\nassert solution(stdin) == '0\\n'\nassert solution(stdin) == '1820000\\n'",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"64\", \"The expected output is not valid.\"\nprint(\"64\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"64\", \"Incorrect output for example 1\"\nassert solution(sample_input_2) == \"0\", \"Incorrect output for example 2\"\nassert solution(sample_input_3) == \"1820000\", \"Incorrect output for example 3\"",
        "num_ids_2": 45,
        "num_ids_4": 73
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3), \"Test case 3 failed\"\nassert solution(2), \"Test case 2 failed\"\nassert solution(4), \"Test case 4 failed\"\nassert solution(10), \"Test case 10 failed\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"64\", \"Invalid output for sample input 1\"\n\nassert solution(stdin) == \"0\", \"Invalid output for sample input 2\"\n\nassert solution(stdin) == \"1820000\", \"Invalid output for sample input 3\"",
        "num_ids_2": 39,
        "num_ids_4": 64
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == 64\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == 0\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == 1820000",
        "num_ids_2": 55,
        "num_ids_4": 97
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '0'\nassert solution(open('input2.txt').read()) == '0'\nassert solution(open('input3.txt').read()) == '1820000'",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 64\nassert solution(3) == 0\nassert solution(10, 4) == 1820000",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2 330'\nassert solution(stdin) == '2 570'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '2 330'\nassert solution(open('input2.txt', 'r')) == '2 570'\nassert solution(open('input3.txt', 'r')) == '0 0'",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 0\", \"your code is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Sample Input 1') == '2 330'\nassert solution('Sample Input 2') == '2 570'\nassert solution('Sample Input 3') == '0 0'",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330\\n'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570\\n'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0\\n'",
        "num_ids_2": 92,
        "num_ids_4": 136
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 0\\n30 270 995 996 997 998 999\") == \"2 330\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\"",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2 330\"\nassert solution(sample_input_2) == \"2 570\"\nassert solution(sample_input_3) == \"0 0\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {stdin}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaaaaaa\") == 1, \"The expected output for the string 'aaaaaaaa' is 1, but it is: \" + str(solution(\"aaaaaaaa\"))\nassert solution(\"abbaabbaabba\") == 2, \"The expected output for the string 'abbaabbaabba' is 2, but it is: \" + str(solution(\"abbaabbaabba\"))\nassert solution(\"abcdef\") == 6, \"The expected output for the string 'abcdef' is 6, but it is: \" + str(solution(\"abcdef\"))",
        "num_ids_2": 87,
        "num_ids_4": 123
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 150
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\nSample Output 1:\\n2\\n1 2\\n\\n\\nSample Input 2:\\n5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:\\n1\\n1\\n\\n\\nSample Input 3:\\n3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:\\n0') == '2\\n1 2\\n\\n1\\n1'",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\nSample Output 1:\\n2\\n1 2\\n\\nSample Input 2:\\n5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:\\n1\\n1\\n\\nSample Input 3:\\n3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:\\n0\\n') == '2\\n1 2\\n1\\n'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:\\n1\\n1\\n\\nSample Input 3:\\n3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:\\n0\\n') == '1\\n1\\n'",
        "num_ids_2": 301,
        "num_ids_4": 301
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 110,
        "num_ids_4": 148
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\nSample Output 1:\\n2\\n1 2\\n\\nSample Input 2:\\n5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:\\n1\\n1\\n\\nSample Input 3:\\n3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:\\n0\") == \"2\\n1 2\\n\\n1\\n1\\n\"",
        "num_ids_2": 192,
        "num_ids_4": 192
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 154
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40') == '2\\n1 2'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '1\\n1'\nassert solution('3 6\\n1 2 4\\n11 12 15 19 24 30') == '0\\n'",
        "num_ids_2": 110,
        "num_ids_4": 150
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5551212\") == \"1\", \"Example 1\"\nassert solution(\"5519876\") == \"0\", \"Example 2\"\nassert solution(\"5055555\") == \"0\", \"Example 3\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5551212) == 1, \"Test 1: 5551212 should be routed to the directory information operator\"\nassert solution(5519876) == 0, \"Test 2: 5519876 should not be routed to the directory information operator\"\nassert solution(5055555) == 0, \"Test 3: 5055555 should not be routed to the directory information operator\"",
        "num_ids_2": 79,
        "num_ids_4": 119
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5551212) == 1, \"The number 5551212 should be routed to the directory information operator.\"\nassert solution(5519876) == 0, \"The number 5519876 should not be routed to the directory information operator.\"\nassert solution(5055555) == 0, \"The number 5055555 should not be routed to the directory information operator.\"",
        "num_ids_2": 75,
        "num_ids_4": 113
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5551212\") == 1, \"5551212 should be routed to the directory information operator.\"\nassert solution(\"5519876\") == 0, \"5519876 should not be routed to the directory information operator.\"\nassert solution(\"5055555\") == 0, \"5055555 should not be routed to the directory information operator.\"",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5551212) == 1, \"5551212 should be routed to the directory information operator.\"\nassert solution(5519876) == 0, \"5519876 should not be routed to the directory information operator.\"\nassert solution(5055555) == 0, \"5055555 should not be routed to the directory information operator.\"",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5551212\") == 1\nassert solution(\"5519876\") == 0\nassert solution(\"5055555\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5551212) == 1, \"5551212 should be routed to the directory information operator\"\nassert solution(5519876) == 0, \"5519876 should not be routed to the directory information operator\"\nassert solution(5055555) == 0, \"5055555 should not be routed to the directory information operator\"",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='32/1') == '0/1'\nassert solution(stdin='33/1') == '5/9'\nassert solution(stdin='-40/1') == '-40/1'",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='32/1') == '0/1', 'Test 1 failed'\nassert solution(stdin='33/1') == '5/9', 'Test 2 failed'\nassert solution(stdin='-40/1') == '-40/1', 'Test 3 failed'",
        "num_ids_2": 46,
        "num_ids_4": 71
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32/1\") == \"0/1\", \"Test 1 failed\"\nassert solution(\"33/1\") == \"5/9\", \"Test 2 failed\"\nassert solution(\"-40/1\") == \"-40/1\", \"Test 3 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1', \"Failed\"\nassert solution('33/1') == '5/9', \"Failed\"\nassert solution('-40/1') == '-40/1', \"Failed\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('32/1') == '0/1', \"32/1 should be '0/1'\"\nassert solution('33/1') == '5/9', \"33/1 should be '5/9'\"\nassert solution('-40/1') == '-40/1', \"32/1 should be '0/1'\"\n\nfrom functools import reduce\n",
        "num_ids_2": 54,
        "num_ids_4": 82
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\nC E G\nD F# A\n\"\"\"\n) == \"Transposition\\n\"\n\nassert solution(\n\"\"\"\n7\nC C G G A A G\nC C F F D# D# F\n\"\"\"\n) == \"Inversion\\n\"\n\nassert solution(\n\"\"\"\n7\nA B C D E F G\nG F E D C B A\n\"\"\"\n) == \"Retrograde\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, \"C E G\\nD F# A\") == \"Transposition\"\nassert solution(7, \"C C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(7, \"A B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Transposition\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\\n\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\\n\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 103
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: output '{solution(input())}' does not match expected output '{expected_output}'\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Transposition\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 79
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 79
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"I love banana\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 61
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin), \"Test case failure\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"6\"\nassert solution(4) == \"16\"\nassert solution(3) == \"14\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"14\"\nassert solution(4) == \"16\"\nassert solution(1) == \"6\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\", \"Expected output: 6, but got: \" + solution(stdin)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 14",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\nSample Output 1: 3\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\nSample Output 2: 2\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\nSample Output 3: 4\\n\") == \"4\"",
        "num_ids_2": 69,
        "num_ids_4": 102
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3\\n'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2\\n'\nassert solution('4 10\\n1 3 1 7\\n') == '4\\n'",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n5 10\\n4 8 1 9 7\\n4 10\\n1 3 1 7\") == \"3\\n2\\n4\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n4 10\\n1 3 1 7\") == \"2\\n4\\n4\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\nSample Output 1: 3\\n\\n5 10\\n4 8 1 9 7\\nSample Output 2: 2\\n\\n4 10\\n1 3 1 7\\nSample Output 3: 4\") == \"3\\n2\\n4\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(5) +'' +''.join(str(x) for x in [1, 2, 3, 4, 5])) == \"3\"\nassert solution(str(5) +'' +''.join(str(x) for x in [4, 8, 1, 9, 7])) == \"2\"\nassert solution(str(4) +'' +''.join(str(x) for x in [1, 3, 1, 7])) == \"4\"",
        "num_ids_2": 82,
        "num_ids_4": 120
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n5 10\\n4 8 1 9 7\\n4 10\\n1 3 1 7\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n4 10\\n1 3 1 7\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\") == \"4\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 122
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=r\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\n\nassert solution(stdin=r\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"\n\nassert solution(stdin=r\"\"\"\n1 2\n0 1 0\n1 0 1\n\"\"\") == \"impossible\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 1\\n1 2\\n0 1 0\\n1 0 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\n\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n\nassert solution('''\n1 2\n0 1 0\n1 0 1\n''') == 'impossible'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\", \"Test failed\" # Solution should return \"possible\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"impossible\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n') == '1\\n'\nassert solution('2 3\\n') == '1.875\\n'\nassert solution('6 2\\n') == '4.25\\n'",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\", \"Your code is not correct.\"\nassert solution(\"2 3\") == \"1.875\", \"Your code is not correct.\"\nassert solution(\"6 2\") == \"4.25\", \"Your code is not correct.\"",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1', 'Expected 1, got'+ solution('1 1')\nassert solution('2 3') == '1.875', 'Expected 1.875, got'+ solution('2 3')\nassert solution('6 2') == '4.25', 'Expected 4.25, got'+ solution('6 2')",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1 1') == '1'\nassert solution(stdin='2 3') == '1.875'\nassert solution(stdin='6 2') == '4.25'",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('2 3') == '1.875\\n'\nassert solution('6 2') == '4.25\\n'",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin) # test case 1\nassert solution(stdin) == solution(stdin) # test case 2\nassert solution(stdin) == solution(stdin) # test case 3",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"1.875\\n\", \"Test case 2 failed\"\nassert solution(stdin) == \"4.25\\n\", \"Test case 3 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"2 3\") == \"1.875\\n\", \"Test case 2 failed\"\nassert solution(\"6 2\") == \"4.25\\n\", \"Test case 3 failed\"\n",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Input {input()} doesn't match the expected output {output()}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"0 0\"\nassert solution(str(input())) == \"1 4\"\nassert solution(str(input())) == \"1 6\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0 0\\n1 4'\nassert solution(stdin) == '1 6'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0\") == \"0 0\\n\"\nassert solution(\"4 2 7\") == \"1 4\\n\"\nassert solution(\"3 0 0\") == \"1 6\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0 0', \"Error: Incorrect solution for the given problem statement\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1 6\", \"The expected output is 1 6, but got: \" + solution(3)\nprint(solution(2))  # Output: 0 0\nprint(solution(4))  # Output: 1 4\nprint(solution(7))  # Output: 1 4",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input_1.txt', 'r').read()) == '1'\nassert solution(open('sample_input_2.txt', 'r').read()) == '0'\nassert solution(open('sample_input_3.txt', 'r').read()) == '0'",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nBWBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW') == '1\\n'\nassert solution('4\\nBWWB\\nBWBB\\nWBBW\\nWBWW') == '0\\n'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '0\\n'",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nBWBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 95
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\", \"The solution should print 0 on a single line.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1\\n'\nassert solution('4\\nBWWB\\nBWBB\\nWBBW\\nBWBW\\n') == '0\\n'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n') == '0\\n'",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\\n\", \"Test case 2 failed\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\\n\", \"Test case 3 failed\"",
        "num_ids_2": 72,
        "num_ids_4": 122
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Incorrect Output\"\nfor _ in range(tests):\n    n = int(input())\n    grid = input().strip()\n    correct = True\n\n    for i in range(n):\n        black_count = sum(1 for color in grid[i] if color == 'B')\n        white_count = sum(1 for color in grid[i] if color == 'W')\n        if black_count!= white_count or black_count >= 3:\n            correct = False\n            break\n\n    if correct:\n        print(1)\n    else:\n        print(0)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Got: {solution(input())}, expected: {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# print(solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\"))  # Output: \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"'\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output. \\nInput: {input()}\\nOutput: {output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1) == True\nassert solution(2, 0) == True\nassert solution(1, 0) == True\nassert solution(1, -1) == False",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input: head = [3,2,0,-4], pos = 1\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\\n\", 1) == \"true\\n\"\n\nassert solution(\"Input: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\\n\", 0) == \"true\\n\"\n\nassert solution(\"Input: head = [1], pos = -1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\\n\", -1) == \"false\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 166
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 2, 0, -4], 1) == \"true\"\nassert solution([1, 2], 0) == \"true\"\nassert solution([1], -1) == \"false\"",
        "num_ids_2": 38,
        "num_ids_4": 51
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3,2,0,-4]) == True\nassert solution([1,2]) == True\nassert solution([1]) == True\nassert solution([-1,-1]) == False",
        "num_ids_2": 24,
        "num_ids_4": 42
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 2, 0, -4], 1) == True\nassert solution([1, 2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 34,
        "num_ids_4": 45
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1], \"Test 1 Failed\"\nassert solution([3, 2, 4], 6) == [1, 2], \"Test 2 Failed\"\nassert solution([1, 2, 3], 5) == [0, 2], \"Test 3 Failed\"\nassert solution([1, 2, 3, 4], 8) == [0, 1, 3], \"Test 4 Failed\"\nassert solution([1, 2, 3, 4, 5], 9) == [0, 1, 4], \"Test 5 Failed\"",
        "num_ids_2": 61,
        "num_ids_4": 123
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=[2, 7, 11, 15], target=9) == [0, 1]",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2, 7, 11, 15\\n9\\n') == '0, 1\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(['2', '7', '11', '15']) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1], \"Test Case 1 Failed\"\n\nassert solution([2, 3, 5, 7, 9, 11, 13]) == [0, 2], \"Test Case 2 Failed\"\n\nassert solution([2, 4, 6, 8, 10, 12, 14]) == [1, 3], \"Test Case 3 Failed\"\n\nassert solution([1, 3, 5, 7, 9]) == [0, 2], \"Test Case 4 Failed\"\n\nassert solution([1, 2, 3, 4, 5]) == [0, 1], \"Test Case 5 Failed\"\n\nassert solution([2, 4, 6, 8, 10]) == [1, 2], \"Test Case 6 Failed\"",
        "num_ids_2": 71,
        "num_ids_4": 144
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1] # true",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2,7,11,15\") == [0, 1]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 7 11 15\") == [0, 1]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0, \"Sample Input 1: Invalid Output\"\nassert solution(4) == 1, \"Sample Input 2: Invalid Output\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\", \"Test 1 failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got: {solution(stdin)}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0, \"Test Case 1: Polygons with 3 vertices intersect\"\nassert solution(4) == 1, \"Test Case 2: Polygons with 4 vertices intersect\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0\"\nassert solution(4) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"The output {solution(stdin)} is incorrect. Expected: {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output the number of intersections on a single line.\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2 2 1\\n1\") == \"4\"\nassert solution(\"1\\n3 7\") == \"impossible\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '4'\nassert solution(sample_input2) == 'impossible'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4', \"Expected Output: 4, Actual Output: \" + str(solution())\nassert solution() == 'impossible', \"Expected Output: impossible, Actual Output: \" + str(solution())",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2 2 1\\n\") == \"4\\n\"\nassert solution(\"1\\n3 7\\n\") == \"impossible\\n\"\n\nfrom typing import List",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\nsolution = \"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 2 1\\n') == '4\\n'\nassert solution('1\\n3 7\\n') == 'impossible\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2 2 1\\n1\\n3 7\") == \"4\\n\"\nassert solution(\"1\\n3 7\") == \"impossible\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"180\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='184 1\\n123450995 1\\n') == '180\\n123451000\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"180\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(184, 1) == 180\nassert solution(123450995, 1) == 123451000",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='184 1\\n') == '180'\nassert solution(stdin='123450995 1\\n') == '123451000'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='184 1\\n123450995 1\\n') == '180\\n123451000\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"184 1\\n123450995 1\\n\") == \"180\\n123451000\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The solution is {solution(input())}, but expected {expected}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '0.000000\\n'\nassert solution(open('sample_input.txt', 'r')) == '0.000000\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The provided code is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\\n\"\nassert solution(\"3\\n0 1\\n1 0\\n1 1\") == \"0.000000\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.000000\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0.000000', 'The output is incorrect.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output here'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [1, 2, 4]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [1, 2, 6, 8]",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n4\\n6\\n8\\n\", \"The output should be '1\\n2\\n4\\n6\\n8\\n'.\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n2\\n4\\n6\\n8\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"\"\"\n1\n2\n4\n\"\"\"\n\nassert solution(\"\"\"\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\") == \"\"\"\n1\n2\n6\n8\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}!= {output2}\"\n\ninput1 = \"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\"\n\ninput2 = \"\"\"\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\"\n\noutput1 = \"\"\"\n1\n2\n4\n\"\"\"\n\noutput2 = \"\"\"\n1\n2\n6\n8\n\"\"\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n1\n2\n4\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\\n8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"4\", \"6\", \"8\"]",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\"\nassert solution(\"2 2 2\") == \"8\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == 60, \"Your code is incorrect!\"\nassert solution(\"2 2 2\") == 8, \"Your code is incorrect!\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"3\\n\") == \"60\\n\"\nassert solution(\"2\\n\") == \"8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 5) == 60, \"Incorrect output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '60\\n', \"Incorrect output for sample input 1\"\nassert solution('2 2 2') == '8\\n', \"Incorrect output for sample input 2\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\", \"Test 1\"\nassert solution(\"2 2 2\") == \"8\\n\", \"Test 2\"\nassert solution(\"4 5 6\") == \"0\\n\", \"Test 3\"\nassert solution(\"7 8 9\") == \"0\\n\", \"Test 4\"\nassert solution(\"1 2 3\") == \"0\\n\", \"Test 5\"\nassert solution(\"4 3 2\") == \"0\\n\", \"Test 6\"\nassert solution(\"5 4 3\") == \"0\\n\", \"Test 7\"\nassert solution(\"6 5 4\") == \"0\\n\", \"Test 8\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\"\nassert solution(\"2 2 2\") == \"8\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.6666666666666667'\nassert solution(stdin) == '2.5'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 0 2\n    \"\"\"\n) == \"1.6666666666666667\"\n\nassert solution(\n    \"\"\"\n    3\n    1 -1 4\n    \"\"\"\n) == \"2.5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0 2\\n\") == \"1.6666666666666667\\n\"\nassert solution(\"3\\n1 -1 4\\n\") == \"2.5\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1.6666666666666667\", \"Test failed\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 2\") == 1.6666666666666667\nassert solution(\"3\\n1 -1 4\") == 2.5",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == '1.6666666666666667', 'Test 1 failed'\nassert solution(input2) == '2.5', 'Test 2 failed'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0 2\\n\") == \"1.6666666666666667\\n\", \"Test 1\"\nassert solution(\"3\\n1 -1 4\\n\") == \"2.5\\n\", \"Test 2\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\", \"Expected output: 1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\", \"Expected output: 2.5\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"6\\n\", \"Output should be: 6\\n\"\nassert solution(\"15 12\") == \"7\\n\", \"Output should be: 7\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3\") == \"6\\n\"\nassert solution(\"15 12\") == \"7\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == 'Output the K-th number to be crossed out.', 'The output does not match the expected output.'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"6\", \"Your solution is incorrect.\"\nassert solution(\"15 12\") == \"7\", \"Your solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"6\\n\"\nassert solution(\"15 12\") == \"7\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == 'Output the K-th number to be crossed out.'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i + 1} failed: got '{solution(stdin)}', expected '{expected_output}'\" for i, (stdin, expected_output) in enumerate(test_cases)",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123864 123865\") == \"1\", \"123864 123865\"\nassert solution(\"198765 198769\") == \"0\", \"198765 198769\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(123864) == 1\nassert solution(198765) == 0",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Output '{solution(stdin)}' does not match expected output '{expected_output}'.\"\nfor i in range(10):\n    c = str(i).zfill(6)\n    if c.count(\"1\") == 1 and c.count(\"2\") == 1 and c.count(\"3\") == 1 and c.count(\"8\") == 1 and c.count(\"6\") == 1 and c.count(\"4\") == 1:\n        print(1)\n        break\nelse:\n    print(0)",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    123864 123865\n    198765 198769\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    123864 123865\n    198765 198766\n    123866 123867\n    198768 198769\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    123864 123865\n    198765 198769\n    123866 123868\n    198769 198770\n    123870 123871\n    198772 198773\n    123874 123875\n    198776 198777\n    123878 123879\n    198780 198781\n    123882 123883\n    198784 198785\n    123886 123887\n    198788 198789\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    123864 123865\n    198765 198769\n    123866 123867\n    198768 198769\n    123864 123866\n    198765 198768\n    123864 123865\n    198765 198767\n    123866 123868\n    198769 198771\n    123871 123873\n    198773 198775\n    123875 123877\n    198777 198779\n    123879 123881\n    198781 198783\n    123883 123885\n    198787 198789\n    123889 123891\n    198793 198795\n    123897 123899\n    198801 198803\n    123895 123897\n    198801 198802\n    123896 123898\n    198802 198804\n    123898 123899\n    198803 198805\n    123901 123903\n    198805 198807\n    123905 123907\n    198809 198811\n    123903 123905\n    198804 198806\n    123903 123904\n    198805 198806\n    123904 123905\n    198806 198807\n    123905 123906\n    198807 198808\n    123906 123907\n    198808 198809\n    123907 123908\n    198809 198810\n    123908 123909\n    198810 198811\n    123909 123910\n    198811 198812\n    123910 123911\n    198",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0.50000000, \"Your solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0.66666667",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"0.5\"\n\nassert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"0.66666667\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 0.5, \"Incorrect output for example 1\"\nassert solution(3) == 0.66666667, \"Incorrect output for example 2\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0.66666667\", \"Sample Output 2\"\n\nfrom math import sqrt",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"0.5\"\nassert solution(2) == \"0.66666667\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0.50000000\\n\"\nassert solution(\"2\") == \"0.66666667\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"0.50000000\\n\"\nassert solution(\"3\\n\") == \"0.66666667\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.50000000, \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.5, \"The code provided is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\nassert solution(5) == \"impossible\"\nassert solution(120) == \"impossible\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"triple 19\\ndouble 15\\nsingle 9\", \"Function should return the expected output for sample input 1\"\n\nassert solution() == \"triple 19\\ndouble 15\\nsingle 9\", \"Function should return the expected output for sample input 2\"\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\" # correct solution\nassert solution() == \"single 16\" # correct solution\nassert solution() == \"double 25\" # correct solution\nassert solution() == \"triple 30\" # correct solution",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(180) == 'triple 20'\nassert solution(96) == 'triple 19'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\nassert solution(720) == \"impossible\"\nassert solution(0) == \"impossible\"",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\nassert solution(10) == \"impossible\"",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 168",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 168, \"Incorrect output\"\nassert solution() == 36, \"Incorrect output\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"168\"\nassert solution(sample_input_2) == \"36\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 7\") == \"168\", \"Your code is incorrect. It should return the expected output.\"\n\nassert solution(\"5 2 2\") == \"36\", \"Your code is incorrect. It should return the expected output.\"\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"168\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect output for sample input 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\\n\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\", \"The output should be '7', but it is '{}'\".format(solution())\n\nprint(solution())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\\n\", \"Expected '7' but got '{}'\".format(solution(\"1\\n3 10\\n\"))\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\\n\", \"Expected '1' but got '{}'\".format(solution(\"2\\n3 8\\n5 8\\n\"))",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '7\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 10) == 7, \"Sample Input 1\"\nassert solution(2, 8, 5, 8) == 1, \"Sample Input 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\\n\", \"The smallest possible difference between sourness and bitterness is 7.\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\\n\", \"The smallest possible difference between sourness and bitterness is 1.\"\n\nfrom typing import List",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '7\\n', 'Example 1'\n\nassert solution(open('sample_input.txt', 'r')) == '1\\n', 'Example 2'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"\n\nThe code seems to be correct. We can test the function with the provided test cases. However, there is a small mistake in the code. The `solution` function should ignore the lines that do not begin with \"Simon says\" and return an empty string if all lines are not \"Simon says\". The current implementation assumes that all lines are \"Simon says\".\n\nTo fix this, we can modify the `solution` function to use a list to keep track of the lines that start with \"Simon says\". Here's the modified code:\n\n```python\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \" smile. \"\nassert solution(input()) == \" raise your right hand. \"\nassert solution(input()) == \" raise your left hand. \"\nassert solution(input()) == \" raise your right hand. \"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'raise your right hand. lower your right hand. raise your left hand.'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, \"Solution 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Solution 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\nSimon says smile.\\nSample Output 1: smile.\\n\\nSample Input 2\\n3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\nSample Output 2: raise your right hand. raise your left hand.\\n') =='smile.\\nraise your right hand.\\nraise your left hand.\\n'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) =='' + '\\n'.join(input())",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\", \"Sample Input 1 and 2 do not match the expected output.\"\nprint(solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5', \"The solution should return 5.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\", \"Expected: 5, but got: {}\".format(solution(\"0 0 4 6 10 12 16 18\"))\n\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\", \"Expected: 0, but got: {}\".format(solution(\"1 2 4 6 10 12 16 18\"))",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\", \"Error: Incorrect output\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\", \"Error: Incorrect output\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == 5\nassert solution('1 2 4 6 10 12 16 18') == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\", \"Invalid input\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\", \"Invalid input\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == str(5), \"Expected output: 5, got: \" + str(solution(str(input()))).strip()\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\"\nprint(\"Correct!\")\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n0 1\\n1 2\\n2 3'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\nSample Output 1: 3\\n0 1\\n1 2\\n2 3\\n\\n4 1\\nA\\nA\\nG\\nT\\nSample Output 2: 2\\n0 1\\n0 2\\n0 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"3\\n0 1\\n1 2\\n2 3\\n\\n2\\n0 1\\n0 2\\n0 3\\n\"\n\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\nSample Output 2: 2\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n0 1\\n0 2\\n0 3\\n\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nA\\nAT\\nTT\\nTC\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected, f\"Test failed: got {solution()}, expected {expected}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3\\n0 1\\n1 2\\n2 3'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    4 2\n        AA\n        AT\n        TT\n        TC\n        \"\"\") == \"3\\n0 1\\n1 2\\n2 3\"\n\nassert solution(\"\"\"\n    4 1\n        A\n        A\n        G\n        T\n        \"\"\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4 2\\nA\\nAT\\nTT\\nTC\\n\") == '3\\n0 1\\n1 2\\n2 3\\n'\nassert solution(stdin=\"4 1\\nA\\nA\\nG\\nT\\n\") == '2\\n0 1\\n0 2\\n0 3\\n'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\", \"1. Test Case 1\"\nassert solution(\"ab\") == -1, \"2. Test Case 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaaa\") == \"a\", \"Incorrect solution\"\nassert solution(\"ab\") == -1, \"Incorrect solution\"\nassert solution(\"abc\") == \"abc\", \"Incorrect solution\"\nassert solution(\"aaaaa\") == \"a\", \"Incorrect solution\"\nassert solution(\"abbc\") == \"ab\", \"Incorrect solution\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaaa') == 'a', \"Expected output 'a', but got '{}'.\".format(solution('aaaa'))\nassert solution('ab') == -1, \"Expected output '-1', but got '{}'.\".format(solution('ab'))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'b'\nassert solution(open('input2.txt', 'r').read()) == -1",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(sample_input_2) == \"Dr. Chaz will have 1 piece of chicken left over!\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz needs 1 more piece of chicken!\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(20) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(2) == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution(100) == \"Dr. Chaz needs 101 more piece of chicken!\"\nassert solution(200) == \"Dr. Chaz needs 102 more piece of chicken!\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test failed for input {stdin} and expected output {output}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz needs 1 more piece of chicken!\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(20, 100) == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(2, 3) == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\", \"The output is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"20 100\\n2 3\\n\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n') == '0'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\") == \"-2\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"0\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"-2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"-2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\") == \"as\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n\" +\n                   \"luka\\no#a#\\nkula\\ni#a#\") == \"kala\"\n\nassert solution(\"4 4\\n\" +\n                   \"luka\\no#a#\\nkula\\ni#as\") == \"as\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\") == \"kala\\n\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\") == \"as\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#') == 'kala\\n'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#as') == 'as\\n'\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\\n\") == \"as\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:...'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"kala\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"luka\") == \"kala\"\nassert solution(\"o#a#\") == \"kula\"\nassert solution(\"kula\") == \"kala\"\nassert solution(\"i#as\") == \"as\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"kala\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"as\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt')) == \"kala\"\nassert solution(open('sample_input_1.txt')) == \"kala\"\nassert solution(open('sample_input_2.txt')) == \"as\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Incorrect output for sample input 1\"\nassert solution(\"NSEW\") == 4, \"Incorrect output for sample input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Solution should return 10 for input 'WNEENWEENEENE'.\"\n\nassert solution(\"NSEW\") == 4, \"Solution should return 4 for input 'NSEW'.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10\n\nprint(\"Sample Input 2:\")\nroute = input()\nprint(solution(route))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"The expected output is 10, but got: \" + solution(\"WNEENWEENEENE\")\n\nassert solution(\"NSEW\") == \"4\", \"The expected output is 4, but got: \" + solution(\"NSEW\")",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"Error: incorrect solution\"\n\nassert solution(\"NSEW\") == \"4\", \"Error: incorrect solution\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Test failed\"\nassert solution(\"NSEW\") == 4, \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Solution does not match\"\nassert solution(\"NSEW\") == 4, \"Solution does not match\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"The solution should return 10\"\nassert solution(\"NSEW\") == 4, \"The solution should return 4\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Output is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"1 2 0 0\") == \"problems ahead\"",
        "num_ids_2": 98,
        "num_ids_4": 115
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\", \"1 2 3 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\", \"0 4 2 2\"\nassert solution(\"1 1 1 1\") == \"problems ahead\\n\", \"1 1 1 1\"\nassert solution(\"1 2 3 4 5\") == \"problems ahead\\n\", \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6\") == \"problems ahead\\n\", \"1 2 3 4 5 6\"",
        "num_ids_2": 120,
        "num_ids_4": 180
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example_input.txt', 'r')) == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\nproblems ahead\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"problems ahead\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\\n0 4 2 2\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\"0 4 2 2\\n4 2 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\"0 4 2 0\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\"0 4 2 2\\n2 2 2 2\") == \"0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\"0 4 2 0\") == \"0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\n\nassert solution(\"1 2 3 4\\n2 0 0 0\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\n\nassert solution(\"1 2 3 4\\n2 4 4 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\n\nassert solution(\"1 2 3 4\\n2 4 4 0\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\n\nassert solution(\"1 2 3 4\\n2 4 4 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\n\nassert solution(\"1 2 3 4\\n2 4 4 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"",
        "num_ids_2": 164,
        "num_ids_4": 283
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"\nassert solution(\"1 3 2 1\") == \"1 - 3 = 2 + 1\"\nassert solution(\"1 0 0 1\") == \"1 / 0 = 0 / 0\"\nassert solution(\"10 0 0 0\") == \"problems ahead\"",
        "num_ids_2": 98,
        "num_ids_4": 148
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\", \"Sample Input 1\"\nassert solution(\"MAMA TATA\") == \".T..MAMA\\n.T..\\n.A..def solution(stdin: str) -> str:pass\\n\", \"Sample Input 2\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\n\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\"\".P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"\n\nassert solution(\"MAMA TATA\") == \"\"\".T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANA\\n.M....\\n.A....\\n'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\nassert solution('MAMA TATA') == '.T..MAMA\\n.T..TATA\\n.T..TATA\\n.T..TATA\\n.T..TATA\\n'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1, f\"Test Case 1 failed: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test Case 2 failed: {solution(input_2)}!= {output_2}\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\nassert solution(\"MAMA TATA\") == '.T..MAMA\\n.T..TATA\\n.T..TATA\\n.T..A\\ndef solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANA\\n.M....\\nA....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\nA..'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"365\"\nassert solution(stdin) == \"10\"\nassert solution(stdin) == \"365\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"365\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sample Input 1\") == \"10\\n\"\nassert solution(\"Sample Input 2\") == \"365\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == 10\nassert solution('2\\n1 365\\n20 28') == 365",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == '10\\n'\nassert solution('2\\n1 365\\n20 28') == '365\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(''), 'Expected empty input.'\nassert solution('2\\n1 365\\n20 28'), 'Expected solution for input 2.'\nassert solution('3\\n10 14\\n13 17\\n25 26'), 'Expected solution for input 3.'",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 10",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(stdin)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\"\nassert solution(\"4\\n\") == \"2 3\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\", \"Sample Input 1: 1\"\nassert solution(\"4\\n\") == \"2 3\\n\", \"Sample Input 2: 4\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0 1\", \"Error\"\nassert solution(stdin) == \"2 3\", \"Error\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\", \"Test case 1 failed.\"\nassert solution(\"4\\n\") == \"2 3\\n\", \"Test case 2 failed.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\", \"Test 1\"\nassert solution(\"4\\n\") == \"2 3\\n\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Error: {output()}\\n{stdin}\"\n\ninput_line = input().strip()\nK = int(input_line)\n\noutput_line = str(len(input_line)) + \" \" + str(K)\n\nprint(output_line)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0 1\", \"Sample Input 1\"\nassert solution(\"4\") == \"2 3\", \"Sample Input 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n\") == \"2 3\"\nassert solution(\"5\\n\") == \"0 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"0 1\", \"The output should be 0 1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n').strip() == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n'\nassert solution('4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\\n') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\\n'",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 3\n    1 100 200\n    2 100 99\n    3 100 50\n    3 100 50\n    2 100 98\n    ''') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\"\n",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"",
        "num_ids_2": 193,
        "num_ids_4": 193
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\" # expected output\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\" # expected output",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"B 100 49\\nA 1 197\\nA 49 100\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 168, \"The solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Solution is incorrect. Expected {output}, but got {solution(stdin=input())}.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\") == 168, \"Sample Output 1\"\nassert solution(\"2\\n1\\n1\") == 1, \"Sample Output 2\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n4\\n3\\n5\\n\") == \"168\\n\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\") == \"168\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 26\nassert solution(4) == 24\nassert solution(6) == 30\nassert solution(7) == 28\nassert solution(8) == 32",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\") == \"168\\n\", \"Test case 1 failed\"\n\nassert solution(\"2\\n1\\n1\") == \"1\\n\", \"Test case 2 failed\"\n\nassert solution(\"5\\n3\\n5\\n5\\n3\\n5\\n3\\n5\\n3\\n5\\n3\\n5\") == \"428\\n\", \"Test case 3 failed\"",
        "num_ids_2": 61,
        "num_ids_4": 115
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\") == \"CBADEF\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\") == \"CDBEAF\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'defgabcde'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"CBADEF\"\nassert solution(2) == \"CDBEAF\"\nassert solution(3) == \"DEFAC\"\nassert solution(4) == \"CBAD\"\nassert solution(5) == \"DCA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 3, \"ABC\", 0) == \"CBADEF\"\nassert solution(3, 3, \"ABC\", 2) == \"CDBEAF\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\\nExpected output: {expected}\\nGot output: {solution(stdin)}\"\n\nfrom collections import deque",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF\\n'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    ABC\n    DEF\n    0\n    \"\"\"\n) == \"\"\"\nCBADEF\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3 3\n    ABC\n    DEF\n    2\n    \"\"\"\n) == \"\"\"\nCDBEAF\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Actual: {solution(stdin)}\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 'ABC', 'DEF', 0]) == 'CBADEF'\nassert solution([3, 3, 'ABC', 'DEF', 2]) == 'CDBEAF'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Your solution is not correct. Expected output: '5', but got '{}'\".format(solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\"))\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Your solution is not correct. Expected output: '4', but got '{}'\".format(solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\"))",
        "num_ids_2": 192,
        "num_ids_4": 192
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T') == '5\\n', \"Test 1\"\nassert solution('3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4\\n', \"Test 2\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(1)) == \"1\"\nassert solution(str(2)) == \"2\"\nassert solution(str(3)) == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Sample Output 1 incorrect\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Sample Output 2 incorrect\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\", \"Sample Output 1\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\", \"Sample Output 2\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received output: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Test 2 failed\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Test 1\"\n\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Test 2\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"Test 2 failed\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '5\\n', 'Example 1 failed'\nassert solution('3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n') == '4\\n', 'Example 2 failed'",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='4 3') == '6'\nassert solution(stdin='6 8') == '22'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"6\\n\"\nassert solution(\"6 8\") == \"22\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(stdin)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Actual: {solution(stdin)}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 3) == 6\nassert solution(6, 8) == 22\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=sample_input_1) == \"6\", \"Incorrect output: {}\".format(solution(stdin=sample_input_1))\nassert solution(stdin=sample_input_2) == \"22\", \"Incorrect output: {}\".format(solution(stdin=sample_input_2))",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"6\\n\"\nassert solution(\"6 8\") == \"22\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    6 5 4\n    7 8 9\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    1 4\n    4 3 2 1\n    \"\"\"\n) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9\\n') == '1\\n'\nassert solution('1 4\\n4 3 2 1\\n') == '0\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1'\nassert solution('1 4\\n4 3 2 1') == '0'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Error: solution({input()})!= output({output})\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 3\\n6 5 4\\n7 8 9') == '1'\nassert solution('1 4\\n4 3 2 1') == '0'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'3 3\\n1 2 3\\n6 5 4\\n7 8 9') == 1\nassert solution(r'1 4\\n4 3 2 1') == 0",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\"\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\\n\") == \"28\"\nassert solution(\"10\\n3\\n10\\n2\\n12\\n\") == \"16\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"28\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\\n\") == \"28\", \"Test Case 1 failed\"\nassert solution(\"10\\n3\\n10\\n2\\n12\\n\") == \"16\", \"Test Case 2 failed\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 6, 2, 12) == 28\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='10\\n3\\n4\\n6\\n2\\n') == '28'\nassert solution(stdin='10\\n3\\n10\\n2\\n12\\n') == '16'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"28\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test case 1 failed\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test 1\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Incorrect output: expected 'hiss', got '{}' instead.\".format(solution(\"amiss\"))\nassert solution(\"octopuses\") == \"no hiss\", \"Incorrect output: expected 'no hiss', got '{}' instead.\".format(solution(\"octopuses\"))",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Expected 'hiss' but got '\"+solution(\"amiss\")+\"'.\"\nassert solution(\"octopuses\") == \"no hiss\", \"Expected 'no hiss' but got '\"+solution(\"octopuses\")+\"'.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Expected hiss for sample input 1.\"\nassert solution(\"octopuses\") == \"no hiss\", \"Expected no hiss for sample input 2.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test 1\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('amiss') == 'hiss', \"Sample Input 1: amiss\\nSample Output 1: hiss\\n\"\nassert solution('octopuses') == 'no hiss', \"Sample Input 2: octopuses\\nSample Output 2: no hiss\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"Error: Input is not provided\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"c++\") == \"3\"\nassert solution(\"cryptography\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"c++\") == \"1\"\nassert solution(\"C++\") == \"1\"\nassert solution(\"c\") == \"1\"\nassert solution(\"c#\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 2\nassert solution(4) == 2\nassert solution(5) == 2\nassert solution(6) == 2\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 2\nassert solution(11) == 2\nassert solution(12) == 2\nassert solution(13) == 2\nassert solution(14) == 2\nassert solution(15) == 2\nassert solution(16) == 2\nassert solution(17) == 2\nassert solution(18) == 2\nassert solution(19) == 2\nassert solution(20) == 2\nassert solution(21) == 2\nassert solution(22) == 2\nassert solution(23) == 2\nassert solution(24) == 2\nassert solution(25) == 2\nassert solution(26) == 2\nassert solution(27) == 2\nassert solution(28) == 2\nassert solution(29) == 2\nassert solution(30) == 2\nassert solution(31) == 2\nassert solution(32) == 2\nassert solution(33) == 2\nassert solution(34) == 2\nassert solution(35) == 2\nassert solution(36) == 2\nassert solution(37) == 2\nassert solution(38) == 2\nassert solution(39) == 2\nassert solution(40) == 2\nassert solution(41) == 2\nassert solution(42) == 2\nassert solution(43) == 2\nassert solution(44) == 2\nassert solution(45) == 2\nassert solution(46) == 2\nassert solution(47) == 2\nassert solution(48) == 2\nassert solution(49) == 2\nassert solution(50) == 2\nassert solution(51) == 2\nassert solution(52) == 2\nassert solution(53) == 2\nassert solution(54) == 2\nassert solution(55) == 2\nassert solution(56) == 2\nassert solution(57) == 2\nassert solution(58) == 2\nassert solution(59) == 2\nassert solution(60) == 2\nassert solution(61) == 2\nassert solution(62) == 2\nassert solution(63) == 2\nassert solution(64) == 2\nassert solution(65) == 2\nassert solution(66) == 2\nassert solution(67) == 2\nassert solution(68) == 2\nassert solution(69) == 2\nassert solution(70) == 2\nassert solution(71) == 2\nassert solution(72) == 2\nassert solution(73) == 2\nassert solution(74) == 2\nassert solution(75) == 2\nassert solution(76) == 2\nassert solution(77) == 2\nassert solution(78) == 2\nassert solution(79) == 2\nassert solution(80) == 2\nassert solution(81) == 2\nassert solution(82) == 2\nassert solution(83) == 2\nassert solution(84) == 2\nassert solution(85) == 2\nassert solution(86) == 2\nassert solution(87) == 2\nassert solution(88) == 2\nassert solution(89) == 2\nassert solution(90) == 2\nassert solution(91) == 2\nassert solution(92) == 2\nassert solution(93) == 2\nassert solution(94) == 2\nassert solution(95) == 2\nassert solution(96) == 2\nassert solution(97) == 2\nassert solution(98) == 2\nassert solution(99) == 2\nassert solution(100) == 2\nassert solution(101) == 2\nassert solution(102) == 2\nassert solution(103) == 2\nassert solution(104) == 2\nassert solution(105) ==",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\", \"Output should be 3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == 21, \"The output should be 21.\"\nassert solution(\"CCC\") == 9, \"The output should be 9.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Test 1 failed\"\nassert solution(\"CCC\") == \"9\", \"Test 2 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Test Case 1\"\nassert solution(\"CCC\") == \"9\", \"Test Case 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Test 1 failed\"\nassert solution(\"CCC\") == 9, \"Test 2 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Solution for sample input 1 should be 21\"\nassert solution(\"CCC\") == \"9\", \"Solution for sample input 2 should be 9\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Test case 1 failed\"\nassert solution(\"CCC\") == 9, \"Test case 2 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Test case 1 failed\"\nassert solution(\"CCC\") == \"9\", \"Test case 2 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\"\nassert solution(\"180\\n270\\n\") == \"90\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '90'\nassert solution(sample_input_2) == '90'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('315\\n45\\n') == '90\\n'\nassert solution('180\\n270\\n') == '90\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"n_1 = \")) == output(\"90\")\nassert solution(input(\"n_2 = \")) == output(\"90\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 90\nassert solution(2) == 90",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"180\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 90\nassert solution(2) == 90",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(315) == 90\nassert solution(180) == 90",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"315\\n45\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input(1)) == '3'\nassert solution(sample_input(2)) == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\\n\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == 3\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == 1",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\\n\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\\n\") == \"1\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The output {output} does not match the expected output {assert solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\", \"Test failed for example 1\"\n\nassert solution(input()) == \"1\", \"Test failed for example 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='5\\n1\\n23\\n18\\n13\\n99') == '3\\n'\nassert solution(stdin='5\\n11\\n20\\n33\\n40\\n55') == '1\\ndef solution(stdin: str) -> str: pass\\n'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n\ninput_str = \"WWBWBB\"\noutput_str = \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test case 1\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test case 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('WWBWBB') == '1', \"The given solution is incorrect.\"\nassert solution('WWWWBBW') == '0', \"The given solution is incorrect.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WWBWBB\") == 1, \"Test case 1 should return 1\"\nassert solution(\"WWWWBBW\") == 0, \"Test case 2 should return 0\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, got: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 3 3') == 9\nassert solution('1 2 1 1') == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 3\\n1 2 1 1\\n\") == \"9\"\nassert solution(\"4 4 3 3\\n5 5 4 4\\n\") == \"1.299038105676658\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output. Received '{solution(stdin)}', expected '{expected}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3\\n') == '9'\nassert solution('1 2 1 1\\n') == '1.299038105676658'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 3\\n1 2 1 1\\n\") == 9\nassert solution(\"1 2 1 1\\n3 3 3 3\\n\") == 1.299038105676658",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 3, 3]) == 9\nassert solution([1, 2, 1, 1]) == 1.299038105676658",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert', \"The compact version of robert should be robert.\"\nassert solution('rooobert') == 'robert', \"The compact version of rooobert should be robert.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\", \"Solution should return 'robert'.\"\nassert solution(\"rooobert\") == \"robert\", \"Solution should return 'robert'.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\", \"Test 1 failed\"\nassert solution(\"rooobert\") == \"robert\", \"Test 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert', 'Test Case 1: Input: robert Output: robert'\nassert solution('rooobert') == 'robert', 'Test Case 2: Input: rooobert Output: robert'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution and expected output mismatch for input: {input()} and expected output: {output()}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"robert\") == \"robert\", \"Test 1 failed.\"\nassert solution(\"rooobert\") == \"robert\", \"Test 2 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(stdin)}'.\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nprint(\"All tests passed!\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Impossible\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\\n\"\nassert solution(\"1000 900 7\") == \"Impossible\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 9 7') == '108 4\\nImpossible', \"Test 1\"\nassert solution('1000 900 7') == 'Impossible', \"Test 2\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\", \"1000 9 7\"\nassert solution(\"1000 900 7\") == \"Impossible\", \"1000 900 7\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4', 'Sample Output 1'\nassert solution('1000 900 7') == 'Impossible', 'Sample Output 2'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n1\\n2\\n1\\n0\\n\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('mirko.txt', 'r').read()) == '1\\n1\\n2\\n1\\n0\\n'\nassert solution(open('mirko2.txt', 'r').read()) == '9\\n0\\n0\\n0\\n0\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n#..#\\n..X..\\n..X..\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n1\\n2\\n1\\n0\\n\", \"Expected output is not as expected\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\ndef solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n#..#\\n..X. \\n..X. \\n#XX#\") == 1, \"Output 1 incorrect\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == 9, \"Output 2 incorrect\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1953566', \"The solution is incorrect\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([2, 212, 1253]) == '1953566'\nassert solution([5, 23, 17, 43, 52, 22]) == '102'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1953566\", \"The solution is incorrect\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n212\\n1253\\n') == '1953566', 'Sample Input 1'\nassert solution('5\\n23\\n17\\n43\\n52\\n22\\n') == '102', 'Sample Input 2'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution.input()) == solution.output()",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1953566\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n212\\n1253') == '1953566'\nassert solution('5\\n23\\n17\\n43\\n52\\n22') == '102'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in zip(input_list, output_list)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.000000 0.000000 0.000000\\n0.000000 3.000000 6.000000\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\\n3 3 3\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\\n3 2 1\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 10 10\\n3 3 3\\n') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9\\n3 2 1\\n') == '0.000000 3.000000 6.000000'",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 Failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: Expected output '{expected_output}', but got '{solution(input())}'.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected: {output}, but got: {solution(input())}\"\n\nfrom typing import Tuple",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"One line containing the string that was written in the text editor. The length of the string is at most $10^6$, and it will only contain lowercase letters from the English alphabet as well as the character <. \")) == \"b\"\nassert solution(input(\"One line containing the string that was written in the text editor. The length of the string is at most $10^6$, and it will only contain lowercase letters from the English alphabet as well as the character <. \")) == \"forritun\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"Knuth-Morris-Pratt\") == \"KMP\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\") == \"Province or Gold\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Estate or Copper\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Estate or Copper\", \"Expected output: Estate or Copper, actual output: \" + solution()\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    input=\"0 1 0\\n2 1 0\"\n) == \"Estate or Copper\\n\"\n\nassert solution(\n    input=\"2 1 0\"\n) == \"Province or Gold\\n\"\n\nassert solution(\n    input=\"1 1 0\"\n) == \"Gold\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n2 1 0\\n') == 'Estate or Copper\\n'\nassert solution('2\\n1 0 0\\n') == 'Province or Gold\\n'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"\nassert solution(\"1 1\\n0 1\\n\") == \"0.00\"\nassert solution(\"1 1\\n100 100\\n\") == \"100.00\"\nassert solution(\"1 1\\n50 50\\n\") == \"50.00\"",
        "num_ids_2": 56,
        "num_ids_4": 106
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"90.00\"\nassert solution(sample_input2) == \"75.7142857\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"90.00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"impossible\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'impossible'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"90.00\", \"The output should be 90.00\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Got: {solution(stdin)}, Expected: {expected}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\\n\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('tests/sample_input1.txt', 'r')) == '4\\n2 3 5 7'\nassert solution(open('tests/sample_input2.txt', 'r')) == '5\\n1 2 3 4 5'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"2 3 5 7\\n\", \"Sample Input 1\"\nassert solution(str(input())) == \"4\\n\", \"Sample Output 1\"\nassert solution(str(input())) == \"5\\n\", \"Sample Input 2\"\nassert solution(str(input())) == \"5\\n\", \"Sample Output 2\"\n",
        "num_ids_2": 46,
        "num_ids_4": 86
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect. Please check the sample inputs and outputs.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Sample Input 1\"\nassert solution(\"0 30\") == \"23 45\", \"Sample Input 2\"\n\nfrom datetime import datetime, timedelta",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input('Enter input time: ')) == 'Enter output time: 9 25\\n'\nassert solution(input('Enter input time: ')) == 'Enter output time: 23 45\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\", \"Test 1\"\nassert solution(\"0 30\") == \"23 45\\n\", \"Test 2\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Your solution is {solution(input())} but it should be {expected}.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Sample Input 1\"\nassert solution(\"0 30\") == \"23 45\", \"Sample Input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output: 9 25'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\", \"Test 1\"\nassert solution(\"0 30\") == \"23 45\\n\", \"Test 2\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.000000\") == \"1.414214\\n\", \"Anthony should find the solution to ^\\infty a = 2.000000.\"\nassert solution(\"1.000000\") == \"1.000000\\n\", \"Anthony should find the solution to ^\\infty a = 1.000000.\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'2.000000') == '1.414214'\nassert solution(r'1.000000') == '1.000000'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.414214\\n\", \"The solution is incorrect.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2.000000) == 1.414214\nassert solution(1.000000) == 1.0",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1.414214\"\nassert solution(input()) == \"1.000000\"\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The output is incorrect. Expected: {expected}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1.414214\\n\", \"Solution not correct\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.414214\\n\", \"Incorrect Output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['50:2,1', '2,2', '3,2', '5,4', '5,5', '6,5', '10,10', '13,12', '17,16', '25,25']\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3:\\n2,1\"\nassert solution(\"50\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3:', \"The correct output should be: 3:2,1\"\nassert solution(50) == '50:', \"The correct output should be: 50:2,1 2,2 3,2 5,4 5,5 6,5 10,10 13,12 17,16 25,25\"\nassert solution(1) == '1:', \"The correct output should be: 1:1\"\nassert solution(300) == '300:', \"The correct output should be: 300:1\"\nassert solution(31) == '31:', \"The correct output should be: 31:1\"",
        "num_ids_2": 95,
        "num_ids_4": 145
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3:2,1\\n\", \"Expected output for 3, got: {}\".format(solution(3))\nassert solution(50) == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\\n\", \"Expected output for 50, got: {}\".format(solution(50))\nassert solution(30) == \"30:2,1\\n\", \"Expected output for 30, got: {}\".format(solution(30))",
        "num_ids_2": 112,
        "num_ids_4": 148
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"3:2,1\\n\"\nassert solution(\"50\\n\") == \"50:2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3:\"\nassert solution(50) == \"50:\"\nassert solution(25) == \"25:\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3:\\n2,1\\n\", \"Your function should return the expected output.\"\nassert solution(\"50\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\", \"Your function should return the expected output.\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"50:2,1\\n50:2,2\\n50:3,2\\n50:5,4\\n50:5,5\\n50:6,5\\n50:10,10\\n50:13,12\\n50:17,16\\n50:25,25\\n\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"3:\\n2,1\"\nassert solution(50) == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3:2,1\"\nassert solution(50) == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"no\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN\") == \"no\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"yes\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"THE RAIN IN SPAIN should not repeat.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"IN THE RAIN AND THE SNOW should repeat.\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\", \"THE RAIN IN SPAIN IN THE PLAIN should not repeat.\"",
        "num_ids_2": 55,
        "num_ids_4": 91
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The test case 1 is not passing. The solution is incorrect.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The test case 2 is not passing. The solution is incorrect.\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\"\n",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test Case 1 failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test Case 2 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS', \"Your code is incorrect. Please check your solution.\"\nassert solution('RBLLLBRR') == 'CHCS', \"Your code is incorrect. Please check your solution.\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Expected 'SSKKKHHS', got '{}'.\".format(solution(\"RRBBBLLR\"))\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Expected 'CHCS', got '{}'.\".format(solution(\"RBLLLBRR\"))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Expected output 'SSKKKHHS', but got: {}\".format(solution(\"RRBBBLLR\"))\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Expected output 'CHCS', but got: {}\".format(solution(\"RBLLLBRR\"))",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"The expected output is 'SSKKKHHS', but the actual output is '{}'\".format(solution(\"RRBBBLLR\"))\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"The expected output is 'CHCS', but the actual output is '{}'\".format(solution(\"RBLLLBRR\"))",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"The output is not correct.\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"The output is not correct.\"\n\nfrom typing import List",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\nfrom typing import List",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Test 1\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Test 2\"\nassert solution(\"1 1 100\") == \"1\\n1\\n2\\nFizz\\n4\\nBuzz\\nFizz\\n7\\n8\\nFizz\\nBuzz\\n11\\nFizz\\n13\\n15\\n16\\nFizz\\n19\\nBuzz\\nFizz\\n22\\nFizz\\n25\\n28\\nFizz\\n31\\nFizz\\n34\\nFizz\\n37\\n100\\n\", \"Test 3\"",
        "num_ids_2": 89,
        "num_ids_4": 228
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 7\") == [\"1\", \"Fizz\", \"Buzz\", \"Fizz\", \"5\", \"FizzBuzz\", \"7\"]\nassert solution(\"2 4 7\") == [\"1\", \"Fizz\", \"3\", \"FizzBuzz\", \"5\", \"Fizz\", \"7\"]",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n', \"Test Case 1 failed\"\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n', \"Test Case 2 failed\"\nassert solution('4 7') == '4\\nFizz\\n7\\n', \"Test Case 3 failed\"",
        "num_ids_2": 93,
        "num_ids_4": 121
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {stdin}, Output: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 7\\n\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"The output is incorrect.\"\nassert solution(\"2 4 7\\n\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"The output is incorrect.\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"FizzBuzz expected\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"FizzBuzz expected\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Example 1\"\n\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Example 2\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 3 7\n\"\"\"\n) == \"\"\"\n1\nFizz\nBuzz\nFizz\n5\nFizzBuzz\n7\n\"\"\"\n\nassert solution(\n\"\"\"\n2 4 7\n\"\"\"\n) == \"\"\"\n1\nFizz\n3\nFizzBuzz\n5\nFizz\n7\n\"\"\"\n\nassert solution(\n\"\"\"\n1 2 3 4 5\n\"\"\"\n) == \"\"\"\n1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nFizz\n13\n14\nFizzBuzz\n16\n17\n18\nFizz\nBuzz\n22\nFizz\n24\n25\nFizzBuzz\n29\n30\n31\nFizz\nBuzz\n35\nFizz\n37\n38\nFizzBuzz\n43\n44\n45\nFizz\nBuzz\n49\nFizz\n51\n52\nFizzBuzz\n56\n57\n58\nFizz\nBuzz\n62\nFizz\n64\n65\nFizzBuzz\n69\n70\n71\nFizz\nBuzz\n75\nFizz\n77\n78\nFizzBuzz\n83\n84\n85\nFizz\nBuzz\n89\nFizz\n91\n92\nFizzBuzz\n96\n97\n98\nFizz\nBuzz\n102\nFizz\n104\n105\nFizzBuzz\n110\n111\n112\nFizz\nBuzz\n116\nFizz\n118\n119\nFizzBuzz\n124\n125\n126\nFizz\nBuzz\n130\nFizz\n132\n133\nFizzBuzz\n138\n139\n140\nFizz\nBuzz\n144\nFizz\n146\n147\nFizzBuzz\n152\n153\n154\nFizz\nBuzz\n158\nFizz\n160\n161\nFizzBuzz\n166\n167\n168\nFizz\nBuzz\n172\nFizz\n174\n175\nFizzBuzz\n180\n181\n182\nFizz\nBuzz\n186\nFizz\n188\n189\nFizzBuzz\n194\n195\n196\nFizz\nBuzz\n199\nFizz\n201\n202\nFizzBuzz\n207\n208\n209\nFizz\nBuzz\n213\nFizz\n215\n216\nFizzBuzz\n221\n222\n223\nFizz\nBuzz\n227\nFizz\n229\n230\nFizzBuzz\n235\n236\n237\nFizz\nBuzz\n241\nFizz\n243\n244\nFizzBuzz\n249\n250\n251\nFizz\nBuzz\n255\nFizz\n257\n258\nFizzBuzz\n263\n264\n265\nFizz\nBuzz\n269\nFizz\n271\n272\nFizzBuzz\n277\n278\n279\nFizz\nBuzz\n283\nFizz\n285\n286\nFizzBuzz\n291\n292\n293\nFizz\nBuzz\n297\nFizz\n300\n301\nFizzBuzz\n306\n307\n308\nFizz\nBuzz\n312\nFizz\n314\n315\nFizzBuzz\n320\n321\n322\nFizz\nBuzz\n326\nFizz\n328\n329\nFizzBuzz\n334\n335\n336\nFizz\nBuzz\n340\nFizz\n342\n343\nFizzBuzz\n348\n349\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\\nInput: {stdin}\\nOutput: {solution(stdin)}!= {expected_output}\"\nfor i, (stdin, expected_output) in enumerate(test_cases):\n    print(f\"Test case {i+1}:\")\n    print(f\"Input: {stdin}\\nOutput: {solution(stdin)}\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n3 3 3 2\n''') == 'It hadn\\'t snowed this early in 3 years!\\n'\n\nassert solution('''\n2 10\n0 100\n''') == 'It hadn\\'t snowed this early in 0 years!\\n'\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n3 3 3 2\\n') == 'It hadn\\'t snowed this early in 3 years!\\n'\nassert solution('2 10\\n0 100\\n') == 'It hadn\\'t snowed this early in 0 years!\\n'\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"It hadn't snowed this early in 3 years!\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution() == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Error: {solution(input())}!= {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\n\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\\n\"\n\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"0\", \"Test 1\"\nassert solution(\"10 2\") == \"2\", \"Test 2\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\") == \"2\", \"Output should be 2.\"\nassert solution(\"10 10\") == \"7\", \"Output should be 7.\"\nassert solution(\"0 10\") == \"8\", \"Output should be 8.\"",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 2') == '2', \"Sample Input 1\"\nassert solution('10 10') == '7', \"Sample Input 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\") == \"2\", \"Sample Input 1\"\nassert solution(\"10 10\") == \"7\", \"Sample Input 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"Test 1 failed\"\nassert solution(stdin) == \"7\", \"Test 2 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(stdin)}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2\nprint(\"All tests passed!\")",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\") == 2, \"Expected 2, got {}\".format(solution(\"10 2\"))\nassert solution(\"10 10\") == 7, \"Expected 7, got {}\".format(solution(\"10 10\"))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '7', \"Solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='10 2\\n10 10\\n') == 2\nassert solution(stdin='10 1\\n9 9\\n') == 7\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bok') == 'bok', \"Your solution is incorrect.\"\nassert solution('koaski') == 'kakosi', \"Your solution is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"bok\") == \"bok\"\nassert solution(r\"koaski\") == \"kakosi\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8 2\", \"Test case 1 failed\"\nassert solution(stdin) == \"8 3\", \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == '8 2', 'Solution 1'\nassert solution(5) == '8 2', 'Solution 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"8 2\\n8 3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}'\\nGot output: '{solution(stdin)}'\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == \"8 2\", \"Solution not correct\"\nassert solution(7) == \"8 3\", \"Solution not correct\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: expected '{output}', got '{solution(input())}'\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"8 2\"\nassert solution(6) == \"8 2\"\nassert solution(7) == \"8 3\"\nassert solution(10) == \"8 4\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7) == \"8 3\", \"Test failed: solution(7) == '8 3', expected '8 3'\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"8 2\", \"Your code is incorrect!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napples and pears\\nplates of meat\") == \"YES\\nNO\"\nassert solution(\"drought\\n2\\naught ought aut acht\\ought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napples and pears\") == \"YES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"stairs\", \"2\", \"erres airs ears ares aires\", \"eet eat\", \"2\", \"apples and pears\", \"plates of meat\") == \"YES\"\nassert solution(\"drought\", \"2\", \"aught ought aut acht\", \"ought oubt outte out oute\", \"5\", \"tasty sprout\", \"difficult route\", \"worried and fraught\", \"forever in doubt\", \"apples and pears\") == \"YES\"",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''YES\nNO\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nNO\nYES\nYES\nYES\nYES\nNO\nNO\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"stairs\", \"2\", \"erres airs ears ares aires\", \"eet eat\", \"2\", \"apples and pears\", \"plates of meat\") == \"YES\\nNO\\nYES\\nYES\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1\"\n\nassert solution(\"drought\", \"2\", \"aught ought aut acht\", \"ought oubt outte out oute\", \"5\", \"tasty sprout\", \"difficult route\", \"worried and fraught\", \"forever in doubt\", \"apples and pears\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2\"",
        "num_ids_2": 192,
        "num_ids_4": 192
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napplles and pears\\nplates of meat\"\n) == \"YES\"\n\nassert solution(\n    \"drought\\n2\\naught ought aut acht\\ought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napplles and pears\"\n) == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napples and pears\\nplates of meat') == 'YES\\nNO'\nassert solution('drought\\n2\\naught ought aut acht\\nought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napples and pears') == 'YES\\nYES\\nYES\\nYES\\nNO'\n\nsolution = '''\nfrom typing import List",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('rotten') == 'YES'\nassert solution('apples and pears') == 'YES'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"YES\nNO\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Expected 'WIN', got '{}' instead\".format(solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Expected 'LOSE', got '{}' instead\".format(solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HANGMAN') == 'WIN', \"Sample Input 1\"\nassert solution('BANANA') == 'LOSE', \"Sample Input 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('HANGMAN') == 'WIN', 'Test 1'\nassert solution('BANANA') == 'LOSE', 'Test 2'\n\nfrom typing import List\nimport random",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == expected_output_2, \"Incorrect output for sample input 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Expected WIN, got %s\" % solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Expected LOSE, got %s\" % solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', 'Input 1'\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', 'Input 2'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Test Case 1 failed.\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Test Case 2 failed.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"\"\"\n    5\n    JOE\n    BOB\n    ANDY\n    AL\n    ADAM\n\"\"\") == \"DECREASING\"\n\nassert solution(stdin=\"\"\"\n    11\n    HOPE\n    ALI\n    BECKY\n    JULIE\n    MEGHAN\n    LAUREN\n    MORGAN\n    CARLI\n    MEGAN\n    ALEX\n    TOBIN\n\"\"\") == \"NEITHER\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\", \"Test case 1 failed\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\", \"Test case 2 failed\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"NEITHER\"\nassert solution(11) == \"DECREASING\"\nassert solution(2) == \"DECREASING\"\nassert solution(12) == \"INCREASING\"\nassert solution(5) == \"DECREASING\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\\n\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\"\nassert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"\nassert solution(\"11\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"",
        "num_ids_2": 95,
        "num_ids_4": 129
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\\nANDY\\nAL\\nADAM\\nJOE\\nBOB\\n\") == \"NEITHER\"\nassert solution(\"123\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"DECREASING\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING\\n', \"Test 1: Incorrect output\"\n\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER\\n', \"Test 2: Incorrect output\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'DECREASING'\nassert solution(open('input_2.txt', 'r')) == 'NEITHER'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!\\n'\n\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example.txt', 'r')) == 'Sample Output 1:George wins!\\n'\nassert solution(open('example2.txt', 'r')) == 'Sample Output 2:Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Solution does not match expected output. Input: {input}, Expected Output: {expected}\" for input, expected in zip(sample_input, sample_output)",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"No winner!\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test cases failed.\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"\n",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"No winner!\\n\"\nassert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\nNina wins!\\nJess wins!\\n\"\n",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0\\n', \"Incorrect Output\"\nassert solution('6 0 0 2 7 6') == '2.0\\n', \"Incorrect Output\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()} expected output {output}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\\n\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\", \"Sample Input 1\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\", \"Sample Input 2\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 0 0 5 4\") == 2.0\nassert solution(\"6 0 0 2 7 6\") == 2.0",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num + 1} failed\"\ntest_num += 1",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.0\\n\", \"Sample Output 1\"\nassert solution(input()) == \"2.0\\n\", \"Sample Output 2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"156\") == \"165\", \"Test case 1 failed\"\nassert solution(\"330\") == \"0\", \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(156) == 165, \"Expected output 1 is not correct.\"\nassert solution(330) == 0, \"Expected output 2 is not correct.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the result on a single line.\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(156) == 165, \"Test failed for 156\"\nassert solution(330) == 0, \"Test failed for 330\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"\n4\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, received: {solution}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n') == '4\\n'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\\n') == '3\\n'",
        "num_ids_2": 155,
        "num_ids_4": 155
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution\n\nfrom typing import List",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected output: {expected}, but got: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n\", \"Please fix the code in the provided solution\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\\n\", \"Please fix the code in the provided solution\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('3') == '6'\nassert solution('42') == '6'\nassert solution('84') == '1'\nassert solution('126') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed with input: {stdin}, expected output: {expected_output}, actual output: {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\", \"The output is incorrect\"\nassert solution(\"2\") == \"1\", \"The output is incorrect\"\nassert solution(\"3\") == \"6\", \"The output is incorrect\"\nassert solution(\"10\") == \"10\", \"The output is incorrect\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 10, \"Test 1\"\nassert solution(\"2\") == 1, \"Test 2\"\nassert solution(\"3\") == 6, \"Test 3\"\nassert solution(\"4\") == 1, \"Test 4\"\nassert solution(\"5\") == 1, \"Test 5\"\nassert solution(\"6\") == 2, \"Test 6\"\nassert solution(\"7\") == 0, \"Test 7\"\nassert solution(\"8\") == 2, \"Test 8\"\nassert solution(\"9\") == 4, \"Test 9\"\nassert solution(\"10\") == 10, \"Test 10\"\nassert solution(\"11\") == 0, \"Test 11\"\nassert solution(\"12\") == 1, \"Test 12\"\nassert solution(\"13\") == 4, \"Test 13\"\nassert solution(\"14\") == 2, \"Test 14\"\nassert solution(\"15\") == 1, \"Test 15\"\nassert solution(\"16\") == 2, \"Test 16\"\nassert solution(\"17\") == 0, \"Test 17\"\nassert solution(\"18\") == 1, \"Test 18\"\nassert solution(\"19\") == 0, \"Test 19\"\nassert solution(\"20\") == 1, \"Test 20\"\nassert solution(\"21\") == 0, \"Test 21\"\nassert solution(\"22\") == 0, \"Test 22\"\nassert solution(\"23\") == 0, \"Test 23\"\nassert solution(\"24\") == 0, \"Test 24\"\nassert solution(\"25\") == 0, \"Test 25\"\nassert solution(\"26\") == 0, \"Test 26\"\nassert solution(\"27\") == 0, \"Test 27\"\nassert solution(\"28\") == 0, \"Test 28\"\nassert solution(\"29\") == 0, \"Test 29\"\nassert solution(\"30\") == 0, \"Test 30\"\nassert solution(\"31\") == 0, \"Test 31\"\nassert solution(\"32\") == 0, \"Test 32\"\nassert solution(\"33\") == 0, \"Test 33\"\nassert solution(\"34\") == 0, \"Test 34\"\nassert solution(\"35\") == 0, \"Test 35\"\nassert solution(\"36\") == 0, \"Test 36\"\nassert solution(\"37\") == 0, \"Test 37\"\nassert solution(\"38\") == 0, \"Test 38\"\nassert solution(\"39\") == 1, \"Test 39\"\nassert solution(\"40\") == 4, \"Test 40\"\nassert solution(\"41\") == 0, \"Test 41\"\nassert solution(\"42\") == 1, \"Test 42\"\nassert solution(\"43\") == 2, \"Test 43\"\nassert solution(\"44\") == 0, \"Test 44\"\nassert solution(\"45\") == 2, \"Test 45\"\nassert solution(\"46\") == 0, \"Test 46\"\nassert solution(\"47\") == 2, \"Test 47\"\nassert solution(\"48\") == 0, \"Test 48\"\nassert solution(\"49\") == 2, \"Test 49\"\nassert solution(\"50\") == 0, \"Test 50\"\nassert solution(\"51\") == 2, \"Test 51\"\nassert solution(\"52\") == 0, \"Test 52\"\nassert solution(\"53\") == 2, \"Test 53\"\nassert solution(\"54\") == 0, \"Test 54\"\nassert solution(\"55\") == 2, \"Test 55\"\nassert solution(\"56\") == 0, \"Test 56\"\nassert solution(\"57\") == 2, \"Test 57\"\nassert solution(\"58\") == 0, \"Test 58\"\nassert solution(\"59\") == 2, \"Test 59\"\nassert solution(\"60\") == 0, \"Test 60\"\nassert solution(\"61\") == 2, \"Test 61\"\nassert solution(\"62",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\", \"The output should be '10', but is: \" + solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\")\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\", \"The output should be '1', but is: \" + solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\")",
        "num_ids_2": 210,
        "num_ids_4": 210
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == 10, \"1 is not equal to 10\"\nassert solution('2') == 1, \"2 is not equal to 1\"\nassert solution('3') == 6, \"3 is not equal to 6\"\nassert solution('4') == 0, \"4 is not equal to 0\"\nassert solution('5') == 0, \"5 is not equal to 0\"\nassert solution('6') == 0, \"6 is not equal to 0\"\nassert solution('7') == 0, \"7 is not equal to 0\"\nassert solution('8') == 0, \"8 is not equal to 0\"\nassert solution('9') == 0, \"9 is not equal to 0\"\nassert solution('10') == 0, \"10 is not equal to 0\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\", \"The number of distinct values when considered modulo 42 on sample input 1 is incorrect.\"\nassert solution(input()) == \"1\", \"The number of distinct values when considered modulo 42 on sample input 2 is incorrect.\"\nassert solution(input()) == \"6\", \"The number of distinct values when considered modulo 42 on sample input 3 is incorrect.\"",
        "num_ids_2": 61,
        "num_ids_4": 91
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"no\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'yes' or solution(stdin) == 'no', \"Solution should return either 'yes' or 'no'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"yes\"\nassert solution(1) == \"no\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 3\") == \"yes\", \"Input 1 failed\"\nassert solution(\"1 0\") == \"yes\", \"Input 2 failed\"\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13, 3) == \"yes\"\nassert solution(1, 0) == \"yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Test case 1 failed\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Test case 2 failed\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P01K02H03H04\") == [\"12 12 11 13\"], \"Incorrect solution. Please see the example above.\"\nassert solution(\"H02H10P11H02\") == [\"GRESKA\"], \"Incorrect solution. Please see the example above.\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Test 1 failed\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Test 2 failed\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Sample Input 1\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Sample Input 2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Sample Input 1\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Sample Input 2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n    3 5 3\n    .....\n    .*.*.\n    .....\n''') == '1\\n+-+..\\n|*|*.\\n+-+..'\n\nassert solution(r'''\n    7 6 4\n    ......\n    .*.*.*\n    ......\n    .*.*..\n    ..*...\n    ..*...\n    *....*\n''') == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example1.txt', 'r').read()) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(open('example2.txt', 'r').read()) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n+-+..\\n|*|*.\\n+-+..\\n\\n2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(str(input())) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*. \\n.....\\n\") == \"1\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*.. \\n..*... \\n..*... \\n*....*\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 5 3\\n.....\\n.*.*.\\n.....\\n\"\n) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\n\nassert solution(\n    \"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\"\n) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\nSample Output 1\\n1\\n+-+..\\n|*|*.\\n+-+..\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\nSample Output 2\\n2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 183,
        "num_ids_4": 183
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1\\n+-+..\\n|*|*.\\n+-+..\\n'\n\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n'\n\nassert solution('''\n3 5 6\n....\n...*.\n....\n...*.\n....\n''') == '1\\n+-+...+\\n|*|...|\\n+-+...+\\n'\n\nassert solution('''\n3 4 4\n....\n...*.\n....\n*...*\n....\n''') == '1\\n+-+...+\\n|*|...|\\n+-+...+\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\n\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Sample Input 1\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Sample Input 2\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\", \"Your solution is not correct!\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"The correct solution is not provided.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"Expected 4, got {}\".format(solution(\"AC AD AH AS KD\"))\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"Expected 3, got {}\".format(solution(\"2C 4D 4H 2D 2H\"))",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    AC AD AH AS KD\n    QH JS QD\n    AD AH 2C\n    KD 2D 4H\n    JD 3C 4D\n    '''\n) == 4\n\nassert solution(\n    '''\n    JC KD 2H AS\n    9C 4H 2D 2S\n    AD 2C 2S 3S 3H\n    JS JH 2C 2H\n    '''\n) == 4\n\nassert solution(\n    '''\n    AD KH AS 2D\n    3S 4H 3C 2S\n    QH 2D 3S 2H\n    JS 2D 2C 2S\n    AC 2D 2H 3H\n    '''\n) == 4",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Sample Input 1\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Sample Input 2\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Test case 1 failed.\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Test case 2 failed.\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4, \"Expected output 4, got {}\".format(solution(\"AC AD AH AS KD\"))\nassert solution(\"2C 4D 4H 2D 2H\") == 3, \"Expected output 3, got {}\".format(solution(\"2C 4D 4H 2D 2H\"))\nassert solution(\"2C 3D 4H 2D 2H\") == 2, \"Expected output 2, got {}\".format(solution(\"2C 3D 4H 2D 2H\"))\nassert solution(\"2C 3D 4H 2D 3H\") == 1, \"Expected output 1, got {}\".format(solution(\"2C 3D 4H 2D 3H\"))\nassert solution(\"2C 3D 4H 2D 4H\") == 0, \"Expected output 0, got {}\".format(solution(\"2C 3D 4H 2D 4H\"))\n",
        "num_ids_2": 86,
        "num_ids_4": 186
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"AC AD AH AS KD\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"2C 4D 4H 2D 2H\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Test 1\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Test 2\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"The solution is incorrect. \\nExpected: {expected_solution}\\nGot: {solution}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution() == \"7\"\nassert solution() == \"13\"\nassert solution() == \"21\"\nassert solution() == \"28\"",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == \"5\\n\"\nassert solution(\"5 1\\n0 0 0 0 0\\n\") == \"7\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Expected {output}, got {solution(input())}\" for i, (input, output) in enumerate(test_cases)",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case {index + 1} failed. Expected output: {expected}, actual output: {solution(stdin)}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\", \"Your solution is incorrect. Please check the input and output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution '{solution(stdin)}' does not match expected output '{expected}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())} but the expected output is {expected_output}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$. \"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\\\[(`/, |<3[]\\\\[][]\\\\[]3']['[-]? \"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\\\\\/\\/\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?def solution(stdin: str) -> str:pass\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '''\nA New Alphabet has been developed for Internet communications. While the glyphs of the new alphabet don\u2019t necessarily improve communications in any meaningful way, they certainly make us feel cooler.\n\nYou are tasked with creating a translation program to speed up the switch to our more elite New Alphabet by automatically translating ASCII plaintext symbols to our new symbol set.\n\nThe new alphabet is a one-to-many translation (one character of the English alphabet translates to anywhere between $1$ and $6$ other characters), with each character translation as follows:\n\nOriginal\n\nNew\n\nEnglish Description\n\nOriginal\n\nNew\n\nEnglish Description\n\na\n\n@\n\nat symbol\n\nn\n\n[]\\[]\n\nbrackets, backslash, brackets\n\nb\n\n8\n\ndigit eight\n\no\n\n0\n\ndigit zero\n\nc\n\n(\n\nopen parenthesis\n\np\n\n|D\n\nbar, capital D\n\nd\n\n|)\n\nbar, close parenthesis\n\nq\n\n(,)\n\nparenthesis, comma, parenthesis\n\ne\n\n3\n\ndigit three\n\nr\n\n|Z\n\nbar, capital Z\n\nf",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\nWhat's the Frequency, Kenneth?\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?def solution(stdin: str) -> str:\\n    pass\\n\")",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\"\\n\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\"\\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\\\[]6 ']['0 |_|$.",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\\\\\/\\/\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1, \"Function should return the expected output\"\nassert solution(sample_input2) == sample_output2, \"Function should return the expected output\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Alice\", \"Test 1 failed\"\nassert solution(2) == \"Bob\", \"Test 2 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Alice\"\nassert solution() == \"Bob\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Alice\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, f\"Test failed for the given input: {solution_input}, expected output: {solution_output}, got: {solution(solution_input)}\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    this\n    sentence\n    has\n    $\n    letters\n    \"\"\"\n) == \"this sentence has thirtyone letters\\n\"\n\nassert solution(\n    \"\"\"\n    7\n    $\n    is\n    the\n    number\n    of\n    letters\n    here\n    \"\"\"\n) == \"thirty is the number of letters here\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"this\\nsentence\\nhas\\n$\") == \"this sentence has thirtyone letters\"\nassert solution(\"this\\nsentence\\nhas\\n$\") == \"thirty is the number of letters here\"\nassert solution(\"this\\nsentence\\nhas\\n$\") == \"is the number of letters here\"",
        "num_ids_2": 53,
        "num_ids_4": 78
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"this sentence has thirtyone letters\", \"Your solution is incorrect\"\nassert solution(7) == \"thirty is the number of letters here\", \"Your solution is incorrect\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this\\nsentence\\nhas\\nletters\\nSample Output 1:this sentence has thirtyone letters \") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\nSample Output 2:thirty is the number of letters here\") == \"thirty is the number of letters here\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('example1.in', 'r').read()) == 'this sentence has thirtyone letters '\nassert solution(open('example2.in', 'r').read()) == 'thirty is the number of letters here'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n        this\n        sentence\n        has\n        $\n        letters\n    7\n        $\n        is\n        the\n        number\n        of\n        letters\n        here\n    ''') == '''\nthis sentence has thirtyone letters\nthirty is the number of letters here\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\\nInput: {input()}\\nExpected Output: {expected_output}\\nSolution: {solution(input())}\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\\nSample Output 1: this sentence has thirtyone letters \\n\") == \"this sentence has thirtyone letters \"\n\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\nSample Output 2: thirty is the number of letters here\\n\") == \"thirty is the number of letters here\"\n\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\nSample Output 2: thirty is the number of letters here\\n\") == \"thirty is the number of letters here\"",
        "num_ids_2": 98,
        "num_ids_4": 150
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$\\nletters\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Abcd\") == \"0\", \"Expected 0, got {}\".format(solution(\"Abcd\"))\nassert solution(\"EaEbFabG\") == \"5\", \"Expected 5, got {}\".format(solution(\"EaEbFabG\"))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Abcd\") == 0, \"Test case 1 failed\"\nassert solution(\"EaEbFabG\") == 5, \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == 0, \"Expected: 0, Actual: {}\".format(solution(\"Abcd\"))\nassert solution(\"EaEbFabG\") == 5, \"Expected: 5, Actual: {}\".format(solution(\"EaEbFabG\"))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\") == 1",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Abcd') == '0\\n'\nassert solution('EaEbFabG') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"Test 1 failed\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"Test 2 failed\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\"\nassert solution(\"3 3\") == \"Even 6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n\nassert solution(\"0 0\") == \"Not a moose\"\nassert solution(\"2 5\") == \"Not a moose\"\nassert solution(\"3 4\") == \"Not a moose\"\nassert solution(\"4 3\") == \"Not a moose\"\nassert solution(\"5 2\") == \"Not a moose\"\nassert solution(\"6 1\") == \"Not a moose\"\nassert solution(\"7 0\") == \"Not a moose\"\nassert solution(\"8 9\") == \"Not a moose\"\nassert solution(\"9 8\") == \"Not a moose\"\nassert solution(\"10 7\") == \"Not a moose\"\nassert solution(\"11 6\") == \"Not a moose\"\nassert solution(\"12 5\") == \"Not a moose\"\nassert solution(\"13 4\") == \"Not a moose\"\nassert solution(\"14 3\") == \"Not a moose\"\nassert solution(\"15 2\") == \"Not a moose\"\nassert solution(\"16 1\") == \"Not a moose\"\nassert solution(\"17 0\") == \"Not a moose\"\nassert solution(\"18 9\") == \"Not a moose\"\nassert solution(\"19 8\") == \"Not a moose\"\nassert solution(\"20 7\") == \"Not a moose\"\nassert solution(\"21 6\") == \"Not a moose\"\nassert solution(\"22 5\") == \"Not a moose\"\nassert solution(\"23 4\") == \"Not a moose\"\nassert solution(\"24 3\") == \"Not a moose\"\nassert solution(\"25 2\") == \"Not a moose\"\nassert solution(\"26 1\") == \"Not a moose\"\nassert solution(\"27 0\") == \"Not a moose\"\nassert solution(\"28 9\") == \"Not a moose\"\nassert solution(\"29 8\") == \"Not a moose\"\nassert solution(\"30 7\") == \"Not a moose\"\nassert solution(\"31 6\") == \"Not a moose\"\nassert solution(\"32 5\") == \"Not a moose\"\nassert solution(\"33 4\") == \"Not a moose\"\nassert solution(\"34 3\") == \"Not a moose\"\nassert solution(\"35 2\") == \"Not a moose\"\nassert solution(\"36 1\") == \"Not a moose\"\nassert solution(\"37 0\") == \"Not a moose\"\nassert solution(\"38 9\") == \"Not a moose\"\nassert solution(\"39 8\") == \"Not a moose\"\nassert solution(\"40 7\") == \"Not a moose\"\nassert solution(\"41 6\") == \"Not a moose\"\nassert solution(\"42 5\") == \"Not a moose\"\nassert solution(\"43 4\") == \"Not a moose\"\nassert solution(\"44 3\") == \"Not a moose\"\nassert solution(\"45 2\") == \"Not a moose\"\nassert solution(\"46 1\") == \"Not a moose\"\nassert solution(\"47 0\") == \"Not a moose\"\nassert solution(\"48 9\") == \"Not a moose\"\nassert solution(\"49 8\") == \"Not a moose\"\nassert solution(\"50 7\") == \"Not a moose\"\nassert solution(\"51 6\") == \"Not a moose\"\nassert solution(\"52 5\") == \"Not a moose\"\nassert solution(\"53 4\") == \"Not a moose\"\nassert solution(\"54 3\") == \"Not a moose\"\nassert solution(\"55 2\") == \"Not a moose\"\nassert solution(\"56 1\") == \"Not a moose\"\nassert solution(\"57 0\") == \"Not a moose\"\nassert solution(\"58 9\") == \"Not a moose\"\nassert solution(\"59 8\") == \"Not a moose\"\nassert solution(\"60 7\") == \"Not a moose\"\nassert solution(\"61 6\") == \"Not a moose\"\nassert solution(\"62 5\") == \"Not a moose\"\nassert solution(\"63 4\") == \"Not a moose",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"Expected Output\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"Expected Output\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}, {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\"\nassert solution(\"3 3\") == \"Even 6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6\\n'\nassert solution('3 3') == 'Even 6\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Odd 6\", \"Test 1 failed\"\nassert solution(\"3 3\") == \"Even 6\", \"Test 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == \"Odd 6\", \"Expected output 'Odd 6', got '{}'.\".format(solution(input1))\nassert solution(input2) == \"Even 6\", \"Expected output 'Even 6', got '{}'.\".format(solution(input2))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\ntomo\\nmono\\ndak\\n6666\\n\") == \"1\", \"The solution is incorrect.\"\nassert solution(stdin=\"2\\nja\\nla\\n52\\n\") == \"2\", \"The solution is incorrect.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak\\n6666') == 1\nassert solution('2\\nja\\nla\\n52') == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '1'\nassert solution(stdin=open('input2.txt', 'r')) == '2'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == 1\nassert solution(\"2\\nja\\nla\\n52\") == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test Case 1 failed. Expected Output: {expected_output_1}, but got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Test Case 2 failed. Expected Output: {expected_output_2}, but got {solution(sample_input_2)}\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == 1, \"Sample Input 1\"\nassert solution(\"2\\nja\\nla\\n52\") == 2, \"Sample Input 2\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1, \"Expected output 1, got: {}.\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sample Input 1\") == \"1\"\nassert solution(\"Sample Input 2\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\\n\", \"Test case 1\"\nassert solution(2) == \"2\\n\", \"Test case 2\"\nassert solution(3) == \"1\\n\", \"Test case 3\"\nassert solution(4) == \"1\\n\", \"Test case 4\"\nassert solution(5) == \"1\\n\", \"Test case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Test case 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\", \"Test case 2\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\", \"Sample Input 2\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\nA.#\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\npass\\n\", \"Sample Input 2\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Test case 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 2\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"sample input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"sample input 2\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"..#..\", \"Sample Input 1: A\"\nassert solution(\"DOG\") == \"..#...#...*..\", \"Sample Input 2: DOG\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\", \"Input 2\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str: \\n\\tpass'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\", \"Test case 1 failed\"\nassert solution(\"DOG\") == \"..#...#...*..\", \"Test case 2 failed\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    words = stdin.split()\n    for i in range(len(words)):\n        frame_len = i % 3 + 1\n        word = \"\"\n        for j in range(frame_len):\n            word += \"#\"\n        for j in range(frame_len):\n            word += \".\"\n        print(word)\n    return \"\"\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\nA.#\\n..#..\"\n\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\nA.#.O.*.G.*\\n.#.#.#.#.*.*.\\nA.#.O.*.G.*\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"Test\") == \"Test\\n
        "num_ids_2": 100,
        "num_ids_4": 1019
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == f\"{3.141593:.6f}\\n{2.000000:.6f}\", \"The output is incorrect\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed. Output: {solution(stdin=input())}, Expected: {expected}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the radius R: \")) == output1, \"The output 1 is incorrect\"\nassert solution(input(\"Enter the radius R: \")) == output2, \"The output 2 is incorrect\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}', Received: '{solution(stdin)}'\"\nfor test in tests:\n    assert test[0] == test[1], f\"Test {test[0]} failed.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1\\n21\\n') == '3.141593\\n882.000000\\n'\nassert solution(stdin='3\\n2\\n') == '0.000000\\n0.000000\\n'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\n21\\n\") == \"1385.442360\\n882.000000\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"3.141593\\n2.000000\\n\", \"Input 1 is incorrect\"\n\nassert solution(stdin=input()) == \"1385.442360\\n882.000000\\n\", \"Input 2 is incorrect\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3.141593\nassert solution(21) == 1385.442360",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.141593\\n2.000000\", \"The output is incorrect.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"Expected Output 2, but got {}\".format(solution(stdin))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input1) == solution_output1, \"Test Case 1 failed\"\nassert solution(solution_input2) == solution_output2, \"Test Case 2 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 -2 3\") == 2\nassert solution(\"5\\n129 44 394 253 147\") == 0",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 -2 3\") == \"2\"\nassert solution(\"5\\n129 44 394 253 147\") == \"0\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output the sum of all the expenses Robin has paid for the last month.'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 -2 3') == '2\\n'\nassert solution('5\\n129 44 394 253 147') == '0\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())), f\"Expected: {'\\n'.join([' '.join(str(x) for x in [input()])])}, Received: {'\\n'.join([' '.join(str(x) for x in [solution(str(input()))])])}\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 6\nassert solution(4) == 8",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6, \"Your solution is not correct.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 2 2\\n') == '6'\nassert solution('3\\n4 1 2\\n') == '8'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"6\", \"Output must be 6\"\nassert solution(4) == \"8\", \"Output must be 8\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 6\nassert solution(3) == 8",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\\n2 2 2\") == \"8\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for the given inputs\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 2 2\\n3\\n4 1 2\\n') == '6\\n'\nassert solution('3\\n4 1 2\\n2 2 2\\n') == '8\\n'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0U11\") == 2\nassert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {input_data}!= {output_data}\"\nfor input_data, output_data in test_cases:\n    assert solution(input_data) == output_data, f\"Test case failed: {input_data}!= {output_data}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == 'NOT POSSIBLE'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2 4 4\n    1111\n    1S01\n    1011\n    0U11\n    '''\n) == 2\n\nassert solution(\n    '''\n    2 4 4\n    1111\n    1S01\n    1011\n    0L11\n    '''\n) == 'NOT POSSIBLE'\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"NOT POSSIBLE\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\"\nassert solution(\"3 2 1 1 1 2 1 1 1 2\") == \"5\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 108
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"The solution is incorrect. Expected output is: \\n\" + output + \"\\nbut got: \\n\" + str(solution(input()))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\\n\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\\n\") == \"3\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() # replace this line with the solution code",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\n3 1 2 1 1\\n') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1\\n') == '3'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n3 1 2 1 1') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1') == '3'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n3 1 2 1 1\\n') == '4\\n'\nassert solution('7 5\\n1 5 4 3 2 1 1\\n') == '3\\n'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin), \"Test Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n10\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '5\\n10\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"The given solution is incorrect.\"\nassert solution(sample_input_2) == sample_output_2, \"The given solution is incorrect.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n15\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"still running\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"still running\"\nassert solution(4) == \"still running\"\nassert solution(1) == \"still running\"\nassert solution(6) == \"still running\"\nassert solution(7) == \"4\"\nassert solution(8) == \"still running\"\nassert solution(9) == \"still running\"\nassert solution(10) == \"still running\"\nassert solution(11) == \"still running\"\nassert solution(12) == \"still running\"\nassert solution(13) == \"still running\"\nassert solution(14) == \"still running\"\nassert solution(15) == \"still running\"\nassert solution(16) == \"still running\"\nassert solution(17) == \"still running\"\nassert solution(18) == \"still running\"\nassert solution(19) == \"still running\"\nassert solution(20) == \"still running\"\nassert solution(21) == \"still running\"\nassert solution(22) == \"still running\"\nassert solution(23) == \"still running\"\nassert solution(24) == \"still running\"\nassert solution(25) == \"still running\"\nassert solution(26) == \"still running\"\nassert solution(27) == \"still running\"\nassert solution(28) == \"still running\"\nassert solution(29) == \"still running\"\nassert solution(30) == \"still running\"\nassert solution(31) == \"still running\"\nassert solution(32) == \"still running\"\nassert solution(33) == \"still running\"\nassert solution(34) == \"still running\"\nassert solution(35) == \"still running\"\nassert solution(36) == \"still running\"\nassert solution(37) == \"still running\"\nassert solution(38) == \"still running\"\nassert solution(39) == \"still running\"\nassert solution(40) == \"still running\"\nassert solution(41) == \"still running\"\nassert solution(42) == \"still running\"\nassert solution(43) == \"still running\"\nassert solution(44) == \"still running\"\nassert solution(45) == \"still running\"\nassert solution(46) == \"still running\"\nassert solution(47) == \"still running\"\nassert solution(48) == \"still running\"\nassert solution(49) == \"still running\"\nassert solution(50) == \"still running\"\nassert solution(51) == \"still running\"\nassert solution(52) == \"still running\"\nassert solution(53) == \"still running\"\nassert solution(54) == \"still running\"\nassert solution(55) == \"still running\"\nassert solution(56) == \"still running\"\nassert solution(57) == \"still running\"\nassert solution(58) == \"still running\"\nassert solution(59) == \"still running\"\nassert solution(60) == \"still running\"\nassert solution(61) == \"still running\"\nassert solution(62) == \"still running\"\nassert solution(63) == \"still running\"\nassert solution(64) == \"still running\"\nassert solution(65) == \"still running\"\nassert solution(66) == \"still running\"\nassert solution(67) == \"still running\"\nassert solution(68) == \"still running\"\nassert solution(69) == \"still running\"\nassert solution(70) == \"still running\"\nassert solution(71) == \"still running\"\nassert solution(72) == \"still running\"\nassert solution(73) == \"still running\"\nassert solution(74) == \"still running\"\nassert solution(75) == \"still running\"\nassert solution(76) == \"still running\"\nassert solution(77) == \"still running\"\nassert solution(78) == \"still running\"\nassert solution(79) == \"still running\"\nassert solution(80) == \"still running\"\nassert solution(81) == \"still running\"\nassert solution(82) == \"still running\"\nassert solution(83) == \"still running\"\nassert solution(84) == \"still running\"\nassert solution(85) == \"still running\"\nassert solution(86) == \"still running\"\nassert solution(87) == \"still running\"\nassert solution(88) == \"still running\"\nassert solution",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2\\n7\\n11\\n\") == \"4\\n\", \"Output:4\\n\"\nassert solution(stdin=\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\\n\", \"Output:still running\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution '{solution(input())}' doesn't match expected output '{expected}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n7\\n11\\n\") == \"4\\n\", \"Incorrect output for sample input 1\"\n\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\\n\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"still running\"\nassert solution(input()) == \"still running\"\nassert solution(input()) == \"still running\"\nassert solution(input()) == \"still running\"\nassert solution(input()) == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"still running\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n7\\n11\\n\") == \"4\"\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"still running\"\n\nimport time",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n7\\n11\\n\") == \"4\\n\", \"Incorrect output for sample 1\"\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\\n\", \"Incorrect output for sample 2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == 0.6\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == 0.6\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\\n\") == 0.6\nassert solution(\"2\\n2 2\\n\") == \"impossible\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\\n2\\n2 2\\n\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\\n\") == \"impossible\\n\"\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3)<0.1\nassert solution(4)<0.1\nassert solution(5)<0.1\nassert solution(10)<0.1\nassert solution(15)<0.1\nassert solution(20)<0.1\nassert solution(25)<0.1\nassert solution(30)<0.1\nassert solution(35)<0.1\nassert solution(40)<0.1\nassert solution(45)<0.1\nassert solution(50)<0.1\nassert solution(55)<0.1\nassert solution(60)<0.1\nassert solution(65)<0.1\nassert solution(70)<0.1\nassert solution(75)<0.1\nassert solution(80)<0.1\nassert solution(85)<0.1\nassert solution(90)<0.1\nassert solution(95)<0.1\nassert solution(100)<0.1\nassert solution(105)<0.1\nassert solution(110)<0.1\nassert solution(115)<0.1\nassert solution(120)<0.1\nassert solution(125)<0.1\nassert solution(130)<0.1\nassert solution(135)<0.1\nassert solution(140)<0.1\nassert solution(145)<0.1\nassert solution(150)<0.1\nassert solution(155)<0.1\nassert solution(160)<0.1\nassert solution(165)<0.1\nassert solution(170)<0.1\nassert solution(175)<0.1\nassert solution(180)<0.1\nassert solution(185)<0.1\nassert solution(190)<0.1\nassert solution(195)<0.1\nassert solution(200)<0.1\nassert solution(205)<0.1\nassert solution(210)<0.1\nassert solution(215)<0.1\nassert solution(220)<0.1\nassert solution(225)<0.1\nassert solution(230)<0.1\nassert solution(235)<0.1\nassert solution(240)<0.1\nassert solution(245)<0.1\nassert solution(250)<0.1\nassert solution(255)<0.1\nassert solution(260)<0.1\nassert solution(265)<0.1\nassert solution(270)<0.1\nassert solution(275)<0.1\nassert solution(280)<0.1\nassert solution(285)<0.1\nassert solution(290)<0.1\nassert solution(295)<0.1\nassert solution(300)<0.1\nassert solution(305)<0.1\nassert solution(310)<0.1\nassert solution(315)<0.1\nassert solution(320)<0.1\nassert solution(325)<0.1\nassert solution(330)<0.1\nassert solution(335)<0.1\nassert solution(340)<0.1\nassert solution(345)<0.1\nassert solution(350)<0.1\nassert solution(355)<0.1\nassert solution(360)<0.1\nassert solution(365)<0.1\nassert solution(370)<0.1\nassert solution(375)<0.1\nassert solution(380)<0.1\nassert solution(385)<0.1\nassert solution(390)<0.1\nassert solution(395)<0.1\nassert solution(400)<0.1\nassert solution(405)<0.1\nassert solution(410)<0.1\nassert solution(415)<0.1\nassert solution(420)<0.1\nassert solution(425)<0.1\nassert solution(430)<0.1\nassert solution(435)<0.1\nassert solution(440)<0.1\nassert solution(445)<0.1\nassert solution(450)<0.1\nassert solution(455)<0.1\nassert solution(460)<0.1\nassert solution(465)<0.1\nassert solution(47",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\\n2\\n2 2\\n\") == \"0.6\"\nassert solution(\"2\\n2 2\\n\") == \"impossible\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\\n2\\n2 2\\n\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\\n\") == \"impossible\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed. Output: {solution(input_data)}, Expected output: {expected_output}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"1 4 1 4\\n\"\n\"1 6 1 6\\n\"\n) == \"Gunnar\"\n\nassert solution(\n\"1 8 1 8\\n\"\n\"1 10 2 5\\n\"\n) == \"Tie\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Tie\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Tie\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Gunnar\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Emma\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Gunnar'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Emma'\nassert solution('1 10 1 10\\n1 8 1 6\\n1 12 1 10') == 'Tie'\nassert solution('1 10 1 10\\n1 8 1 6\\n1 12 1 10') == 'Emma'",
        "num_ids_2": 53,
        "num_ids_4": 131
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"makes sense\"\nassert solution(sample_input2) == \"something is fishy\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed.\"\n\ntest_case = 1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\\n\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"\\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test case {sample_input_1} failed\"\nassert solution(sample_input_2) == expected_output_2, f\"Test case {sample_input_2} failed\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"makes sense\"\nassert solution(open(\"input2.txt\", \"r\")) == \"something is fishy\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"makes sense\"\nassert solution(\"8\") == \"something is fishy\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18', 'Test 1 failed'\nassert solution('4 9 25 49 81') == '2 121', 'Test 2 failed'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18', \"Output not as expected.\"\nassert solution('4 9 25 49 81') == '2 121', \"Output not as expected.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"Sample Input 1\"\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"Sample Input 2\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"1 18\n2 121\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18\\n', 'Test 1 failed'\nassert solution('4 9 25 49 81') == '2 121\\n', 'Test 2 failed'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Sample Input 1\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"Sample Input 2\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"Invalid answer for first example\"\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"Invalid answer for second example\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18\\n'\nassert solution('4 9 25 49 81') == '2 121\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"CORRECT\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"CORRECT\", \"Your solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'CORRECT', 'Invalid solution'\n\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1\\n') == 'CORRECT', 'Invalid solution'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4') == 'CORRECT'\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1') == 'CORRECT'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"Input and output do not match.\"\nfor _ in range(test_cases):\n    N = int(stdin.readline())\n    queens = []\n    for _ in range(N):\n        row = list(map(int, stdin.readline().split()))\n        queens.append(row)\n    if solution(queens) == \"CORRECT\":\n        print(\"CORRECT\")\n    else:\n        print(\"INCORRECT\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"\n\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\\n\") == \"CORRECT\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"CORRECT\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Sample Input 1 and Output 1 do not match\"\nassert solution(input()) == output(), \"Sample Input 2 and Output 2 do not match\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == 'CORRECT'\nassert solution(input_2) == 'CORRECT'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == [1, 1, 1]\nassert solution(sample_input_2) == [1, 2, 3, 1, 11]",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    0 1 1\n    1 0 1\n    1 1 0\n\"\"\") == \"1 1 1\"\nassert solution(\n    \"\"\"\n    5\n    0 0 1 1 1\n    0 0 2 0 2\n    1 2 0 1 3\n    1 0 1 0 1\n    1 2 3 1 0\n\"\"\") == \"1 2 3 1 11\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1 2 3 1 11']",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '''1 1 1\n1 1 1'''\n\nassert solution(stdin) == '''1 1 1\n1 1 1'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == [1, 1, 1], \"Incorrect output for sample input 1\"\n\nassert solution(input()) == [1, 2, 3], \"Incorrect output for sample input 2\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\\n5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == \"1 1 1\\n1 2 3 1 11\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1 1\\n1 0 1\\n1 1 0') == '1 1 1'\nassert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3\\n0 1 1\\n1 0 1\\n1 1 0') == '1 1 1\\n'\nassert solution(stdin='5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11\\n'",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n\") == \"Thursday\"\nassert solution(\"17 1\\n\") == \"Saturday\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Expected 'Thursday', but got '{}'\".format(solution(\"1 1\"))\nassert solution(\"17 1\") == \"Saturday\", \"Expected 'Saturday', but got '{}'\".format(solution(\"17 1\"))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"1 1 should output Thursday\"\nassert solution(\"17 1\") == \"Saturday\", \"17 1 should output Saturday\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Incorrect output for sample input 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Incorrect output for sample input 2\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The output '{solution(input())}' does not match the expected output '{expected}'.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4\\n40\\n', \"The result should be 4\\n40\\n, but got {}\".format(solution())",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1\n    100\n    4\n    \"\"\"\n) == \"4\\n40\\n\"\n\nassert solution(\n    \"\"\"\n    100\n    500\n    12\n    \"\"\"\n) == \"129\\n480\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n100\\n4\") == \"4\\n40\"\nassert solution(\"100\\n500\\n12\") == \"129\\n480\"\nassert solution(\"1\\n2\\n3\") == \"Error: Input error\"\nassert solution(\"1\\n4\\n5\") == \"Error: Input error\"\nassert solution(\"1\\n0\\n1\") == \"Error: Input error\"",
        "num_ids_2": 50,
        "num_ids_4": 88
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\", \"Test 1\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\", \"Test 2\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '4.0\\n3\\n'\n\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n') == '6.0\\n3\\n'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4') == '4.0\\n3\\n'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0\\n3\\n'",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4.0\\n3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4.0\\n3\"\nassert solution() == \"6.0\\n3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0\\n3\\n'\n\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0\\n3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == 2\nassert solution('30') == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == [\"1\"]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\", \"Sample Input 1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\", \"Sample Input 2\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\", \"First Case\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\", \"Second Case\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"\n\nfrom typing import List",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"1\\n\", \"The output is incorrect.\"\nassert solution(open(\"example2.txt\", \"r\")) == \"HE GOT AWAY!\\n\", \"The output is incorrect.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\"\n\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == \"1\\n\"\nassert solution(stdin=open(\"sample_input_1.txt\", \"r\")) == \"1\\n\"\nassert solution(stdin=open(\"sample_input_2.txt\", \"r\")) == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 75
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"\n\nfrom typing import List",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1\") == \"8.0\"\nassert solution(stdin=\"2\") == \"6.843530573929037\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '8.0\\n'\nassert solution(open('input2.txt', 'r')) == '6.843530573929037\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin.read()) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, got {solution(stdin.read())}\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6.843530573929037\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n3 3 3\\n4 4 5') == '8.0\\n'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037\\n'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '8.0', 'Sample Input 1 should output 8.0'\nassert solution(sample_input2) == '6.843530573929037', 'Sample Input 2 should output 6.843530573929037'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Solution not provided.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(24) == \"24\"\nassert solution(25) == \"27\"\n\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(24) == 24, \"The given input is not valid.\"\nassert solution(25) == 27, \"The given input is not valid.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(24) == \"24\"\nassert solution(25) == \"27\"\nassert solution(156) == \"156\"\nassert solution(157) == \"157\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(24) == 24, \"Test 1 Failed\"\nassert solution(25) == 27, \"Test 2 Failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin), \"The solution is not correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1') == '24'\nassert solution(stdin='2') == '27'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(24) == 24, \"Test 1 failed\"\nassert solution(25) == 27, \"Test 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1+9+8+4') == '7', \"Test 1\"\nassert solution('1+2+3+4+5+6+7+8+9') == '188', \"Test 2\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"The output is incorrect\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"The output is incorrect\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1+9+8+4\") == 7, \"Incorrect solution. Expected 7, got {}\".format(solution(\"1+9+8+4\"))\nassert solution(\"1+2+3+4+5+6+7+8+9\") == 188, \"Incorrect solution. Expected 188, got {}\".format(solution(\"1+2+3+4+5+6+7+8+9\"))\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1: Incorrect output. Expected '7', got '{}'\".format(solution(\"1+9+8+4\"))\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2: Incorrect output. Expected '188', got '{}'\".format(solution(\"1+2+3+4+5+6+7+8+9\"))",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1 Failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2 Failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1 failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect solution\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect solution\"\nprint(\"All tests passed!\")",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect solution. Expected 7, got {}\".format(solution(\"1+9+8+4\"))\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect solution. Expected 188, got {}\".format(solution(\"1+2+3+4+5+6+7+8+9\"))",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1 failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2 failed\"\nassert solution(\"10+20+30+40+50\") == \"100\", \"Test 3 failed\"\nassert solution(\"100+100+100+100+100+100+100+100+100\") == \"100000000\", \"Test 4 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 145
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5 -2 4', \"Test failed\"\nprint('All tests passed!')",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, actual output: {solution}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\") == \"2 5 -2 4\\n\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"2 5\", \"Sample Input 1\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\", \"Sample Input 2\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\") == \"2 5\\n\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 5\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n1 5 2\n2 2 -4 5\n''') == '''\n2 5\n-2 4\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(SampleInput1) == SampleOutput1, \"Sample Input 1 failed\"\nassert solution(SampleInput2) == SampleOutput2, \"Sample Input 2 failed\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2 5', 'The correct output should be 2 5'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5 -2 4\", \"Test case 1\"\n\nassert solution(input()) == \"2 5\", \"Test case 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=str(input())[:-1]) ==''.join(sorted(map(str, input().split())))[:-1]\nassert solution(stdin=str(input())[:-1]) ==''.join(sorted(map(int, input().split())))[:-1]",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''2 2 2 1 1'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data_1) == output_data_1, \"Incorrect output 1\"\nassert solution(input_data_2) == output_data_2, \"Incorrect output 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == [\"2\", \"2\", \"2\", \"1\", \"1\"]\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == [\"1\", \"1\", \"1\", \"3\", \"3\", \"3\", \"2\", \"2\", \"2\"]",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2 2 2 1 1'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\\n\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"38 24\") == 875, \"Expected 875, got {}\".format(solution(\"38 24\"))\nassert solution(\"1 100\") == 100, \"Expected 100, got {}\".format(solution(\"1 100\"))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(38, 24) == 875\nassert solution(1, 100) == 100",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"875\\n\"\nassert solution(stdin) == \"100\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('38 24') == 875\nassert solution('1 100') == 100",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('38 24') == '875'\nassert solution('1 100') == '100'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"875\\n\", \"The correctness of the solution is not provided.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case failed. Expected: {expected_output}, Received: {solution(stdin)}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '875', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"38 24\") == 875, \"Your implementation is incorrect\"\nassert solution(\"1 100\") == 100, \"Your implementation is incorrect\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\", \"The first solution should be correct\"\nassert solution(\"221 231\") == \"132\", \"The second solution should be correct\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"734 893\") == \"437\", \"Error in solution.\"\nassert solution(\"221 231\") == \"132\", \"Error in solution.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"437\"\nassert solution(sample_input_2) == \"132\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"734 893\") == \"437\", \"Test 1 failed\"\nassert solution(\"221 231\") == \"132\", \"Test 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"programming\", \"Input error\"\nassert solution(stdin=\"11 131\") == \"programming\", \"Input error\"\nassert solution(stdin=\"7 96\") == \"contest\", \"Input error\"",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"programming\"\nassert solution(input()) == \"contest\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"programming\"\nassert solution(input()) == \"contest\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"11 131\") == \"programming\\n\", \"The solution is incorrect.\"\nassert solution(stdin=\"7 96\") == \"contest\\n\", \"The solution is incorrect.\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"programming\"\nassert solution(input()) == \"contest\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 131\") == \"programming\\n\", \"The AI should be able to solve the game\"\nassert solution(\"7 96\") == \"contest\\n\", \"The AI should be able to solve the game\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11, 131) == 'programming', 'Test 1 failed'\nassert solution(7, 96) == 'contest', 'Test 2 failed'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 131\") == \"programming\", \"Output 1\"\nassert solution(\"7 96\") == \"contest\", \"Output 2\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(Solution().findWords(\"programming\", 11, 131)) == \"programming\"\nassert solution(Solution().findWords(\"defining\", 2, 7)) == \"defining\"\nassert solution(Solution().findWords(\"cat\", 1, 10)) == \"cat\"\nassert solution(Solution().findWords(\"horse\", 2, 10)) == \"horse\"\nassert solution(Solution().findWords(\"football\", 3, 12)) == \"football\"\nassert solution(Solution().findWords(\"python\", 2, 10)) == \"python\"",
        "num_ids_2": 47,
        "num_ids_4": 93
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11,131) == 'programming'\nassert solution(7,96) == 'contest'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\").read()) == \"X\"\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == \"ABABABABABAC\\nBBBABABABABA\\nBBABABABABAB\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '.^'\nprint('All tests passed!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^\"\nassert solution(\"1 2 'X'\") == \".^",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 'X'\") == \".^\", \"Expected output:.^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\", \"Expected output: BBABABABABAC\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed.\" for i, sample_input, sample_output in enumerate(test_cases)",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 'X'\") == '.^'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC'\n\nsolution = '''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == expected_output_1, \"Test 1 failed\"\nassert solution(input_2) == expected_output_2, \"Test 2 failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"\n\nfrom typing import List",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\ndef solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Solution for sample input 1 is incorrect. Expected output: {expected_output1}, got: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Solution for sample input 2 is incorrect. Expected output: {expected_output2}, got: {solution(sample_input2)}\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n0 0 4\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n0 0 4\n0 3 0\n1 1 1\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\"\nassert solution(\"10\\n12\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"1\"\nassert solution(\"2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1",
        "num_ids_2": 140,
        "num_ids_4": 1027
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Good job!\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"good job\\n\", \"The solution is incorrect.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Good job!\", \"Incorrect output. Please check the code.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n3\\n6\\n12\\n\", \"Test 1 failed\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n3\\n6\\n12\\n\", \"Test 2 failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    input=\n        \"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\"\n) == \"Good job!\\n1, 3, 6, 12\\n\"\n\nassert solution(\n    input=\n        \"12\\n4\\n5\\n6\\n8\\n9\\n10\\n11\\n13\\n2\\n1\\n\"\n) == \"Good job!\\n1, 3, 6, 12\\n\"\n\nassert solution(\n    input=\n        \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\"\n) == \"Missing numbers: 3, 6, 11\\n\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Your code is incorrect.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\\n\", \"Expected output: 1\\n3\\n6\\n12\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n\") == \"2\\n4\\n6\\n12\\n\", \"Expected output: 2\\n4\\n6\\n12\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\",
        "num_ids_2": 1003,
        "num_ids_4": 1027
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"1\\n3\\n6\\n12\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"15 2.7 5000000 30000\") == \"216600.00000000 22.130520035406\"\nassert solution(\"15 7.5 25000000 2250000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"2 1.6 500000 100000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"3 1.5 4000000 200000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"6 1.4 10000000 400000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"9 1.3 20000000 3000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"12 1.2 30000000 4000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"15 1.1 40000000 5000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"20 1.0 50000000 6000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"25 0.9 60000000 7000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"30 0.8 70000000 8000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"35 0.7 80000000 9000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"40 0.6 90000000 10000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"45 0.5 100000000 11000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"50 0.4 110000000 12000000\") == \"232100.00000000 22.950980192612\"\nassert solution(\"55 0.3 120000000 13000000\") == \"232100.000000",
        "num_ids_2": 119,
        "num_ids_4": 239
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '157079.04857106 15.598261092309', \"Your solution is incorrect.\"\nprint(\"Your solution is correct.\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''5 4.5 1000 60''') == '179.287674194866'\nassert solution('''1 2 3 4 5''') == '0'",
        "num_ids_2": 99,
        "num_ids_4": 118
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"157079.04857106 15.598261092309\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"157079.04857106 15.598261092309\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '157079.04857106 15.598261092309\\n'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0' # Solution 1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"0\", \"The solution should return 0.\"\nassert solution(2) == \"0\", \"The solution should return 0.\"\nassert solution(3) == \"0\", \"The solution should return 0.\"\nassert solution(4) == \"1\", \"The solution should return 1.\"\nassert solution(5) == \"1\", \"The solution should return 1.\"\nassert solution(6) == \"2\", \"The solution should return 2.\"\nassert solution(7) == \"2\", \"The solution should return 2.\"\nassert solution(8) == \"3\", \"The solution should return 3.\"\nassert solution(9) == \"3\", \"The solution should return 3.\"\nassert solution(10) == \"4\", \"The solution should return 4.\"\nassert solution(11) == \"4\", \"The solution should return 4.\"\nassert solution(12) == \"5\", \"The solution should return 5.\"\nassert solution(13) == \"5\", \"The solution should return 5.\"\nassert solution(14) == \"6\", \"The solution should return 6.\"\nassert solution(15) == \"6\", \"The solution should return 6.\"\nassert solution(16) == \"7\", \"The solution should return 7.\"\nassert solution(17) == \"7\", \"The solution should return 7.\"\nassert solution(18) == \"8\", \"The solution should return 8.\"\nassert solution(19) == \"8\", \"The solution should return 8.\"\nassert solution(20) == \"9\", \"The solution should return 9.\"\nassert solution(21) == \"9\", \"The solution should return 9.\"\nassert solution(22) == \"10\", \"The solution should return 10.\"\nassert solution(23) == \"10\", \"The solution should return 10.\"\nassert solution(24) == \"11\", \"The solution should return 11.\"\nassert solution(25) == \"11\", \"The solution should return 11.\"\nassert solution(26) == \"12\", \"The solution should return 12.\"\nassert solution(27) == \"12\", \"The solution should return 12.\"\nassert solution(28) == \"13\", \"The solution should return 13.\"\nassert solution(29) == \"13\", \"The solution should return 13.\"\nassert solution(30) == \"14\", \"The solution should return 14.\"\nassert solution(31) == \"14\", \"The solution should return 14.\"\nassert solution(32) == \"15\", \"The solution should return 15.\"\nassert solution(33) == \"15\", \"The solution should return 15.\"\nassert solution(34) == \"16\", \"The solution should return 16.\"\nassert solution(35) == \"16\", \"The solution should return 16.\"\nassert solution(36) == \"17\", \"The solution should return 17.\"\nassert solution(37) == \"17\", \"The solution should return 17.\"\nassert solution(38) == \"18\", \"The solution should return 18.\"\nassert solution(39) == \"18\", \"The solution should return 18.\"\nassert solution(40) == \"19\", \"The solution should return 19.\"\nassert solution(41) == \"19\", \"The solution should return 19.\"\nassert solution(42) == \"20\", \"The solution should return 20.\"\nassert solution(43) == \"20\", \"The solution should return 20.\"\nassert solution(44) == \"21\", \"The solution should return 21.\"\nassert solution(45) == \"21\", \"The solution should return 21.\"\nassert solution(46) == \"22\", \"The solution should return 22.\"\nassert solution(47) == \"22\", \"The solution should return 22.\"\nassert solution(48) == \"23\", \"The solution should return 23.\"\nassert solution(49) == \"23\", \"The solution should return 23.\"\nassert solution(50) == \"24\", \"The solution should return 24.\"\nassert solution(51) == \"24\", \"The solution should return 24.\"\nassert solution(52)",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0 # Test case 1\nassert solution(7) == 5 # Test case 2\nassert solution(11) == 9 # Test case 3\nassert solution(15) == 16 # Test case 4\nassert solution(25) == 48 # Test case 5",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('3\\n') == '4\\n'\nassert solution('6\\n') == '16\\n'\nassert solution('10\\n') == '25\\n'\nassert solution('15\\n') == '36\\n'\nassert solution('20\\n') == '49\\n'\nassert solution('25\\n') == '64\\n'\nassert solution('30\\n') == '81\\n'",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 0, \"The solution should return 0 for the given input.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Incorrect output.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Test failed!\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 3, \"Hanh's final score should be 3.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4\n    A\n    A\n    A\n    A\n''') == '3'\n\nprint('All test cases passed!')",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 3, \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"5\\nA\\nA\\nB\\nA\\nA\") == \"3\"\nassert solution(\"4\\nC\\nD\\nC\\nA\") == \"2\"\nassert solution(\"6\\nA\\nA\\nA\\nD\\nA\\nA\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 3\nassert solution(1) == 0\nassert solution(5) == 5\nassert solution(6) == 3\nassert solution(7) == 2\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"..xx..\\nxx..xx\\n..xx..\"\nassert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\"\nassert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\"\nassert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"..xx..\\nxx..xx\\n..xx..\"\nassert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\"",
        "num_ids_2": 103,
        "num_ids_4": 206
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2\\nx.x\\nx.x\\nx.x') == '...x..\\nxx..xx\\n...x..'\nassert solution('3 4 1 2\\nx.x\\nx.x\\nx.x') == '...x..\\nxx..xx\\n...x..'\nassert solution('3 5 1 2\\nx.x\\nx.x\\nx.x') == '...x..\\nxx..xx\\n...x..'\nassert solution('3 3 1 2\\nx.x\\nx.x\\nx.x\\nx.x') == '...x..\\nxx..xx\\n...x..'\nassert solution('3 3 1 2\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x') == '...x..\\nxx..xx\\n...x..'\nassert solution('3 3 1 2\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x\\nx.x') == '...x..\\nxx..xx\\n...x..'",
        "num_ids_2": 78,
        "num_ids_4": 160
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"The output is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3, 1, 2) == '..xx..\\nxx..xx\\n..xx..', \"The output should be '..xx..\\nxx..xx\\n..xx..', but it is '{}'\".format(solution(3, 3, 1, 2))\n\nassert solution(4, 5, 1, 2) == '..xxx..\\nxxxxxx\\n..xxx..\\n', \"The output should be '..xxx..\\nxxxxxx\\n..xxx..\\n', but it is '{}'\".format(solution(4, 5, 1, 2))\n\nassert solution(1, 1, 1, 1) == '..', \"The output should be '..', but it is '{}'\".format(solution(1, 1, 1, 1))",
        "num_ids_2": 134,
        "num_ids_4": 179
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \".xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '.xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('3 3 1 2\\n.x.\\nx.x",
        "num_ids_2": 1009,
        "num_ids_4": 1009
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\\n    '3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\n'",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nF 60 13 20') == '14 20'\nassert solution('1\\nB 60 13 20') == '0 13 20'\nassert solution('1\\nB 120 13 20') == '12 20'\nassert solution('1\\nB 180 13 20') == '18 20'\nassert solution('1\\nB 240 13 20') == '24 20'\nassert solution('1\\nB 300 13 20') == '30 20'\nassert solution('1\\nB 360 13 20') == '36 20'\nassert solution('1\\nB 420 13 20') == '42 20'\nassert solution('1\\nF 60 13 20') == '14 20'",
        "num_ids_2": 53,
        "num_ids_4": 105
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nfor i in range(2):\n    assert solution(stdin) == expected, f\"Test case {i+1} failed\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '14 20'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nprint(f\"PASSED {solution('F 60 13 20')}\")  # Output: PASSED 14 20",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1\\nF 60 13 20\\n\") == \"14 20\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"F 60 13 20\\n\") == \"14 20\"\nassert solution(\"B 60 13 20\\n\") == \"12 18\"\nassert solution(\"F 60 13 20\\n\") == \"14 20\"\nassert solution(\"F 60 13 20\\n\") == \"14 20\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '14 20\\n', 'The solution is incorrect. Please check the code.'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nF 60 13 20\") == \"14 20\\n\"\nassert solution(\"2\\nF 120 0 0\") == \"0 0\\n\"\nassert solution(\"3\\nB 0 10 30\") == \"22 30\\n\"\nassert solution(\"4\\nB 120 10 30\") == \"10 30\\n\"\nassert solution(\"5\\nB -120 10 30\") == \"0 30\\n\"\nassert solution(\"6\\nB -120 10 0\") == \"0 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 107
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\\n\", \"Test case 1 failed.\"\n\nassert solution(\"B 60 13 20\") == \"13 20\\n\", \"Test case 2 failed.\"\n\nassert solution(\"F 60 14 20\") == \"0 20\\n\", \"Test case 3 failed.\"\n\nassert solution(\"B 60 14 20\") == \"23 20\\n\", \"Test case 4 failed.\"\n\nassert solution(\"F 60 0 20\") == \"0 20\\n\", \"Test case 5 failed.\"\n\nassert solution(\"B 60 0 20\") == \"0 20\\n\", \"Test case 6 failed.\"",
        "num_ids_2": 64,
        "num_ids_4": 127
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Invalid solution\"\nassert solution(\"DEC 25\") == \"yup\", \"Invalid solution\"\nassert solution(\"JAN 1\") == \"yup\", \"Invalid solution\"\nassert solution(\"JAN 31\") == \"nope\", \"Invalid solution\"\nassert solution(\"FEB 10\") == \"nope\", \"Invalid solution\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"DEC 25\") == \"nope\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Incorrect output for 'OCT 31'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Incorrect solution\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == \"yup\", \"Your implementation is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('OCT 31') == 'yup', 'The input should be \"OCT 31\". The output is \"{}\".'.format(solution('OCT 31'))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the date in the format FEB 9, with the month and date separated by a single space: \")) == \"yup\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"OCT 31\") == \"yup\"\n\nfrom datetime import datetime",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"##..##.#\\n##..##.##\\n#honi#.\\n#oker##\\n#nera#.\\n#irak##\\n#..#.#.\\n#..#.#.#\"\nassert solution(\"5 5\\n1 1 1 1 1\\n#\\n#\\n#\\n#\") == \"###.###\\n##.##.\\n###.#.\\n###.#.\\n###.#.\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1 1 1\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\") == \"##################\\n##################\\n##################\\n##################\\n##################\\n##################\\n##################\"",
        "num_ids_2": 132,
        "num_ids_4": 207
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the solution\"\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n') == '#.#.#.#. \\n.#.#.#.# \\n#.honi#. \\n.#oker.# \\n#.nera#. \\n.#irak.# \\n#.#.#.#.'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == expected_output, f\"Solution does not match expected output. Solution: {solution(input_str)}, Expected Output: {expected_output}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#\\ndef solution(stdin: str) -> str: pass\"",
        "num_ids_2": 162,
        "num_ids_4": 342
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    2 2 2 2\n    honi\n    oker\n    nera\n    irak\n    \"\"\"\n) == \"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||.r.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|.r.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|.r.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||.r.|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||.r.|\\n+---+---+---+---+---+---+---+---+'",
        "num_ids_2": 386,
        "num_ids_4": 386
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"\n\nassert solution(stdin=\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 724,
        "num_ids_4": 724
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\", \"Output must be a valid input for the problem \\\"Help Me With The Game\\\", corresponding to the given input data.\")",
        "num_ids_2": 384,
        "num_ids_4": 384
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"\n\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"\n\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+",
        "num_ids_2": 226,
        "num_ids_4": 339
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\n\"",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"\n\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"\n\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:",
        "num_ids_2": 716,
        "num_ids_4": 1023
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, \"Input: {}, Output: {}, Expected: {}, Got: {}\".format(input_str, output_str, expected_output, solution(input_str))",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the correctness of the solution:\\n# The output of the input is expected to be the corresponding input.\\n# If the output is not the same as the expected output, the solution is not correct.\\n# Therefore, we test the solution using the given input data.\\n# The solution should return the expected output.\\n# The test cases can be written as:\\n# input1, input2, output\\n# This is a sample test case with the given input.\\n# Test case 1:\\n# input = 'Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4'\\n# expected output = '+---+---+---+---+---+---+---+---+\\n#|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n#|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n#|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n#|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n#|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n#|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n#|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n#|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\\ndef test_solution() -> None:\\n    assert solution('Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...",
        "num_ids_2": 1041,
        "num_ids_4": 1041
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('2.000000 5.000000') == 'Need more materials!'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(1.000000)) == \"Diablo is happy!\\n\"\nassert solution(str(4.000000)) == \"Need more materials!\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"Diablo is happy!\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Diablo is happy!\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Diablo is happy!\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\n\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1.000000, 4.000000) == \"Diablo is happy!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Diablo is happy!\"\nprint(solution(stdin))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) ==",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\nassert solution(\"2 1\") == \"use the stairs\"\nassert solution(\"10 1 20 2 2\") == 16\nassert solution(\"2 2 50\") == \"use the stairs\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example.txt\").read()) == \"6\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 1 10 2 1') == 6\nassert solution('1 10 10 10 1') == 0\nassert solution('10 10 1 10 1') == 0\nassert solution('10 1 10 1 1') == 6\nassert solution('1 10 10 10 10') == 'use the stairs'",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"0 0 0 1 0\") == \"0\"\nassert solution(\"10 10 10 10 10\") == \"0\"\nassert solution(\"1 1 1 1 1\") == \"0\"\nassert solution(\"10 10 10 10 1\") == \"use the stairs\"",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 1 10 2 1') == '6\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\\n\"\nassert solution(\"10 2 1 1 1\") == \"6\\n\"\nassert solution(\"10 10 10 2 1\") == \"use the stairs\\n\"\nassert solution(\"1 1 1 1 1\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 2 0\") == \"use the stairs\\n\"\nassert solution(\"10 1 10 2 1000001\") == \"use the stairs\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 92
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"5 5 10 1 5\") == \"3\"\nassert solution(\"10 1 5 5 5\") == \"0\"\nassert solution(\"10 10 10 10 10\") == \"5\"\nassert solution(\"5 5 5 5 5\") == \"5\"\nassert solution(\"1 1 1 1 1\") == \"use the stairs\"\nassert solution(\"1 1 1 1 2\") == \"use the stairs\"\nassert solution(\"1 1 1 2 1\") == \"use the stairs\"\nassert solution(\"1 1 2 1 1\") == \"use the stairs\"\nassert solution(\"1 1 1 1 1\") == \"use the stairs\"",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8\\n89.06666666666666'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n500\\n120\\n75\\n') == '128.8\\n89.06666666666666'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"128.8\"\nassert solution(4) == \"94.13333333333334\"\nassert solution(5) == \"101.38888888888889\"",
        "num_ids_2": 40,
        "num_ids_4": 67
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\"\nprint(solution(\"3\\n500\\n120\\n75\"))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output: {solution(stdin)}, expected {expected}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, \"500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"\nassert solution(3, \"500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"\nassert solution(3, \"500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 98,
        "num_ids_4": 147
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 45 65 84 346') == 4, \"The expected output is not given.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 45 65 84 346\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 4, \"Expected output: 4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"10\\n1 10 20 10 10\\n2 2 2 2 2\") == \"2\"\nassert solution(\"30\\n1 45 65 84 346\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5\") == \"4\"",
        "num_ids_2": 63,
        "num_ids_4": 134
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"4\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect. Please see the prompt for the correct solution.\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == 1\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('3 3\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('5 5\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('5 5\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('3 3\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('5 5\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# This is a test case to check the correctness of the solution.\\n# You can use any input/output method provided by your language to test your solution.\\n# You can also use the sample input and output provided in the prompt.\\n\\nassert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == '1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n') == \\'1\\ndef solution(stdin: str) -> str:\\n    return \\'1\\n\\ndef main():\\n    assert solution('7 4\\n#######\\n#P.GTG#\\n",
        "num_ids_2": 994,
        "num_ids_4": 994
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n', \"Test case 1 failed\"\n\nsolution = '''\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"The function should return the correct output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    7 4\n    ######\n    #P.GTG#\n    #..TGG#\n    ######\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    10 10\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5 5\n    #######################\n    #P.GTG.GTG.GTG.GTG.GTG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #..TGG.TGG.TGG.TGG.TGG#\n    #######################\n    \"\"\"\n) == \"4\"\n\nassert solution",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == \"5\\ndef solution(stdin: str) -> str:\n    pass\"\n\nfrom typing import List",
        "num_ids_2": 294,
        "num_ids_4": 294
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5",
        "num_ids_2": 283,
        "num_ids_4": 283
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 5\nassert solution(6) == 11\nassert solution(8) == 18\nassert solution(10) == 23\nassert solution(11) == 27\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 1 failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 2 failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test case 3 failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n",
        "num_ids_2": 581,
        "num_ids_4": 1020
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test failed for 'Pubnite is an epic battle royale game featuring unique gameplay mechanics such as dancing! Every player enjoys dancing in the middle of fierce and brutal tactical firefights. This unique feature has made Pubnite the second most popular game on the internet, next to none but BeeLizard\u2019s first person shooter game OvalWatch! Epig Games, the developer of Pubnite, is thinking of pulling one last trick to outsell OverWatch, and defeat its competitor, BeeLizard, once and for all. Announcing Epig Games\u2019s new limited-time global event: Epig Dance Off! In Epig Dance Off, players can invent dance moves, videotape themselves dancing and submit their dance moves to Epig Games, where Epig Games will rate the moves. At the end of the event, Epig Games will announce the moves with the best ratings, and incorporate those dance moves into the game. The inventors of the moves will be crowned Supreme Winners of Epig Dance Off, and there is no greater glory than that. Epig Games ran into an issue. Too many players are eager to join the Epig Dance Off and there are too many submissions to rate. The incredibly smart designers at Epig Games came up with yet another ingenious idea \u2013 they shall use software to determine the rating of a dance! Having not enough engineering power at Epig Games, they have hired an intern \u2013 you \u2013 to write software that rates a dance! The rating system is designed as follows: Each dance is composed of a sequence of moves. The rating of the dance is the number of moves performed in the sequence. The dance is described by a grid with N rows and M columns. Each character in the grid is either a '$', denoting the dancer is seen in this position, or a '_', denoting the dancer is not seen in this position. When there is a single blank column, that denotes a frame is completed and the dancer has completed one move, where a blank column is defined to contain only '_'.\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$",
        "num_ids_2": 1024,
        "num_ids_4": 1024
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == \"5\", \"Test failed\"",
        "num_ids_2": 290,
        "num_ids_4": 290
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\n\nassert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\n\nassert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5\n\nassert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____",
        "num_ids_2": 565,
        "num_ids_4": 1020
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for input '{input_str}'. Expected output: '{expected_output}', but got: '{solution(input_str)}'.\" for input_str, expected_output in test_cases",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Error in solution function\"\n",
        "num_ids_2": 292,
        "num_ids_4": 292
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 5, \"Test case 1 failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 10, \"Test case 2 failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == 15, \"Test case 3 failed\"\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$",
        "num_ids_2": 586,
        "num_ids_4": 1024
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay?\") == \"ayyay ebay osay indkay oday ekyay atinlay defay otay\"\n\nfrom typing import List",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Test failed for i cant speak pig latin\"\n\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him.\") == \"A friend of yours yay ebay osay indkay otay oday ityay ayay\", \"Test failed for A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him.\"\n\nassert solution(\"Ouldway youyay ebay osay indkay otay oday ityay?\") == \"Ouldway youyay ebay osay indkay otay oday ityay ayay\", \"Test failed for Ouldway youyay ebay osay indkay otay oday ityay?\"\n\nassert solution(\"This is a sample input to check the correctness of the program.\") == \"Eakspay igpay atinlay yay ayay eay ayay atay atay ayay itay ayay atay ayay atay ayay atay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay ayay",
        "num_ids_2": 140,
        "num_ids_4": 1024
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay?\") == \"adyay obuy ayay ebay osay indkay otay oday ityay\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"yay elkay obay oray aay eyay oyay tyay oyay dgyay\"",
        "num_ids_2": 110,
        "num_ids_4": 153
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"iyay antcay eakspay igpay atinlay\", \"Input not valid\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\", \"Function not implemented\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay?\") == \"oday oday ityay oldway ebay yay\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Solution is incorrect.\"\n\nassert solution(\"and ordinary\") == \"andyay ordinaryyay\", \"Solution is incorrect.\"\n\nassert solution(\"There are two foxes\") == \"erethay are two foxay\", \"Solution is incorrect.\"\n\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"etay ickay brwxyfgjpyqay tway kshay nyay ohay\", \"Solution is incorrect.\"\n\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"etay ickay brwxyfgjpyqay tway kshay nyay ohay\", \"Solution is incorrect.\"",
        "num_ids_2": 53,
        "num_ids_4": 125
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"nymble\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\nq\\npasta\\npancakes\\n3\\nnymble\\npancakes\\npasta\\npasta\\n\") == \"nymble\\n\"\nassert solution(\"2\\n2\\nq\\npasta\\npancakes\\n3\\nnymble\\npancakes\\npasta\\npasta\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\n2\\nq\\npasta\\npancakes\\n3\\nnymble\\npancakes\\npasta\\npasta\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\n2\\nq\\npasta\\npancakes\\n3\\nnymble\\npancakes\\npasta\\npasta\\n\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 91,
        "num_ids_4": 183
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\nq\\npan\\npancakes\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\n\") == \"nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2\\n2\\nq\\npan\\npancakes\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\nnotpea\\n\") == \"Anywhere is fine I guess\"\n\nassert solution(\"2\\n2\\nq\\npan\\npancakes\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npancakes\\n\") == \"nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 197
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\nq\\npotatoes\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"nymble\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\nq\\npancakes\\n4\\nnymble\\npea soup\\npunsch\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"nymble\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'nymble'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\nq\\npan\\nap\\nSample Output:nymble\\nAnywhere is fine I guess\\n\") == \"nymble\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\nq\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes\\npancakes",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"nymble\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\"\nprint(f\"Test passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"\nassert solution(\"5 10 20\") == \"2\\n\"\nassert solution(\"0 0 10\") == \"1\\n\"\nassert solution(\"2 2 10\") == \"3\\n\"\nassert solution(\"10 0 10\") == \"0\\n\"\nassert solution(\"100001 100000 5000\") == \"1\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 0 15') == 3, \"Incorrect output: 3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 0 15\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 0 15\") == \"3\" # Check the correctness of the solution",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 0 15\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\", \"The output should be '19', but it is '{}'\".format(solution(\"11 15\"))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 15\") == \"19\", \"Your solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 15\") == \"19\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 15\") == \"19\\n\"\nassert solution(\"30 10\") == \"20\\n\"\nassert solution(\"10 5\") == \"5\\n\"\nassert solution(\"5 10\") == \"10\\n\"\nassert solution(\"-1000 1000\") == \"1000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 65
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11 15') == '19'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 15') == '19'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 15\") == \"19\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 15\") == \"19\\n\"\nassert solution(\"100 1\") == \"100\\n\"\nassert solution(\"100 -1\") == \"100\\n\"\nassert solution(\"-100 -1\") == \"-100\\n\"\nassert solution(\"100 100\") == \"100\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('South West East') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"South West East\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Input should be 'South West East' but is: {}\".format(solution(\"South West East\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"South West East\") == \"Yes\", \"Please provide the correct input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"South West East\") == \"No\"\nassert solution(\"East South West\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"South West East\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 16\\navery\\n\") == \"marywasnosyagain\"\nassert solution(\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 16\\navery\\npirpumsemoystoal\\n\"\n) == \"marywasnosyagain\"\n\nassert solution(\n    \"5 16\\navery\\npirpumsemoystoal\\n\"\n) == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"5 16\\navery\\npirpumsemoystoal\\n\"\n) == \"marywasnosyagain\"\n\nassert solution(\n    \"5 16\\navery\\npirpumsemoystoal\\n\"\n) == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5 16\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"marywasnosyagain\", \"Solution does not match expected output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"marywasnosyagain\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"marywasnosyagain\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"John likes simple ciphers. He had been using the \\\"Caesar\\\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems.\\nRapidly searching for an alternative, John found a solution: the famous \\\"Autokey\\\" cipher. He uses a version that takes the $26$ lower-case letters 'a'-'z' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key $k$ begins with a secret prefix of $n$ letters. Each of the remaining letters of the key is copied from the letters of the plaintext 'a', so that k_{n+i} = a_{i} for i >= 1. Encryption of the plaintext 'a' to the ciphertext 'b' follows the formula b_i = a_i + k_i \\bmod 26.\\nMary is not easily discouraged. She was able to get a peek at the last n letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.\\n-----Input-----\\nThe input consists of:\\n - One line with two integers n and m ($1 \\le n \\le 30$, $n + 1 \\le m \\le 100$), where n is the length of the keyword as well as the number of letters Mary saw, and m is the length of the text.\\n - One line with n lower-case letters, the last n letters of the plaintext.\\n - One line with m lower-case letters, the whole ciphertext.\\n\\n-----Output-----\\nOutput the plaintext of John\u2019s diary.\\n\\n-----Examples-----\\nSample Input:\\n5 16\\nagain\\npirpumsemoystoal\\nSample Output:\\nmarywasnosyagain\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\") == \"marywasnosyagain\"",
        "num_ids_2": 459,
        "num_ids_4": 459
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) =='marywasnosyagain'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Either'\n\nassert solution(2) == 'Even'\n\nassert solution(4) == 'Even'\n\nassert solution(6) == 'Even'\n\nassert solution(10) == 'Even'\n\nassert solution(50) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'Either'\n\nassert solution(5) == 'Either'\n\nassert solution(25) == 'Either'\n\nassert solution(2) == 'Even'\n\nassert solution(20) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(3) == 'Even'\nassert solution(4) == 'Odd'\nassert solution(5) == 'Odd'\nassert solution(6) == 'Even'\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'Either'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'Even'\nassert solution(2) == 'Even'\nassert solution(3) == 'Either'\nassert solution(4) == 'Odd'\nassert solution(5) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'Either'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Either'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'\nassert solution(7) == 'Either'\nassert solution(8) == 'Even'\nassert solution(9) == 'Odd'\nassert solution(10) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Either', \"Expected 'Either', got '{}' instead.\".format(solution(1))  # Test 1\nassert solution(2) == 'Either', \"Expected 'Either', got '{}' instead.\".format(solution(2))  # Test 2\nassert solution(3) == 'Either', \"Expected 'Either', got '{}' instead.\".format(solution(3))  # Test 3\nassert solution(4) == 'Even', \"Expected 'Even', got '{}' instead.\".format(solution(4))  # Test 4\nassert solution(5) == 'Odd', \"Expected 'Odd', got '{}' instead.\".format(solution(5))  # Test 5",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Even'\nassert solution(4) == 'Odd'\nassert solution(5) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'Even'\nassert solution(2) == 'Odd'\nassert solution(3) == 'Either'\nassert solution(101) == 'Even'\nassert solution(100) == 'Odd'\nassert solution(201) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n1\\n4\\n1\\n5\\n'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test case 1 failed\"\n\nassert solution(\"5\\n315\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n5\\n\", \"Test case 2 failed\"\n\nassert solution(\"5\\n314\\n1\\n5927\\n5\\n35897\\n\") == \"3\\n1\\n5\\n\", \"Test case 3 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35898\\n\") == \"3\\n1\\n5\\n\", \"Test case 4 failed\"\n\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n5\\n\", \"Test case 5 failed\"",
        "num_ids_2": 108,
        "num_ids_4": 210
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test failed.\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Please fix the code to the given format.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(314) == \"3\"\nassert solution(5926) == \"1\"\nassert solution(35897) == \"4\"\nassert solution(100) == \"1\"\nassert solution(10) == \"1\"\nassert solution(5) == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5', \"Your solution is incorrect\"\nprint(\"Test Passed\")",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Testcase not valid\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n10\\n') == '3\\n1\\n10\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n100\\n') == '3\\n1\\n100\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n1000\\n') == '3\\n1\\n1000\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n0.5\\n') == '3\\n1\\n5\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n0.01\\n') == '3\\n1\\n5\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n0.001\\n') == '3\\n1\\n5\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n0.0001\\n') == '3\\n1\\n5\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n0.00001\\n') == '3\\n1\\n5\\n'\nassert solution(stdin='5\\n314\\n1\\n5926\\n5\\n35897\\n\\n1\\n0.000001\\n') == '3\\n1\\n5\\n'",
        "num_ids_2": 106,
        "num_ids_4": 224
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\"\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n100\") == \"3\\n1\\n4\\n1\\n5\\n100\"\nassert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n10000\") == \"3\\n1\\n4\\n1\\n5\\n10000\"",
        "num_ids_2": 104,
        "num_ids_4": 164
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test 1\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\we we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 10\\ns\\nu\\nb\\nd\\np\\nr\\nk\\na\\ng\\ni\\nh\\nt\\nw\\nl\\ll\\lq\\no\\ns\\ne\\nn\\nd\\nl\\nd\\nm\\nc\\ng\\nl\\nt\\no\\nw\\nt\\nh\\nb\\nc\\nl\\nm\\nh\\n\") == \"no\\nno\\nno\\nno\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 203,
        "num_ids_4": 203
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution()\\nassert not solution()\\nassert solution()\\nassert not solution()\\n\"'.replace('\"', '') == 'yes\\nno\\nno\\nyes\\nyes\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution()\\nassert not solution()\\nassert solution()\\nassert not solution()\\n\"'.replace('\"', '')",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'yes'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution('c t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\n\\n# Test case 2\\nassert solution('t f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\n\\n# Test case 3\\nassert solution('we we\\ncan the\\nwork people\\nit of\\nout the\\n') == 'yes\\nno\\nno\\nyes\\nyes\\n\\n# Test case 4\\nassert solution('c t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n\\n# Test case 5\\nassert solution('out the\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\tt f\\nu h\\np w\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\n    pass\\n'\n\nassert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\tt f\\nu h\\np w\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\n    pass\\n'",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution(stdin: str) -> str: \\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\\n\"\n\nexpected_output = [\"yes\", \"no\", \"no\", \"yes\", \"yes\", \"def solution(stdin: str) -> str:\", \"pass\"]\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    m, n = map(int, stdin.split())\\n    translations = list(stdin)\\n    pairs = []\\n    for i in range(m):\\n        pair = input()\\n        pairs.append(pair)\\n    for i in range(n):\\n        pair = input()\\n        pairs.append(pair)\\n    for pair in pairs:\\n        words = pair.split()\\n        if len(words) == len(set(words)):\\n            for i in range(m):\\n                if len(words) == len(set(words)) and i < m-1:\\n                    letter1, letter2 = pair.split()[0], words[i+1].split()[0]\\n                    if letter1 in translations and letter2 in translations:\\n                        if translation(letter1, pair) == translation(letter2, pair):\\n                            return 'yes'\\n    return 'no'\\n\\ndef translation(letter, pair):\\n    first, second = pair.split()[0], pair.split()[1]\\n    if first == letter:\\n        return second\\n    elif second == letter:\\n        return first\\n\\n# Test the function",
        "num_ids_2": 340,
        "num_ids_4": 340
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, but got {solution(sample_input)}\"\n\nsample_input = '''\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n'''\n\nsample_output = '''\nyes\nno\nno\nyes\nyes\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"\n\nassert solution(\"2 1\\ncarrots?\\nhuffle puff problems?\\n\") == \"0\"\n\nassert solution(\"2 1\\ncarrots?\\nhuffle puff problems?\\n\") == \"0\"",
        "num_ids_2": 49,
        "num_ids_4": 74
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == 1\nassert solution(\"3 2\\ncarrot? rabbits\\narmadillo\\ngrape juice\\nhamsters\\nsloth\") == 2\nassert solution(\"1 2\\ngrape juice\\nhamsters\\nsloth\\narmadillo\\ncarrots?\\ncarrots?\\nbunnies\") == 3\n",
        "num_ids_2": 59,
        "num_ids_4": 104
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"carrots?\") == \"1\"\n\nsolution(\"bunnies\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == 1\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"\nassert solution(\"1 2\\nhuffle-puff\\n\") == \"1\"\nassert solution(\"3 2\\nhuffle-puff\\nhuffle-puff\\n\") == \"3\"\nassert solution(\"5 3\\ncarrots?carrots?\\nbunnies\\n\") == \"15\"\nassert solution(\"5 5\\nhuffle-puff\\nhuffle-puff\\nhuffle-puff\\nhuffle-puff\\n\") == \"20\"\nassert solution(\"6 3\\nhuffle-puff\\nhuffle-puff\\nhuffle-puff\\nhuffle-puff\\n\") == \"5\"\n",
        "num_ids_2": 44,
        "num_ids_4": 99
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == 1, \"Solution is not correct!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1\\n' # You should not modify the given solution, you need to implement the function",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution failed: {solution(input())}!= {output()}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 224,
        "num_ids_4": 336
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('.........+\\n::|......\\n|.P.P.P.|\\n|...P..P|\\n|...P..P|\\n|.P.P.P.|\\n::|......\\n.........+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n'''\n\nassert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q:|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 672,
        "num_ids_4": 672
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('+-------------------+\n|............. |\n|............. |\n|.............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n+-------------------+\n|............. |\n|............. |\n|............. |\n|............. |\n|............. |\n|...........",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"5 5\") == \"You will become a flying monkey!\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\n\"\nassert solution(\"3 1\") == \"You will become a flying monkey!\\n\"\nassert solution(\"1 1\") == \"You will become a flying monkey!\\n\"\nassert solution(\"1000 10\") == \"You will become a flying monkey!\\n\"\nassert solution(\"5 10\") == \"Your wish is granted!def solution(stdin: str) -> str:pass\\n\"\nassert solution(\"8 11\") == \"You will become a flying monkey!\\n\"\nassert solution(\"3 5\") == \"Your wish is granted!def solution(stdin: str) -> str:pass\\n\"\nassert solution(\"6 3\") == \"You will become a flying monkey!\\n\"\nassert solution(\"3 4\") == \"Your wish is granted!def solution(stdin: str) -> str:pass\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 81
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Your wish is granted!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(b\"\\n\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(b\"1 1\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(b\"5 3\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(b\"10 3\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(b\"1000000000 3\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(b\"1 1000000000\\n\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 134
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\", \"The output is not as expected.\"\n\nimport math",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\", \"Error: Please provide a valid input.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"16\"\n\nOld MacDonald had a farm, and on that farm she had a square-shaped pasture, and on that pasture she had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy? \n\nWe can start by calculating the area of the pasture and then using the formula:\n\nLength of a fence = Length of pasture + 2 * Margin\n\nWhere:\n- Length of pasture is the length of the pasture, given in meters.\n- Margin is the distance between the pasture and the fence, given in meters.\n\nUsing the formula, we can calculate the length of the fence by adding the length of the pasture and the value of $2 \\times 2 = 4$ meters, which is the margin.\n\nWe can then multiply the length of the pasture by 1.2 to get a value of $1.2 \\times 10^6 = 1.2 \\times 10^9$ meters, which is the total length of the fence needed for the pasture.\n\nFinally, we can round the value of $1.2 \\times 10^9$ to the nearest integer using the `int()` function and add it to the output.\n\nHere is the code to implement this solution:\n\n```python\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"16\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(16) == 16, \"Your solution should return 16\"\n\nHere's the correct implementation:\n\n```python\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(16) == 16",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(16) == 16, \"Test failed\"\nassert solution(1) == 1, \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(16) == 16\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"16\\n\") == \"16\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"16\"\nassert solution(\"32\") == \"48\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1000000\") == \"0\"\nassert solution(\"1000001\") == \"1000\"\nassert solution(\"1000000000\") == \"1000000\"\nassert solution(\"1000000001\") == \"1000001\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\" # correct solution",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4\\n'\nassert solution('6 180\\n150 45 30 55 20 80 20') == '4\\n'\nassert solution('6 180\\n45 30 55 20 80 45') == '2\\n'\nassert solution('6 180\\n150 45 30 55 20 80 45') == '2\\n'\nassert solution('6 180\\n45 30 55 20 80 20') == '4\\n'\nassert solution('6 180\\n150 45 30 55 20 80 20') == '4\\n'\nassert solution('6 180\\n45 30 55 20 80 45') == '2\\n'\nassert solution('6 180\\n150 45 30 55 20 80 45') == '2\\n'",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"\nassert solution(\"6 360\") == \"0\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"\nassert solution(\"6 240\\n45 30 55 20 80 20\") == \"2\\n\"\nassert solution(\"6 180\\n45 30 55 20 80 120\") == \"3\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 121
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"6 180\\n\"\n    \"45 30 55 20 80 20\\n\"\n) == \"4\\n\"\n\nassert solution(\n    \"6 200\\n\"\n    \"45 30 55 20 80 20\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"6 180\\n\"\n    \"55 30 55 20 80 20\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"6 180\\n\"\n    \"45 20 80 20 80 20\\n\"\n) == \"5\\n\"\n\nassert solution(\n    \"6 180\\n\"\n    \"45 20 55 20 80 20\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"6 180\\n\"\n    \"45 20 45 20 80 20\\n\"\n) == \"3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4\\n'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(test_input) == test_output, f\"Test case {test_case} failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"79\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == 114\nassert solution(\"5\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\\n310\\n320\\n330\\n340\\n350\\n360\\n370\\n380\\n390\\n400\\n410\\n420\\n430\\n440\\n450\\n460\\n470\\n480\\n490\\n500\\n510\\n520\\n530\\n540\\n550\\n560\\n570\\n580\\n590\\n600\\n610\\n620\\n630\\n640\\n650\\n660\\n670\\n680\\n690\\n700\\n710\\n720\\n730\\n740\\n750\\n760\\n770\\n780\\n790\\n800\\n810\\n820\\n830\\n840\\n850\\n860\\n870\\n880\\n890\\n900\\n910\\n920\\n930\\n940\\n950\\n960\\n970\\n980\\n990\\n1000\\n1010\\n1020\\n1030\\n1040\\n1050\\n1060\\n1070\\n1080\\n1090\\n1100\\n1110\\n1120\\n1130\\n1140\\n1150\\n1160\\n1170\\n1",
        "num_ids_2": 425,
        "num_ids_4": 1027
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79, \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 21, 34, 18, 9) == 79, \"Expected output: 79, but got: {}\".format(solution(4, 21, 34, 18, 9))\n\nprint(\"The length of the jumbo javelin Jack has made for her is {}\".format(solution(4, 21, 34, 18, 9)))",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n21\\n34\\n18\\n9\") == \"79\"\nassert solution(stdin=\"5\\n42\\n35\\n19\\n10\") == \"70\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == 79, \"Incorrect output for test case 1\"\n\nassert solution('5\\n22\\n35\\n19\\n9') == 82, \"Incorrect output for test case 2\"\n\nassert solution('6\\n23\\n36\\n20\\n9') == 85, \"Incorrect output for test case 3\"\n\nassert solution('7\\n24\\n37\\n21\\n9') == 88, \"Incorrect output for test case 4\"\n\nassert solution('8\\n25\\n38\\n22\\n9') == 91, \"Incorrect output for test case 5\"\n\nassert solution('9\\n26\\n39\\n23\\n9') == 94, \"Incorrect output for test case 6\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0\\nimpossible\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 0\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 2 4\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 2 0\") == \"impossible\"\nassert solution(\"5 3 3 4\\n1 2 4\") == \"impossible\"\nassert solution(\"5 3 3 4\\n1 2 0\") == \"impossible\"\nassert solution(\"5 3 3 4\\n2 2 4\") == \"impossible\"\nassert solution(\"5 3 3 4\\n2 2 0\") == \"impossible\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"5 3 2 4\\n0 1 4\") == \"impossible\\n\"\nassert solution(\"5 3 3 1\\n0 1 4\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 4\\n0 1 4\\n0 1 4\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\n0 1 4\\",
        "num_ids_2": 55,
        "num_ids_4": 121
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"1 2 3\\n4 5 6\") == \"impossible\"\nassert solution(\"1 2 3\\n3 2 1\") == \"2 1 0\"\nassert solution(\"1 1 3\\n3 2 1\") == \"2 1 0\"\nassert solution(\"1 1 2\\n3 2 1\") == \"2 2 0\"\nassert solution(\"1 1 1\\n3 2 1\") == \"2 1 0\"\nassert solution(\"1 1 0\\n3 2 1\") == \"2 0 0\"\nassert solution(\"5 3 3 4\\n0 1 4\\n2 3 0\\n1 2 3\\n4 5 6\") == \"2 3 0\"\nassert solution(\"1 2 3\\n4 5 6\\n2 3 0\") == \"impossible\"\nassert solution(\"1 2 3\\n3 2 1\\n2 3 0\") == \"2 1 0\"\nassert solution(\"1 1 3\\n3 2 1\\n2 3 0\") == \"2 1 0\"\nassert solution(\"1 1 2\\n3 2 1\\n2 3 0\") == \"2 2 0\"\nassert solution(\"1 1 1\\n3 2 1\\n2 3 0\") == \"2 1 0\"\nassert solution(\"1 1 0\\n3 2 1\\n2 3 0\") == \"2 0 0\"",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n1 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 2\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 1 10\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4 2\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4 10\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4 5\") == \"impossible\"",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 3 0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 3\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 1 1\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 0 4\") == \"impossible\"\nassert solution(\"5 3 3 4\\n0 0 5\") == \"impossible\"",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"The output is incorrect\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\", \"The output is incorrect\"\nassert solution(\"1 1 1 1 1 1\") == \"0 0 0 0 0 0\", \"The output is incorrect\"\nassert solution(\"1 0 0 0 0 0\") == \"0 0 0 0 0 0\", \"The output is incorrect\"\nassert solution(\"0 1 0 0 0 0\") == \"1 1 0 0 0 0\", \"The output is incorrect\"\nassert solution(\"0 1 2 0 0 0\") == \"2 2 0 0 0 0\", \"The output is incorrect\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"1 1 2 1 0 0\") == \"1 1 0 0 0 0\"\nassert solution(\"1 1 2 2 0 0\") == \"1 1 1 0 0 0\"\nassert solution(\"1 1 2 2 2 1\") == \"1 1 1 1 0 0\"\nassert solution(\"1 1 2 2 2 0\") == \"1 1 1 1 1 0\"\n",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\"\nassert solution(\"1 2 3 4 5 6\") == \"0 0 0 0 0 0\"\nassert solution(\"7 0 0 0 0 0\") == \"0 0 0 0 0 0\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 1 2 1 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 2 2 2 2 7\") == \"2 0 0 0 0 2\"\nassert solution(\"0 1 2 2 1 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 1 2 2 2 7\") == \"0 0 0 0 0 0\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1', \"The given solution is incorrect.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Solution is incorrect.\"\nassert solution(\"0 1 0 2 2 7\") == \"0 1 0 0 0 0\", \"Solution is incorrect.\"\nassert solution(\"0 1 2 2 2 10\") == \"0 0 0 0 0 10\", \"Solution is incorrect.\"\nassert solution(\"0 1 2 2 2 1\") == \"0 0 0 0 0 1\", \"Solution is incorrect.\"\nassert solution(\"0 1 2 2 2 0\") == \"0 0 0 0 0 0\", \"Solution is incorrect.\"",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 2 2 3 3 7\") == \"0 1 0 0 0 1\"\nassert solution(\"0 2 2 2 1 7\") == \"0 0 0 1 0 1\"\nassert solution(\"0 3 3 3 3 7\") == \"0 0 0 0 0 2\"\nassert solution(\"0 3 3 3 2 7\") == \"0 0 0 0 0 2\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''1 0 0 0 0 1''', 'The output should be correct.'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.3334\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.3334\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 1.3334, f\"Expected output: {1.3334}, Received: {solution(input())}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1.3334\", \"Solution should return 1.3334\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1.3334', \"Expected '1.3334' but got '{}'.\".format(solution(stdin))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 1.3334\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1.3334\", \"Expected 1.3334, got: \" + str(solution())",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"2\\n123456 0.6666\\nqwerty 0.3334\\n\"\n) == \"1.3334\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == 1.3334",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 2 4\n''') == '1'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nprint(\"All tests passed successfully!\")\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3\\n1 3 3 4 4\") == \"4\\n\"\nassert solution(\"3 2\\n1 1 2 3 4\") == \"1\\n\"\nassert solution(\"5 1\\n1 2 3 4 5\") == \"2\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nassert solution(\"4 1\\n1 2 4\") == \"2\\n\"\nassert solution(\"3 2\\n1 2 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 4\") == \"1\\n\"\nassert solution(\"3 4\\n1 2 4\") == \"2\\n\"\nassert solution(\"5 4\\n1 2 4\") == \"3\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 2 4\\n\") == \"1\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G: *   * \\nF: ---*-------**-----*-------------*-------*---------------- \\nE:  * *     *      * *     **    * *           *         ** ** \\nD: * *     *      * *     **    * *           *         ** ** \\nC:  * *     *      * *     **    * *           *         ** ** \\nB:  * *     *      * *     **    * *           *         ** ** \\nA:  * *     *      * *     **    * *           *         ** ** \\ng: ---*-------**-----*-------------*-------*---------------- \\nf:  * *     *      * *     **    * *           *         ** ** \\ne:  * *     *      * *     **    * *           *         ** ** \\nd:  * *     *      * *     **    * *           *         ** ** \\nc:  * *     *      * *     **    * *           *         ** ** \\nb:  * *     *      * *     **    * *           *         ** ** \\na:  * *     *      * *     **    * *           *         ** **\"\n\nassert solution(\"12\\nC D E F G H A\") == \"G: * * * *\\nF: ** * ** *\\nE: * * * *\\nD: * * * *\\nC: * * * *\\nB: * * * *\\nA: * * * *\"",
        "num_ids_2": 381,
        "num_ids_4": 381
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}\\nGot: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Incorrect output. Expected: {expected}, Got: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for solution(input_data): {input_data}!= {output_data}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"G: \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:                                                               \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\\n\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1') == 'possible'\nassert solution('4\\n1 2 3') == 'impossible'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"7\\n1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"11\\n1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"12\\n1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"13\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"14\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"15\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"16\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"17\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"18\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"19\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"21\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"22\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"23\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"24\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"25\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"26\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"27\\n1 1 1 1 1 1 1 1",
        "num_ids_2": 42,
        "num_ids_4": 94
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"4\\n1 1 1\\n1 2 1\") == \"possible\"\nassert solution(\"5\\n1 1 1\\n1 2 1\\n1 1 2\") == \"possible\"\nassert solution(\"6\\n1 1 1\\n1 2 1\\n1 1 2\\n1 1 1\") == \"definitely not possible\"\nassert solution(\"7\\n1 1 1\\n1 2 1\\n1 1 2\\n1 1 1\\n1 1 1\") == \"definitely not possible\"\nassert solution(\"8\\n1 1 1\\n1 2 1\\n1 1 2\\n1 1 1\\n1 1 1\\n1 1 1\") == \"definitely not possible\"\n\nfrom typing import List",
        "num_ids_2": 41,
        "num_ids_4": 113
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1, 1, 1) == \"possible\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"possible\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\", \"Expected output: possible\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 'possible'\nassert solution(4) == 'possible'\nassert solution(10) == 'possible'\nassert solution(11) == 'possible'\nassert solution(12) == 'definitely not possible'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'possible'\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\n\nsolution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    10\n    4 3 3 2 1 2 2 1 1 3\n    '''\n) == '3'\n\nassert solution(\n    '''\n    10\n    5 4 3 2 1 2 2 1 1 2 2\n    '''\n) == '5'\n\nassert solution(\n    '''\n    10\n    3 4 4 3 2 2 1 1 2 2 1\n    '''\n) == '4'\n\nassert solution(\n    '''\n    10\n    3 3 4 4 3 2 2 1 1 2 2 1\n    '''\n) == '2'\n\nassert solution(\n    '''\n    10\n    2 2 3 4 4 3 2 2 1 1 2 2 1\n    '''\n) == '1'\n\nassert solution(\n    '''\n    10\n    4 2 4 4 3 2 2 1 1 2 2 1\n    '''\n) == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == 3\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\n\nimport math",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'CARTER'\nassert solution() == 'BOLT'\nassert solution() == 'POWELL'\nassert solution() == 'BLAKE'\nassert solution() == 'CARTER'",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE', \"The function should return the correct output.\")",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nprint(\"All tests passed!\")",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nGRIFFIN 9.98 9.08\\nDE_KLOosterman 10.10 9.98\") == \"25.44\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nGRIFFIN 9.98 9.08\\nDE_KLOosterman 10.10 9.98\\n\") == \"25.44\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nGRIFFIN 9.98 9.08\\nDE_KLOosterman 10.10 9.98\\nKLOosterman 10.20 10.10\\n\") == \"25.44\"",
        "num_ids_2": 230,
        "num_ids_4": 516
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\n\nassert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'",
        "num_ids_2": 246,
        "num_ids_4": 246
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'CARTER\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\n\nassert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'",
        "num_ids_2": 246,
        "num_ids_4": 246
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\", \"Test 1\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE', \"Test case failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: '{expected_output}', but got: '{solution(input())}'\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input()) == '2\\n'\n\nsample_input = \"\"\"\n3\n1 2\n2 4\n5 6\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == 2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n1 2\\n2 4\\n5 6') == '2'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6') == 2\nassert solution('1\\n2\\n3\\n4\\n5') == 3\nassert solution('6\\n7\\n8\\n9\\n10') == 2",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == 2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heey\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heey\", \"Test failed\"\nassert solution(\"Helo\") == \"heey\", \"Test failed\"\nassert solution(\"Goodbye\") == \"heey\", \"Test failed\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"heey\", \"Test failed\"",
        "num_ids_2": 31,
        "num_ids_4": 71
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heeeey\") == \"heeeey\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hey\") == \"heey\", \"The output is not correct.\"\nassert solution(\"heey\") == \"heey\", \"The output is not correct.\"\nassert solution(\"heeey\") == \"heeeey\", \"The output is not correct.\"\nassert solution(\"heeeeey\") == \"heeeeeeey\", \"The output is not correct.\"\nassert solution(\"heeeeeeeey\") == \"heeeeeeeeeeeey\", \"The output is not correct.\"",
        "num_ids_2": 37,
        "num_ids_4": 80
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hey\") == \"heey\", \"The solution should return 'heey'.\"\nassert solution(\"heeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heey\", \"Test Failed\"\nassert solution(\"hello\") == \"hello\", \"Test Failed\"\nassert solution(\"goodbye\") == \"goodbye\", \"Test Failed\"\nassert solution(\"later!\") == \"later!\", \"Test Failed\"\nassert solution(\"BAPC\") == \"heey\", \"Test Failed\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heey\", \"Your solution should return 'heey' for the given input.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heeeeeyyy\") == \"heeeeeeeyyy\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"hello world\") == \"hello world\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"hello123\") == \"hello123\"\nassert solution(\"heeeey\") == \"heeeey\"",
        "num_ids_2": 23,
        "num_ids_4": 57
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '''\n1 2\n1 3\n1 4\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == [\"1 2\\n1 3\\n1 4\\n\", \"\"]\nprint(\"All test cases passed\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\", \"Test case 2 failed\"\n\nassert solution(\"5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\", \"Test case 3 failed\"",
        "num_ids_2": 131,
        "num_ids_4": 229
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [1, 2, 1, 3]\nassert solution() == [1, 3, 1, 4]",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Input should be EWPGAJRB, but got {}.\".format(solution(\"EWPGAJRB\"))\nassert solution(\"AAAAABBBBCCCCDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",
        "num_ids_2": 1028,
        "num_ids_4": 1028
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\nfor input_ in inputs:\n    assert solution(input_) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('EWPGAJRB') == 'ABCD', 'Your solution is incorrect'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defghij\") == 6",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abc') == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defghij\") == 7\nassert solution(\"hello\") == 0",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 0\nassert solution(\"hello world\") == 5\nassert solution(\"Per recently learned about palindromes\") == 25\nassert solution(\"A palindrome is a word that is the same no matter whether you read it backward or forward\") == 12",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abc') == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abc') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"defghij\") == 3\nassert solution(\"hello\") == 5\nassert solution(\"abcde\") == 1\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"no\"\nassert solution(\"aaahaah\") == \"go\"\nassert solution(\"aaahaaa\") == \"go\"\nassert solution(\"aaahaaa\") == \"go\"\nassert solution(\"aaaabaah\") == \"go\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaah\\naaaah\") == \"no\", \"Your solution should return 'no' if Jon Marius can go to the given doctor, and 'go' otherwise.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaaah\") == \"go\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaaah\") == \"go\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaaah\") == \"no\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aaah\\naaaaah') == 'go'\nassert solution('aaaah') == 'go'\nassert solution('a') == 'no'\nassert solution('a\\naaa\\n') == 'go'\nassert solution('aaaaa\\naaaaa\\n') == 'no'\nassert solution('aaah\\naaaah\\n') == 'go'\nassert solution('aaaaa\\naaaaa\\naaaaa\\n') == 'no'\nprint('All tests passed!')",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaaah\") == \"go\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaah') == 'no', \"The given input is incorrect.\"\nassert solution('aaaaah') == 'go', \"The given input is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"go\"\nassert solution(\"aaaah\\naaaaah\") == \"go\"\nassert solution(\"aaaah\\naaaaa\") == \"no\"\nassert solution(\"aah\\naaaaa\") == \"no\"\nassert solution(\"aah\\naaaa\") == \"no\"\nassert solution(\"aah\\naaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaah\") == \"go\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaahe\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah\\naaaaaaa\") == \"no\"\nassert solution(\"aah",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"no\"\nassert solution(\"aaaaa\\naaaaaa\") == \"go\"\nassert solution(\"aaa\\naah\") == \"go\"\nassert solution(\"aaaaa\\naaa\") == \"go\"\nassert solution(\"aaaaaah\\naaaaa\") == \"go\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A', \"Your solution is not correct!\"\nassert solution('A1B1A1B1A1A1A1A1A') == 'A', \"Your solution is not correct!\"\nassert solution('A1B1A2B2A1A2A2A2') == 'B', \"Your solution is not correct!\"\nassert solution('B2B1A1B2A2A1A2A2') == 'B', \"Your solution is not correct!\"\nassert solution('B2B1A2B2A2A1A2A2') == 'A', \"Your solution is not correct!\"",
        "num_ids_2": 65,
        "num_ids_4": 129
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"Error in solution 1\"\nassert solution(\"A2B2A2B1A2A1A2A2\") == \"A\", \"Error in solution 2\"\nassert solution(\"A1B1A2B1A2B1A2B2A1A1\") == \"A\", \"Error in solution 3\"\nassert solution(\"B1B2B1B2A1B1A2B2A1B2A2B1A1\") == \"A\", \"Error in solution 4\"\nassert solution(\"B1B2B1B1A1B1A2B2A1B2A2B1A1\") == \"B\", \"Error in solution 5\"",
        "num_ids_2": 64,
        "num_ids_4": 142
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1B2A1A2A2A2A1A2B2\") == \"B\"\nassert solution(\"A2B1A1A2A1A2A2A2B2A1\") == \"B\"\nassert solution(\"A2B1A1A2A1A2A1A2A1A2A2\") == \"A\"\nassert solution(\"A2B1A1A2A1A1A1A1A1A2B2A1\") == \"B\"\nassert solution(\"A2B1A1A1A1A1A1A1A1A1A1A1\") == \"B\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2B1B2A1A2A2A2B1\") == \"B\"\nassert solution(\"A1B1A2B2A1A2A2A2\") == \"B\"\nassert solution(\"A2B2A2A1A2A2A2B1\") == \"B\"\nassert solution(\"A2B2A2A1A2A2A2B1A2\") == \"A\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"Output should be A\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2A1B2B2A1A2A2A2\") == \"B\"\nassert solution(\"A2B1B2A2A2A2B2A2B2\") == \"A\"\nassert solution(\"A1B2A1B2B2A1A2A2B1\") == \"A\"",
        "num_ids_2": 50,
        "num_ids_4": 104
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == 21\n\nfrom typing import List",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 21, \"Test Case 1 failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 21",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21\\n'\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == 21",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == 21",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\n\nassert solution(\"D HHHeellloWooorrrrlld!!\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\", \"Input should be H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D 2\") == \"H3e2l3o1W1o3r4l2d1!2\", \"Input should be H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D E\") == \"H3e2l3o1W1o3r4l2d1!2\", \"Input should be H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 121,
        "num_ids_4": 176
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n') == 'Alice\\n'\nassert solution('3\\n') == 'Bob\\n'\nassert solution('4\\n') == 'Alice\\n'\nassert solution('5\\n') == 'Bob\\n'\nassert solution('1\\n') == 'Alice\\n'\nassert solution('2\\n') == 'Bob\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input {sample_input}, expected {sample_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r'2\\n') == 'Alice'\nassert solution(stdin=r'3\\n') == 'Bob'\nassert solution(stdin=r'4\\n') == 'Alice'\nassert solution(stdin=r'5\\n') == 'Bob'\nassert solution(stdin=r'6\\n') == 'Alice'\nassert solution(stdin=r'7\\n') == 'Bob'\nassert solution(stdin=r'8\\n') == 'Alice'\nassert solution(stdin=r'9\\n') == 'Bob'\nassert solution(stdin=r'10\\n') == 'Alice'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"Alice\"\nassert solution(\"4\\n\") == \"Alice\"\nassert solution(\"3\\n\") == \"Bob\"\nassert solution(\"5\\n\") == \"Alice\"\nassert solution(\"10\\n\") == \"Alice\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\"\nassert solution(\"3\\n\") == \"Bob\\n1\"\nassert solution(\"4\\n\") == \"Alice\\n2\"\nassert solution(\"5\\n\") == \"Alice\\n3\"\nassert solution(\"6\\n\") == \"Alice\\n2\"\nassert solution(\"7\\n\") == \"Alice\\n3\"\nassert solution(\"8\\n\") == \"Alice\\n2\"\nassert solution(\"9\\n\") == \"Bob\\n2\"\nassert solution(\"10\\n\") == \"Bob\\n1\"\nassert solution(\"11\\n\") == \"Alice\\n2\"\nassert solution(\"12\\n\") == \"Alice\\n3\"\nassert solution(\"13\\n\") == \"Alice\\n2\"\nassert solution(\"14\\n\") == \"Bob\\n2\"\nassert solution(\"15\\n\") == \"Bob\\n1\"\nassert solution(\"16\\n\") == \"Alice\\n2\"\nassert solution(\"17\\n\") == \"Alice\\n3\"\nassert solution(\"18\\n\") == \"Alice\\n2\"\nassert solution(\"19\\n\") == \"Bob\\n2\"\nassert solution(\"20\\n\") == \"Bob\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n\"\nassert solution(\"3\\n\") == \"Alice\\n\"\nassert solution(\"4\\n\") == \"Bob\\n\"\nassert solution(\"5\\n\") == \"Bob\\n\"\nassert solution(\"6\\n\") == \"Alice\\n\"\nassert solution(\"7\\n\") == \"Alice\\n\"\nassert solution(\"8\\n\") == \"Alice\\n\"\nassert solution(\"9\\n\") == \"Alice\\n\"\nassert solution(\"10\\n\") == \"Alice\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"\nassert solution(3) == \"Alice\"\nassert solution(4) == \"Bob\"\nassert solution(5) == \"Alice\"\nassert solution(6) == \"Bob\"\nassert solution(7) == \"Alice\"\nassert solution(8) == \"Bob\"\nassert solution(9) == \"Alice\"\nassert solution(10) == \"Bob\"\nassert solution(11) == \"Alice\"\nassert solution(12) == \"Bob\"\nassert solution(13) == \"Alice\"\nassert solution(14) == \"Bob\"\nassert solution(15) == \"Alice\"\nassert solution(16) == \"Bob\"\nassert solution(17) == \"Alice\"\nassert solution(18) == \"Bob\"\nassert solution(19) == \"Alice\"\nassert solution(20) == \"Bob\"\nassert solution(21) == \"Alice\"\nassert solution(22) == \"Bob\"\nassert solution(23) == \"Alice\"\nassert solution(24) == \"Bob\"\nassert solution(25) == \"Alice\"\nassert solution(26) == \"Bob\"\nassert solution(27) == \"Alice\"\nassert solution(28) == \"Bob\"\nassert solution(29) == \"Alice\"\nassert solution(30) == \"Bob\"\nassert solution(31) == \"Alice\"\nassert solution(32) == \"Bob\"\nassert solution(33) == \"Alice\"\nassert solution(34) == \"Bob\"\nassert solution(35) == \"Alice\"\nassert solution(36) == \"Bob\"\nassert solution(37) == \"Alice\"\nassert solution(38) == \"Bob\"\nassert solution(39) == \"Alice\"\nassert solution(40) == \"Bob\"\nassert solution(41) == \"Alice\"\nassert solution(42) == \"Bob\"\nassert solution(43) == \"Alice\"\nassert solution(44) == \"Bob\"\nassert solution(45) == \"Alice\"\nassert solution(46) == \"Bob\"\nassert solution(47) == \"Alice\"\nassert solution(48) == \"Bob\"\nassert solution(49) == \"Alice\"\nassert solution(50) == \"Bob\"\nassert solution(51) == \"Alice\"\nassert solution(52) == \"Bob\"\nassert solution(53) == \"Alice\"\nassert solution(54) == \"Bob\"\nassert solution(55) == \"Alice\"\nassert solution(56) == \"Bob\"\nassert solution(57) == \"Alice\"\nassert solution(58) == \"Bob\"\nassert solution(59) == \"Alice\"\nassert solution(60) == \"Bob\"\nassert solution(61) == \"Alice\"\nassert solution(62) == \"Bob\"\nassert solution(63) == \"Alice\"\nassert solution(64) == \"Bob\"\nassert solution(65) == \"Alice\"\nassert solution(66) == \"Bob\"\nassert solution(67) == \"Alice\"\nassert solution(68) == \"Bob\"\nassert solution(69) == \"Alice\"\nassert solution(70) == \"Bob\"\nassert solution(71) == \"Alice\"\nassert solution(72) == \"Bob\"\nassert solution(73) == \"Alice\"\nassert solution(74) == \"Bob\"\nassert solution(75) == \"Alice\"\nassert solution(76) == \"Bob\"\nassert solution(77) == \"Alice\"\nassert solution(78) == \"Bob\"\nassert solution(79) == \"Alice\"\nassert solution(80) == \"Bob\"\nassert solution(81) == \"Alice\"\nassert solution(82) == \"Bob\"\nassert solution(83) == \"Alice\"\nassert solution(84) == \"Bob\"\nassert solution(85) == \"Alice\"\nassert solution(86) == \"Bob\"\nassert solution(87) == \"Alice\"\nassert solution(88) == \"Bob\"\nassert solution(89) == \"Alice\"\nassert solution(90) == \"Bob\"\nassert solution(91) == \"Alice\"\nassert solution(92) == \"Bob\"\nassert solution(93) == \"Alice\"\nassert solution(94) == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"Alice\\n1\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Alice\"\nassert solution(\"Alice\") == \"Alice\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n\nassert solution(\"4 6 10\") == \"4+6=10\"\n\nassert solution(\"5 2 7\") == \"5-2=7\"\n\nassert solution(\"3 4 5\") == \"3+4=7\"\n\nassert solution(\"5 3 7\") == \"5+3=7\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"The input is not correct\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5+3=8\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"10 5 15\") == \"10+5=15\"\nassert solution(\"2 3 4\") == \"2+3=5\"\nassert solution(\"7 9 6\") == \"7-6=3\"\nassert solution(\"8 2 10\") == \"8+2=10\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5+3=8\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5+3=8\", \"Test failed\"\nassert solution(input()) == \"5+8=24\", \"Test failed\"\nassert solution(input()) == \"10+2+5=35\", \"Test failed\"\nassert solution(input()) == \"5+20=60\", \"Test failed\"\nassert solution(input()) == \"5+10=15\", \"Test failed\"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"9\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"10\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"11\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"12\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"13\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"14\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"15\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"16\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"17\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"18\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"19\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"20\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"21\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"22\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"23\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"24\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"25\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"26\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"27\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"28\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"29\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"30\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"31\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"32\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"33\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"34\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"35\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"36\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"37\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"38\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"39\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"40\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"41\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"42\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"43\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"44\\n3 2 2 1 1 3 1",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='8\\n3 2 2 1 1 3 1 1\\n') == 'YES\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES\\n', \"Solution is incorrect.\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 2 1 1 3 1 1') == 'YES\\n'\nassert solution('8') == 'NO\\n'\nassert solution('4 5') == 'NO\\n'",
        "num_ids_2": 38,
        "num_ids_4": 52
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\\n\"\nassert solution(\"10\\n3 2 3 2 1 4 1 1\") == \"NO\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n4 3 3 1 1 3 1 1\") == \"YES\"\nassert solution(\"8\\n4 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"NO\"\n",
        "num_ids_2": 54,
        "num_ids_4": 111
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    10\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution, \"No solution provided\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'ghost', \"Your solution is incorrect.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) =='mummy', 'Your solution should return \"mummy\" for the given input'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"ghost\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"mummy\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['mummy', 'witch', 'demon', 'demon', 'demon']",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"ghost\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"mummy\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"witch\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"",
        "num_ids_2": 93,
        "num_ids_4": 182
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) =='mummy'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"mummy\"\nassert solution(open(\"input.txt\", \"r\")) == \"witch\"\nassert solution(open(\"input.txt\", \"r\")) == \"demon\"\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\n\nThe solution passes the assertions.",
        "num_ids_2": 453,
        "num_ids_4": 453
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\nTchaikovsky Piano_Favorites November 163\\n\"",
        "num_ids_2": 388,
        "num_ids_4": 388
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \\\n\"\"\"Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\"\"\"\n\nassert solution(\"Artist\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \\\n\"\"\"Artist\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\"\"\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\n\\n\") == \\\n\"\"\"Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\"\"\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\n\\n\") == \\\n\"\"\"Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\"\"\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_",
        "num_ids_2": 273,
        "num_ids_4": 541
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Artist Album Song_Title Length_seconds\\n'\n                 '5\\n'\n                 'Tchaikovsky Piano_Favorites November 163\\n'\n                 'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n                 'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n                 'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n                 'George_Winston Summer Lullaby 215\\n'\n                 '3\\n'\n                 'Artist\\n'\n                 'Album\\n'\n                 'Song_Title\\n') == 'Artist Album Song_Title Length_seconds\\n'\n                                                                         'George_Winston Summer Lullaby 215\\n'\n                                                                         'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n                                                                         'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n                                                                         'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n                                                                         'Tchaikovsky Piano_Favorites November 163\\n'\n                                                                         '3\\n'\n                                                                         'Artist\\n'\n                                                                         'Album\\n'\n                                                                         'Song_Title\\n'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n\"\"\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"",
        "num_ids_2": 240,
        "num_ids_4": 240
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Tchaikovsky Piano_Favorites November 163\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\"\n\nassert solution(\"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"\n\nassert solution(\"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"\n\nassert solution(\"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"",
        "num_ids_2": 363,
        "num_ids_4": 831
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"",
        "num_ids_2": 254,
        "num_ids_4": 254
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Artist Album Song_Title Length_seconds\\n'\n                   '5\\n'\n                   'Tchaikovsky Piano_Favorites November 163\\n'\n                   'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n                   'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n                   'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n                   'George_Winston Summer Lullaby 215\\n'\n                   '3\\n'\n                   'Artist\\n'\n                   'Album\\n'\n                   'Song_Title\\n') == 'Artist Album Song_Title Length_seconds\\n' \\\n                                                        'George_Winston Summer Lullaby 215\\n' \\\n                                                        'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n' \\\n                                                        'James_Taylor Dad_Loves_His_Work London_Town 236\\n' \\\n                                                        'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n' \\\n                                                        'Tchaikovsky Piano_Favorites November 163\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Tchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\", \"MyTunes, a new music application from Mapple, allows you to display and sort your music according to many different attributes. Attributes like album name, song title, artist, and song length are available, among others. One feature MyTunes does NOT have is stable sorting. You need to write the software which does this. Stable sorting would allow the user to do something like this: first sort the whole list by song title, and then sort the whole list by artist. The result is that the list of songs are sorted primarily by artist (since it\u2019s the last thing used to sort), then within each artist they are sorted by song name (since before the artist sort, the songs were ordered by song name). When sorting two songs with equal attribute values they should remain in their relative order prior to sorting (giving stable sorting).\"",
        "num_ids_2": 401,
        "num_ids_4": 401
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 1 1 1 1\") == \"NO\\n\"\nassert solution(\"2 3 1 2 3\") == \"YES\\n\"\nassert solution(\"5 1 2 3 4 5\") == \"YES\\n\"\nassert solution(\"10 10 10 10 10\") == \"NO\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ",
        "num_ids_2": 54,
        "num_ids_4": 96
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test.in\", \"r\").read()) == \"YES\"\nassert solution(open(\"test.in\", \"r\").read()) == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES\\n', \"The test case should output 'YES', but it is: \" + solution(input())",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"1 100 100 100 100 100\\n1 10 10 10 10 10\") == \"YES\"\nassert solution(\"1 100 100 100 100 100\\n10000 10000 10000 10000 10000\") == \"NO\"\nassert solution(\"2 1000 1000 1000 1000 1000\\n10000 10000 10000 10000 10000\") == \"NO\"\nassert solution(\"1 1 1 1 1 1\\n1 2 3 4 5 6\") == \"YES\"\nassert solution(\"2 1000000 1000000 1000000 1000000 1000000\\n1000000 1000000 1000000 1000000 1000000\") == \"NO\"",
        "num_ids_2": 78,
        "num_ids_4": 205
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\\n\") == \"YES\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 6\\n\") == \"NO\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1 1 2\\n3 4 5\") == \"NO\\n\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"1",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"1 3 4\\n2 3 4\") == \"NO\"\nassert solution(\"3 5 2\\n4 6 1\") == \"YES\"",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\", \"Expected output: YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\nNYNY\\nnNYY\\nNYYY\\nNYYN\\nnNNY\\nnYNY\\nnYYN\\nnYYNY\\nnYYNY\\n') == '66.666667\\n50.000000'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"Not Effective\\n66.666667\\n50.000000\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective\\n66.666667\\n50.000000'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Test failed for the given input.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Not Effective\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Not Effective'\nassert solution(input()) == '66.666667'\nassert solution(input()) == '50.000000'\nassert solution(input()) == '66.666667'\nassert solution(input()) == '50.000000'\nassert solution(input()) == '66.666667'\nassert solution(input()) == '50.000000'\nassert solution(input()) == '66.666667'\nassert solution(input()) == '50.000000'\nassert solution(input()) == '66.666667'\nassert solution(input()) == '50.000000'\nassert solution(input()) == '66.666667'\nassert solution(input()) == '50.000000'",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nNYNY\\nnnny\\nnyyy\\nNYYN\\nnnny\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"66.666667\"\nassert solution(\"10\\nNYNY\\nnnny\\nnyyy\\nNYYN\\nnnny\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"50.000000\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"66.666667\", \"The vaccine efficacy against infection by strain A, B, and C in that order should be 66.666667.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"66.666667\"\nassert solution(stdin=\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n\") == \"66.666667\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Bruno\"\nassert solution() == \"Bruno\"\nassert solution() == \"Bruno\"\nassert solution() == \"Bruno\"\nassert solution() == \"Adrian\"\nassert solution() == \"Goran\"\nassert solution() == \"Adrian\"\nassert solution() == \"Adrian\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5\\nBAACC\") == \"3\\nBruno\\n\"\nassert solution(stdin=\"5\\nBBCCC\") == \"2\\nAdrian\\n\"\nassert solution(stdin=\"5\\nCCCCC\") == \"3\\nGoran\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\nBruno\\n\", \"The output should be '3\\nBruno\\n', but it is actually '{}'\".format(solution(stdin))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\nBruno\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nBAACC') == '3\\nBruno'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5\\nBAACC\\n\") == \"Bruno\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Bruno\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BAACC\") == \"Bruno\"\nassert solution(\"ABCD\") == \"Adrian\"\nassert solution(\"ACBA\") == \"Goran\"\nassert solution(\"ABCB\") == \"Adrian\"\nassert solution(\"ACBA\") == \"Goran\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3 543\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3 543\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3 543\", \"Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n\nassert solution(\"5 D right\\n-2 B wrong\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n5 A right\\n35 B wrong\\n-3 C wrong\\n-4 D right\\n-5 E wrong\\n-6 F wrong\\n-7 G wrong\\n-8 H wrong\\n15 B wrong\\n30 E wrong\\n35 E right\\n80 B wrong\\n80 B right\\n100 D wrong\\n100 C wrong\\n300 C right\\n300 D wrong\\n\") == \"5 120\"",
        "num_ids_2": 241,
        "num_ids_4": 241
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3 543'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2''') == 5",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\n\nprint(\"All tests passed!\")",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5, \"The output should be 5.\"",
        "num_ids_2": 233,
        "num_ids_4": 233
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5, \"The shortest possible total distance over a complete game of Hopscotch is incorrect.\"",
        "num_ids_2": 241,
        "num_ids_4": 241
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2') == 5\nprint(\"All tests passed\")",
        "num_ids_2": 222,
        "num_ids_4": 222
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5\n",
        "num_ids_2": 222,
        "num_ids_4": 222
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"gunilla has a point\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"gunilla has a point\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"gunilla has a point\", \"The solution is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 7\\n5 5\") == \"gunilla has a point\"\nassert solution(\"2\\n1 7\\n5 5\") == \"edward is right\"\nassert solution(\"3\\n2\\n1 7\\n5 5\") == \"gunilla has a point\"\nassert solution(\"4\\n3\\n2\\n1 7\\n5 5\") == \"edward is right\"\nassert solution(\"5\\n4\\n3\\n2\\n1 7\\n5 5\") == \"gunilla has a point\"\nassert solution(\"6\\n5\\n4\\n3\\n2\\n1 7\\n5 5\") == \"edward is right\"\nassert solution(\"7\\n6\\n5\\n4\\n3\\n2\\n1 7\\n5 5\") == \"gunilla has a point\"\nassert solution(\"8\\n7\\n6\\n5\\n4\\n3\\n2\\n1 7\\n5 5\") == \"edward is right\"\nassert solution(\"9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1 7\\n5 5\") == \"gunilla has a point\"\nassert solution(\"10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1 7\\n5 5\") == \"edward is right\"",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 7\\n5 5\\n\") == \"gunilla has a point\"\nassert solution(\"3\\n1 8\\n2 8\\n\") == \"edward is right\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"gunilla has a point\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input\") == \"gunilla has a point\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n', \"The solution is not correct.\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '''\n4\n4\n4\n1\n2\n2\n4\n'''\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '''\n4\n4\n4\n1\n2\n2\n4\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your code is incorrect. Please run the provided example and see the output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Example 1\"\n\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Example 2\"\n\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Example 3\"",
        "num_ids_2": 186,
        "num_ids_4": 279
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input {input()} is incorrect, expected {output()}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"5 6\\ns 5\\ns 6\\ns 10\") == \"1\\n2\\n2\\n4\\n\"\nassert solution(\"1 2\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 165
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output: {solution(input())}!= {expected_output}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test {index} failed: {solution(input())}!= {output}\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015\\n1982\\n2016'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input}, got {solution(sample_input)}, expected {sample_output}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\") == \"2015\\n1982\\n2016\"\nassert solution(\"Iceland 1\\nSweden 1\\nIceland 2\\nIceland 1982\\nSweden 1982\") == \"1982\\n1982\\n1982\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\") == \"2015\\n1982\\n2016\"\nassert solution(\"Sweden 1\\nIceland 1\\nIceland 2\") == \"2015\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input_data)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015\\n1982\\n2016\\n'\nassert solution('1\\nIceland\\n2016\\n3\\nJapan\\n4\\nChina\\n2\\nIndia\\n') == '2016\\n1990\\n2016\\n'",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\\n\"\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n2015\\n1982\\n2016\\n\") == \"2015\\n1982\\n2016\\n\"\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n2015\\n1982\\n2016\\n\") == \"2015\\n1982\\n2016\\n\"\nassert solution(\"Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n2015\\n1982\\n2016\\n\") == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 190,
        "num_ids_4": 400
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2015\\n1982\\n2016\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abbcccddddeeeee') == '10'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\", \"Please provide a valid input.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10, \"Incorrect output for the given input.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\", \"The solution should return 10 for the given input\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\nassert solution(\"aabbbbbbccccddddddd\") == \"6\"\nassert solution(\"aaabbbccddeeeeeeee\") == \"4\"\nassert solution(\"abbbcccddeeeeeeee\") == \"2\"\nassert solution(\"abbbcccddeeeeeeee123456789\") == \"5\"\nassert solution(\"abbbcccddeeeeeeee123456789123456789\") == \"6\"\nassert solution(\"abbbcccddeeeeeeee12345678912345678923456789\") == \"10\"\nassert solution(\"abbbcccddeeeeeeee12345678912345678923456789234567893456789\") == \"16\"\nassert solution(\"abbbcccddeeeeeeee12345678912345678923456789234567893456789234567893456789456789\") == \"26\"\nassert solution(\"abbbcccddeeeeeeee12345678912345678923456789234567893456789234567893456789345678945678956789\") == \"50\"\nassert solution(\"abbbcccddeeeeeeee12345678912345678923456789234567893456789234567893456789345678945678956789567895678956789\") == \"80\"\nassert solution(\"abbbcccddeeeeeeee1234567891234567892345678923456789345678923456789345678934567894567895678956789567895678956789567896789\") == \"120\"\nassert solution(\"abbbcccddeeeeeeee1234567891234567892345678923456789345678923456789345678934567894567895678956789567895678956789567895678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896789678967896",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abbcccddddeeeee') == 10, \"The correct number of good itineraries does not exist for the given summer season.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency... and its. humanity\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\"\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe dog barks and the fox hunts the lazy dog\\nThe dog hunts and the fox sits down and the lazy dog\") == \"The quick brown fox jumps over the lazy dog\\n
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n. is a blight on.. and its humanity\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\"\nassert solution(\"She sells seashells to the poor, and buying soda to the rich.\\nThey both have their own specialties.\\nShe sells seashells to the poor, and buying soda to the rich.\\nShe sells seashells to the poor, and buying soda to the rich.\\nShe sells seashells to the poor, and buying soda to the rich.\\n\") == \"She sells seashells to the poor, and buying soda to the rich.\\nThey both have their own specialties.\\nShe sells seashells to the poor, and buying soda to the rich.\\nShe sells seashells to the poor, and buying soda to the rich.\\nShe sells seashells to the poor, and buying soda to the rich.\\n\"",
        "num_ids_2": 262,
        "num_ids_4": 262
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Book is a work and a waste of money\") == \"Book is a work and a waste of money\"\nassert solution(\"book is a work and a waste of money\") == \"Book is a work and a waste of money\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"",
        "num_ids_2": 86,
        "num_ids_4": 140
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == 'Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(open('test_input_2.txt', 'r').read()) == 'Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution(open('test_input_3.txt', 'r').read()) == 'Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 130,
        "num_ids_4": 196
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency. Inefficiency is a blight on the world and its. humanity\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"",
        "num_ids_2": 120,
        "num_ids_4": 240
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\n\nprint(\"satisfactory\")",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 2 3\n    1 -2 3\n    1 -2 -3\n    1 2 -3\n\"\"\") == \"unsatisfactory\"\n\nassert solution(\"\"\"\n    5 3\n    1 2 3\n    1 -2 3\n    1 -2 -3\n    1 2 -3\n\"\"\") == \"satisfactory\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"unsatisfactory\"\nassert solution(input()) == \"satisfactory\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"satisfactory\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"unsatisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"unsatisfactory\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n\"\"\") == \"unsatisfactory\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"satisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n8 3\\n-2 -1 1\\n-2 -1 -1\\n-1 -1 1\\n-1 -1 -1\\n1 1 1\\n1 1 -1\\n1 -1 1\\n1 -1 -1') =='satisfactory'",
        "num_ids_2": 167,
        "num_ids_4": 167
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed with input '{input()}' and expected output '{expected_output}'\"\nprint(\"All test cases passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\\n\"\nassert solution(\"8\\n1 1 1 5 3 5 6 6\") == \"none\\n\"\nassert solution(\"8\\n1 1 1 5 3 5 6 7\") == \"none\\n\"\nassert solution(\"8\\n1 1 1 5 3 5 6 6\") == \"none\\n\"\nassert solution(\"8\\n1 1 1 5 3 5 6 5\") == \"none\\n\"\nassert solution(\"8\\n1 1 1 5 3 5 6 4\") == \"none\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input:\\n8\\n1 1 1 5 3 4 6 6\\nSample Output:\\n4\") == \"4\"\nassert solution(\"Sample Input:\\n9\\n1 1 1 5 3 4 6 6\\nSample Output:\\nnone\") == \"none\"\nassert solution(\"Sample Input:\\n7\\n1 2 3 4 5 6\\nSample Output:\\n2\") == \"2\"\nassert solution(\"Sample Input:\\n8\\n1 1 1 5 3 4 6 6\\nSample Output:\\n4\") == \"4\"",
        "num_ids_2": 76,
        "num_ids_4": 148
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\na 1 1 1 5 3 4 6 6\\na 1 1 1 5 3 4 6 6\\na 1 1 1 5 3 4 6 6\\na 1 1 1 5 3 4 6 6\\na 1 1 1 5 3 4 6 6\\n') == '4'\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\nprint(\"All tests passed.\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nprint(\"All tests passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter current time in hh:mm:ss format: \")) == \"08:00:00\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nprint(\"All tests passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\\n\", \"Test failed for solution 1.\"\nassert solution(\"04:00:00\") == \"04:00:00\\n\", \"Test failed for solution 2.\"\nassert solution(\"12:00:00\") == \"12:00:00\\n\", \"Test failed for solution 3.\"\nassert solution(\"24:00:00\") == \"01:00:00\\n\", \"Test failed for solution 4.\"\nassert solution(\"25:00:00\") == \"00:01:00\\n\", \"Test failed for solution 5.\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\\n\"\nassert solution(\"23:59:59\") == \"23:59:59\\n\"\nassert solution(\"12:00:01\") == \"12:00:01\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 88
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"08:00:00\", \"Solution not correct\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"31 6\") == 4, \"The solution should be 4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"5 8\") == \"10\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"10 5\") == \"100\"\nassert solution(\"50 6\") == \"10000\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(31, 6) == \"4\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('31 6') == 4, \"Your friend Nick needs your help with a hard problem that he came across in real life. Nick has a loo roll of length 31 centimetres in his bathroom. Every time he visits the toilet, he uses exactly 6 centimetres of loo roll. When the roll runs out, Nick always goes to the store and buys a new one of length 31 directly afterwards. However, sometimes the roll runs out even though Nick still needs a non-zero amount of paper. Let us call such an event a crisis. \n\nNick has a clever way of preventing crises from happening: he uses a backup roll. The backup roll is another roll of length 31 that is hidden somewhere in the bathroom, and when the regular roll runs out even though Nick still needs more paper, he will take that amount from the backup roll. Then he will replace the regular roll directly after the visit.\n\nAs you can imagine, this makes crises much less frequent. But still, the backup roll will also slowly run out, and eventually a crisis might still happen. So to generalize this, Nick wants to use several layers of backup rolls. First he will take paper from roll number 1 (the regular roll), if it runs out he will take from roll number 2, then if roll 2 runs out from roll number 3, and so on all the way up to roll number k. After each visit, all the rolls that have run out will be replaced. Nick managed to prove that if he picks a large enough number k, he can actually make it so that crises never happen! Your task is to find the smallest such number k.\n\n-----Input-----\nThe input consists of a single line containing the two integers $\\ell $ and $n$ ($1 \\leq n \\leq \\ell \\leq 10^{10}$).\n\n-----Output-----\nOutput the smallest integer k such that crises will never happen when using k layers of rolls (including the regular roll).\n\n-----Examples-----\nSample Input:\n31 6\nSample Output:\n4\n",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"31 6\") == \"4\\n\"\nassert solution(\"5 4\") == \"1\\n\"\nassert solution(\"1 2\") == \"3\\n\"\nassert solution(\"1 1\") == \"2\\n\"\nassert solution(\"31 100\") == \"10\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"31 6\") == \"4\" # Correct Output",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"31 6\") == \"4\\n\"\nassert solution(\"10 0\") == \"1\\n\"\nassert solution(\"5 10\") == \"3\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(31, 6) == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"31 6\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == 2.6666666666666665\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2.6666666666666665, \"Expected 2.6666666666666665, but got {}\".format(solution(3))\nassert solution(10) == 7.333333333333334, \"Expected 7.333333333333334, but got {}\".format(solution(10))\nassert solution(500) == 2.3333333333333334e+24, \"Expected 2.3333333333333334e+24, but got {}\".format(solution(500))\n",
        "num_ids_2": 116,
        "num_ids_4": 186
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2.6666666666666665\", \"Please provide a valid input\"\nassert solution(\"10000\") == \"2.718281828459045\", \"Please provide a valid input\"\nassert solution(\"10001\") == \"2.718281828459045\", \"Please provide a valid input\"",
        "num_ids_2": 71,
        "num_ids_4": 108
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2.6666666666666665\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2.6666666666666665\"\nassert solution(5) == \"7.033052669941341\"\nassert solution(10) == \"10.386538260658985\"\nassert solution(15) == \"14.127606730841988\"\nassert solution(20) == \"22.654507492170746\"",
        "num_ids_2": 53,
        "num_ids_4": 109
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"Test case 1 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2.6666666666666665\"\nassert solution(\"10000\") == \"2.718281828459045\"\nassert solution(\"10001\") == \"2.718317955999947\"",
        "num_ids_2": 57,
        "num_ids_4": 87
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2.6666666666666665\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2.6666666666666665",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2.6666666666666665, \"The solution is incorrect.\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 7\") == \"paul\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'paul'\nprint('def solution(stdin: str) -> str:')\nprint('    pass')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'paul', 'Your solution is incorrect.'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5, 3, 7) == \"paul\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"5\n    3\n    7\"\"\"\n) == \"paul\\ndef solution(stdin: str) -> str:\\npass\"\n\nassert solution(\n    \"\"\"1\n    1\n    0\"\"\"\n) == \"def solution(stdin: str) -> str:\\npass\"\n\nassert solution(\n    \"\"\"5\n    3\n    7\"\"\"\n) == \"paul\\ndef solution(stdin: str) -> str:\\npass\"\n\nassert solution(\n    \"\"\"1\n    1\n    0\"\"\"\n) == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 3 7\") == \"paul\"\nassert solution(stdin=\"2 1 2\") == \"opponent\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"5 7 3\") == \"opponent\"\nassert solution(\"1 0 0\") == \"paul\"\nassert solution(\"3 0 0\") == \"opponent\"\nassert solution(\"0 0 0\") == \"definitely_not_opponent\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 3, 7) == \"paul\"\nprint(\"All tests pass.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 10 10\") == \"opponent\"\nassert solution(\"10 10 0\") == \"opponent\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 5 8\") == \"opponent\"\nassert solution(\"1 2 3\") == \"opponent\"\nassert solution(\"1 2 3\") == \"opponent\"\nassert solution(\"1 2 3\") == \"opponent\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 2\nassert solution(\"3\") == 1\nassert solution(\"4\") == 2\nassert solution(\"5\") == 3\nassert solution(\"6\") == 3",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2\", \"Testcase 1\"\nassert solution(10) == \"2\", \"Testcase 2\"\nassert solution(20) == \"2\", \"Testcase 3\"\nassert solution(1000) == \"2\", \"Testcase 4\"\nassert solution(10000) == \"2\", \"Testcase 5\"",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The output should be 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 2, \"Expected output: 2, actual output: {}\".format(solution(10))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1\\n\") == \"2\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\nassert solution(5) == 7\nassert solution(6) == 8\nassert solution(7) == 8\nassert solution(8) == 9",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2\nassert solution(10) == 2\nassert solution(100) == 3\nassert solution(1000) == 3\nassert solution(10000) == 4\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"Abc\") == \"Yes\"\nassert solution(\"def\") == \"No\"\nassert solution(\"abcdef\") == \"No\"\nassert solution(\"0123456789abcdef\") == \"Yes\"\nassert solution(\"0123456789ABCDEF\") == \"No\"\nassert solution(\"abcde\") == \"Yes\"\nassert solution(\"ABCDEF\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"c0deninja51\") == \"No\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"AbCde\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"defg\") == \"No\"\nassert solution(\"hijklmnop\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"No\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"No\"\nassert solution(\"0123456789\") == \"No\"\nassert solution(\"abcdefghijkmnopqrstuvwxyz\") == \"No\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\") == \"Yes\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'No'\nassert solution('abcdef') == 'No'\nassert solution('abcdefg') == 'Yes'\nassert solution('abcdefgh') == 'Yes'\nassert solution('ABCDEFGH') == 'Yes'\nassert solution('1234567890') == 'Yes'\nassert solution('c0deninja5') == 'No'\nassert solution('c0deninja51') == 'Yes'\nassert solution('c0deninja6') == 'No'\nassert solution('c0DENINJA7') == 'No'\nassert solution('c0DENINJA5') == 'Yes'",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"No\\n\"\nassert solution(\"123a\") == \"No\\n\"\nassert solution(\"abcdefg\") == \"No\\n\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"Yes\\n\"\nassert solution(\"A1b2c3\") == \"No\\n\"\nassert solution(\"aA1b2c3\") == \"Yes\\n\"\nassert solution(\"C3D2E1F0\") == \"No\\n\"\nassert solution(\"cA3B2A1D\") == \"No\\n\"\nassert solution(\"09876543210\") == \"Yes\\n\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"Yes\\n\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"Yes\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"No\\n\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\") == \"No\\n\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\") == \"No\\n\"\nassert solution(\"12345678901234567890123456789012345678901\") == \"No\\n\"\nassert solution(\"123456789012345678901234567890123456789012345678901\") == \"Yes\\n\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 29,
        "num_ids_4": 93
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter S: \")) == 'No'\nassert solution(input(\"Enter S: \")) == 'Yes'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Solution not correct\"\nassert solution(\"kemija\") == \"kepemipijapa\", \"Solution not correct\"\nassert solution(\"paprika\") == \"papapripikapa\", \"Solution not correct\"",
        "num_ids_2": 50,
        "num_ids_4": 72
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"Luka is fooling around in chemistry class again! Instead of balancing equations he is writing coded sentences on a piece of paper. Luka modifies every word in a sentence by adding, after each vowel (letters 'a', 'e', 'i', 'o', and 'u'), the letter 'p' and then that same vowel again. For example, the word 'kemija' becomes 'kepemipijapa' and the word 'paprika' becomes 'papapripikapa'. The teacher took Luka's paper with the coded sentences and wants to decode them.\") == \"zelena paprika\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"zelena paprika\", \"Invalid Output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Invalid output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 2\") == \"IMPOSSIBLE\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\n\nfrom math import fabs",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"32 2\\n\") == \"-32\"\nassert solution(stdin=\"20 3\\n\") == \"-20\"\nassert solution(stdin=\"20 10\\n\") == \"IMPOSSIBLE\"\nassert solution(stdin=\"30 15\\n\") == \"ALL GOOD\"\n",
        "num_ids_2": 36,
        "num_ids_4": 76
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 100\") == \"ALL GOOD\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 2\") == \"-32\\nALL GOOD\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 2\") == \"-32\\n\"\n\nassert solution(\"-32 2\") == \"-32\\n\"\n\nassert solution(\"0 30\") == \"ALL GOOD\\n\"\n\nassert solution(\"50 30\") == \"ALL GOOD\\n\"\n\nassert solution(\"100 30\") == \"ALL GOOD\\n\"\n\nassert solution(\"50 50\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"30 50\") == \"IMPOSSIBLE\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '-32'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 2\") == \"-32\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\", \"Incorrect output.\"\nassert solution(\"2 2 3 3\\n5 3 4\") == \"none\", \"Incorrect output.\"\nassert solution(\"1 2 3 3\\n1 3 4\") == \"none\", \"Incorrect output.\"\nassert solution(\"3 1 3 3\\n1 3 4\") == \"none\", \"Incorrect output.\"\nassert solution(\"5 1 3 3\\n1 3 4\") == \"none\", \"Incorrect output.\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 3 3\\n1 3 4') == 'both\\none\\none'\nassert solution('3 3 3 3\\n1 3 4') == 'one\\none\\none'\nassert solution('2 2 3 3\\n4 3 4') == 'none\\none\\none'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"both\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"100 100 100 100\") == \"none\"\nassert solution(\"3 3 3 3\") == \"one\"",
        "num_ids_2": 47,
        "num_ids_4": 63
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"both\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"4 1 4 4\") == \"one\"\nassert solution(\"1 2 3 4\") == \"none\"",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\", \"The solution is not correct\"\n\nassert solution(\"4 2 3 3\\n1 3 4\") == \"one\", \"The solution is not correct\"\n\nassert solution(\"1 2 3 3\\n1 3 4\") == \"none\", \"The solution is not correct\"",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"1 3 4\\n2 2 3 3\") == \"one\"\nassert solution(\"1 3 4\\n2 4 3 3\") == \"none\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == 10, \"The fourth number should be 10\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6 8\") == 10\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Solution should return the number 10 for the given input.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 8\") == 10",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Your solution is incorrect. The output should be '10'.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 8\") == 10",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Incorrect output for the given example\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 8\") == 10, \"The solution should return 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Test case failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\\n\", \"The expected output is incorrect.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"500 70\") == \"533\", \"Test failed\"\nassert solution(\"200 60\") == \"28\", \"Test failed\"\nassert solution(\"300 40\") == \"35\", \"Test failed\"\nassert solution(\"100 90\") == \"103\", \"Test failed\"\nassert solution(\"1000 1000\") == \"1000\", \"Test failed\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('500 70') == '533'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"533\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"500 70\") == \"533\\n\"\nassert solution(\"300 100\") == \"333\\n\"\nassert solution(\"1000 90\") == \"1500\\n\"\nassert solution(\"5000 120\") == \"2000\\n\"\nassert solution(\"10000 80\") == \"1600\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 82
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"300 45\") == \"165\"\nassert solution(\"100 60\") == \"250\"\nassert solution(\"150 30\") == \"450\"\nassert solution(\"50 20\") == \"55\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(500, 70) == 533\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 9\n    69 60\n    100 60\n    \"\"\"\n) == \"39.0\\n30.0\"\n\nassert solution(\n    \"\"\"\n    3 5\n    10 20\n    20 30\n    30 40\n    40 50\n    \"\"\"\n) == \"5.0\\n20.0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 9\\n69 60\\n100 60\\n') == '39.0\\n30.0\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\\n\") == \"39.0\\n30.0\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '39.0\\n30.0\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"39.0\\n30.0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == [\"39.0\", \"30.0\"]",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 9\n    69 60\n    100 60\n    \"\"\"\n) == \"39.0\\n30.0\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    69 60\n    100 60\n    \"\"\"\n) == \"69.0\\n69.0\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    69 60\n    100 60\n    \"\"\"\n) == \"132.0\\n126.0\\n\"\n\nassert solution(\n    \"\"\"\n    2 4\n    69 60\n    100 60\n    \"\"\"\n) == \"206.0\\n194.0\\n\"\n\nassert solution(\n    \"\"\"\n    2 5\n    69 60\n    100 60\n    \"\"\"\n) == \"320.0\\n292.0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\\n\"\n\nassert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\", \"Test Case 1 failed\"\n\nassert solution(\"3\\n25 32 26\") == \"0 25\\n\", \"Test Case 2 failed\"\n\nassert solution(\"4\\n20 21 24 22\") == \"1 21\\n\", \"Test Case 3 failed\"\n\nassert solution(\"2\\n17 16 15\") == \"2 16\\n\", \"Test Case 4 failed\"\n\nassert solution(\"1\\n20 19 18\") == \"1 18\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 137
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 28\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28', \"Test 1 failed\"\nassert solution('5\\n22 26 29 28 30') == '1 30', \"Test 2 failed\"\nassert solution('5\\n25 26 28 28 31') == '2 27', \"Test 3 failed\"\nassert solution('5\\n23 26 29 28 29') == '1 28', \"Test 4 failed\"\nassert solution('5\\n21 23 25 26 27') == '2 26', \"Test 5 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"The output is '{output}', but the function returns '{solution(stdin)}'.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28\\n'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Please provide input in the format: n t1 t2 t3 t4 t5\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"\nassert solution(\"10\\n17 15 18 16 19\") == \"1 19\\n\"\nassert solution(\"20\\n20 19 18 17 16\") == \"2 19\\n\"\nassert solution(\"30\\n25 28 22 24 27\") == \"3 27\\n\"\nassert solution(\"40\\n25 27 23 21 22\") == \"1 22\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 127
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\", \"Test 1\"\nassert solution(\"5\\n22 26 31 28 30\") == \"2 28\", \"Test 2\"\nassert solution(\"5\\n22 27 29 28 30\") == \"1 28\", \"Test 3\"\nassert solution(\"5\\n22 27 29 31 30\") == \"2 30\", \"Test 4\"\nassert solution(\"5\\n22 27 29 30 31\") == \"2 30\", \"Test 5\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3 6\n1 2 3''') == '2'\nassert solution('''3 5\n1 2 2 3''') == '1'\nassert solution('''2 3\n1 1 3''') == '1'\nassert solution('''5 1\n2 1 1 2 2 3''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n3 4 5\\n\") == \"2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\"\nassert solution(\"3 6\\n2 1 3\\n\") == \"3\"\nassert solution(\"3 6\\n1 1 1\\n\") == \"4\"\nassert solution(\"3 6\\n2 2 2\\n\") == \"3\"\nassert solution(\"3 6\\n1 1 1\\n\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n1 2 5\\n\") == \"3\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n1 2 5\\n1 2 6\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n1 2 5\\n1 2 6\\n1 2 7\\n\") == \"3\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n1 2 5\\n1 2 6\\n1 2 7\\n1 2 8\\n\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n1 2 5\\n1 2 6\\n1 2 7\\n1 2 8\\n1 2 9\\n\") == \"3\\n\"\nassert solution(\"3 6\\n1 2 3\\n1 2 4\\n1 2 5\\n1 2 6\\n1 2 7\\n1 2 8\\n1 2 9\\n1 2 10\\n\") == \"2\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 120
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"3 6\\n1 2 4\") == \"0\\n\"\nassert solution(\"3 6\\n1 2 1\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Your code is incorrect. Please check the prompt and sample inputs.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\\n\"\nassert solution(\"5 5\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"4 4\\n2 2 2 2\") == \"0\\n\"\nassert solution(\"6 8\\n3 4 5 6 7\") == \"2\\n\"\nassert solution(\"4 2\\n4 1\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 6\n1 2 3''') == '2'\nassert solution('''\n5 3\n1 2 3 4 5''') == '0'\nassert solution('''\n3 5\n1 2 3 4 5''') == '0'\nassert solution('''\n5 1\n1 2 3 4 5''') == '1'\nassert solution('''\n3 5\n1 2 3 4 6''') == '1'\nassert solution('''\n1 5\n1 2 3 4 5''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5 6''') == '1'\nassert solution('''\n3 5\n1 2 3 4 5 7''') == '0'\nassert solution('''\n3 5\n1 2 3 4 5 7 8''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5 6 7 8''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nWMWMWMMWM\\n\") == \"9\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='1\\nMWWMWMMWM') == '9'\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\nMWWMWMMWM') == '9\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {test_case} failed.\" for test_case, sample_input, sample_output in [\n    (0, \"\", \"\"),\n    (1, \"W\", \"\"),\n    (1, \"M\", \"\"),\n    (1, \"W\", \"\"),\n    (1, \"M\", \"\"),\n    (2, \"WM\", \"\"),\n    (2, \"WM\", \"\"),\n    (2, \"W\", \"\"),\n    (2, \"M\", \"\"),\n    (2, \"WM\", \"\"),\n    (3, \"WWMWMM\", \"\"),\n    (3, \"WWMWMM\", \"\"),\n    (3, \"WWMW\", \"\"),\n    (3, \"WWM\", \"\"),\n    (3, \"W\", \"\"),\n    (4, \"WWMWMMWMWMWM\", \"\"),\n    (4, \"WWMWMMWMWMWM\", \"\"),\n    (4, \"WWMWMMWMWM\", \"\"),\n    (4, \"WWMWMMWM\", \"\"),\n    (4, \"WWMWMM\", \"\"),\n    (4, \"WWMW\", \"\"),\n    (5, \"WWMWMMWMWMWMWM\", \"\"),\n    (5, \"WWMWMMWMWMWMWM\", \"\"),\n    (5, \"WWMWMMWMWMWMWM\", \"\"),\n    (5, \"WWMWMMWMWMWM\", \"\"),\n    (5, \"WWMWMMWMWM\", \"\"),\n    (5, \"WWMWMMWM\", \"\"),\n    (5, \"WWMWMM\", \"\"),\n    (5, \"WWMW\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (6, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMWMMWMWMWMWM\", \"\"),\n    (7, \"WWMW",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\nMWWMWMMWM') == 9\n\nsolution = \"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\nMWWMWMMWM\") == \"9\\ndef solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1\\nMWWMWMMWM\\n\") == 9\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == 9\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 9, \"Expected output: 9\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, Received output: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 2\\n8 0 undo 2\") == \"1\"\nassert solution(\"5 3\\n8 1 undo 3\") == \"2\"\nassert solution(\"5 4\\n8 2 undo 4\") == \"3\"\nassert solution(\"5 4\\n8 -3 undo 2\") == \"2\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 4\\n0 1 2 undo 1\") == \"1\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7\\n'\nassert solution('5 3\\n2 2 3\\n3 3 2\\n1 1 2\\n2 1 3\\n3 2 1') == '10 12\\n'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12') == '6 12\\n'\nassert solution('5 4\\n2 3 4\\n3 4 3\\n1 2 2\\n2 3 4\\n3 4 3') == '8 12\\n'\nassert solution('3 2\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '8 12\\n'\nassert solution('4 3\\n2 2 3\\n3 4 5\\n1 1 2\\n2 1 3\\n3 2 1') == '12 12\\n'",
        "num_ids_2": 83,
        "num_ids_4": 180
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''6 7'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7\\n'\nassert solution('10 5\\n5 3 2 1') == '15\\n'\nassert solution('10 1\\n5 3 2 1') == '30\\n'",
        "num_ids_2": 55,
        "num_ids_4": 80
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 6, \"Your solution is incorrect. Please check the function signature and implementation.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6 7\\n\"\nassert solution() == \"4 4\\n\"\nassert solution() == \"7 8\\n\"\nassert solution() == \"6 7\\n\"\nassert solution() == \"7 9\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'\nassert solution('3 2 1\\n1 2 3\\n2 3 1') == '6 7'\nassert solution('4 2\\n1 2 3\\n2 3 4\\n3 4 1') == '6 7'\nassert solution('2 3\\n1 2 3\\n3 2 1\\n1 1 2\\n3 4 5\\n5 4 3\\n1 2 2\\n2 3 1') == '12 13'",
        "num_ids_2": 58,
        "num_ids_4": 158
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n\"\nassert solution(\"10 100\\n1 2 3\\n3 2 1\") == \"2500 2500\\n\"\nassert solution(\"20 100\\n1 2 3\\n3 2 1\") == \"50000 50000\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 110
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"6 7\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\"\nprint(\"All tests passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen') == '64 correct\\n665 incorrect'\nassert solution('4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '64 correct\\n665 incorrect'\nassert solution('7\\nals mollen mollen mollen mollen mollen mollen') == '64 correct\\n665 incorrect'\nassert solution('4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '64 correct\\n665 incorrect'",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '64 correct\\n665 incorrect'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"64 correct\\n665 incorrect\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"\nassert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution failed for test case {index+1}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\") == \"64 correct\\n665 incorrect\"\nassert solution(\"4\\nals when correct\\n\\n\\n\\n\\nmollen moles correct\\n\\nmollen destroy correct\\n\\nmollen mills incorrect\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('64 correct\\n665 incorrect') == '64 correct\\n665 incorrect'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed.\"\nfor i in range(10):\n    print(f\"Test case {i+1}\")\n    solution(input()) == expected_output",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7, \"Incorrect output for the given problem.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 4 3\") == 7, \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 3 4 3') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"7\\n\", \"Test Case 1 Failed\"\nassert solution(5) == \"15\\n\", \"Test Case 2 Failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 3 4 3\n    \"\"\"\n) == \"7\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"\nassert solution(\"6\\n1 2 3 4\") == \"6\\n\"\nassert solution(\"10\\n2 3 4 5\") == \"7\\n\"\nassert solution(\"7\\n2 3 4 5\") == \"6\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"6\\n\"\nassert solution(\"100000\\n2 3 4 5\") == \"7\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1 1 1 1 1 1\") == \"1\\n\"\nassert solution(\"100000\\n2 3 4 5\") == \"7\\n\"\nassert solution(\"2\\n1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 ",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"0 0\\n2 2\\n1 2\\n1\\n\") == \"0.0 0.0\\n1.0 2.0\\n\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"0 0\\n2 2\\n1 2\\n1\\n\") == \"0.0 0.0\\n1.0 2.0\\n\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"0 0\\n2 2\\n1 2\\n1\\n\") == \"0.0 0.0\\n1.0 2.0\\n\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"0 0\\n2 2\\n1 2\\n1\\n\") == \"0.0 0.0\\n1.0 2.0\\n\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"0 0\\n2 2\\n1 2\\n1\\n\") == \"0.0 0.0\\n1.0 2.0\\n\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"0 0\\n2 2\\n1 2\\n1\\n\") == \"0.0 0.0\\n1.0 2.0\\n\"\nassert solution(\"0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 194
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'\nassert solution(stdin) == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n0 0\n1 1\n0 2\n4\n\"\"\") == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n5\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n0.0 4.0\\n'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n-5 5\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n0.0 4.0\\n0.0 4.0\\n'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n0 0\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n0.0 4.0\\n0.0 4.0\\n'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n20 20\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n0.0 4.0\\n0.0 4.0\\n'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n30 30\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n0.0 4.0\\n0.0 4.0\\n'",
        "num_ids_2": 121,
        "num_ids_4": 274
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n1.0 2.0\\n3.0 3.0\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n\"\nassert solution(\"5\\n1 1\\n3 3\\n2 2\\n4 4\\n\") == \"0.0 0.0\\n2.0 2.0\\",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\nSample Input:\\n3\\n0 0\\n1 1\\n0 2\\n4\\nSample Output:\\n0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1, \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test Case failed. Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n12 16') == '34'\nprint('All tests passed!')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"34\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"\nassert solution(\"4 2\\n2 1\\n\") == \"6\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"34\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:\\n34\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('3 1\\n12 16\\nSample Output:\\n34\\n') == '34'\\n\") == True, \"Test case 1 failed\"\n\nassert solution(\"3 1\\n12 16\\nSample Output:\\n34\\n\") == \"34\", \"Test case 2 failed\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n12 16\") == \"34\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:\\n34\\n\") == \"34\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\nassert solution(\"5\\n1 2 3 4\") == 3\nassert solution(\"6\\n1 2 3 4 5\") == 3\nassert solution(\"7\\n1 2 3 4 5 6\") == 3\nassert solution(\"8\\n1 2 3 4 5 6 7\") == 3\nassert solution(\"9\\n1 2 3 4 5 6 7 8\") == 3\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == 3",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 1\\n') == '3'\nprint(\"All tests passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3\\n' # sample output\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Your solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2 3 1') == 3\nassert solution('4\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1') == 3\nassert solution('5\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1\\n1 2 3 1') == 2",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 1') == 3\nassert solution('2\\n3 2 1') == 2\nassert solution('3\\n2 1 1') == 1\nassert solution('2\\n1 1 1') == 1\nassert solution('2\\n3 3 2') == 2\nassert solution('1\\n1 1 1') == 1\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    1 2 3 1\n    ''') == 3\nassert solution('''\n    3\n    3 1 2\n    ''') == 3\nassert solution('''\n    4\n    1 2 1 2\n    ''') == 2\nassert solution('''\n    3\n    1 2 3\n    ''') == 1\nassert solution('''\n    3\n    2 1 3\n    ''') == 2",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r\"\"\"\n4\n1 2 3 1\n\"\"\") == \"3\"\n\nassert solution(stdin=r\"\"\"\n5\n1 2 3 1 4\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n3\n2 1 1\n\"\"\") == \"2\"\n\nassert solution(stdin=r\"\"\"\n5\n1 2 3 1 4\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n4\n1 2 3 1\n\"\"\") == \"3\"\n\nassert solution(stdin=r\"\"\"\n5\n1 2 3 1 4\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n3\n2 1 1\n\"\"\") == \"2\"\n\nassert solution(stdin=r\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.0\") == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1.0) == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"0.5\") == \"546\"\nassert solution(\"0.8\") == \"844\"\nassert solution(\"10.0\") == \"1966\"\nassert solution(\"100.0\") == \"2320\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.0\") == 1088\n\nimport math",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.0\") == \"1088\", \"Your code is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"1088\", \"Your code is not correct\"\nassert round(solution(stdin: str), 2) == 1088, \"Your code is not correct\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.0\") == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1.0') == 1088, \"Invalid answer\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1088\", \"Test failed\"\nprint(round(1088 / 4854))  # The closest number of Roman paces equivalent to 1.0 English miles is 1088.",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1.0\") == \"1088\", \"The output should be 1088\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 4\\nSample Output: 25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"\n",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 4\\n1 2 3 4\\n2 0 5 6\\n3 1 7 8\\n4 2 9 10\\n5 3 11 12\\n6 4 13 14\\n7 5 15 16\\n8 6 17 18\\n9 7 19 20\\n10 8 21 22\\n11 9 23 24\\n12 10 25 26\\n13 11 27 28\\n14 12 29 30\\n15 13 31 32\\n16 14 33 34\\n17 15 35 36\\n18 16 37 38\\n19 17 39 40\\n20 18 41 42\\n21 19 43 44\\n22 20 45 46\\n23 21 47 48\\n24 22 49 50\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\", \"Test 1\"\nassert solution(\"0 3\\n1 2 3\\n2 0 5\\n3 1 7\\n4 2 9\\n5 3 11\\n6 4 13\\n7 5 15\\n8 6 17\\n9 7 19\\n10 8 21\\n11 9 23\\n12 10 25\\n13 11 27\\n14 12 29\\n15 13 31\\n16 14 33\\n17 15 35\\n18 16 37\\n19 17 39\\n20 18 41\\n21 19 43\\n22 20 45\\n23 21 47\\n24 22 49\\n25 23 51\\n\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\", \"Test 2\"\nassert solution(\"0 3\\n1 2 3\\n2 0 5\\n3 1 7\\n4 2 9\\n5 3 11\\n6 4 13\\n7 5 15\\n8 6 17\\n9 7 19\\n10 8 21\\n11 9 23\\n12 10 25\\n13 11 27\\n14 12 29\\n15 13 31\\n16 14 33\\n17 15 35\\n18 16 37\\n19 17 39\\n20 18 41\\n21 19 43\\n22 20 45\\n23 21 47\\n24 22 49\\n25 23 51\\n26 24 53\\n27 25 55\\n28 26 57\\n29 27 59\\n30 28 61\\n31 29 63\\n32 30 65\\n33 31 67\\n34 32 69\\n35 33 71\\n36 34 73\\n37 35 75\\n38 36 77\\n39 ",
        "num_ids_2": 659,
        "num_ids_4": 1027
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 25.0\nprint(\"All test cases passed!\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"25.000000000\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution, \"Function not defined\"\nassert solution.__name__ == \"solution\", \"Function name is not'solution'\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n25.000000000\n25.000000000\n25.000000000\n25.000000000\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''0 4\n10000000 0 0 0\n5000000 5000000 0 0\n0 5000000 0 0\n''') == '''25.000000000\n25.000000000\n25.000000000\n25.000000000\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 4\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '25.000000000'\nassert solution() == '25.000000000'\nassert solution() == '25.000000000'\nassert solution() == '25.000000000'\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution('5 3 4\\n3\\n4\\n5\\n6\\n7'))\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\"\nassert solution(\"5 3 4\\n1\\n2\\n3\\n4\\n5\") == \"DA\"\nassert solution(\"5 3 4\\n1\\n2\\n3\\n4\\n6\") == \"NE\"\nassert solution(\"5 3 4\\n1\\n2\\n3\\n4\\n7\") == \"NE\"\n",
        "num_ids_2": 70,
        "num_ids_4": 128
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"DA\\nDA\\nDA\\nNE\\nNE\\n\", \"Testcase 1 Failed\"\n\nassert solution() == \"DA\\nDA\\nDA\\nNE\\nNE\\n\", \"Testcase 2 Failed\"\n\nassert solution() == \"DA\\nDA\\nDA\\nNE\\nNE\\n\", \"Testcase 3 Failed\"\n\nassert solution() == \"DA\\nDA\\nDA\\nNE\\nNE\\n\", \"Testcase 4 Failed\"\n\nassert solution() == \"DA\\nDA\\nDA\\nNE\\nNE\\n\", \"Testcase 5 Failed\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\npass\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\\n\"\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n7 42\\n') == 6",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 6\nassert solution(\"5\\n0 0\\n7 42\\n8 42\\n9 50\\n10 60\") == 6",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 6, \"The output is not 6.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == 6 # Correctness of the solution",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '6\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n7 42\\n') == 6, \"Expected: 6, got: {}\".format(solution('2\\n0 0\\n7 42\\n'))",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 6\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\\n\") == \"correct\"\nprint(\"correct\")\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\") == \"correct\"\nassert solution(\"1\\n-> Fermat's Last Theorem\\n-> I'm not a big fan of the idea of using my idea of Fermat's Last Theorem to prove the existence of the number 1\") == \"def solution(stdin: str) -> str:\n    pass\"\nassert solution(\"5\\n-> A\\n-> B\\n-> C\\n-> D\\n-> E\") == \"correct\"",
        "num_ids_2": 88,
        "num_ids_4": 118
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"correct\"\nassert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"\nassert solution(\"4\\n-> Fermat\\n-> Carmichael\\n-> Tyler\\n-> Bronte\\nFermat Bronte -> Artemis\\nCarmichael Tyler -> Goldbach\\nTyler Bronte -> Donald Trump\\nArtemis Donald Trump -> Nixon\\nGoldbach Nixon -> Lord President\\n\") == \"1\"\nassert solution(\"5\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n-> CHRISTOPHER\\n-> DAVID\\nALICE CHRISTOPHER -> DAVID\\n-> EVE\\nALICE EVE -> JOHN\\n-> JOHN\\n-> KING\\nALICE KING -> JOHN\\n-> LAMBERT\\nALICE LAMBERT -> THOMAS\\n-> THOMAS\\n-> WILLIAM\\nALICE WILLIAM -> THOMAS\\n-> YANNICK\\nALICE YANNICK -> ZOE\\n-> ZOE\\n-> ADAM\\nALICE ADAM -> BOB\\n-> BOB\\n-> JANE\\nALICE JANE -> JANE\\n-> MARIA\\nALICE MARIA -> MARIA\\n-> NIKO\\nALICE NIKO -> NIKO\\n-> OLIVER\\nALICE OLIVER -> OLIVER\\n-> PETER\\nALICE PETER -> PETER\\n-> ROBERT\\nALICE ROBERT -> ROBERT\\n-> SILVIA\\nALICE SILVIA -> SILVIA\\n-> SUMMER\\nALICE SUMMER -> SUMMER\\n-> TENNIE\\nALICE TENNIE -> TENNIE\\n-> VICTOR\\nALICE VICTOR -> VICTOR\\n-> WILLIE\\nALICE WILLIE -> WILLIE\\n-> ZEUS\\nALICE ZEUS -> ZEUS\\n-> BRICKS\\nALICE BRICKS -> BRICKS\\n-> CHRISTMAS\\nALICE CHRISTMAS -> CHRISTMAS\\n-> DIAMOND\\nALICE DIAMOND -> DIAMOND\\n-> FRANK\\nALICE FRANK -> FRANK\\n-> GIANT\\nALICE GIANT -> GIANT\\n-> HEART\\nALICE HEART -> HEART\\n-> JONAS\\nALICE JONAS -> JONAS\\n-> LILY\\nALICE LILY -> LILY\\n-> LUKE\\nALICE LUKE -> LUKE\\n-> OLIvia\\nALICE OLIvia -> OLIvia\\n-> PETER_2\\nALICE PETER_2 -> PETER_2\\n-> ROBERT_2\\nALICE ROBERT_2 -> ROBERT_2\\n-> SILVIA_2\\nALICE SILVIA_2 -> SILVIA_2\\n-> SUMMER_2\\nALICE SUMMER_2 -> SUMMER_2\\n-> TENNIE_2\\nALICE TENNIE_2 -> TENNIE_2\\n-> VICTOR_2\\nALICE VICTOR_2 -> VICTOR_2\\n-> WILLIE_2\\nALICE WILLIE_2 -> WILLIE_2\\n-> ZEUS_2\\nALICE ZEUS_2 -> ZEUS_2\\n-> BRICKS_2\\nALICE BRICKS_2 -> BRICKS_2\\n-> CHRISTMAS_2\\nALICE CHRISTMAS_2 -> CHRISTMAS_2\\n-> DIAMOND_2\\nALICE DIAMOND_2 -> DIAMOND_2\\n-> FRANK_2\\nALICE FRANK_2 -> FRANK_2\\n-> GIANT_2\\nALICE GIANT_2 -> GIANT_2\\n-> HEART_2\\nALICE HEART_2 -> HEART_2\\n-> JONAS_2\\nALICE",
        "num_ids_2": 128,
        "num_ids_4": 1025
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'",
        "num_ids_2": 180,
        "num_ids_4": 360
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"Bruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Barbara Skinner\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"Marti Graham\\nConnie Froggatt\\nPenny Franklin\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Marti Graham\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"***\\nConnie Froggatt\\nMarti Graham\\nConnie Froggatt\\nPenny Franklin\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 154,
        "num_ids_4": 365
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Runoff!'",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n'''\n) == 'Connie Froggatt'\n\nassert solution(\n'''\n***\n'''\n) == 'Runoff!'\n\nassert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n'''\n) == 'Runoff!'\n\nassert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n'''\n) == 'Connie Froggatt'\n\nassert solution(\n'''\n***\n'''\n) == 'Runoff!'\n\nassert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n'''\n) == 'Connie Froggatt'\n\nassert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n'''\n) == 'Connie Froggatt'\n\nassert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n'''\n) == 'Connie Froggatt'\n\nassert solution(\n'''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n'''\n) == 'Connie Froggatt'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\n\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Runoff!\\n\"",
        "num_ids_2": 175,
        "num_ids_4": 175
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\") == \"Connie Froggatt\"\nassert solution(\"***\") == \"Runoff!\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Connie Froggatt\\n\", \"Your solution is incorrect\"\nassert solution(stdin) == \"Runoff!\\n\", \"Your",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\n\"\n\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Runoff!\"",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nAlice The Elder\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nJabba-the-Hutt Huttese\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"3\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nAlice The Elder\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nJabba-the-Hutt Huttese\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nAlice The Elder\\nAlice The Elder\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nJabba-the-Hutt Huttese\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"1\"",
        "num_ids_2": 245,
        "num_ids_4": 565
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == 2",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == 2\nprint(\"All tests passed\")",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Jabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str: return 2\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\"\nassert solution(\"7\\nMerc-08 Dagobah\\nBar-10 Tatooine\\nCorporal-22 Lando\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nDarth-Vader Jedi\\nD",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\\n\") == 900\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\nassert solution(\"1 1 1 1\\n2 3 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n20\") == \"stay home\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\\n0 0 0\\n\") == \"stay home\"\nassert solution(\"1 1 1 1\\n2 3 4\\n5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n20\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"stay home\"\nassert solution(\"2 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"stay home\"",
        "num_ids_2": 121,
        "num_ids_4": 288
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900\\n'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"900\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"  # pass\nassert solution(\"1000 1000000000 1000000000 1000000000 1000000000\") == \"stay home\"  # pass\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '900'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"900\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == 900\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\\n\") == \"900\"  # correct output\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nC D F D C D F F F C') == 'A# C D# F\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\nA B C D E F G H A C \") == \"A# C D# F\"\nassert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"10\\",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"A# C D# F\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"A# C D# F\", \"Your solution is not correct\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(stdin.read())\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nC D F D C D F F F C ') == 'A# C D# F'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\nC D F D C D F F F C ') == 'A# C D# F'\nassert solution('10\\nC D F D C D F F F C G') == 'none'\nassert solution('10\\nC D F D C D F F F C D') == 'none'\nassert solution('10\\nC D F D C D F F F C G D') == 'none'\nassert solution('10\\nC D F D C D F F F C D E') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P Q') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P Q R') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P Q R S') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P Q R S T') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P Q R S T U') == 'none'\nassert solution('10\\nC D F D C D F F F C D E F G A B C D E F G H I J K L M N O P Q R S T U V') == 'none'\n",
        "num_ids_2": 52,
        "num_ids_4": 101
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va', \"Your code should return 'dae ae ju traeligt va' for the given input.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"f\u00f6rl\u00e4ngs\u00e4ge\") == \"deformation\"\nassert solution(\"\u00e4s\u00e5m\u00f6bler\") == \"deformation\"\nassert solution(\"\u00f8nnsker\") == \"asker\"\nassert solution(\"\u00e5terigen\") == \"again\"\n",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('Haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('\u00df\u00e6\u00f0\u00f8\u00e5\u00e6') == '\u00df\u00e6\u00f0\u00f8\u00e5\u00e6'\nassert solution('\u00e5\u00e6') == '\u00e5\u00e6'\nassert solution('\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 50,
        "num_ids_4": 82
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"definitely not in \u00f6stg\u00f6tska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 49,
        "num_ids_4": 540
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('def') == 'haer talar vi rikssvenska'\nassert solution('\u00f6stg\u00f6tska') == 'haer talar vi rikssvenska'\nassert solution('\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 41,
        "num_ids_4": 548
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 527,
        "num_ids_4": 527
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E \\n#..E.. \\n.E...E \\n##E.E#\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"The solution is not correct.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"\n\nn, m = map(int, input().split())\nmap = [list(map(str, input().split())) for _ in range(n)]\n\nvalid_placements = []\nfor i in range(n):\n    for j in range(m):\n        if i == 0 or j == 0 or i == n-1 or j == m-1 or map[i][j] == '.' or map[i][j] == '#':\n            if i > 0 and j > 0 and map[i-1][j-1] == '.' and map[i-1][j] == '.' and map[i][j-1] == '.' and map[i][j] == '#':\n                valid_placements.append((i, j))\n            if i > 0 and map[i-1][j] == '.' and map[i][j-1] == '.' and map[i][j] == '#':\n                valid_placements.append((i, j))\n            if i < n-1 and j > 0 and map[i+1][j-1] == '.' and map[i][j-1] == '.' and map[i][j] == '#':\n                valid_placements.append((i, j))\n            if i < n-1 and map[i+1][j] == '.' and map[i][j-1] == '.' and map[i][j] == '#':\n                valid_placements.append((i, j))\n\nfor i in range(n):\n    for j in range(m):\n        if map[i][j] == '#':\n            map[i][j] = 'E'\n\nprint(''.join(map[i][j] for i in range(n) for j in range(m)))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#.E..E#.E..E#E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"E..E#.\n..E.#E\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#\\n..E.#E..E.#E..E.#E..E.#E..E\\n#..E..#..E..#..E..#..E..#..E..\\n.E...E.E...E.E...E.E...E.\\n##E.E###E.E###E.E###E.E#\"",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 1\"\nassert solution(\"12 8 2 4 10 3 25 14 50 20\") == \"12 10 3 8 4 2 20 25\", \"Test case 2\"\nassert solution(\"12 8 2 4 10 3 25 14 50 20 30 40\") == \"12 10 3 8 4 2 20 25 30 35 40\", \"Test case 3\"\nassert solution(\"12 8 2 4 10 3 25 14 50 20 30 40 50 60 70 80 90 100\") == \"12 10 3 8 4 2 20 25 30 35 40 50 60 70 80 90 100\", \"Test case 4\"\nassert solution(\"12 8 2 4 10 3 25 14 50 20 30 40 50 60 70 80 90 100 120 130 140 150\") == \"12 10 3 8 4 2 20 25 30 35 40 50 60 70 80 90 100 120 130 140 150\", \"Test case 5\"",
        "num_ids_2": 104,
        "num_ids_4": 288
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Incorrect output.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 1 failed\"\nassert solution(\"12 4 3 2 8 10 25 14\") == \"12 8 10 4 2 3\", \"Test case 2 failed\"\nassert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 3 failed\"\nassert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 4 failed\"\nassert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 5 failed\"\nassert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test case 6 failed\"",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nprint(\"Test Passed\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Your code is not correct!\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 0 3') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 0 3\") == 4, \"Your code is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example.in', 'r').read()) == '4\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9 0 3') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 0 3\") == \"4\", \"Testcase 1\"\nassert solution(\"8 0 3\") == \"4\", \"Testcase 2\"\nassert solution(\"9 0 1\") == \"0\", \"Testcase 3\"\nassert solution(\"10 0 2\") == \"0\", \"Testcase 4\"\nassert solution(\"9 5 4\") == \"4\", \"Testcase 5\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 0 3') == 4",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 0 3\") == \"4\\n\", \"Test case 1 failed\"\n\nassert solution(\"8 4 1\") == \"0\\n\", \"Test case 2 failed\"\n\nassert solution(\"10 3 2\") == \"1\\n\", \"Test case 3 failed\"\n\nassert solution(\"9 5 4\") == \"3\\n\", \"Test case 4 failed\"\n\nassert solution(\"1000 0 0\") == \"0\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 0 3\") == \"4\" # pass\n\nassert solution(\"45 2 3\") == \"4\" # pass\n\nassert solution(\"4 0 3\") == \"0\" # pass\n\nassert solution(\"4 10 3\") == \"0\" # pass\n\nassert solution(\"4 0 0\") == \"0\" # pass",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko is learning about different numeral systems. Slavko is not the brightest when it comes to math, so he is starting out converting binary numerals to octal. The algorithm Slavko uses is this:\n - Pad the binary numeral with zeros on the left until the number of digits is divisible by three.\n - Group adjacent binary digits into groups of $3$ digits.\n - Replace each group of binary digits with the corresponding octal digit (as in Table\u00a01).\n\n000\n\n0\n\n001\n\n1\n\n010\n\n2\n\n011\n\n3\n\n100\n\n4\n\n101\n\n5\n\n110\n\n6\n\n111\n\n7Table 1: Binary to octal \n\nWrite a program that converts a binary numeral to octal so that Slavko can verify his results.\n\nHere's the code to solve the problem:\n\n```python\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1010\") == \"12\", \"Your solution is incorrect!\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1010\") == \"12\", \"Test Case 1: Convert binary to octal\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\", \"Your solution is incorrect\"\nprint(\"Test passed\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1010\") == \"12\", \"Input '1010' should be converted to '12'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1010\") == \"12\", \"Incorrect output\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n2 3\n..o\no..\n\"\"\") == \"2\\n\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"2\", \"Expected output: 2\\nActual output: {}\".format(solution(sample_input))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n..o\\no..') == '2\\n'\n\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n', \"Test failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n..o\\no..\\n') == '2\\n'\nassert solution('3 4\\n...o\\n....') == '3\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\") == \"SMECE\\nSMECE\\nSMECE\\nSMECE\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example.in', 'r')) == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1\") == \"LADICA\\nSMECE\\nSMECE\\nLADICA\\nLADICA\"\nassert solution(\"1 1 1 1 1\") == \"LADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"LADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution(\"1 2 2 2 2\\n1 2 2 2 2\") == \"LADICA\\nLADICA\\nSMECE\\nSMECE\"\n",
        "num_ids_2": 110,
        "num_ids_4": 224
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2\\n\", \"Your solution is incorrect. Please fix it.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed: {solution(input_str)}!= {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0\n''') == '1 2\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\\n\", \"Your code is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    0\n    ''') == ['1', '2']\n\nassert solution('''\n    2\n    1 2 3 4\n    ''') == ['1', '2', '3', '4']",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2\n0\n''') == ['1 2']",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '1 2\\n'\n\nimport re",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0\\n\") == \"1 2\\n\"\n\nsolution(\"2\\n0\\n\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == 1\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 3 4') == 1\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 3 4\\n0 4 5') == 4",
        "num_ids_2": 97,
        "num_ids_4": 156
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == 1\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: {solution(input_data)}!= {expected_output}\" for input_data, expected_output in [\n    ([], 0),\n    ([0, 1, 2, 3, 4, 5], 0),\n    ([0, 5, 2], 0),\n    ([0, 1], 0),\n    ([0, 2], 1),\n    ([0, 5, 2, 1], 1),\n]",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"Test Passed\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"1\\n\" # your solution here",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input)}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == 1\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == 5\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n6 3 4\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 ",
        "num_ids_2": 129,
        "num_ids_4": 1027
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\"\nassert solution(\"1 1 1 1 1 1\") == \"impossible\"\nassert solution(\"1 2 3 4\") == \"4 3 1\"\nassert solution(\"1 2 3 4 5\") == \"4 3 1\"\nassert solution(\"1 1 2 3 4\") == \"4 3 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"impossible\"\nassert solution(\"1 1 1 1 1 2 3 4 5 6\") == \"impossible\"",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"4\\n1 2 3\") == \"4 2 1\"\nassert solution(\"5\\n1 3 4 5 6\") == \"impossible\"",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\\n\") == \"4 3 1\"  # correct output\nassert solution(\"5 10 20\\n\") == \"5 10 20\"  # correct output\nassert solution(\"3\\n1 3\\n2 4\\n3 5\\n\") == \"4 3 1\"  # correct output\nassert solution(\"3\\n10 20 30\\n20 10 30\\n\") == \"40 30 20\"  # correct output\nassert solution(\"3\\n1 3 4\\n2 4 5\\n3 5 6\\n\") == \"4 3 1\"  # correct output\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"4 3 1\"  # correct output\nassert solution(\"3\\n1 3 4\\n2 4 5\\n3 5 6\\n\") == \"4 3 1\"  # correct output",
        "num_ids_2": 52,
        "num_ids_4": 130
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"impossible\"  # Write your solution here.\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"10\\n5 -2 1 7 8 -3 6 -4\") == \"5 6 7 8 -2 -4 -3\"\nassert solution(\"3\\n3 2 4\") == \"4 2 3\"\nassert solution(\"3\\n-1 2 4\") == \"impossible\"\nassert solution(\"2\\n1 2 3\") == \"impossible\"\nassert solution(\"5\\n3 2 4 -1 5\") == \"impossible\"",
        "num_ids_2": 61,
        "num_ids_4": 101
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"  # Example 1\nassert solution(\"4\\n1 3 4\\n2 5 7\") == \"4 3 1\\n5 7 2\"  # Example 2\nassert solution(\"5\\n1 3 4\\n2 5 7\\n3 6 8\") == \"4 3 1\\n5 7 2\\n6 8 3\"  # Example 3\nassert solution(\"6\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\"  # Example 4\nassert solution(\"7\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\\n8 10 5\"  # Example 5\nassert solution(\"8\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\\n6 9 11\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\\n8 10 5\\n9 11 6\"  # Example 6\nassert solution(\"9\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\\n6 9 11\\n7 10 12\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\\n8 10 5\\n9 11 6\\n10 12 7\"  # Example 7\nassert solution(\"10\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\\n6 9 11\\n7 10 12\\n8 11 13\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\\n8 10 5\\n9 11 6\\n10 12 7\\n11 13 8\"  # Example 8\nassert solution(\"11\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\\n6 9 11\\n7 10 12\\n8 11 13\\n9 12 14\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\\n8 10 5\\n9 11 6\\n10 12 7\\n11 13 8\\n12 14 9\"  # Example 9\nassert solution(\"12\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\\n6 9 11\\n7 10 12\\n8 11 13\\n9 12 14\\n10 13 15\") == \"4 3 1\\n5 7 2\\n6 8 3\\n7 9 4\\n8 10 5\\n9 11 6\\n10 12 7\\n11 13 8\\n12 14 9\\n13 15 10\"  # Example 10\nassert solution(\"13\\n1 3 4\\n2 5 7\\n3 6 8\\n4 7 9\\n5 8 10\\n6 9 11\\n7 10 12\\n8 11 13\\",
        "num_ids_2": 66,
        "num_ids_4": 188
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"  # Correct solution\nassert solution(\"10\\n1 2 3 4 5\") == \"impossible\"  # No solution exists\nassert solution(\"2\\n10 20\") == \"impossible\"  # No solution exists\nassert solution(\"3\\n10 5 25 30 40 50\") == \"impossible\"  # No solution exists\nassert solution(\"4\\n10 10 20 30 40 50 60 70 80 90\") == \"4 3 1\"  # Correct solution",
        "num_ids_2": 53,
        "num_ids_4": 110
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4 3 1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"18.400\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Error: {solution(input())}!= {output()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"18.400\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"\nassert solution(\"3 10\") == \"6.000\"\nassert solution(\"3 20\") == \"14.000\"\nassert solution(\"1 20 10\") == \"20.000\"",
        "num_ids_2": 44,
        "num_ids_4": 83
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 20 15\n3 10\n''') == '18.400'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"18.400\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please see the example inputs and expected outputs in the problem statement.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 20 15\n3 10\n\"\"\") == \"18.400\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"18.400\", solution(stdin)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '18.400'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 88,
        "num_ids_4": 176
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Test failed for solution(5)\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Test failed for solution(5)\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Test failed for solution(5)\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Test failed for solution(5)\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Test failed for solution(5)\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == \"5\"\nassert solution(\"6\\n....H\\n.....\\nS....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\n....H\\n.....\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test Case Failed: {input_str}\" for input_str, output_str in [\n    (\"\", \"0\"),\n    (\"....H\", \"0\"),\n    (\".....\", \"0\"),\n    (\"S....\", \"1\"),\n    (\"....H\", \"1\"),\n]",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 5, \"The output of the function should be 5, but it is {}\".format(solution(input()))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 5\nassert solution(open(\"input2.txt\", \"r\")) == 12\nassert solution(open(\"input3.txt\", \"r\")) == 50\nassert solution(open(\"input4.txt\", \"r\")) == 100\nassert solution(open(\"input5.txt\", \"r\")) == 150",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5, \"Incorrect output\"\nprint(\"All tests passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"10\\n...HH\\n.....\\nH....\\n....H\\n.....\\n\") == 10\nassert solution(\"2\\n....\\n.....\\n....\\n.....\\n\") == 1\n\nfrom typing import List",
        "num_ids_2": 60,
        "num_ids_4": 83
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\", \"Test case 1 failed\"\n\nassert solution(input()) == \"0\", \"Test case 2 failed\"\n\nassert solution(input()) == \"1\", \"Test case 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == 0\nassert solution('5 2 3\\n1 3 5\\n2 4\\n') == 0\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\nassert solution(\"5 2 3\\n2 4\\n1 3\") == \"0\"\nassert solution(\"5 2 3\\n2 4\\n1 3 5 6\") == \"1\"\nassert solution(\"5 2 3\\n2 4 5 6\\n1 3 5\") == \"1\"\nassert solution(\"5 2 3\\n2 4 5\\n1 3 5\") == \"2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 108
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\\n\"\n\nassert solution(stdin=\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\\n\"\n\nassert solution(stdin=\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\\n\"\n\nassert solution(stdin=\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\\n\"\n\nassert solution(stdin=\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5\\n') == '0\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n') == '1\\n'\nassert solution('5 2 3\\n2 4\\n1\\n') == '2\\n'\nassert solution('5 2 3\\n2 4\\n') == '1\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n5 1 1\\n') == '0\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n5 1 1\\n5 1 2\\n') == '1\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n5 1 1\\n5 1 2\\n5 1 3\\n') == '2\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n5 1 1\\n5 1 2\\n5 1 3\\n5 1 4\\n') == '3\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n5 1 1\\n5 1 2\\n5 1 3\\n5 1 4\\n5 1 5\\n') == '4\\n'\nassert solution('5 2 3\\n2 4\\n1 3\\n5 1 1\\n5 1 2\\n5 1 3\\n5 1 4\\n5 1 5\\n5 1 6\\n') == '5\\n'",
        "num_ids_2": 58,
        "num_ids_4": 107
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\\n\") == 0, \"The solution is not correct.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.000000000\\n\", \"George has bought a pizza.\\nGeorge loves cheese.\\nGeorge thinks the pizza does not have enough cheese.\\nGeorge gets angry.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0.000000000' # assert the solution works correctly",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.000000000\", \"The percentage of pizza that has cheese is incorrect\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '0.000000000'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0.000000000', 'Incorrect output'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"5 5\") == \"0.166666667\"\nassert solution(\"10 10\") == \"0.500000000\"\nassert solution(\"2 2\") == \"1.000000000\"\nassert solution(\"1 5\") == \"0.666666667\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nprint(\"All tests passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"2 2\") == \"0.000000000\"\nassert solution(\"3 3\") == \"0.000000000\"\nassert solution(\"4 4\") == \"0.000000000\"\nassert solution(\"5 5\") == \"0.000000000\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2\nassert solution(\"1\\n100\\n101\\n102\\n103\\n488\\n\") == 2",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('frosh_combinations.txt', 'r')) == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2', \"Solution should return 2.\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\n\nfrom typing import List",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == 2, \"Test case 1 failed\"\n\nassert solution(\"4\\n100 101 102 103\\n100 200 300 101\\n103 102 488 100\\n488 101 100 100\") == 1, \"Test case 2 failed\"\n\nassert solution(\"5\\n100 101 102 103 104\\n100 200 300 101 102\\n103 102 101 488 100\\n488 101 100 100\\n100 103 104 100 104\") == 3, \"Test case 3 failed\"",
        "num_ids_2": 165,
        "num_ids_4": 283
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1730') == '1729'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1729\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1730\") == \"1729\\n\", \"Test case 1 failed.\"\n\nassert solution(\"1\") == \"none\\n\", \"Test case 2 failed.\"\n\nassert solution(\"400001\") == \"400000\\n\", \"Test case 3 failed.\"\n\nassert solution(\"0\") == \"none\\n\", \"Test case 4 failed.\"\n\nassert solution(\"-1\") == \"none\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1729\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1730') == '1729', \"Solution should return 1729, but it returned {}\".format(solution('1730'))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1730\") == \"1729\"  # correct output",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1729\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1729\", \"The output is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1729\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"65536\") == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(65536) == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(65536) == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"65536\") == \"16\"\nprint(\"All test cases pass\")\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65536\") == \"16\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '16'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(65536) == 16, \"Incorrect Output\" # Test the correctness of solution\nprint(\"All tests passed!\") # Print a message saying that all tests passed",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n....\\n....\\n....\\n...K\\n') == '2\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test {i+1} failed. Expected: {output}, got: {solution(input)}\" for i, input, output in enumerate(zip(sample_input, sample_output))",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Solution is {solution}, but expected {expected_output}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == '2'\nassert solution(5) == 'def solution(stdin: str) -> str: pass\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution should be '{sample_output}', but it's '{solution(sample_input)}'.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\\n\"\nassert solution(\"4\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\") == \"-1\\n\"\nassert solution(\"4\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\") == \"1\\n\"\nassert solution(\"4\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n...K\") == \"1\\n\"\nassert solution(\"4\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n...K\\n....\\n....\\n....\\n....\\n....\\n...K\") == \"1\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 167
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: {output}, Expected: {output}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"23\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n') == '23'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1') == '23'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n4') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n42\\n3\\n2\\n99\\n1') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n1') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n2') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n3') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n4') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n5') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n6') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n7') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n8') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n9') == 'too late'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n10') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n11') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n12') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n13') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n14') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n15') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n16') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n17') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n18') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n19') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n20') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n21') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n22') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n23') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n24') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\",
        "num_ids_2": 64,
        "num_ids_4": 145
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n') == '23'\n\nimport sys\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"23\", \"Please output the room number of any such room.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n0\\n\") == \"too late\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n4\\n\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n5\\n\") == \"too late\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n100\\n\") == \"too late\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n0\\n\") == \"too late\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 14,
        "num_ids_4": 69
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF', 'The solution is incorrect.'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test case failed\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Solution failed for input {stdin}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Solution not found\"\nassert solution(\"hide the gold in the tree stump\") == \"HMDRITTWSPNSPN\", \"Solution not found\"\nassert solution(\"Hello World\") == \"HELLO WORLD\", \"Solution not found\"\nassert solution(\"This is a test\") == \"YVKSZTVYIFPMJRD\", \"Solution not found\"",
        "num_ids_2": 59,
        "num_ids_4": 105
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\", \"The solution is incorrect\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\", \"The solution is incorrect\"\nassert solution(\"3.400 3.400\") == \"The gopher cannot escape.\", \"The solution is incorrect\"\nassert solution(\"1.500 1.500 2.500 2.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\", \"The solution is incorrect\"",
        "num_ids_2": 110,
        "num_ids_4": 202
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 2.500') == 'The gopher can escape through the hole at (2.000, 1.500).'\nassert solution('1.000 1.000 2.000 2.000\\n1.000 2.000') == 'The gopher can escape through the hole at (2.000, 1.000).'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 1.500 1.500 1.500') == 'The gopher can escape through the hole at (2.000, 1.500).'\nassert solution('1.000 1.000 2.000 2.000\\n1.000 2.000 2.000 2.000') == 'The gopher can escape through the hole at (2.000, 1.000).'",
        "num_ids_2": 118,
        "num_ids_4": 266
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 2.000 1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.500 1.500 1.500 1.500\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.500 1.500 1.500 1.501\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.500 1.500 1.500 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.501 1.5",
        "num_ids_2": 96,
        "num_ids_4": 216
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher cannot escape.\\n'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at (1.500, 1.500).'\nassert solution('2.500 2.500') == 'The gopher can escape through the hole at (2.500, 2.500).'\nassert solution('0.000 0.000') == 'The gopher cannot escape.'\nassert solution('1.000 1.000') == 'The gopher cannot escape.'\nassert solution('1.500 1.000') == 'The gopher can escape through the hole at (1.500, 1.000).'\nassert solution('2.000 2.500') == 'The gopher can escape through the hole at (2.000, 2.500).'",
        "num_ids_2": 80,
        "num_ids_4": 148
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 2.000 1.500 1.000\\n2.500 2.000\\n3.500 1.500\\n4.000 2.000\") == \"The gopher can escape through the hole at (1.500, 2.000).\\nThe gopher can escape through the hole at (3.500, 1.500).\\nThe gopher can escape through the hole at (4.000, 2.000).\"",
        "num_ids_2": 193,
        "num_ids_4": 193
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.250 1.250\\n\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"2.000 2.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.250 1.250\\n\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.250 1.250\\n2.000 2.000 2.000 2.000\\n2.000 2.000 2.000 2.000\\n\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.250 1.250\\n2.000 2.000 2.000 2.000\\n2.000 2.000 2.000 2.000\\n2.000 2.000 2.000 2.000\\n\") == \"The gopher can escape through the hole at (1.000, 1.000).\\nThe gopher can escape through the hole at (1.000, 1.000).\\nThe gopher can escape through the hole at (1.000, 1.000).\\n\"",
        "num_ids_2": 166,
        "num_ids_4": 376
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"The gopher cannot escape.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Y\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4) == \"Y\"\nassert solution(3, 3) == \"N\"\nassert solution(3, 10) == \"N\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"2 4\\n3 3\\n3\") == \"N\"\nassert solution(\"3 4\\n1 3\\n3\") == \"Y\"\nassert solution(\"3 4\\n3 3\\n1\") == \"N\"\nassert solution(\"0 4\\n0 3\\n3\") == \"Y\"\nassert solution(\"0 4\\n0 3\\n1\") == \"N\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('6 5\\n7 3\\n1') == 'Y\\n'\nassert solution('1 1\\n2 1\\n1') == 'Y\\n'\nassert solution('2 2\\n3 2\\n1') == 'Y\\n'\nassert solution('3 4\\n3 3\\n3') == 'N\\n'\nassert solution('6 5\\n7 3\\n1') == 'N\\n'\nassert solution('1 1\\n2 1\\n1') == 'N\\n'\nassert solution('2 2\\n3 2\\n1') == 'N\\n'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"4 3\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"3 3\\n3 3\\n2\") == \"N\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\" # pass\nassert solution(\"1 2\\n4 3\\n2\") == \"N\" # pass\nassert solution(\"4 1\\n4 4\\n1\") == \"Y\" # pass\nassert solution(\"1000 0\\n1000 1000\\n1000\") == \"N\" # pass\nassert solution(\"-1000 -1000\\n1000 1000\\n1000\") == \"Y\" # pass",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n3 3\\n3\\n') == 'Y'\nassert solution('4 1\\n5 1\\n3\\n') == 'Y'\nassert solution('2 1\\n3 1\\n1\\n') == 'N'\nassert solution('1 2\\n2 2\\n3\\n') == 'N'\nassert solution('3 1\\n2 3\\n3\\n') == 'N'\nassert solution('0 1\\n1 1\\n0\\n') == 'N'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('4 3\\n3 3\\n3') == 'Y\\n'\nassert solution('5 5\\n5 5\\n5') == 'N\\n'\nassert solution('10 10\\n10 10\\n10') == 'N\\n'\nassert solution('0 0\\n0 0\\n0') == 'N\\n'\nassert solution('101 101\\n101 101\\n101') == 'N\\n'\nassert solution('10000 10000\\n10000 10000\\n10000') == 'N\\n'\nassert solution('10001 10000\\n10000 10000\\n10000') == 'N\\n'\nassert solution('10000 10001\\n10000 10000\\n10000') == 'N\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10002') == 'N\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\n'\nassert solution('10000 10001\\n10000 10000\\n10001') == 'Y\\",
        "num_ids_2": 44,
        "num_ids_4": 93
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3 4 3) == \"Y\"\nassert solution(3 3 3) == \"N\"\nassert solution(3 3 2) == \"N\"\nassert solution(3 4 1) == \"N\"\nassert solution(3 2 2) == \"Y\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('2 2\\n2 1\\n1') == 'N'\nassert solution('1 1\\n2 2\\n3') == 'N'\nassert solution('3 3\\n4 4\\n5') == 'N'\nassert solution('3 3\\n4 3\\n5') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"\"\"\\\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 5\\n..#.#\\n#..##\\n#...#\\n..###\\n..##.\") == \"..V..#\\n..V..#\\n..V..#\\n..V..#\\n..V..#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4 8\\n..###.\\n##.#..#\\n#..#.#\\n##..##\\n...##\\n...##\\n...##\\n..###.\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 139,
        "num_ids_4": 199
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == [\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".V###V.\",\n    \".V###V.\",\n    \".VV#VV.\",\n    \".VV#VV.\",\n    \".",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..''') == '...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\treturn\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test the correctness of the solution by calling it with the sample input\"\n\nsolution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") # Test the correctness of the solution by calling it with the sample input",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"11\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('13') == '11', \"Output is not correct\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"11\", \"Test 1\"\nassert solution(\"1000\") == \"1\", \"Test 2\"\nassert solution(\"1000000000\") == \"1\", \"Test 3\"\nassert solution
        "num_ids_2": 35,
        "num_ids_4": 1027
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"11\", \"The solution is incorrect.\"\nassert solution(\"5\") == \"101\", \"The solution is incorrect.\"\nassert solution(\"1000000\") == \"1000001\", \"The solution is incorrect.\"\nassert solution(\"1234567\") == \"1001000100110001001110101011\", \"The solution is incorrect.\"\nassert solution(\"123456789\") == \"1000011000010000100000011110010111100000110100000001111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 36,
        "num_ids_4": 113
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == 11",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == 11, \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == '9'\n\nfrom typing import List",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 1\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 2\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 3\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 4\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 5\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 6\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 7\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 8\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9\n\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 1\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 2\nassert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 3\nassert solution(\"12\\npink\\ntequilaSunrose\\nmEx",
        "num_ids_2": 141,
        "num_ids_4": 283
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9, \"Output should be 9\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9, \"Output is incorrect.\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9\nprint(\"All tests passed\")\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\\n\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == \"9\\nI must watch Star Wars with my daughter\\n\"\nassert solution(\"1\\nm\\n\") == \"1\\nYou must enter a color name\\n\"\nassert solution(\"2\\nwhite\\nblack\\n\") == \"2\\nYou must enter a color name\\n\"\nassert solution(\"3\\nRed\\nGreen\\nBlue\\n\") == \"3\\nYou must enter a color name\\n\"\nassert solution(\"4\\npink\\npink\\npink\\npink\\n\") == \"4\\nYou must enter a color name\\n\"\nassert solution(\"5\\nred\\nred\\nred\\nred\\n\") == \"5\\nYou must enter a color name\\n\"\nassert solution(\"6\\nred\\nblue\\ngreen\\n\") == \"6\\nYou must enter a color name\\n\"\nassert solution(\"7\\nRed\\nGreen\\nBlue\\nRed\\nGreen\\nBlue\\nRed\\nGreen\\nBlue\\nRed\\nGreen\\nBlue\\n\") == \"7\\nYou must enter a color name\\n\"\nassert solution(\"8\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\n\") == \"8\\nYou must enter a color name\\n\"\nassert solution(\"9\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\n\") == \"9\\nI must watch Star Wars with my daughter\\n\"\nassert solution(\"10\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\n\") == \"10\\nI must watch Star Wars with my daughter\\n\"\nassert solution(\"11\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nblue\\ngreen\\nred\\nbl",
        "num_ids_2": 112,
        "num_ids_4": 172
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9, \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\"\nassert solution(\"5\\nblack\\npink\\nblue\\nred\") == \"4\"\nassert solution(\"1\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 106
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 9, \"Solution is incorrect\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"1 3 5\\nABC\") == \"1 3 5\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 3 5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 3 5\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 4 2\\nABC\") == \"1 4 2\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"1 2 3\\nABC\") == \"1 2 3\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"2 1 3\\nABC\") == \"2 1 3\\ndef solution(stdin: str) -> str:\\npass\"\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\", \"The code you provided is not correct. The function should return the desired order of the input numbers.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"2 4 6\\ndef\") == \"2 4 6\"\nassert solution(\"3 2 1\\nghi\") == \"3 2 1\"\nassert solution(\"5 6 4\\n\") == \"5 6 4\"\nassert solution(\"7 9 8\\n\") == \"7 9 8\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 5 6') == '1 5 6'\nassert solution('1 3 5') == '1 3 5'\nassert solution('1 3 6') == '1 3 6'\nassert solution('1 6 3') == '1 6 3'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8.00000000\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\nsplit 3\\ndie 4\\n\") == \"8.00000000\\n\"\nprint(\"Test passed!\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"taxmania.txt\", \"r\")) == \"8.00000000\"\nassert solution(open(\"taxmania_example.txt\", \"r\")) == \"73.80000000\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt')) == '8.00000000\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\nsay hi\\ndie 4\\n\") == \"8.00000000\\n\"\nassert solution(\"buy 1 10\\nsell 1 10\\nsay hi\\ndie 4\\n\") == \"16.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsay hi\\ndie 3\\n\") == \"12.00000000\\n\"\nassert solution(\"buy 2 20\\nsell 1 10\\nsay hi\\ndie 4\\n\") == \"24.00000000\\n\"\nassert solution(\"buy 3 30\\nsell 1 20\\nsay hi\\ndie 4\\n\") == \"36.00000000\\n\"\nassert solution(\"buy 2 20\\nsell 1 10\\nsay hi\\ndie 5\\n\") == \"24.00000000\\n\"\nassert solution(\"buy 3 30\\nsell 1 20\\nsay hi\\ndie 4\\n\") == \"42.00000000\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 181
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\"\n) == \"8.00000000\\n\"\n\nassert solution(\n    \"\"\"\nbuy 1 15\nsplit 3\nmerge 2\nsell 1 5\ndie 4\n\"\"\"\n) == \"15.00000000\\n\"\n\nassert solution(\n    \"\"\"\nbuy 1 15\nsplit 3\nmerge 2\nsplit 2\nsell 1 5\ndie 4\n\"\"\"\n) == \"15.00000000\\n\"\n\nassert solution(\n    \"\"\"\nbuy 1 15\nsplit 3\nmerge 2\nsplit 2\nsell 1 5\ndie 4\n\"\"\"\n) == \"15.00000000\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4') == '8.00000000'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '8.00000000'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\\n\") == \"8.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\ndie 4\\nbuy 2 20\\nsell 2 40\\ndie 1\\nsell 1 30\\nsell 1 30\\ndie 3\\nsell 1 20\\nsell 1 15\\ndie 2\\ndie 2\\nsell 2 15\\nsell 1 15\\nsell 1 15\\ndie 3\\nsell 1 15\\nsell 1 15\\ndie 4\\nsell 1 15\\nsell 1 15\\ndie 5\\nsell 1 15\\nsell 1 15\\ndie 6\\nsell 1 15\\nsell 1 15\\ndie 7\\nsell 1 15\\nsell 1 15\\ndie 8\\nsell 1 15\\nsell 1 15\\ndie 9\\nsell 1 15\\nsell 1 15\\ndie 10\\nsell 1 15\\nsell 1 15\\ndie 11\\nsell 1 15\\nsell 1 15\\ndie 12\\nsell 1 15\\nsell 1 15\\ndie 13\\nsell 1 15\\nsell 1 15\\ndie 14\\nsell 1 15\\nsell 1 15\\ndie 15\\nsell 1 15\\nsell 1 15\\ndie 16\\nsell 1 15\\nsell 1 15\\ndie 17\\nsell 1 15\\nsell 1 15\\ndie 18\\nsell 1 15\\nsell 1 15\\ndie 19\\nsell 1 15\\nsell 1 15\\ndie 20\\nsell 1 15\\nsell 1 15\\ndie 21\\nsell 1 15\\nsell 1 15\\ndie 22\\nsell 1 15\\nsell 1 15\\ndie 23\\nsell 1 15\\nsell 1 15\\ndie 24\\nsell 1 15\\nsell 1 15\\ndie 25\\nsell 1 15\\nsell 1 15\\ndie 26\\nsell 1 15\\nsell 1 15\\ndie 27\\nsell 1 15\\nsell 1 15\\ndie 28\\nsell 1 15\\nsell 1 15\\ndie 29\\nsell 1 15\\nsell 1 15\\ndie 30\\nsell 1 15\\nsell 1 15\\ndie 31\\nsell 1 15\\nsell 1 15\\ndie 32\\nsell 1 15\\nsell 1 15\\ndie 33\\nsell 1 15\\nsell 1 15\\ndie 34\\nsell 1 15\\nsell 1 15\\ndie 35\\nsell 1 15\\nsell 1 15\\ndie 36\\nsell 1 15\\nsell 1 15\\ndie 37\\nsell 1 15\\nsell 1 15\\ndie 38\\nsell 1 15\\nsell 1 15\\ndie 39\\nsell 1 15\\nsell 1 15\\ndie 40\\nsell 1 15\\nsell 1 15\\ndie 41\\nsell 1 15\\nsell 1 15\\ndie 42\\nsell 1 15\\nsell 1 15",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(808) == 8\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(808) == 8",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(808) == 8\nassert solution(2) == 2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(808) == 8, \"Test Input 1 failed\"\n\nassert solution(2) == 2, \"Test Input 2 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"808\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(808) == 8, \"Output should be 8\"\n\nassert solution(2) == 2, \"Output should be 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(808) == 8\nassert solution(2) == 2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 8\nassert solution(2) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(808) == '8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(808) == 8\nassert solution(2) == 2\n\nfrom typing import str",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"0\", \"sample_input\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0\nassert solution(\"8 8\\nLWLWL\\nWLWLW\\nWLWLW\\nWLWLW\") == 4\nassert solution(\"6 6\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 0\n",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\"\nassert solution(\"4 5\\nL W C\\nL W C\\nL W C\\nL W C\") == \"2\"\nassert solution(\"4 5\\nL W C C\\nL W C C\\nL W C C\\nL W C C\") == \"3\"\nassert solution(\"4 5\\nL W C L\\nL W C L\\nL W C L\\nL W C L\") == \"5\"",
        "num_ids_2": 60,
        "num_ids_4": 132
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0\nassert solution(\"5 6\\nLLLLL\\nCCCCC\\nCCCCC\\nCCCCC\") == 1\nassert solution(\"5 6\\nLLLLL\\nWWCWC\\nCCCCC\\nCCCCC\") == 2\nassert solution(\"5 6\\nLLLLL\\nWWCWC\\nWWCWC\\nCCCCC\") == 3\nassert solution(\"5 6\\nLLLLL\\nWWCWC\\nWWCWC\\nWWWWW\") == 4\nassert solution(\"5 6\\nLLLLL\\nWWCWC\\nWWCWC\\nWWWWW\") == 4",
        "num_ids_2": 55,
        "num_ids_4": 114
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Expected 0, but got: {}\".format(solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\"))\nassert solution(\"1 5\\nLWWWW\\nWWWWW\\nLWWWW\\nLWWWW\") == 1, \"Expected 1, but got: {}\".format(solution(\"1 5\\nLWWWW\\nWWWWW\\nLWWWW\\nLWWWW\"))\nassert solution(\"5 1\\nLWWWW\\nLWWWW\\nLWWWW\\nLWWWW\") == 2, \"Expected 2, but got: {}\".format(solution(\"5 1\\nLWWWW\\nLWWWW\\nLWWWW\\nLWWWW\"))\nassert solution(\"2 2\\nLWWWW\\nWWWWW\\nWWWWW\\nLWWWW\") == 3, \"Expected 3, but got: {}\".format(solution(\"2 2\\nLWWWW\\nWWWWW\\nWWWWW\\nLWWWW\"))\nassert solution(\"3 2\\nLWWWW\\nWWWWW\\nWWWWW\\nLWWWW\") == 4, \"Expected 4, but got: {}\".format(solution(\"3 2\\nLWWWW\\nWWWWW\\nWWWWW\\nLWWWW\"))\nassert solution(\"5 4\\nLWWWW\\nWWWWW\\nWWWWW\\nLWWWW\\nLLLLL\") == 5, \"Expected 5, but got: {}\".format(solution(\"5 4\\nLWWWW\\nWWWWW\\nWWWWW\\nLWWWW\\nLLLLL\"))",
        "num_ids_2": 130,
        "num_ids_4": 268
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Solution should return 0\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0\nassert solution(\"3 4\\nLLLLL\\nRRRRR\\nLLLLL\\nRRRRR\") == 2\nassert solution(\"5 5\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\") == 1\nassert solution(\"4 7\\nXXXXXX\\nXXXXXX\\nXXXXXX\\nXXXXXX\") == 0\nassert solution(\"1 5\\nLLLLL\\nRRRRR\\nLLLLL\\nRRRRR\") == 3",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution('4 5\\nWWLWW\\nWWWWW\\nWWWWW\\nWWWWW') == 1\nassert solution('4 5\\nCWCWC\\nWWWWW\\nWWWWW\\nWWWWW') == 2\nassert solution('4 5\\nCCWCWC\\nCWCWC\\nCWCWC\\nCWCWC') == 3\nassert solution('4 5\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW') == 4\nassert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 5",
        "num_ids_2": 58,
        "num_ids_4": 120
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\\n\") == \"0\"\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\\n\") == \"0\"\nassert solution(\"4 5\\nLLLLL\\nWWWWW\\nLLLLL\\nLLLLL\\n\") == \"1\"\nassert solution(\"4 5\\nLLLLL\\nWWWWW\\nWCCCC\\nLLLLL\\n\") == \"1\"\nassert solution(\"4 5\\nLLLLL\\nWWWWW\\nWCCCC\\nWCCCC\\n\") == \"2\"",
        "num_ids_2": 64,
        "num_ids_4": 131
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0 #0 is expected output\n\nfrom typing import List\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == \"60\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example.txt', 'r')) == '60\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60, \"Incorrect output. Expected: 60, Actual: \" + solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\")",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 60, \"The output is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '60', 'Incorrect output for solution'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\"\nassert solution(\"1 S\\n2C\\n3H\\n4S\\n5D\\n6C\\n7H\\n8C\\n9S\\n10H\\n11S\") == \"56\"\nassert solution(\"5 S\\n2D\\n3C\\n4H\\n5S\\n6C\\n7H\\n8C\\n9S\\n10H\\n11S\") == \"60\"\n",
        "num_ids_2": 91,
        "num_ids_4": 145
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"60\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH') == 60, \"Your code is incorrect. Please see the provided test case and provide the correct solution.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH') == '60'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\" # expected output: \"60\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('this is very annoying') =='se', \"Testcase 1 failed\"\nassert solution('thiss iss veery annoying') == 'def', \"Testcase 2 failed\"\nprint(\"All testcases passed\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"se\", \"The output should be se\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this is very annoying\") == \"se\", \"The first sticky key is'se'\"\nassert solution(\"thiss iss veery annoying\") == \"def\", \"The second sticky key is 'def'\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"this is very annoying\") == \"se\", \"Test 1 failed\"\nassert solution(\"thiss iss veery annoying\") == \"def\", \"Test 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input.txt', 'r')) == \"3\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3, \"Test Failed\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3, \"Incorrect output\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3\nassert solution(\"5 2 2\\n0 0 1 1 2\") == 5\nassert solution(\"5 3 1\\n0 0 1 1 2\") == 3\nassert solution(\"5 2 2\\n0 0 1 1 2\") == 5\nassert solution(\"5 3 2\\n0 0 1 1 2\") == 3\nassert solution(\"5 2 3\\n0 0 1 1 2\") == 5",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == 3, 'Test 1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, \"Incorrect output for the given example.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input} -> {sample_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\\n\") == 3, \"Test failed\"\n\nsolution(\"5 3 0\\n0 0 1 1 2\\n\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 3 0\n    0 0 1 1 2\n    \"\"\"\n) == \"3\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 0, 0, 0, 0) == 3, \"Incorrect solution\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n2\\n6\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"6\\n\"\nassert solution(\"7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n2",
        "num_ids_2": 48,
        "num_ids_4": 1027
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n2\\n3') == '1\\n2\\n6'\nassert solution('3\\n10\\n20\\n30') == '6'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 6\nassert solution(1234567890) == 6\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n2\\n6', \"Test case 1 failed\"\n\nassert solution() == '1\\n2\\n6', \"Test case 2 failed\"\n\nassert solution() == '1\\n2\\n6', \"Test case 3 failed\"\n\nassert solution() == '1\\n2\\n6', \"Test case 4 failed\"\n\nassert solution() == '1\\n2\\n6', \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"6\"\nassert solution(4) == \"120\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"6\\n\"\nassert solution(100) == \"6\\n\"\nassert solution(1000) == \"6\\n\"\nassert solution(10000) == \"6\\n\"\nassert solution(1000000) == \"6\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n2\\n6\", \"The factorial of 3 is not correct\"\nassert solution() == \"1\\n2\\n6\", \"The factorial of 10 is not correct\"\nassert solution() == \"1\\n2\\n6\", \"The factorial of 100 is not correct\"\nassert solution() == \"1\\n2\\n6\", \"The factorial of 1000 is not correct\"\nassert solution() == \"1\\n2\\n6\", \"The factorial of 10000 is not correct\"",
        "num_ids_2": 51,
        "num_ids_4": 106
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1'\nassert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '6'\nassert solution(10) == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == '4 2\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4 2'\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"\n\nassert solution(\"4\\n1 2 3\") == \"4 2\"\n\nassert solution(\"3\\n5 6 7\") == \"8 4\"\n\nassert solution(\"6\\n8 9 10\") == \"12 8\"\n\nassert solution(\"2\\n3 4 5\") == \"8 4\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4 2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\"\nassert solution(\"4\\n4 1 1 2\") == \"6 2\\n\"\nassert solution(\"5\\n5 1 1 1 2\") == \"8 3\\n\"\nassert solution(\"6\\n6 1 1 1 1 2\") == \"10 3\\n\"\nassert solution(\"7\\n7 1 1 1 1 1 2\") == \"12 4\\n\"\nassert solution(\"8\\n8 1 1 1 1 1 1 2\") == \"14 5\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 2\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"4 2\\n\", \"Test 1 failed\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4 2', \"Test failed\"\nprint(\"All test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n3 1 2\") == \"4 2\\n\", \"Test case failed\"\nassert solution(stdin=\"5\\n1 2 3 4 5\") == \"12 8\\n\", \"Test case failed\"\nassert solution(stdin=\"6\\n2 3 4 5 6\") == \"12 8 4\\n\", \"Test case failed\"\nassert solution(stdin=\"7\\n2 3 4 5 6 7\") == \"12 8 4 0\\n\", \"Test case failed\"\nassert solution(stdin=\"8\\n2 3 4 5 6 7 8\") == \"12 8 4 0 6\\n\", \"Test case failed\"\n",
        "num_ids_2": 61,
        "num_ids_4": 135
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\", \"The given solution is incorrect.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b=5, k=2, g=1) == 2\nassert solution(b=10, k=4, g=2) == 11\nassert solution(b=100, k=10, g=5) == 31\nassert solution(b=100, k=20, g=10) == 315\nassert solution(b=100, k=50, g=20) == 3155\nassert solution(b=1000, k=100, g=100) == 315551\n",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"5 2 1\\n\") == \"2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Please provide the correct input\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Output: {solution(stdin)}, Expected Output: {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == 2, \"Expected output: 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 1') == 2, \"The output of the given code is not as expected.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 36, \"The sum of all the values in h(5) should be 36.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 36, \"Incorrect output: {}\".format(solution(5))  # Test 1\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 36, \"Invalid solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 36, \"Solution not correct\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 36, \"The given solution is incorrect.\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"36\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"36\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"7\") == \"288\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 36, \"Expected result: 36, actual: \" + str(solution(5))\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 1 4\\n1 2 1 5\\n2 1 1 3\\n3 1 3 5\") == \"2 3 1 4 5\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"2 3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"2 3 4\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"1 1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1 1 1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1 1 1 1\"\n",
        "num_ids_2": 79,
        "num_ids_4": 110
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4 2 3 1\") == \"2 3 4 1\"\nassert solution(\"5 1 2 3\") == \"2 3 4 1\"\nassert solution(\"1 2 3 4\") == \"2 3 4 1\"\nassert solution(\"3 1 2 4\") == \"2 3 4 1\"\nassert solution(\"5 1 2 3\") == \"impossible\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"5\\n2 3 3 1\\n1 2 3 4\\n2 3 4 1\\n1 2 4 3\") == \"1 2 3 4\"\nassert solution(\"5\\n2 3 3 1\\n1 2 3 4\\n2 3 4 1\\n1 2 4 3\\n3 4 2 1\") == \"2 3 4 1\"\nassert solution(\"4\\n3 2 1\\n1 4 2\\n2 4 1\\n3 2 4\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 3 1\\n1 2 3 4\\n2 3 4 1\\n1 2 4 3\\n3 4 2 1\\n2 4 3 1\\n1 3 2 4\") == \"2 3 4 1\"\nassert solution(\"4\\n1 4 2\\n3 2 1\\n2 4 1\\n3 2 4\") == \"2 3 4 1\"",
        "num_ids_2": 50,
        "num_ids_4": 163
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n2 3 3 1 2 4 5\") == \"1 2 4 3 5\"\nassert solution(\"4\\n2 3 3 1 1 1 2 4\") == \"1 2 3 4 4\"\nassert solution(\"4\\n2 3 3 1 1 1 2 4 5\") == \"1 2 3 4 4 5\"\nassert solution(\"5\\n2 3 3 1 1 1 2 4 5\") == \"impossible\"",
        "num_ids_2": 58,
        "num_ids_4": 132
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 3 1\\n4\\n2 3 3 1') == '2 3 4 1'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1\\n'\nassert solution('5\\n2 2 3 1\\n3 3 2 1') == '1 3 4 2 5\\n'\nassert solution('6\\n3 2 3 3\\n3 3 2 2') == '2 3 4 5 1\\n'\nassert solution('7\\n3 2 2 3\\n2 3 3 2') == '2 3 4 5 1\\n'\nassert solution('8\\n3 2 2 3\\n3 3 2 2') == '2 3 4 5 1\\n'\nassert solution('9\\n4 2 2 2\\n3 3 2 2') == '2 3 4 5 1\\n'",
        "num_ids_2": 65,
        "num_ids_4": 141
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"impossible\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"5 2 3 1\") == \"2 3 4 1\"\nassert solution(\"3 4 1 2\") == \"2 3 4 1\"\nassert solution(\"2 3 4 1 5\") == \"2 3 4 1\"\nassert solution(\"3 1 4 2 5\") == \"2 3 4 1\"\nassert solution(\"1 2 3 4 5\") == \"2 3 4 1\"\nassert solution(\"2 1 3 4 5\") == \"2 3 4 1\"\nassert solution(\"1 3 4 2 5\") == \"2 3 4 1\"\nassert solution(\"1 4 2 3 5\") == \"2 3 4 1\"\nassert solution(\"3 2 4 1 5\") == \"2 3 4 1\"\nassert solution(\"4 2 3 1 5\") == \"2 3 4 1\"\nassert solution(\"5 1 2 3 4\") == \"2 3 4 1\"\nassert solution(\"2 4 3 1 5\") == \"2 3 4 1\"\nassert solution(\"3 5 4 2 1\") == \"2 3 4 1\"\nassert solution(\"5 2 3 4 3\") == \"2 3 4 1\"\nassert solution(\"3 1 5 4 2\") == \"2 3 4 1\"\nassert solution(\"4 1 5 2 3\") == \"2 3 4 1\"\nassert solution(\"1 5 2 3 4\") == \"2 3 4 1\"\nassert solution(\"5 4 2 3 1\") == \"2 3 4 1\"\nassert solution(\"5 3 4 2 1\") == \"2 3 4 1\"\nassert solution(\"3 5 1 2 4\") == \"2 3 4 1\"\nassert solution(\"4 5 2 3 1\") == \"2 3 4 1\"\nassert solution(\"5 3 1 2 4\") == \"2 3 4 1\"\nassert solution(\"4 2 5 3 1\") == \"2 3 4 1\"\nassert solution(\"5 1 3 4 2\") == \"2 3 4 1\"\nassert solution(\"1 4 5 3 2\") == \"2 3 4 1\"\nassert solution(\"4 3 5 2 1\") == \"2 3 4 1\"\nassert solution(\"5 4 3 2 1\") == \"2 3 4 1\"\nassert solution(\"3 4 5 1 2\") == \"2 3 4 1\"\nassert solution(\"4 5 3 1 2\") == \"2 3 4 1\"\nassert solution(\"5 4 2 3 3\") == \"2 3 4 1\"\nassert solution(\"3 1 4 5 2\") == \"2 3 4 1\"\nassert solution(\"4 2 5 3 2\") == \"2 3 4 1\"\nassert solution(\"5 2 3 4 3\") == \"2 3 4 1\"\nassert solution(\"3 2 5 4 1\") == \"2 3 4 1\"\nassert solution(\"4 3 5 1 2\") == \"2 3 4 1\"\nassert solution(\"5 3 1 2 4\") == \"2 3 4 1\"\nassert solution(\"4 1 5 3 2\") == \"2 3 4 1\"\nassert solution(\"5 2 3 1 4\") == \"2 3 4 1\"\nassert solution(\"3 5 1 4 2\") == \"2 3 4 1\"\nassert solution(\"4 5 2 1 3\") == \"2 3 4 1\"\nassert solution(\"5 1 3 2 4\") == \"2 3 4 1\"\nassert solution(\"3 1 5 2 4\")",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 3 4 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"1 1\\n\") == \"1\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The given solution is incorrect.\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"\") == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"3 5\") == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"1 2 3 4 5\") == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"1 2 3 4 5 6\") == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 42,
        "num_ids_4": 96
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('4 10\\napple\\nbanana\\nbananas\\npineapple') == '4\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('5 15\\napple\\nbanana\\nbananas\\npineapple\\ngrape') == '15\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('6 20\\napple\\nbanana\\nbananas\\npineapple\\ngrape\\nburger\\norange') == '20\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('7 25\\napple\\nbanana\\nbananas\\npineapple\\ngrape\\nburger\\norange\\nwheat') == '25\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('8 30\\napple\\nbanana\\nbananas\\npineapple\\ngrape\\nburger\\norange\\nwheat\\nwheat_lemon') == '30\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 95,
        "num_ids_4": 196
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n5 7\n7 5\n''') == '7 7\\n'\n\nassert solution('''\n1 2\n3 4\n''') == '4 4\\n'\n\nassert solution('''\n3 4\n2 6\n''') == '6 6\\n'\n\nassert solution('''\n6 4\n5 2\n''') == '5 5\\n'\n\nassert solution('''\n1000 1000\n''') == '1000 1000\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Test failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Output should be '7 7\\n'.\"\nassert solution(\"5 10\\n7 15\\n10 7\") == \"10 7\\n\", \"Output should be '10 7\\n'.\"\nassert solution(\"100 100\\n500 100\\n100 500\") == \"500 500\\n\", \"Output should be '500 500\\n'.\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"4 2\\n\", \"Output should be '4 2\\n'.\"\nassert solution(\"10 20\\n30 40\\n50 60\") == \"50 30\\n\", \"Output should be '50 30\\n'.\"",
        "num_ids_2": 81,
        "num_ids_4": 177
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Output not correct\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''7 7'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7 7\\n\", \"Test Failed!\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 61\") == 1.016666667, \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1.016666667\nassert solution() == 1.0\nassert solution() == 0.9090909090909091\nassert solution() == 0.8181818181818182\nassert solution() == 0.7373737373737374\nassert solution() == 0.6722222222222222\nassert solution() == 0.6111111111111111\nassert solution() == 0.5555555555555556\nassert solution() == 0.5151515151515152\nassert solution() == 0.48484848484848485\nassert solution() == 0.45454545454545455\nassert solution() == 0.42424242424242425\nassert solution() == 0.39393939393939394\nassert solution() == 0.36363636363636364\nassert solution() == 0.33333333333333334\nassert solution() == 0.30303030303030303\nassert solution() == 0.27272727272727273\nassert solution() == 0.24242424242424243\nassert solution() == 0.21212121212121213\nassert solution() == 0.18181818181818182\nassert solution() == 0.15151515151515152\nassert solution() == 0.12121212121212122\nassert solution() == 0.09090909090909091\nassert solution() == 0.06060606060606061\nassert solution() == 0.030303030303030304\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0\nassert solution() == 0.0",
        "num_ids_2": 26,
        "num_ids_4": 74
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 61\\n\") == \"1.016666667\\nmeasurement error\\n\"\nassert solution(\"1\\n101\\n\") == \"101.0\\nmeasurement error\\n\"\nassert solution(\"1\\n2400\\n\") == \"2400.0\\nmeasurement error\\n\"\nassert solution(\"1\\n3600\\n\") == \"3600.0\\nmeasurement error\\n\"\nassert solution(\"1\\n60\\n\") == \"60.0\\nmeasurement error\\n\"\nassert solution(\"1\\n60 1800\\n\") == \"60.0\\nmeasurement error\\n\"\nassert solution(\"1\\n120 2400\\n\") == \"60.0\\nmeasurement error\\n\"\nassert solution(\"1\\n60 1800 1800\\n\") == \"120.0\\nmeasurement error\\n\"\nassert solution(\"1\\n120 2400 3600\\n\") == \"120.0\\nmeasurement error\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 119
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.016666667\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 61\") == 1.016666667\nassert solution(\"2\\n2 60\") == 0.6\nassert solution(\"3\\n3 59\") == 0.6\nassert solution(\"4\\n4 60\") == 1.0\nassert solution(\"5\\n5 60\") == 1.0\nassert solution(\"6\\n6 61\") == 1.0\nassert solution(\"7\\n7 61\") == 1.0\nassert solution(\"8\\n8 62\") == 1.0\nassert solution(\"9\\n9 63\") == 1.0\nassert solution(\"10\\n10 63\") == 1.0\nassert solution(\"11\\n11 63\") == 1.0\nassert solution(\"12\\n12 64\") == 1.0\nassert solution(\"13\\n13 64\") == 1.0\nassert solution(\"14\\n14 65\") == 1.0\nassert solution(\"15\\n15 65\") == 1.0\nassert solution(\"16\\n16 65\") == 1.0\nassert solution(\"17\\n17 66\") == 1.0\nassert solution(\"18\\n18 67\") == 1.0\nassert solution(\"19\\n19 67\") == 1.0\nassert solution(\"20\\n20 68\") == 1.0\nassert solution(\"21\\n21 68\") == 1.0\nassert solution(\"22\\n22 69\") == 1.0\nassert solution(\"23\\n23 70\") == 1.0\nassert solution(\"24\\n24 70\") == 1.0\nassert solution(\"25\\n25 71\") == 1.0\nassert solution(\"26\\n26 71\") == 1.0\nassert solution(\"27\\n27 72\") == 1.0\nassert solution(\"28\\n28 73\") == 1.0\nassert solution(\"29\\n29 74\") == 1.0\nassert solution(\"30\\n30 74\") == 1.0\nassert solution(\"31\\n31 75\") == 1.0\nassert solution(\"32\\n32 75\") == 1.0\nassert solution(\"33\\n33 76\") == 1.0\nassert solution(\"34\\n34 77\") == 1.0\nassert solution(\"35\\n35 78\") == 1.0\nassert solution(\"36\\n36 79\") == 1.0\nassert solution(\"37\\n37 80\") == 1.0\nassert solution(\"38\\n38 81\") == 1.0\nassert solution(\"39\\n39 82\") == 1.0\nassert solution(\"40\\n40 83\") == 1.0\nassert solution(\"41\\n41 84\") == 1.0\nassert solution(\"42\\n42 85\") == 1.0\nassert solution(\"43\\n43 86\") == 1.0\nassert solution(\"44\\n44 87\") == 1.0\nassert solution(\"45\\n45 88\") == 1.0\nassert solution(\"46\\n46 88\") == 1.0\nassert solution(\"47\\n47 89\") == 1.0\nassert solution(\"48\\n48 90\") == 1.0\nassert solution(\"49\\n49 91\") == 1.0\nassert solution(\"50\\n50 92\") == 1.0\nassert solution(\"51\\n51 93\") == 1.0\nassert solution(\"52\\n52 93\") == 1.0\nassert solution(\"53\\n53 94\") == 1.0\nassert solution(\"54\\n54 95\") == 1.0\nassert solution(\"55\\n55 ",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\\nmeasurement error\"\nassert solution(\"2\\n3 120\\n5 300\") == \"1.822222222\\nmeasurement error\"\nassert solution(\"3\\n120\\n240\\n360\") == \"1.133333333\\nmeasurement error\"\nassert solution(\"4\\n180\\n360\\n540\") == \"1.483333333\\nmeasurement error\"\nassert solution(\"5\\n60\\n180\\n360\\n600\") == \"0.00466666667\\nmeasurement error\"\n\nfor i in range(1, 6):\n    assert solution(str(i) + \"\\n\" + str(i + 1) + \" 61\\n\") == str(i + 1) + \".016666667\\nmeasurement error\\n\"\n\nfor i in range(1, 6):\n    assert solution(str(i) + \"\\n\" + str(i + 1) + \" 120\\n\" + str(i + 2) + \" 300\\n\") == str(i + 1) + \".822222222\\nmeasurement error\\n\"\n\nfor i in range(1, 6):\n    assert solution(str(i) + \"\\n\" + str(i + 1) + \" 180\\n\" + str(i + 2) + \" 360\\n\" + str(i + 3) + \" 540\\n\") == str(i + 1) + \".133333333\\nmeasurement error\\n\"\n\nfor i in range(1, 6):\n    assert solution(str(i) + \"\\n\" + str(i + 1) + \" 60\\n\" + str(i + 2) + \" 180\\n\" + str(i + 3) + \" 360\\n\" + str(i + 4) + \" 600\\n\") == str(i + 1) + \".00466666667\\nmeasurement error\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 146
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.016666667\\n\", \"The correct solution is not provided.\"\nassert abs(solution(stdin) - 1.016666667) <= 1e-7, \"The output is not correct. Please check your code.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1.016666667\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the encrypted message: \")) == \"CALGARY\", \"Solution not correct\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('CPMCRYY') == 'CALGARY', \"Your solution is incorrect. Please check the implementation.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPMCRYYALBERTA\") == \"CALGARY\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"CALGARY\", \"Your implementation is incorrect\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"CALGARY\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AB') == '3', \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AB\") == 3, \"Jealous of Mirko's position as head of the village, Borko stormed into his tent and tried to demonstrate Mirko's incompetence for leadership with a trick.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AB') == '3\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == \"3\" # correct output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('5 6 7 8') == '40'\nassert solution('9 10 11 12') == '40'\nassert solution('13 14 15 16') == '200'\nassert solution('17 18 19 20') == '200'",
        "num_ids_2": 33,
        "num_ids_4": 75
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"3\", \"Testcase 1 failed\"\nassert solution(\"1 1 1 1\") == \"4\", \"Testcase 2 failed\"\nassert solution(\"1 1 1 1\") == \"4\", \"Testcase 3 failed\"\nassert solution(\"1 1 1 1\") == \"4\", \"Testcase 4 failed\"\nassert solution(\"1 1 1 1\") == \"4\", \"Testcase 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"5 6 7 8\") == \"3\"\nassert solution(\"9 10 11 12\") == \"12\"\nassert solution(\"13 14 15 16\") == \"12\"\nassert solution(\"17 18 19 20\") == \"20\"\nassert solution(\"21 22 23 24\") == \"12\"",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"\nassert solution(\"2 2 2 2\") == \"6\\n\"\nassert solution(\"3 2 3 3\") == \"8\\n\"\nassert solution(\"1 1 2 1\") == \"4\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"3\", \"Test case 1\"\nassert solution(\"5 6 7 8\") == \"8\", \"Test case 2\"\nassert solution(\"9 10 11 12\") == \"14\", \"Test case 3\"\nassert solution(\"13 14 15 16\") == \"20\", \"Test case 4\"\nassert solution(\"17 18 19 20\") == \"28\", \"Test case 5\"",
        "num_ids_2": 44,
        "num_ids_4": 97
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"\nassert solution(\"5 6 7 8\") == \"16\\n\"\nassert solution(\"9 10 11 12\") == \"128\\n\"\nassert solution(\"13 14 15 16\") == \"160\\n\"\nassert solution(\"17 18 19 20\") == \"240\\n\"\nassert solution(\"21 22 23 24\") == \"240\\n\"\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 84
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"3\", \"Test Case 1 failed\"\nassert solution(\"5 6 7 8\") == \"12\", \"Test Case 2 failed\"\nassert solution(\"9 10 11 12\") == \"27\", \"Test Case 3 failed\"\nassert solution(\"13 14 15 16\") == \"26\", \"Test Case 4 failed\"\nassert solution(\"17 18 19 20\") == \"41\", \"Test Case 5 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 102
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\", \"Test 1 Failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"103 27\") == 4\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('103 27') == 4, \"The minimum number of operations needed to transform 103 into 27 is 4.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"103 27\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"103 27\") == \"4\", \"Your code is incorrect\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(103, 27) == 4, \"Test failed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"Invalid output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('103 27') == '4\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output: 4\\n\", \"Test case failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"103 27\") == 4, \"Solution is not correct\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    }
]