[
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"Your solution is incorrect. Please check the provided code and the test cases.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n') == '5\\n1 8 6\\n'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6\") == \"3\\n1 8 6\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6\\n5 6 7\") == \"5\\n5 6 7\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6\\n5 6 7\\n1 6 7\") == \"4\\n1 8 7\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6\\n5 6 7\\n1 6 7\\n6 7 8\") == \"5\\n5 6 7\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6\\n5 6 7\\n1 6 7\\n6 7 8\\n1 5 6 7\") == \"3\\n1 8 7\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n1 5 6\\n5 6 7\\n1 6 7\\n6 7 8\\n1 5 6 7\\n5 6 7\\n6 7 8\") == \"5\\n5 6 7\"",
        "num_ids_2": 111,
        "num_ids_4": 250
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5\\n1 8 6'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\\n1 8 6\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"9\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8') == '5\\n1 8 6'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5\\n1 8 6'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n10\n10 2 8 1 2 4 1 20 4 5\n\"\"\"\n) == \"20 8\"\n\nassert solution(\n\"\"\"\n8\n2 1 3 5 7 9\n\"\"\"\n) == \"2 1\"\n\nassert solution(\n\"\"\"\n5\n10 20 30 40 50\n\"\"\"\n) == \"50 40\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\n\nfrom typing import List",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '20 8', \"The given solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n10 2 8 1 2 4 1 20 4 5\") == \"20 8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '20 8', \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('5\\n10 2 8 1 2 4 1 20 4 5') == '1 10 4 20 5 2 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5\\n20 8 1 10 4 20 5 2 8') == '20 8'\nassert solution('5\\n10 2 8 1 2 4 1 20 4 5\\n1 10 4 20 5 2 8') == '1 10 4 20 5 2 8'\nassert solution('10\\n10 2 8 1 2 4 1 20 4 5\\n1 10 4 20 5 2 8\\n20 8 1 10 4 20 5 2 8') == '20 8'",
        "num_ids_2": 84,
        "num_ids_4": 207
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([10, 2, 8, 1, 2, 4, 1, 20, 4, 5]) == \"20 8\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"24\"\nassert solution() == \"56\"\nassert solution() == \"208\"",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\nprint(\"All tests passed.\")",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24\\n'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n') == '56\\n'",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 24, \"Your solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 3) == 24\nassert solution(5, 5, 4) == 56",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nLRRR\\n'\n\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nLRLRRR\\n'\n\nassert solution('3\\n2 2 2\\n') == '1\\nR\\n'\n\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRR\\n'",
        "num_ids_2": 65,
        "num_ids_4": 116
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\"",
        "num_ids_2": 61,
        "num_ids_4": 108
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nLRRR\\n\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nLRLRRR\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nR\\n\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\\nLLRR\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 116
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\nLRRR\"\nassert solution(input()) == \"6\\nLRLRRR\"\nassert solution(input()) == \"1\\nR\"\nassert solution(input()) == \"4\\nLLRR\"",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 5 4 2') == '6\\nLRLRRR'\nassert solution('3\\n2 2 2') == '1\\nR'\nassert solution('4\\n1 2 4 3') == '4\\nLLRR'",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\") == \"-1\\n\"\nassert solution(\"2\\n2 8\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution() == '3'\nassert solution() == '3'\nassert solution() == '-1'\nassert solution() == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 4 4 7 4 1\\n') == 3\nassert solution('5\\n2 2 5 2 5\\n') == 3\nassert solution('4\\n1 3 3 7\\n') == -1\nassert solution('2\\n2 8\\n') == 3",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"4\"\nassert solution(5) == \"3\"\nassert solution(6) == \"3\"\nassert solution(7) == \"4\"\nassert solution(8) == \"3\"\nassert solution(9) == \"-1\"\nassert solution(10) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 4 4 7 4 1\\n\") == \"3\\n\"\nassert solution(\"5\\n2 2 5 2 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 3 3 7\\n\") == \"-1\\n\"\nassert solution(\"2\\n2 8\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == -1, \"Function signature does not match\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"[2, 8]\") == \"3\"\nassert solution(\"[1, 4, 7, 7]\") == \"3\"\nassert solution(\"[1, 2, 3, 4, 5]\") == \"3\"\nassert solution(\"[2, 1]\") == \"-1\"\nassert solution(\"[3, 1, 4, 5, 6, 7]\") == \"3\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"5 2 2 5 2 5\") == \"3\"\nassert solution(\"4 1 3 3 7\") == \"-1\"\nassert solution(\"2 2 8\") == \"3\"\n\nfrom typing import List\n",
        "num_ids_2": 40,
        "num_ids_4": 72
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n') == 'NO'\nassert solution('3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n') == 'YES'\nassert solution('5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n') == 'YES'\nassert solution('0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n') == 'YES'\n\nprint('All test cases pass')",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"\n",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\\n\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\\n\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\\n\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\\n\") == \"YES\"",
        "num_ids_2": 72,
        "num_ids_4": 186
    },
    {
        "number": 4005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"NO\"\nassert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"",
        "num_ids_2": 68,
        "num_ids_4": 178
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1098) == 20, \"The number of different numbers that are reachable from 1098 should be 20.\"\nassert solution(10) == 19, \"The number of different numbers that are reachable from 10 should be 19.\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_id}: Expected output: {expected_output}, Actual output: {solution(input())}\"\ntest_case_id += 1",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1098') == '20', \"Expected output '20', got {}\".format(solution('1098'))\nassert solution('10') == '19', \"Expected output '19', got {}\".format(solution('10'))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1098) == 20, \"Incorrect output\"\nassert solution(10) == 19, \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1098) == 20\nassert solution(10) == 19",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1098\") == \"20\", \"The correct output for example 1098 is 20.\"\nassert solution(\"10\") == \"19\", \"The correct output for example 10 is 19.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1098) == \"20\"\nassert solution(10) == \"19\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1098) == '20'\nassert solution(10) == '19'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"5 3 1 2 4\\n\", \"1 incorrect\"\nassert solution(7) == \"7 3 2 1 4 5 6\\n\", \"2 incorrect\"\nassert solution(7) == \"7 4 2 3 6 5 1\\n\", \"3 incorrect\"\nassert solution(5) == \"2 1 4 5 3\\n\", \"4 incorrect\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\"\n\nfrom typing import List",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4\\n'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6\\n'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1\\n'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3\\n'",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5 3 1 2 4\\n7 3 2 1 4 5 6\\n7 4 2 3 6 5 1\\n2 1 4 5 3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 0 2 4\\n\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\\n\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\\n\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\\n\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\\n\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\\n\"\nassert solution(\"7\\n7 4 0 3 0 5 1\") == \"7 4 2 3 6 5 1\\n\"\nassert solution(\"5\\n2 1 0 0 0\") == \"2 1 4 5 3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == open(\"output.txt\", \"r\").read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4\\n'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6\\n'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 4 2 3 6 5 1\\n'\nassert solution('5\\n2 1 0 0 0') == '2 1 4 5 3\\n'\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2 2 3\\n') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2\\n3 2 1 2 3\\n') == 'YES\\n2 1 1 2 1\\n'\nassert solution('5 2\\n2 1 1 2 1\\n') == 'NO'",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 99
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"\nassert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 99
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\") == \"NO\"",
        "num_ids_2": 44,
        "num_ids_4": 56
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\\n\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\\n\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 72,
        "num_ids_4": 97
    },
    {
        "number": 4008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 2 3\\n\") == \"YES\\n1 1 2 2\"\nassert solution(\"5 2\\n3 2 1 2 3\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n2 1 1 2 1\\n\") == \"NO\"",
        "num_ids_2": 68,
        "num_ids_4": 93
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1', \"1 is expected\"\nassert solution() == '3', \"3 is expected\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 10 2\") == \"0\"\nassert solution(\"10 10 1\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 5 2\\n11010100101\") == \"1\"\nassert solution(\"11 5 1\\n11010100101\") == \"3\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 5 2\") == \"1\\n\"\nassert solution(\"11 5 1\") == \"3\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n', \"Output should be 1.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 5 2\\n11010100101\\n\") == \"1\\n\"\nassert solution(\"11 5 1\\n11010100101\\n\") == \"3\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 5 2\") == \"1\\n\"\nassert solution(\"11 5 1\") == \"3\\n\"\nassert solution(\"\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 44
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11 5 2\\n11010100101\\n') == '1'\nassert solution('11 5 1\\n11010100101\\n') == '3'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed: got '{solution(input())}', expected '{expected}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5') == 'YES\\nYES\\nNO\\nYES\\nNO'\n\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nYES\\nNO\\nYES\\nNO\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\nassert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"NO\"\nassert solution(\"5\\n3\\n1 2 1\\n5\\n1 2 2 3 2\\n3\\n1 1 2\\n4\\n1 2 2 1\\n10\\n1 1 2 2 3 3 4 4 5 5\") == \"YES\\nNO\"",
        "num_ids_2": 174,
        "num_ids_4": 258
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 'YES'\nassert solution(3) == 'YES'\nassert solution(1) == 'NO'\nassert solution(10) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\", \"Test case #1 failed\"\nassert solution(stdin) == \"YES\", \"Test case #2 failed\"\nassert solution(stdin) == \"NO\", \"Test case #3 failed\"\nassert solution(stdin) == \"YES\", \"Test case #4 failed\"\nassert solution(stdin) == \"NO\", \"Test case #5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 2, 3, 2, 1]) == \"YES\"\nassert solution([1, 2, 1, 3]) == \"YES\"\nassert solution([1, 2, 2, 3, 2]) == \"NO\"\nassert solution([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]) == \"YES\"\nassert solution([1, 1, 2, 1, 3, 2, 1, 2, 3, 1]) == \"YES\"\nassert solution([1, 1, 2, 1, 3, 2, 1, 2, 3, 1, 2, 1, 2, 3]) == \"NO\"\nassert solution([1, 1, 2, 1, 2, 1, 2, 2, 1]) == \"NO\"\nassert solution([1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1]) == \"YES\"",
        "num_ids_2": 44,
        "num_ids_4": 103
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '1557'\nassert solution(5) == '99999'\nassert solution(2) == '33'",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1337\") == \"1553\"\nassert solution(\"11111\") == \"99999\"\nassert solution(\"33\") == \"33\"",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == 1557\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == 99999\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == 33",
        "num_ids_2": 76,
        "num_ids_4": 109
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\\n\"\nassert solution(\"11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\\n\"\nassert solution(\"33\\n1 1 1 1 1 1 1 1 1 1\") == \"33\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\", \"4\") == \"1557\"\nassert solution(\"Input\", \"5\") == \"99999\"\nassert solution(\"Input\", \"2\") == \"33\"",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, \"1337\", [1, 2, 5, 4, 6, 6, 3, 1, 9]) == 1557\nassert solution(5, \"11111\", [9, 8, 7, 6, 5, 4, 3, 2, 1]) == 99999\nassert solution(2, \"33\", [1, 1, 1, 1, 1, 1, 1, 1, 1]) == 33",
        "num_ids_2": 92,
        "num_ids_4": 133
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1337\\n1 2 5 4 6 6 3 1 9\") == \"1557\\n\"\nassert solution(\"5\\n11111\\n9 8 7 6 5 4 3 2 1\") == \"99999\\n\"\nassert solution(\"2\\n33\\n1 1 1 1 1 1 1 1 1\") == \"33\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 118
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1337\") == \"1553\", \"1337!= 1553\"\nassert solution(\"11111\") == \"99999\", \"11111!= 99999\"\nassert solution(\"33\") == \"33\", \"33!= 33\"",
        "num_ids_2": 60,
        "num_ids_4": 80
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, \"1337\", [1, 2, 5, 4, 6, 6, 3, 1, 9]) == \"1557\"\nassert solution(5, \"11111\", [9, 8, 7, 6, 5, 4, 3, 2, 1]) == \"99999\"\nassert solution(2, \"33\", [1, 1, 1, 1, 1, 1, 1, 1, 1]) == \"33\"",
        "num_ids_2": 94,
        "num_ids_4": 136
    },
    {
        "number": 4011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1337\") == \"1553\", \"Test 1 failed\"\nassert solution(\"11111\") == \"99999\", \"Test 2 failed\"\nassert solution(\"33\") == \"33\", \"Test 3 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 64
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"\nassert solution(\"5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n1 2 3\\n4 6 8\") == \"4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\"",
        "num_ids_2": 331,
        "num_ids_4": 331
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('input.txt', 'r')) == '1\\n1 1 3'\nassert solution(open('input.txt', 'r')) == '1\\n102'\nassert solution(open('input.txt', 'r')) == '1\\n114 228 456'\nassert solution(open('input.txt', 'r')) == '1\\n4\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48'\n",
        "num_ids_2": 41,
        "num_ids_4": 93
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is '{expected_output}', but the actual output is '{solution(input())}'\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\"",
        "num_ids_2": 179,
        "num_ids_4": 179
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n1 1 3\\n102\\n114 228 456\\n4\\n4 8 16\\n6\\n18 18 18\\n1\\n100 100 100\\n7\\n1 22 22\\n2\\n1 19 38\\n8\\n6 24 48\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\") == \"1\\n1 1 3\\n102\"\n\nassert solution(\"2\\n1 2\\n1 1\\n1 2\") == \"1\\n1 1 1\"\n\nassert solution(\"3\\n2 3\\n3 2\\n3 3\") == \"1\\n1 1 1\"\n\nassert solution(\"4\\n3 4\\n4 3\\n4 4\") == \"1\\n1 1 1\"\n\nassert solution(\"5\\n2 4\\n4 2\\n4 4\") == \"2\\n2 2 2\"\n\nassert solution(\"6\\n3 6\\n6 3\\n6 6\") == \"1\\n1 1 1\"\n\nassert solution(\"7\\n2 6\\n6 2\\n6 6\") == \"2\\n2 2 2\"\n\nassert solution(\"8\\n3 8\\n8 3\\n8 8\") == \"1\\n1 1 1\"\n\nassert solution(\"9\\n4 12\\n12 4\\n12 12\") == \"2\\n2 2 2\"\n\nassert solution(\"10\\n5 15\\n15 5\\n15 15\") == \"2\\n2 2 2\"\n\nassert solution(\"11\\n6 18\\n18 6\\n18 18\") == \"2\\n2 2 2\"\n\nassert solution(\"12\\n7 21\\n21 7\\n21 21\") == \"2\\n2 2 2\"\n\nassert solution(\"13\\n8 24\\n24 8\\n24 24\") == \"2\\n2 2 2\"\n\nassert solution(\"14\\n9 27\\n27 9\\n27 27\") == \"2\\n2 2 2\"\n\nassert solution(\"15\\n10 30\\n30 10\\n30 30\") == \"2\\n2 2 2\"\n\nassert solution(\"16\\n11 35\\n35 11\\n35 35\") == \"2\\n2 2 2\"\n\nassert solution(\"17\\n12 39\\n39 12\\n39 39\") == \"2\\n2 2 2\"\n\nassert solution(\"18\\n13 42\\n42 13\\n42 42\") == \"2\\n2 2 2\"\n\nassert solution(\"19\\n14 45\\n45 14\\n45 45\") == \"2\\n2 2 2\"\n\nassert solution(\"20\\n15 48\\n48 15\\n48 48\") == \"2\\n2 2 2\"",
        "num_ids_2": 133,
        "num_ids_4": 197
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"Test failed for example 1\"\n\nassert solution(stdin) == \"0\", \"Test failed for example 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output:\\n2\\n\\nInput:\\n2\\n1 100000\\n\\nOutput:\\n0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n4\\n1 3 3 7\\n\\nOutput\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\\nNote\\n\\nIn the first example you can remove 7 then instability of the remaining array will be 3 - 1 = 2.\\n\\nIn the second example you can remove either 1 or 100000 then instability of the remaining array will be 100000 - 100000 = 0 and 1 - 1 = 0 correspondingly.') == 'Output\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\\nNote\\n\\nIn the first example you can remove 7 then instability of the remaining array will be 3 - 1 = 2.\\n\\nIn the second example you can remove either 1 or 100000 then instability of the remaining array will be 100000 - 100000 = 0 and 1 - 1 = 0 correspondingly.'",
        "num_ids_2": 275,
        "num_ids_4": 275
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 3 3 7\") == \"2\\n\"\nassert solution(\"2\\n1 100000\") == \"0\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 3 7\\n2\\n1 100000\\n0\") == \"2\"\nassert solution(\"2\\n1 100000\\n0\") == \"0\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n1 3 3 7\\n\\nOutput\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\") == \"Output\\n2\\n\\nInput\\n2\\n1 100000\\n\\nOutput\\n0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 3 7\\n2\\n1 100000\\n') == '2\\n'\nassert solution('2\\n1 100000\\n') == '0\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 3 3 7\\n\") == \"2\\n\"\nassert solution(\"2\\n1 100000\\n\") == \"0\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n1 3 1\n1 5 1\n''') == '''\n1 2 3 0 3 \n'''\n\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == '''\n-1\n'''\n\nassert solution('''\n10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '''\n2 2 2 1 1 0 4 3 4 4 \n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 2\n1 3 1\n1 5 1\n\"\"\") == \"1 2 3 0 3\"\n\nassert solution(\"\"\"3 2\n1 3 1\n1 2 1\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"10 3\n4 7 2\n1 10 3\n8 9 1\n\"\"\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed for input '{input()}' and output '{output}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3 \\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1 \\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4 \\n\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\\n\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\\n\") == \"-1\\n\"\nassert solution(\"1 2 3 0 3\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"1\\n\") == \"-1\\n\"\nassert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"\nassert solution(\"1 2 3 0 3\\n\") == \"1 2 3 0 3\\n\"\nassert solution(\"1\\n\") == \"-1\\n\"\nassert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\\n\") == \"2 2 2 1 1 0 4 3 4 4\\n\"\n",
        "num_ids_2": 134,
        "num_ids_4": 270
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\\n3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\") == \"1 2 3 0 3\\n\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\\n10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\\n2 2 2 1 1 0 4 3 4 4\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 189,
        "num_ids_4": 265
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '''\n1 2 3 0 3 \n\n-1\n\n2 2 2 1 1 0 4 3 4 4 \n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 3 1\\n1 5 1\\n\") == \"1 2 3 0 3\"\nassert solution(\"3 2\\n1 3 1\\n1 2 1\\n\") == \"-1\"\nassert solution(\"10 3\\n4 7 2\\n1 10 3\\n8 9 1\\n\") == \"2 2 2 1 1 0 4 3 4 4\"",
        "num_ids_2": 64,
        "num_ids_4": 119
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"120 51840\") == \"7\"\nassert solution(r\"42 42\") == \"0\"\nassert solution(r\"48 72\") == \"-1\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"Input\\n120 51840\\nOutput\\n7\") == \"7\"\nassert solution(r\"Input\\n42 42\\nOutput\\n0\") == \"0\"\nassert solution(r\"Input\\n48 72\\nOutput\\n-1\") == \"-1\"",
        "num_ids_2": 54,
        "num_ids_4": 80
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\", \"Test 1 failed\"\nassert solution(\"42 42\") == \"0\", \"Test 2 failed\"\nassert solution(\"48 72\") == \"-1\", \"Test 3 failed\"\n",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '7', \"Expected output: 7, got: {}\".format(solution(stdin))\nassert solution(stdin) == '0', \"Expected output: 0, got: {}\".format(solution(stdin))\nassert solution(stdin) == '-1', \"Expected output: -1, got: {}\".format(solution(stdin))",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(120, 51840) == 7, \"Test 1 failed\"\nassert solution(42, 42) == 0, \"Test 2 failed\"\nassert solution(48, 72) == -1, \"Test 3 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Incorrect output.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"ababababa\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"ababababa\"\nassert solution(\"aba\") == \"ababababa\"\nassert solution(\"cat\") == \"catcat\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 4, \"aba\") == \"ababababa\"\nassert solution(3, 2, \"cat\") == \"catcat\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(['aba'], 1) == 'ababababa'\nassert solution(['cat'], 2) == 'catcat'\nassert solution(['abc', 'def'], 2) == 'abcdef'\nassert solution(['', 'abc', 'def', 'ghi'], 1) == 'abcdefghi'",
        "num_ids_2": 29,
        "num_ids_4": 67
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == 'ababababa'\n\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"ababababa\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aba') == 'ababababa'\nassert solution('cat') == 'catcat'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\\n1 4 \"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n\") == \"2\\n1 4 \"\nassert solution(\"5\\n2 1 2 4 3\\n\") == \"0\"",
        "num_ids_2": 105,
        "num_ids_4": 128
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\\n0\") == \"0\"",
        "num_ids_2": 101,
        "num_ids_4": 125
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\\n1 4\\n\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"2\\n1 4\\n\"\nassert solution(\"5\\n2 1 2 4 3\\n0\") == \"0\\n\"\n",
        "num_ids_2": 110,
        "num_ids_4": 136
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\") == \"3\\n4 1 5\\n2\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\") == \"2\\n1 4 \"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 95,
        "num_ids_4": 116
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 45
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"",
        "num_ids_2": 52,
        "num_ids_4": 81
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"3\\n4 1 5\\n2\"\nassert solution(\"4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\\n0\") == \"0\"\nassert solution(\"5\\n2 2 1 2 4 3\\n0\") == \"0\"\nassert solution(\"5\\n2 1 2 2 4 3\\n0\") == \"0\"\nassert solution(\"5\\n2 1 2 1 3 4\\n0\") == \"0\"",
        "num_ids_2": 101,
        "num_ids_4": 151
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\nassert solution(\"4\\n3 3 4 2\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 92
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 73
    },
    {
        "number": 4017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2\\n4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0') == '3\\n4 1 5\\n2\\n1 4\\n0'\nassert solution('4\\n8 3 5 2\\n5\\n2 1 2 4 3\\n0') == '2\\n1 4\\n0'\nassert solution('5\\n2 1 2 4 3\\n0') == '0'\nassert solution('5\\n2 1 2 4 3\\n2') == '1 4'",
        "num_ids_2": 112,
        "num_ids_4": 162
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4', \"The first example is incorrect\"\nassert solution(input()) == '4', \"The second example is incorrect\"\nassert solution(input()) == '15', \"The third example is incorrect\"\nassert solution(input()) == '-1', \"The fourth example is incorrect\"\nassert solution(input()) == '233', \"The fifth example is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\nanaaa\") == \"15\"\nassert solution(\"5 7\\nanaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 31,
        "num_ids_4": 69
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nasdf\\n\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\\n\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\\n\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\\n\") == \"233\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\\n\"\nassert solution(\"5 6\\naaaaa\") == \"15\\n\"\nassert solution(\"5 7\\naaaaa\") == \"-1\\n\"\nassert solution(\"10 100\\najihiushda\") == \"233\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n2 1\\n2 3\\n3 4\\n'\nassert solution('4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n') == 'YES\\n1 2\\n1 3\\n4 1\\n'\nassert solution('4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n') == 'NO\\n'\n\nfrom typing import List",
        "num_ids_2": 116,
        "num_ids_4": 154
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"Input\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"Input\") == \"NO\"",
        "num_ids_2": 50,
        "num_ids_4": 60
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution() == \"YES\\n1 2\\n1 3\\n4 1\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n2 1\\n2 3\\n3 4\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\") == \"YES\\n1 2\\n1 3\\n4 1\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\") == \"NO\"",
        "num_ids_2": 108,
        "num_ids_4": 142
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 154
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"4 5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n2 1\\n2 3\\n3 4\\n\"\nassert solution(\"4 5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n\") == \"YES\\n1 2\\n1 3\\n4 1\\n\"\nassert solution(\"4 4 3\\n1 2\\n1 4\\n2 3\\n3 4\\n\") == \"NO\"",
        "num_ids_2": 71,
        "num_ids_4": 165
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10:30'\nassert solution() == '11:11'\nassert solution() == '02:02'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10:00\\n11:00') == '10:30\\n'\nassert solution('11:10\\n11:12') == '11:11\\n'\nassert solution('01:02\\n03:02') == '02:02\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\\n\") == \"02:02\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='10:00\\n11:00\\n') == '10:30\\n'\nassert solution(stdin='11:10\\n11:12\\n') == '11:11\\n'\nassert solution(stdin='01:02\\n03:02\\n') == '02:02\\n'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\"\nassert solution(\"01:02\\n03:02\") == \"02:02\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\\n\"\nassert solution(\"11:10\\n11:12\") == \"11:11\\n\"\nassert solution(\"01:02\\n03:02\") == \"02:02\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1, \"Input 2, Output 1\"\nassert solution(4) == 2, \"Input 4, Output 2\"\nassert solution(27) == 5, \"Input 27, Output 5\"\nassert solution(42) == 6, \"Input 42, Output 6\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"42\") == \"6\"\nassert solution(\"27\") == \"5\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"1\"\nassert solution(4) == \"2\"\nassert solution(27) == \"5\"\nassert solution(42) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1\nassert solution(4) == 2\nassert solution(27) == 5\nassert solution(42) == 6",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_result, f\"The solution {solution} does not match the expected result {expected_result}.\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 127
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 121
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"",
        "num_ids_2": 70,
        "num_ids_4": 121
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\\n\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\\n\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3') == '1\\n\\n'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4') == '2\\n\\n'\nassert solution('3\\n4 5\\n1 2\\n9 20') == '0\\n\\n'\nassert solution('2\\n3 10\\n1 5') == '7\\n\\n'",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n1 3\\n2 6\\n0 4\\n3 3\\n\\nOutput\\n1\\n\\nInput\\n5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\\nOutput\\n2\\n\\nInput\\n3\\n4 5\\n1 2\\n9 20\\n\\nOutput\\n0\\n\\nInput\\n2\\n3 10\\n1 5\\n\\nOutput\\n7\") == \"1\\n\\nOutput\\n2\\n\\nInput\\n3\\n4 5\\n1 2\\n9 20\\n\\nOutput\\n0\\n\\nInput\\n2\\n3 10\\n1 5\\n\\nOutput\\n7\"",
        "num_ids_2": 209,
        "num_ids_4": 209
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3\\n2 6\\n0 4\\n3 3\\n') == '1\\n'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2\\n'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0\\n'\nassert solution('2\\n3 10\\n1 5\\n') == '7\\n'\n",
        "num_ids_2": 74,
        "num_ids_4": 129
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\\n\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\\n\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\n",
        "num_ids_2": 70,
        "num_ids_4": 121
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\", \"Please write the solution to test the correctness of solution.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'NO\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\") == \"NO\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"",
        "num_ids_2": 78,
        "num_ids_4": 97
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n5\\n2 1 1 2 5\\nOutput\\nYES\\n\\nInput\\n3\\n4 5 3\\nOutput\\nNO\\n\\nInput\\n2\\n10 10\\nOutput\\nYES\") == \"YES\\nNO\\nYES\\n\"\nassert solution(\"Input\\n2\\n10 10\\nOutput\\nYES\") == \"YES\\nYES\\nYES\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES\\n'\nassert solution('3\\n4 5 3') == 'NO\\n'\nassert solution('2\\n10 10') == 'YES\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"NO\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233\n",
        "num_ids_2": 30,
        "num_ids_4": 67
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\naaaaa\") == 15\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nasdf\") == 4\nassert solution(\"5 6\\nanaaa\") == 15\nassert solution(\"5 7\\nanaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == 233",
        "num_ids_2": 29,
        "num_ids_4": 65
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\nasdf\\n') == 4\nassert solution('5 6\\naaaaa\\n') == 15\nassert solution('5 7\\naaaaa\\n') == -1\nassert solution('10 100\\najihiushda\\n') == 233",
        "num_ids_2": 34,
        "num_ids_4": 75
    },
    {
        "number": 4024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\\n\"\nassert solution(\"3 2 2\\n\") == \"7\\n\"\nassert solution(\"1 100 1\\n\") == \"3\\n\"\nassert solution(\"30 20 10\\n\") == \"39\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\\n3 2 2\\n1 100 1\\n30 20 10\") == \"4\"\nassert solution(\"3 2 2\\n1 100 1\\n30 20 10\") == \"7\"\nassert solution(\"1 100 1\\n30 20 10\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 73,
        "num_ids_4": 117
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\\n\") == \"4\\n\"\nassert solution(\"3 2 2\\n\") == \"7\\n\"\nassert solution(\"1 100 1\\n\") == \"3\\n\"\nassert solution(\"30 20 10\\n\") == \"39\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of daily rations of fish food, rabbit stew and chicken stakes: \")) == \"4\\n\"\nassert solution(input(\"Enter the number of daily rations of fish food, rabbit stew and chicken stakes: \")) == \"7\\n\"\nassert solution(input(\"Enter the number of daily rations of fish food, rabbit stew and chicken stakes: \")) == \"3\\n\"\nassert solution(input(\"Enter the number of daily rations of fish food, rabbit stew and chicken stakes: \")) == \"39\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 133
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test failed. Input: {}, Output: {}, Solution: {}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"4\\n\"\nassert solution(\"3 2 2\") == \"7\\n\"\nassert solution(\"1 100 1\") == \"3\\n\"\nassert solution(\"30 20 10\") == \"39\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n'\n'3 4\\n'\n'1 2\\n'\n'5 6\\n'\n'5 7\\n'\n'7 4\\n'\n'8 9\\n'\n'9 8\\n'\n'2 5\\n'\n'1 1\\n'\n'1 1\\n'\n'2 2\\n'\n'2 2\\n'\n'1 100\\n'\n'10 10\\n'\n'10 10\\n'\n'1 2\\n'\n'4 5\\n'\n'8 4\\n'\n'2 2\\n'\n'1 1\\n'\n'1 1\\n'\n'1 2\\n'\n'3 4\\n'\n'1 2\\n'\n'1 1\\n'\n'1 1\\n') == 'YES\\nNO\\nYES\\nNO\\nYES\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nprint(\"YES\")",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(stdin) == \"NO\\nYES\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nNO\\nYES\"\nassert solution(stdin) == \"NO\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nYES\"\nassert solution(stdin) == \"NO\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n\") == \"NO\"\n",
        "num_ids_2": 296,
        "num_ids_4": 296
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\nassert solution(\"6\\n\") == \"1\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"15\") == \"1\"\n\nsolution(\"10\") # Output: 0",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"6\") == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"0\"\nassert solution(3) == \"0\"\nassert solution(4) == \"0\"\nassert solution(5) == \"1\"\nassert solution(6) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '0', \"The answer should be '0', but got '{0}'\".format(solution('1\\n2\\n3\\n4\\n5\\n6\\n'))\n\nassert solution('1\\n3\\n4\\n5\\n6\\n') == '0', \"The answer should be '0', but got '{0}'\".format(solution('1\\n3\\n4\\n5\\n6\\n'))\n\nassert solution('1\\n4\\n5\\n6\\n') == '0', \"The answer should be '0', but got '{0}'\".format(solution('1\\n4\\n5\\n6\\n'))\n\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n') == '1', \"The answer should be '1', but got '{0}'\".format(solution('1\\n2\\n3\\n4\\n5\\n6\\n'))\n\nassert solution('1\\n3\\n4\\n5\\n6\\n') == '1', \"The answer should be '1', but got '{0}'\".format(solution('1\\n3\\n4\\n5\\n6\\n'))\n\nassert solution('1\\n4\\n5\\n6\\n') == '1', \"The answer should be '1', but got '{0}'\".format(solution('1\\n4\\n5\\n6\\n'))",
        "num_ids_2": 122,
        "num_ids_4": 238
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 1\nassert solution(6) == 1\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(1) == 0\nassert solution(2) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 0, \"Expected 0, got {} instead\".format(solution(3))\nassert solution(5) == 1, \"Expected 1, got {} instead\".format(solution(5))\nassert solution(6) == 1, \"Expected 1, got {} instead\".format(solution(6))\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0\nassert solution(5) == 1\nassert solution(6) == 1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''5\n()))()''') == '5'\nassert solution('''3\n(()\n''') == '4'\nassert solution('''2\n(((\n''') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n())()\\n') == 5\nassert solution('3\\n(())\\n') == 4\nassert solution('2\\n(((\\n') == 0",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n())()\\n') == '5\\n'\nassert solution('3\\n(()\\n') == '4\\n'\nassert solution('2\\n(((\\n') == '0\\n'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5\\n())()\\n\") == 5\nassert solution(stdin=\"3\\n(()\\n\") == 4\nassert solution(stdin=\"2\\n(((\\n\") == 0",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n()))()\\n\") == \"5\\n\"\nassert solution(\"3\\n(()\\n\") == \"4\\n\"\nassert solution(\"2\\n(((\\n\") == \"0\\n\"\n\nfor n in range(1, 101):\n    for s in \"())(\" * n:\n        solution(str(n) + \"\\n\" + s)",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n()()))()\\n3\\n(()\\n2\\n(((\\n0\\n\") == 5\nassert solution(\"5\\n",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n()))()\\n\") == \"5\\n\"\nassert solution(\"3\\n(()\\n\") == \"4\\n\"\nassert solution(\"2\\n(((\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"5\"\nassert solution == \"4\"\nassert solution == \"0\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"5\"\nassert solution(3) == \"4\"\nassert solution(2) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5071) == 4, \"Test failed\"\nassert solution(705) == 1, \"Test failed\"\nassert solution(1241367) == -1, \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 53
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5071) == '4'\nassert solution(705) == '1'\nassert solution(1241367) == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5071) == 4\nassert solution(705) == 1\nassert solution(1241367) == -1",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == 4\nassert solution(\"705\") == 1\nassert solution(\"1241367\") == -1\nassert solution(\"10\") == -1",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5071) == \"4\"\nassert solution(705) == \"1\"\nassert solution(1241367) == \"-1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\\n\"\nassert solution(\"aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\\n\"\nassert solution(\"abcdedc\") == \"3\\n1 1 1 1 1 2 3\\n\"\nassert solution(\"abcde\") == \"1\\n1 1 1 1 1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 134
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\nabacbecfd\") == 2\nassert solution(\"8\\naaabbcbb\") == 2\nassert solution(\"7\\nabcdedc\") == 3\nassert solution(\"5\\nabcde\") == 1",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcdedc\") == \"1 1 1 1 1 2 3\"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 1\"\nassert solution(\"abacbecfd\") == \"2\"\nassert solution(\"abcde\") == \"1\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == ''\nassert solution('abcde') == 'def'\nassert solution('aaa') == 'aaa'\nassert solution('aabbccddeeff') == 'aaabbbccddeeff'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'aaaabbbbbccccddddddddeeeefffffgggggggggiiiiiiiiiii'\nassert solution('12345678901234567890123456789012345678901234567890') == '12345678901234567890123456789012345678901234567890'",
        "num_ids_2": 19,
        "num_ids_4": 47
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaabbcbb') == ['1 2 1 2 1 2 1 1']\nassert solution('abcdedc') == ['1 1 1 1 1 2 3']\nassert solution('def') == ['1 1 1 1 1 1']\nassert solution('abcde') == ['1 1 1 1 1 1']",
        "num_ids_2": 50,
        "num_ids_4": 91
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n1 1 2 1 2 1 2 1 2 \"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcde\") == \"11111\"\nassert solution(\"aabbcdf\") == \"22222\"\nassert solution(\"abbccddeefg\") == \"11111\"\nassert solution(\"abc\") == \"11111\"\nassert solution(\"abacbecfd\") == \"2\"\nassert solution(\"aaabbcbb\") == \"2\"\nassert solution(\"abcdedc\") == \"3\"\nassert solution(\"abcde\") == \"11111\"\nassert solution(\"abbccddeefg\") == \"11111\"",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9abcbecfd\") == \"2\\n1 1 2 1 2 1 2 1 2\\n\"\nassert solution(\"8aaabbcbb\") == \"2\\n1 2 1 2 1 2 1 1\\n\"\nassert solution(\"7abcdedc\") == \"3\\n1 1 1 1 1 2 3\\n\"\nassert solution(\"5abcde\") == \"1\\n1 1 1 1 1 1 def solution(stdin: str) -> str: pass\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcde\") == \"111223\"\nassert solution(\"aaabbcbb\") == \"112211\"\nassert solution(\"abcdedc\") == \"1111123\"\nassert solution(\"abacbecfd\") == \"2122211\"",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"NO\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\"\nassert solution(\"a\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\"\nassert solution(\"a\\naba\\nabacaba\\nba\\naba\\n\") == \"YES\\na\\nba\\naba\\naba\\nabacaba\"",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"NO\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"\nassert solution(\"qwerty\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('YES') == 'YES\\n'\nassert solution('NO') == 'NO\\n'\nassert solution('YES\\n' + 'a\\naba\\nabacaba\\nba\\naba\\nYES\\n') == 'YES\\n' + 'a\\nba\\naba\\naba\\nabacaba\\nYES\\n'\nassert solution('NO\\n' + 'a\\nabab\\nba\\naba\\nabab\\n') == 'NO\\n' + 'a\\nba\\naba\\naba\\nabab\\n'\nassert solution('YES\\n' + 'qwerty\\nqwerty\\nqwerty\\nYES\\n') == 'YES\\n' + 'qwerty\\nqwerty\\nqwerty\\nYES\\n'\nassert solution('NO\\n' + 'qwerty\\nqwerty\\nqwerty\\n') == 'NO\\n' + 'qwerty\\nqwerty\\nqwerty\\n'",
        "num_ids_2": 24,
        "num_ids_4": 132
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"NO\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abab\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"\n\nassert solution(\"abab\") == \"NO\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"ba\") == \"YES\"\nassert solution(\"aba\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\na\\naba\\nabacaba\\nba\\naba\\nabacaba\\n') == 'YES\\na\\nba\\naba\\naba\\nabacaba\\n'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Got: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\\nb\\nba\\nba\\nba\\n\") == \"YES\\na\\nba\\nba\\nba\"\nassert solution(\"a\\nb\\nba\\nba\\nba\\n\") == \"NO\"\nassert solution(\"a\\nb\\nba\\nba\\nba\\n\") == \"YES\\na\\nba\\nba\\nba\"\n\nassert solution(\"qwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nwerty\\nw",
        "num_ids_2": 57,
        "num_ids_4": 1026
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"The output is incorrect\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\\n\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\\n\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\\n\") == \"5\"",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\\n\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\\n\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 88
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected: {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 52,
        "num_ids_4": 82
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"12\\n\"\nassert solution(\"3 9\") == \"14\\n\"\nassert solution(\"9 3\") == \"14\\n\"\nassert solution(\"3 6\") == \"12\\n\"\nassert solution(\"506 2708\") == \"3218\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4,4) == 12\nassert solution(3,9) == 14\nassert solution(9,3) == 14\nassert solution(3,6) == 12\nassert solution(506,2708) == 3218",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"3 7\") == \"11\"\nassert solution(\"4 5\") == \"10\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"6 4\") == \"6\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\nassert solution(\"4 1\") == \"Error: Incorrect input\"\nassert solution(\"1 0\") == \"Error: Incorrect input\"\nassert solution(\"10 10\") == \"Error: Incorrect input\"\nassert solution(\"20 30\") == \"Error: Incorrect input\"\nassert solution(\"100 1000000\") == \"Error: Incorrect input\"\nassert solution(\"1000000 1000000\") == \"Error: Incorrect input\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4') == '12\\n'\nassert solution('3 9') == '14\\n'\nassert solution('9 3') == '14\\n'\nassert solution('3 6') == '12\\n'\nassert solution('506 2708') == '3218\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 4) == 12\nassert solution(3, 9) == 14\nassert solution(9, 3) == 14\nassert solution(3, 6) == 12\nassert solution(506, 2708) == 3218",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"14\"\nassert solution() == \"3218\"\nassert solution() == \"12\"\nassert solution() == \"14\"\nassert solution() == \"12\"",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"12\", \"Test case 1 failed\"\nassert solution(\"3 9\") == \"14\", \"Test case 2 failed\"\nassert solution(\"9 3\") == \"14\", \"Test case 3 failed\"\nassert solution(\"3 6\") == \"12\", \"Test case 4 failed\"\nassert solution(\"506 2708\") == \"3218\", \"Test case 5 failed\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abcdedc') == 'YES\\n00000def'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\nabacbecfd\") == \"YES\\n001010101\"\nassert solution(\"8\\naabbcbb\") == \"YES\\n01011011\"\nassert solution(\"7\\nabcdedc\") == \"NO\"\nassert solution(\"5\\nabcde\") == \"YES\\n00000def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 50,
        "num_ids_4": 95
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacbecfd\") == \"YES\\n001010101\"\nassert solution(\"aaabbcbb\") == \"YES\\n01011011\"\nassert solution(\"abcdedc\") == \"NO\"\nassert solution(\"abcde\") == \"YES\\n00000def solution(stdin: str) -> str: pass\"",
        "num_ids_2": 46,
        "num_ids_4": 87
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(9) == \"YES\\n001010101\"\nassert solution(8) == \"YES\\n01011011\"\nassert solution(7) == \"NO\"\nassert solution(5) == \"YES\\n00000\"",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == \"YES\\n0111011\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9', 'abacbecfd') == \"YES\\n001010101\"\nassert solution('8', 'aaabbcbb') == \"YES\\n01011011\"\nassert solution('7', 'abcdedc') == \"NO\"\nassert solution('5', 'abcde') == \"YES\\n00000def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 52,
        "num_ids_4": 101
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9) == \"YES\\n001010101\"\nassert solution(8) == \"YES\\n01011011\"\nassert solution(7) == \"NO\"\nassert solution(5) == \"YES\\n00000\"",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(\"YES\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES\\n00000'\nassert solution('8') == 'YES\\n01011011'\nassert solution('7') == 'NO'\nassert solution('9') == 'NO'\nassert solution('5') == 'YES\\n00000'\n",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == \"YES\\n00000def\"\nassert solution(9) == \"YES\\n01011011\"\nassert solution(8) == \"YES\\n01011011\"\nassert solution(5) == \"YES\\n00000\"\nassert solution(1) == \"NO\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(6) == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"25\"\nassert solution(\"3 1\") == \"-1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == 25, \"The output should be 25.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2') == '25'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == 25\nassert solution(\"3 1\") == 30\nassert solution(\"4 1\") == 40\nassert solution(\"1 10\") == 100\nassert solution(\"10 10\") == 100\nassert solution(\"20 20\") == 200\nassert solution(\"1000000000 1000000000\") == -1",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"25\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"4 2\") == \"28\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 3\") == \"25\"\nassert solution(\"2 1\") == \"-1\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 1\") == -1\nassert solution(\"1 1\") == -1\nassert solution(\"2 1\") == \"25\"\nassert solution(\"5 5\") == \"25\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 4\") == \"14\"\nassert solution(\"10 5\") == \"75\"\nassert solution(\"5 5\") == \"25\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"4 1\") == -1\nassert solution(\"5 2\") == \"25\"\nassert solution(\"10 10\") == \"25\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"5 5\") == \"50\"\nassert solution(\"10 15\") == \"100\"",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1 \"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\n1 2 4 5 6 8\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\\n1\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n1\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n1 2 4 5 6 8\"\nassert solution() == \"YES\\n1 3 5 7 9 11\"\nassert solution() == \"YES\\n1 4 7 10 13 17\"\nassert solution() == \"YES\\n1 5 8 11 14 18\"\nassert solution() == \"YES\\n1 6 9 12 15 19\"\nassert solution() == \"YES\\n1 7 10 13 16 20\"\nassert solution() == \"YES\\n1 8 11 14 17 21\"\nassert solution() == \"YES\\n1 9 12 15 18 22\"\nassert solution() == \"YES\\n1 10 13 16 19 23\"\nassert solution() == \"YES\\n1 11 14 17 20 24\"\nassert solution() == \"YES\\n1 12 15 18 21 25\"\nassert solution() == \"YES\\n1 13 16 19 22 26\"\nassert solution() == \"YES\\n1 14 17 20 23 27\"\nassert solution() == \"YES\\n1 15 18 21 24 28\"\nassert solution() == \"YES\\n1 16 19 22 25 29\"\nassert solution() == \"YES\\n1 17 20 23 26 30\"\nassert solution() == \"YES\\n1 18 21 24 27 31\"\nassert solution() == \"YES\\n1 19 22 25 28 32\"\nassert solution() == \"YES\\n1 20 23 26 29 33\"\nassert solution() == \"YES\\n1 21 24 27 30 34\"\nassert solution() == \"YES\\n1 22 25 28 31 35\"\nassert solution() == \"YES\\n1 23 26 29 32 36\"\nassert solution() == \"YES\\n1 24 27 30 33 37\"\nassert solution() == \"YES\\n1 25 28 31 34 38\"\nassert solution() == \"YES\\n1 26 29 32 35 39\"\nassert solution() == \"YES\\n1 27 30 33 36 40\"\nassert solution() == \"YES\\n1 28 31 34 37 41\"\nassert solution() == \"YES\\n1 29 32 35 38 42\"\nassert solution() == \"YES\\n1 30 33 36 39 43\"\nassert solution() == \"YES\\n1 31 34 37 40 44\"\nassert solution() == \"YES\\n1 32 35 38 41 45\"\nassert solution() == \"YES\\n1 33 36 39 42 46\"\nassert solution() == \"YES\\n1 34 37 40 43 47\"\nassert solution() == \"YES\\n1 35 38 41 44 48\"\nassert solution() == \"YES\\n1 36 39 42 45 49\"\nassert solution() == \"YES\\n1 37 40 43 46 50\"\nassert solution() == \"YES\\n1 38 41 44 47 51\"\nassert solution() == \"YES\\n1 39 42 45 48 52\"\nassert solution() == \"YES\\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8 '\nassert solution('8 3') == 'NO\\n'\nassert solution('1 1') == 'YES\\n1 '\nassert solution('9 4') == 'NO\\n'",
        "num_ids_2": 40,
        "num_ids_4": 69
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"NO\", \"Please implement the solution for Polycarp's Rules of Training\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(26, 6) == \"YES\\n1 2 4 5 6 8 \"\nassert solution(8, 3) == \"NO\"\nassert solution(1, 1) == \"YES\\n1 \"\nassert solution(9, 4) == \"NO\"\n",
        "num_ids_2": 40,
        "num_ids_4": 69
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"26 6\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"9 4\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\"",
        "num_ids_2": 78,
        "num_ids_4": 115
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == '3'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4\n4 6\n10 -2\n8 -1\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\"\"\") == \"5\\n\"\n\nassert solution(\"\"\"\n3 2\n300 -300\n1 299\n1 123\n\"\"\") == \"3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\") == \"3\"",
        "num_ids_2": 74,
        "num_ids_4": 109
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n4 6\\n10 -2\\n8 -1\\n') == '3\\n'\nassert solution('5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n') == '5\\n'\nassert solution('3 2\\n300 -300\\n1 299\\n1 123\\n') == '3\\n'",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"3\\n\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\\n\") == \"5\\n\"\nassert solution(\"3 2\\n300 -300\\n1 299\\n1 123\\n\") == \"3\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 121
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(input()) == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution(input()) == \"YES\\n9 8 8 1\\n1 3 4 1\\n2 4 3 2\\n1 8 8 9\\n\"\nassert solution(input()) == \"NO\\n\"\nassert solution(input()) == \"YES\\n10\"\nprint(\"PASSED\")",
        "num_ids_2": 81,
        "num_ids_4": 141
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\nassert solution(\"1\\n10\\n\") == \"YES\\n10\"",
        "num_ids_2": 131,
        "num_ids_4": 196
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\n\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\n\nassert solution(\"1\\n10\\n\") == \"YES\\n10\"\n\nassert solution(\"1\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\\n\") == \"YES\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\"",
        "num_ids_2": 131,
        "num_ids_4": 196
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n'\nassert solution('1 1 1 1 1 3 3 3 3\\n') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1\\n'\nassert solution('1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n') == 'NO\\n'\nassert solution('10\\n') == 'YES\\n10\\n'",
        "num_ids_2": 129,
        "num_ids_4": 192
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n') == 'YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1'\nassert solution('3\\n1 1 1 1 1 3 3 3 3\\n') == 'YES\\n1 3 1\\n3 1 3\\n1 3 1'\nassert solution('4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n') == 'NO'\nassert solution('1\\n10\\n') == 'YES\\n10'",
        "num_ids_2": 133,
        "num_ids_4": 198
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n1 8 8 1 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\n\nassert solution(\"Input\\n3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\n\nassert solution(\"Input\\n4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\\n\"\n\nassert solution(\"Input\\n1\\n10\\n\") == \"YES\\n10\\n\"",
        "num_ids_2": 141,
        "num_ids_4": 216
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The solution for the given input is '{solution(input())}', but the expected output is '{expected}'.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n8 8 8 1 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\\n10\"\n\nfrom typing import List",
        "num_ids_2": 127,
        "num_ids_4": 188
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\"",
        "num_ids_2": 55,
        "num_ids_4": 119
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\\n\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\\n\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\\n\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 135
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\n",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\", \"Solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\\n\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\\n\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\") == \"YES\\n\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 122
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\\n\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\\n\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\\n\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 135
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\") == \"YES\\n\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\") == \"YES\\n\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\") == \"YES\\n\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\") == \"NO\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3 '\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1 '\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0 '",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(stdin=\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(stdin=\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 84,
        "num_ids_4": 127
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution('10 1 11\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0\\n'",
        "num_ids_2": 81,
        "num_ids_4": 124
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'YES', \"Solution does not match expected output.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"tt\") == 1\nassert solution(\"tst\") == 3\nassert solution(\"tset\") == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"test\") == 3\nassert solution(\"tst\") == 2\nassert solution(\"tt\") == 1\nassert solution(\"et\") == 1\nassert solution(\"\") == 0\nassert solution(\"test\") == 3\nassert solution(\"tst\") == 2\nassert solution(\"tt\") == 1\nassert solution(\"et\") == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"test\") == 4",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nprint(\"All test cases pass\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {output()}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2', \"Solution not correct.\"\nassert solution('2.572479') == '10 3', \"Solution not correct.\"\nassert solution('4.024922') == '9 9', \"Solution not correct.\"",
        "num_ids_2": 49,
        "num_ids_4": 73
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.200000\") == \"3 2\", \"1.200000\"\nassert solution(\"2.572479\") == \"10 3\", \"2.572479\"\nassert solution(\"4.024922\") == \"9 9\", \"4.024922\"",
        "num_ids_2": 59,
        "num_ids_4": 88
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3 2\"\nassert solution(input()) == \"10 3\"\nassert solution(input()) == \"9 9\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1.200000') == '3 2', \"Expected Output: '3 2', but got: '{}'\".format(solution('1.200000'))\nassert solution('2.572479') == '10 3', \"Expected Output: '10 3', but got: '{}'\".format(solution('2.572479'))\nassert solution('4.024922') == '9 9', \"Expected Output: '9 9', but got: '{}'\".format(solution('4.024922'))",
        "num_ids_2": 94,
        "num_ids_4": 140
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1.200000) == '3 2'\nassert solution(2.572479) == '10 3'\nassert solution(4.024922) == '9 9'",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2', \"Your code is incorrect.\"\nassert solution('2.572479') == '10 3', \"Your code is incorrect.\"\nassert solution('4.024922') == '9 9', \"Your code is incorrect.\"",
        "num_ids_2": 51,
        "num_ids_4": 76
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n\nn, d, k = map(int, stdin.strip().split())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3'",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6, 3, 3) == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(6, 2, 3) == \"NO\"\nassert solution(10, 4, 3) == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(8, 5, 3) == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"\n\nfrom typing import List",
        "num_ids_2": 57,
        "num_ids_4": 173
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\"",
        "num_ids_2": 53,
        "num_ids_4": 165
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution.input) == solution.output, \"Test failed for the given input\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 169
    },
    {
        "number": 4043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3 3') == 'YES\\n1 2\\n3 1\\n4 1\\n'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n1 2\\n1 3\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'",
        "num_ids_2": 45,
        "num_ids_4": 107
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\", \"1.1\"\nassert solution(\"3 3 3\") == \"101100\", \"1.2\"\nassert solution(\"5 3 6\") == \"01010100\", \"1.3\"\nassert solution(\"7 7 7\") == \"11111111\", \"1.4\"\nassert solution(\"0 0 0\") == \"00000000\", \"1.5\"\nassert solution(\"1 1 1\") == \"11111111\", \"1.6\"\nassert solution(\"2 2 2\") == \"111000\", \"1.7\"\nassert solution(\"3 3 3\") == \"101100\", \"1.8\"\nassert solution(\"4 4 4\") == \"11111111\", \"1.9\"\nassert solution(\"5 5 5\") == \"11111111\", \"1.10\"",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2, 2, 1) == '1100'\nassert solution(3, 3, 3) == '101100'\nassert solution(5, 3, 6) == '01010100'",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nb\\nc') == 'YES\\nabc'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abc') == 'YES', \"Invalid output for solution(stdin: 'abc')\"\nassert solution('abcde') == 'NO', \"Invalid output for solution(stdin: 'abcde')\"\nassert solution('abccde') == 'YES', \"Invalid output for solution(stdin: 'abccde')\"\nassert solution('aabca') == 'YES', \"Invalid output for solution(stdin: 'aabca')\"\nassert solution('abbcc') == 'NO', \"Invalid output for solution(stdin: 'abbcc')\"\nassert solution('abaccd') == 'YES', \"Invalid output for solution(stdin: 'abaccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid output for solution(stdin: 'aabccd')\"\nassert solution('aabccd') == 'YES', \"Invalid",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\nacbbac\"\nassert solution(stdin) == \"YES\\ncacbacbab\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"aa\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"bc\") == \"YES\"\nassert solution(\"aa\") == \"YES\"\nassert solution(\"cb\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\nacbbac\"\nassert solution(input()) == \"YES\\ncacbacbab\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\nabc\"",
        "num_ids_2": 29,
        "num_ids_4": 52
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"YES\\nacbbac\"\nassert solution(\"bc\") == \"YES\\ncacbacbab\"\nassert solution(\"ac\") == \"YES\\nabc\"",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabbc\") == \"YES\\nabaabc\"\nassert solution(\"cbac\") == \"YES\\nabc\"\nassert solution(\"abcd\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"ac\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ab\") == \"acbbac\"\nassert solution(\"bc\") == \"cacbacbab\"\nassert solution(\"aa\") == \"cacbacbab\"\nassert solution(\"cb\") == \"abc\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3 1 2 \"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n-2 1\\n') == '-1'\nassert solution('5\\n1 1 1 1\\n') == '-1'\nassert solution('4\\n-1 2 2\\n') == '-1'",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n-2 1\\n') == '3 1 2 '\nassert solution('5\\n1 1 1 1\\n') == '1 2 3 4 5 '\nassert solution('4\\n-1 2 2\\n') == '-1'",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\") == \"-1\"",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-2 1\\n\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\\n\") == \"1 2 3 4 5 \"\nassert solution(\"4\\n-1 2 2\\n\") == \"-1\"",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2 \"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n-2 1') == '3 1 2 '\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5 '\nassert solution('4\\n-1 2 2') == '-1'",
        "num_ids_2": 47,
        "num_ids_4": 65
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '1\\n'\nassert solution('5\\n2 2 2 3 3') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n'\nassert solution('5\\n2 2 2 3 3\\n') == '2\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == 1\nassert solution(\"5\\n2 2 2 3 3\\n\") == 2",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '1\\n'\nassert solution('5\\n2 2 2 3 3') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed\" for i, input, output in enumerate(tests)",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"5\", \"Test failed for '10'.\"\n\nassert solution(\"1\") == \"0\", \"Test failed for '1'.\"\n\nassert solution(\"2\") == \"1\", \"Test failed for '2'.\"\n\nassert solution(\"4\") == \"1\", \"Test failed for '4'.\"\n\nassert solution(\"12\") == \"4\", \"Test failed for '12'.\"\n\nassert solution(\"1000000\") == \"250\", \"Test failed for '1000000'.\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\\n(2,5) can be reached in five moves.\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\", \"Expected output: 5\\nGot: \" + solution(input())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"10\") == \"5\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5', \"Expected output: 5, but got: {}\".format(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5\", \"Expected: 5, Actual: {}\".format(solution(\"10\"))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution is {output}, but the input is {stdin}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"The solution is {solution(input())}, but the output is {output()}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n182 103 34\\n10 53 256\") == \"22 334\"",
        "num_ids_2": 54,
        "num_ids_4": 144
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 1 1\\n1 1 0') == '0 1\\n'\nassert solution('15\\n5 5 5\\n5 5 5') == '0 15\\n'\nassert solution('3\\n0 0 3\\n3 0 0') == '3 3\\n'\nassert solution('686\\n479 178 29\\n11 145 530\\n182 103 34\\n10 53 256\\n53 256 182\\n178 29 103\\n') == '22 334\\n'",
        "num_ids_2": 58,
        "num_ids_4": 178
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n182 103 34\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n11 145 530\\n\") == \"119 226\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 143
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0 1\\n0 1'\nassert solution() == '0 15\\n0 15'\nassert solution() == '3 3\\n3 3'\nassert solution() == '22 334\\n22 334'\nassert solution() == '119 226\\n119 226'",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n182 103 34\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n11 145 530\") == \"119 226\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 141
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\\n\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\\n\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\\n\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 131
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\") == \"0 1\"\nassert solution(\"15\\n5 5 5\\n5 5 5\") == \"0 15\"\nassert solution(\"3\\n0 0 3\\n3 0 0\") == \"3 3\"\nassert solution(\"686\\n479 178 29\\n11 145 530\") == \"22 334\"\nassert solution(\"319\\n10 53 256\\n182 103 34\") == \"119 226\"",
        "num_ids_2": 54,
        "num_ids_4": 121
    },
    {
        "number": 4049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 1 1\\n1 1 0\\n\") == \"0 1\\n\", \"Test 1 failed\"\nassert solution(\"15\\n5 5 5\\n5 5 5\\n\") == \"0 15\\n\", \"Test 2 failed\"\nassert solution(\"3\\n0 0 3\\n3 0 0\\n\") == \"3 3\\n\", \"Test 3 failed\"\nassert solution(\"686\\n479 178 29\\n11 145 530\\n\") == \"22 334\\n\", \"Test 4 failed\"\nassert solution(\"319\\n10 53 256\\n182 103 34\\n\") == \"119 226\\n\", \"Test 5 failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 74,
        "num_ids_4": 161
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n7 7\\n2 3\\n4 5\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Incorrect output: got '{solution(input())}', expected '{expected}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(5) == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(10) == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 50,
        "num_ids_4": 81
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 136
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n7 7\\n2 3\\n4 5\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"3\n7 7\n2 3\n4 5\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"",
        "num_ids_2": 60,
        "num_ids_4": 79
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\\n11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\n4\\n1 1 1 1\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\\n4\\n1 1 1 1\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"",
        "num_ids_2": 147,
        "num_ids_4": 188
    },
    {
        "number": 4050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\"\nassert solution(\"3\\n3 1 2\") == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"YES\\n\", \"The first example should output 'YES'.\"\nassert solution(\"3\\n3 1 2\") == \"NO\\n\", \"The second example should output 'NO'.\"\nassert solution(\"5\\n1 2 3 4 5\") == \"YES\\n\", \"The third example should output 'YES'.\"\nassert solution(\"4\\n3 1 4\") == \"NO\\n\", \"The fourth example should output 'NO'.\"\nassert solution(\"3\\n2 1 1\") == \"YES\\n\", \"The fifth example should output 'YES'.\"",
        "num_ids_2": 58,
        "num_ids_4": 120
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\", \"Expected output: YES\"\nassert solution(\"Input\") == \"NO\", \"Expected output: NO\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\", \"Expected YES but got {}\".format(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n''') == 'YES'\n\nassert solution('''\n3\n3 1 2\n''') == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n3 1 2\\n3\\n2 1 1\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n3\\n2 1 1\") == \"NO\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(3) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == 'YES', \"The solution should return 'YES'\"\nassert solution('3\\n3 1 2\\n') == 'NO', \"The solution should return 'NO'\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed: {input} => {output}\" for input, output in [\n    ('3', 'YES'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'YES'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),\n    ('3', 'NO'),",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\\n\") == \"4\\n3 5 4 5 \\n\"\nassert solution(\"4\\nabcd\\naccd\\n\") == \"-1\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"abcde\"\nassert solution(4) == \"abcd\"\nassert solution(5) == \"-1\"\nassert solution(6) == \"3 5 4 5\"\nassert solution(7) == \"0 1 2 3 4\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == 4\nassert solution(\"4\\nabcd\\naccd\") == -1",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\\n\") == \"4\\n3 5 4 5 \"\nassert solution(\"4\\nabcd\\naccd\\n\") == \"-1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabdfec\\n4\\abcd\\naccd\\n\") == \"3 5 4 5\"\nassert solution(\"4\\abcd\\naccd\\n\") == \"-1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"\nassert solution(\"\") == \"0\"\nassert solution(\"2\\nabc\\ndef\\nghi\") == \"0\"\nprint(\"All tests passed\")",
        "num_ids_2": 42,
        "num_ids_4": 68
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nabcdef\\nabdfec\") == \"4\\n3 5 4 5\"\nassert solution(\"4\\nabcd\\naccd\") == \"-1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n3 5 4 5\"\nassert solution() == \"-1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() # add additional test cases",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ba\") == \"SPPSPSPS\"\nassert solution(\"a\") == \"PPSS\"\nassert solution(\"abab\") == \"PSPS\"\nassert solution(\"aaba\") == \"PSPS\"\nassert solution(\"baba\") == \"SPSPSPS\"\nassert solution(\"aba\") == \"SSPS\"\nassert solution(\"ac\") == \"SP\"\nassert solution(\"ca\") == \"SS\"\nassert solution(\"\") == \"PPSS\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nabba\\nbaba\\nab\\nabba\\nab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 58,
        "num_ids_4": 72
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nba\\na\\nabab\\na\\naba\\nbaba\\nab\\naba\\n\\n3\\na\\naa\\naa\\na\\n\\n2\\na\\nc\\n\\n\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\\n\\n2\\na\\nc\\n\\n\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\\n\") == \"PS\"",
        "num_ids_2": 97,
        "num_ids_4": 115
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nba\\na\\nab\\na\\nababa\\nba\\naba\\nab\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 56,
        "num_ids_4": 70
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"SPPSPSPS\"\nprint(\"PASS\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\nab\\nabba\\nab\\na\\na\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\\n\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 58,
        "num_ids_4": 74
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nba\\na\\nab\\na\\nab\\nba\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\") == \"PS\"",
        "num_ids_2": 49,
        "num_ids_4": 63
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nba\\na\\nabba\\na\\naba\\nbaba\\nab\\nab\\n\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\naa\\naa\\na\\n\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 59,
        "num_ids_4": 75
    },
    {
        "number": 4053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nba\\na\\nabab\\na\\naba\\nbaba\\nab\\naba\\n\") == \"SPPSPSPS\"\nassert solution(\"3\\na\\na\\na\\na\") == \"PPSS\"\nassert solution(\"2\\na\\nc\\n\") == \"PS\"",
        "num_ids_2": 56,
        "num_ids_4": 72
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 10\") == \"1\"\nassert solution(\"0 1 2 3 4 5 6 7 8 9\") == \"0\"\n",
        "num_ids_2": 45,
        "num_ids_4": 100
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\", \"Testcase 1 failed\"\n\nassert solution(\"10 4 2 6 8\") == \"1\", \"Testcase 2 failed\"\n\nassert solution(\"5 6 7 8 9 0\") == \"1\", \"Testcase 3 failed\"\n\nassert solution(\"1 0 0 0 0\") == \"1\", \"Testcase 4 failed\"\n\nassert solution(\"1 0 0 0 0 0 0 0 0 0 0 0\") == \"1\", \"Testcase 5 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"The output should be 1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == '1\\n'\n\nprint('Success: Test case 1 passed.')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Solution is incorrect\"\nprint(\"Solution is correct\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Error: Solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Test failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6 8 10\") == 1, \"Solution should return 1.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\nassert solution('4\\n1 1 1 1\\n') == '0'",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2, \"Expected output: 2, but got: {}\".format(solution(3))\nassert solution(4) == 0, \"Expected output: 0, but got: {}\".format(solution(4))\nassert solution(5) == 0, \"Expected output: 0, but got: {}\".format(solution(5))\nassert solution(10) == 2, \"Expected output: 2, but got: {}\".format(solution(10))\nassert solution(15) == 0, \"Expected output: 0, but got: {}\".format(solution(15))\nassert solution(20) == 0, \"Expected output: 0, but got: {}\".format(solution(20))",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\", \"1\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\", \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"0\", \"3\"",
        "num_ids_2": 59,
        "num_ids_4": 81
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 78
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\"\n\nassert solution() == \"0\\n\"\n\nassert solution() == \"0\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2\\n'\nassert solution('5\\n1 1 0 0 0\\n') == '0\\n'\nassert solution('4\\n1 1 1 1\\n') == '0\\n'",
        "num_ids_2": 61,
        "num_ids_4": 84
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\n    pass'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\\n\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 84
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 1\nassert solution(6) == 4",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Testcase not passed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Input error\"  # Input error",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2, 4, 6, 2, 10]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nassert solution(5) == 2\nassert solution(10) == 2\nassert solution(15) == 1\nassert solution(100) == 4",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\", \"The code doesn't pass the test case\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 1\nassert solution([6, 90, 12, 18, 30, 18]) == 4",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"The minimum number of pockets needed is not equal to 2.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\") == \"2\"\nassert solution(\"1\\n100\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 4 3 3 2\") == \"2\"\nassert solution(\"1 100\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\n100') == '1\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\"\nassert solution(\"1\\n100\\n\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 4 3 3 2\\n') == '2\\n'\nassert solution('1\\n100\\n') == '1\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\") == 2, \"Incorrect output\"\nassert solution(\"1\\n100\") == 1, \"Incorrect output\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 4 3 3 2\") == \"2\\n\"\nassert solution(\"1 100\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 4 3 3 2\\n100\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(3) == 2\nassert solution(5) == 3\nassert solution(6) == 4\nassert solution(7) == 5\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == 3\nassert solution(\"5 3\\n1 0 0 0 1\") == 2\nassert solution(\"5 10\\n0 0 0 0 0\") == -1\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == 3",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"\nassert solution(\"6 2\\n0 0 0 0 0 0\") == \"-1\"\nassert solution(\"5 3\\n0 0 0 0 0\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"",
        "num_ids_2": 48,
        "num_ids_4": 106
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"",
        "num_ids_2": 48,
        "num_ids_4": 106
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n0 1 1 0 0 1') == '3\\n'\nassert solution('5 3\\n1 0 0 0 1') == '2\\n'\nassert solution('5 10\\n0 0 0 0 0') == '-1\\n'\nassert solution('10 3\\n0 0 1 1 0 1 0 0 0 1') == '3\\n'\nassert solution('5 2\\n1 1 1 0 1 1') == '2\\n'\nassert solution('10 5\\n1 1 1 1 0 1 1 1 1 1 1') == '5\\n'\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0 0 0') == '-1\\n'",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\\n\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\\n\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\\n\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\\n\"\nassert solution(\"6 3\\n0 1 0 1 0 1\") == \"2\\n\"\nassert solution(\"5 5\\n0 0 0 0 1\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"\n",
        "num_ids_2": 48,
        "num_ids_4": 106
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"5 10\\n0 0 0 0 0\\n\") == \"-1\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"",
        "num_ids_2": 52,
        "num_ids_4": 114
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"The given code is not correct.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3') == '3\\n', \"The given input is incorrect\"\nassert solution('10') == '0\\n', \"The given input is incorrect\"\nassert solution('1000000000') == '0\\n', \"The given input is incorrect\"",
        "num_ids_2": 39,
        "num_ids_4": 67
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\", \"Incorrect answer\"\nassert solution(\"100\") == \"0\\n\", \"Incorrect answer\"\nassert solution(\"1\") == \"1\\n\", \"Incorrect answer\"\nassert solution(\"4\") == \"1\\n\", \"Incorrect answer\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3', \"Solution should output '3', but it returns '{}'\".format(solution(3))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '3\\n', \"The output should be 3.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\\n\", \"Test failed\" # Test case 1\nassert solution(\"7\") == \"3\\n\", \"Test failed\" # Test case 2\nassert solution(\"5\") == \"2\\n\", \"Test failed\" # Test case 3\nassert solution(\"10\") == \"3\\n\", \"Test failed\" # Test case 4\nassert solution(\"15\") == \"2\\n\", \"Test failed\" # Test case 5",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\\n\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the value of N: \")) == 3\nprint(\"The answer is:\", 3)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"3\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n\", \"Input is not valid\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == 3\nassert solution(\"(())())\") == 3\nassert solution(\"(()))())\") == 3\nassert solution(\"()())())\") == 3\nassert solution(\"()()())()\") == 3\nassert solution(\"()\") == 3",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, \"((())\", \"(((()))\") == 3\nassert solution(6, \"()()()\", \"(((()))\") == 0\nassert solution(1, \")\", \"(((()))\") == 0\nassert solution(8, \")))(((((\", \"(((()))\", \"())())\") == 0",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == 3\nassert solution(6) == 3\nassert solution(1) == 0\nassert solution(8) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3\nassert solution() == 0\nassert solution() == 0\nassert solution() == 0\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n(((()\\n\") == \"3\\n\")\nassert solution(\"6\\n()()\\n\") == \"0\\n\")\nassert solution(\"1\\n) \\n\") == \"0\\n\"\nassert solution(\"8\\n)))(((((\\n\") == \"0\\n\")",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n(((())\\n\") == 3\nassert solution(\"6\\n()()()\\n\") == 0\nassert solution(\"1\\n)()\\n\") == 0\nassert solution(\"8\\n)))(((((\\n\") == 0",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n(((()\\n') == 3)\nassert solution('6\\n()()()\\n') == 0\nassert solution('1\\n)()\\n') == 0\nassert solution('8\\n)))(((((\\n') == 0)",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"()\") == \"1+1\"\nassert solution(\"()()\") == \"2+1\"\nassert solution(\"(())\") == \"1+(1)\"\nassert solution(\"())(\") == \"2+(1)\"\nassert solution(\")))(((((\") == \"1+(1)+1\"\nassert solution(\")))()())\") == \"2+1+1\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()\") == \"1+1\"\nassert solution(\"())()\") == \"1+(1)+(1)\"\nassert solution(\"()())()\") == \"1+1+(1)+(1)+(1)\"\nassert solution(\"()(())\") == \"1+1+1\"\nassert solution(\"()()()(\") == \"1+1+1\"\nassert solution(\"()(())(\") == \"1+1+1\"\nassert solution(\"()()())(\") == \"1+1+1\"\nassert solution(\"()(())())(\") == \"1+1+1\"\nassert solution(\"()(())()())(\") == \"1+1+1\"\nassert solution(\"(())\") == \"1+1\"\nassert solution(\"())\") == \"1+1\"\nassert solution(\"()())\") == \"1+1\"\nassert solution(\"(())()\") == \"1+1\"\nassert solution(\"())()\") == \"1+1\"\nassert solution(\"(())())\") == \"1+1\"\nassert solution(\"())(())\") == \"1+1\"\nassert solution(\"()()()(\") == \"1+1\"\nassert solution(\"(())())(\") == \"1+1\"\nassert solution(\"())(())(\") == \"1+1\"\nassert solution(\"()()())(\") == \"1+1\"\nassert solution(\"(())())(\") == \"1+1\"\nassert solution(\"())(())(\") == \"1+1\"\nassert solution(\"()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\nassert solution(\"()()()()())(\") == \"1+1\"\nassert solution(\"(())())())(\") == \"1+1\"\nassert solution(\"())(())())(\") == \"1+1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 62
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 1\") == \"2\", \"Sample Input: 1 2 1 1\\nExpected Output: 2\\nSample Output: 2\\n\"\nassert solution(\"1 3 1 1\") == \"3\", \"Sample Input: 1 3 1 1\\nExpected Output: 3\\nSample Output: 3\\n\"\nassert solution(\"2 3 1 1\") == \"3\", \"Sample Input: 2 3 1 1\\nExpected Output: 3\\nSample Output: 3\\n\"\nassert solution(\"3 2 1 1\") == \"4\", \"Sample Input: 3 2 1 1\\nExpected Output: 4\\nSample Output: 4\\n\"\nassert solution(\"4 3 1 1\") == \"5\", \"Sample Input: 4 3 1 1\\nExpected Output: 5\\nSample Output: 5\\n\"\nassert solution(\"5 2 1 1\") == \"6\", \"Sample Input: 5 2 1 1\\nExpected Output: 6\\nSample Output: 6\\n\"\nassert solution(\"6 1 1 1\") == \"6\", \"Sample Input: 6 1 1 1\\nExpected Output: 6\\nSample Output: 6\\n\"\nassert solution(\"7 8 9 10\") == \"36\", \"Sample Input: 7 8 9 10\\nExpected Output: 36\\nSample Output: 36\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 180
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"2 1 2 1\") == \"2\"\nassert solution(\"3 2 3 1\") == \"3\"\nassert solution(\"3 2 3 2\") == \"3\"\nassert solution(\"4 2 3 1\") == \"4\"\nassert solution(\"4 2 3 2\") == \"4\"\nassert solution(\"5 2 3 1\") == \"5\"\nassert solution(\"5 2 3 2\") == \"5\"\nassert solution(\"6 2 3 1\") == \"6\"\nassert solution(\"6 2 3 2\") == \"6\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"5 6 4 3\") == \"60\"\nassert solution(\"10 20 30 40\") == \"1080\"",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 1 2 1\") == \"2\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 2\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('5 8 3 6') == '120'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9\") == \"2\"",
        "num_ids_2": 53,
        "num_ids_4": 84
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"6 9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"10 9 1 4 4 6 7\") == \"0\\n\"\nassert solution(\"8 9 1 4 4 6 7\") == \"0\\n\"\nassert solution(\"7 9 1 4 4 6 7\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n3 3\") == \"2\\n\"\nassert solution(\"3\\n5 6\") == \"3\\n\"\nassert solution(\"4\\n2 6\") == \"3\\n\"\nassert solution(\"5\\n1 3\") == \"2\\n\"\nassert solution(\"6\\n7 8\") == \"2\\n\"\nassert solution(\"7\\n3 8\") == \"3\\n\"\nassert solution(\"8\\n4 9\") == \"3\\n\"\nassert solution(\"9\\n5 10\") == \"2\\n\"\nassert solution(\"10\\n6 11\") == \"2\\n\"\nassert solution(\"11\\n7 12\") == \"3\\n\"\nassert solution(\"12\\n8 13\") == \"3\\n\"\nassert solution(\"13\\n9 14\") == \"3\\n\"\nassert solution(\"14\\n10 15\") == \"2\\n\"\nassert solution(\"15\\n11 16\") == \"2\\n\"\nassert solution(\"16\\n12 17\") == \"3\\n\"\nassert solution(\"17\\n13 18\") == \"3\\n\"\nassert solution(\"18\\n14 19\") == \"3\\n\"\nassert solution(\"19\\n15 20\") == \"2\\n\"\nassert solution(\"20\\n16 21\") == \"2\\n\"\nassert solution(\"21\\n17 22\") == \"3\\n\"\nassert solution(\"22\\n18 23\") == \"3\\n\"\nassert solution(\"23\\n19 24\") == \"3\\n\"\nassert solution(\"24\\n20 25\") == \"2\\n\"\nassert solution(\"25\\n21 26\") == \"2\\n\"\nassert solution(\"26\\n22 27\") == \"3\\n\"\nassert solution(\"27\\n23 28\") == \"3\\n\"\nassert solution(\"28\\n24 29\") == \"3\\n\"\nassert solution(\"29\\n25 30\") == \"2\\n\"\nassert solution(\"30\\n26 31\") == \"2\\n\"\nassert solution(\"31\\n27 32\") == \"3\\n\"\nassert solution(\"32\\n28 33\") == \"3\\n\"\nassert solution(\"33\\n29 34\") == \"3\\n\"\nassert solution(\"34\\n30 35\") == \"2\\n\"\nassert solution(\"35\\n31 36\") == \"2\\n\"\nassert solution(\"36\\n32 37\") == \"3\\n\"\nassert solution(\"37\\n33 38\") == \"3\\n\"\nassert solution(\"38\\n34 39\") == \"3\\n\"\nassert solution(\"39\\n35 40\") == \"2\\n\"\nassert solution(\"40\\n36 41\") == \"2\\n\"\nassert solution(\"41\\n37 42\") == \"3\\n\"\nassert solution(\"42\\n38 43\") == \"3\\n\"\nassert solution(\"43\\n39 44\") == \"3\\n\"\nassert solution(\"44\\n40 45\") == \"2\\n\"\nassert solution(\"45\\n41 46\") == \"2\\n\"\nassert solution(\"46\\n42 47\") == \"3\\n\"\nassert solution(\"47\\n43 48\") == \"3\\n\"\nassert solution(\"48\\n44 49\") == \"3\\n\"\nassert solution(\"49\\n45 50\") == \"2\\n\"\nassert solution(\"50\\n46 51\") == \"2\\n\"\nassert solution(\"51\\n47 52\") == \"3\\n\"\nassert solution(\"52\\n48 53\")",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"Test Case 1\"\nassert solution(input()) == \"2\", \"Test Case 2\"\nassert solution(input()) == \"2\", \"Test Case 3\"\nassert solution(input()) == \"2\", \"Test Case 4\"\nassert solution(input()) == \"2\", \"Test Case 5\"\nassert solution(input()) == \"2\", \"Test Case 6\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n9 1 4 4 6 7\\n\") == \"2\"\nassert solution(\"3\\n1 2 3 4 5 6\\n\") == \"3\"\nassert solution(\"4\\n7 8 9 10 11 12\\n\") == \"4\"\nassert solution(\"5\\n13 14 15 16 17 18\\n\") == \"2\"\nassert solution(\"6\\n19 20 21 22 23 24\\n\") == \"5\"\nassert solution(\"7\\n25 26 27 28 29 30\\n\") == \"4\"\nassert solution(\"8\\n31 32 33 34 35 36\\n\") == \"4\"\nassert solution(\"9\\n37 38 39 40 41 42\\n\") == \"4\"\nassert solution(\"10\\n43 44 45 46 47 48\\n\") == \"4\"\nassert solution(\"11\\n49 50 51 52 53 54\\n\") == \"4\"\nassert solution(\"12\\n55 56 57 58 59 60\\n\") == \"4\"\nassert solution(\"13\\n61 62 63 64 65 66\\n\") == \"4\"\nassert solution(\"14\\n67 68 69 70 71 72\\n\") == \"4\"\nassert solution(\"15\\n73 74 75 76 77 78\\n\") == \"4\"\nassert solution(\"16\\n79 80 81 82 83 84\\n\") == \"4\"\nassert solution(\"17\\n85 86 87 88 89 90\\n\") == \"4\"\nassert solution(\"18\\n91 92 93 94 95 96\\n\") == \"4\"\nassert solution(\"19\\n97 98 99 100 101 102\\n\") == \"4\"\nassert solution(\"20\\n103 104 105 106 107 108\\n\") == \"4\"\nassert solution(\"21\\n109 110 111 112 113 114\\n\") == \"4\"\nassert solution(\"22\\n115 116 117 118 119 120\\n\") == \"4\"\nassert solution(\"23\\n121 122 123 124 125 126\\n\") == \"4\"\nassert solution(\"24\\n127 128 129 130 131 132\\n\") == \"4\"\nassert solution(\"25\\n133 134 135 136 137 138\\n\") == \"4\"\nassert solution(\"26\\n139 140 141 142 143 144\\n\") == \"4\"\nassert solution(\"27\\n145 146 147 148 149 150\\n\") == \"4\"\nassert solution(\"28\\n151 152 153 154 155 156\\n\") == \"4\"\nassert solution(\"29\\n157 158 159 160 161 162\\n\") == \"4\"\nassert solution(\"30\\n163 164 165 166 167 168\\n\") == \"4\"\nassert solution(\"31\\n169 170 171 172 173 174\\n\") == \"4\"\nassert solution(\"32\\n175 176",
        "num_ids_2": 50,
        "num_ids_4": 109
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2\\n'\nassert solution('10\\n2 2 3 4 5 6 7 8 9') == '3\\n'\nassert solution('12\\n3 3 4 5 6 7 8 9 10') == '4\\n'\nassert solution('1000\\n') == '4\\n'\nassert solution('1000\\n1') == '3\\n'\nassert solution('1000\\n10') == '3\\n'\nassert solution('1000\\n100') == '2\\n'\nassert solution('1000\\n1000') == '1\\n'",
        "num_ids_2": 57,
        "num_ids_4": 107
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"6 9 1 4 4 6 7\") == \"2\\n\"\nassert solution(\"5 6 6 4 2 1 9\") == \"1\\n\"\nassert solution(\"5 6 1 4 1 1 9\") == \"1\\n\"\nassert solution(\"5 6 6 4 3 1 9\") == \"1\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"\nassert solution(\"5 20 10 20\\n12 14 18 14 12\") == \"3\\n\"\nassert solution(\"5 10 15 10\\n15 15 15 15\") == \"1\\n\"\nassert solution(\"10 10 10 10\\n20 20 20 20\") == \"1\\n\"\nassert solution(\"10 10 10 10\\n20 20 20 20\") == \"1\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 149
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"The output is not as expected.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\nassert solution(\"6 8 12 15\\n10 14 19 23\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('1 100000 1 200000') == '100000'\nassert solution('5 1 1 10') == '1'\nassert solution('3 6 2 8') == '3'\nassert solution('1 5 1 7') == '1'\nassert solution('1 2 1 5') == '2'",
        "num_ids_2": 72,
        "num_ids_4": 105
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"4\\n\"\nassert solution(\"5\\n2 10 50 110 250\\n\") == \"1\\n\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 106
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4\nassert solution() == 1\nassert solution() == 3\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"The correct solution to the given problem is: 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n10\\n1 2 5 6 7 10 21 23 24 49\\n\\nOutput\\n4\\n\\nInput\\n5\\n2 10 50 110 250\\n\\nOutput\\n1\\n\\nInput\\n6\\n4 7 12 100 150 199\\n\\nOutput\\n3\") == \"4\\n\\n1\\n\\n3\\n\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"3\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4\\n'\nassert solution(stdin) == '1\\n'\nassert solution(stdin) == '3\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 2\\n2 4\\n1 4\\n1 4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\\n\", \"Test 1 Failed\"\nassert solution(\"5\\n5 2 11 3 7\") == \"2 4\\n\", \"Test 2 Failed\"\nassert solution(\"6\\n2 5 10 1 10 2\") == \"1 4\\n\", \"Test 3 Failed\"",
        "num_ids_2": 63,
        "num_ids_4": 98
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 8 3 6\") == \"1 2\\n\"\nassert solution(\"5\\n5 2 11 3 7\") == \"2 4\\n\"\nassert solution(\"6\\n2 5 10 1 10 2\") == \"1 4\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 80
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"",
        "num_ids_2": 41,
        "num_ids_4": 67
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\\n\"\nassert solution(\"5 2 11 3 7\") == \"2 4\\n\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 73
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == '1 2'\nassert solution(2) == '1 2'\nassert solution(3) == '2 3'\nassert solution(5) == '1 4'\nassert solution(5) == '1 4'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n5\\n5 2 11 3 7\\n6\\n2 5 10 1 10 2\") == \"1 2\\n2 4\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 2\"\nassert solution(input()) == \"2 4\"\nassert solution(input()) == \"1 4\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\\n5\\n5 2 11 3 7\\n\\n6\\n2 5 10 1 10 2\\n\") == \"1 2\\n2 4\\n\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"021\"\nassert solution(6) == \"001122\"\nassert solution(6) == \"211200\"\nassert solution(6) == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"021\"\nassert solution(6) == \"001122\"\nassert solution(6) == \"211200\"\nassert solution(6) == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\nassert solution('6') == '120120'",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120110\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n121\") == \"021\"\nassert solution(\"6\\n000000\") == \"001122\"\nassert solution(\"6\\n211200\") == \"211200\"\nassert solution(\"6\\n120110\") == \"120120\"\n",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n121\\n\") == \"021\"\nassert solution(\"6\\n000000\\n\") == \"001122\"\nassert solution(\"6\\n211200\\n\") == \"211200\"\nassert solution(\"6\\n120110\\n\") == \"120120\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nassert solution(\"6\") == \"120120\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '4\\n', f\"The output is {solution(stdin)} but should be 4.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"4 5\\n5\\n\") == \"1\"\nassert solution(\"5 6\\n3\\n\") == \"3\"\nassert solution(\"2 5\\n1\\n\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\", \"The solution is incorrect. Please see the problem statement for the correct format.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n3\") == \"4\"\nassert solution(\"6 1\\n1\") == \"1\"\nassert solution(\"6 1\\n5\") == \"1\"\nassert solution(\"6 1\\n4\") == \"2\"\nassert solution(\"6 1\\n3\") == \"2\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\nassert solution(\"6 1\\n4\\n\") == \"4\"\nassert solution(\"6 1\\n5\\n\") == \"6\"\nassert solution(\"6 1\\n6\\n\") == \"6\"\nassert solution(\"6 1\\n7\\n\") == \"6\"\nassert solution(\"6 1\\n8\\n\") == \"8\"\nassert solution(\"6 1\\n9\\n\") == \"10\"\nassert solution(\"6 1\\n10\\n\") == \"10\"\nassert solution(\"6 1\\n11\\n\") == \"10\"\nassert solution(\"6 1\\n12\\n\") == \"12\"\nassert solution(\"6 1\\n13\\n\") == \"12\"\nassert solution(\"6 1\\n14\\n\") == \"14\"\nassert solution(\"6 1\\n15\\n\") == \"14\"\nassert solution(\"6 1\\n16\\n\") == \"16\"\nassert solution(\"6 1\\n17\\n\") == \"16\"\nassert solution(\"6 1\\n18\\n\") == \"16\"\nassert solution(\"6 1\\n19\\n\") == \"18\"\nassert solution(\"6 1\\n20\\n\") == \"20\"\nassert solution(\"6 1\\n21\\n\") == \"22\"\nassert solution(\"6 1\\n22\\n\") == \"22\"\nassert solution(\"6 1\\n23\\n\") == \"24\"\nassert solution(\"6 1\\n24\\n\") == \"24\"\nassert solution(\"6 1\\n25\\n\") == \"24\"\nassert solution(\"6 1\\n26\\n\") == \"26\"\nassert solution(\"6 1\\n27\\n\") == \"26\"\nassert solution(\"6 1\\n28\\n\") == \"28\"\nassert solution(\"6 1\\n29\\n\") == \"28\"\nassert solution(\"6 1\\n30\\n\") == \"30\"\nassert solution(\"6 1\\n31\\n\") == \"30\"\nassert solution(\"6 1\\n32\\n\") == \"30\"\nassert solution(\"6 1\\n33\\n\") == \"30\"\nassert solution(\"6 1\\n34\\n\") == \"32\"\nassert solution(\"6 1\\n35\\n\") == \"32\"\nassert solution(\"6 1\\n36\\n\") == \"32\"\nassert solution(\"6 1\\n37\\n\") == \"32\"\nassert solution(\"6 1\\n38\\n\") == \"34\"\nassert solution(\"6 1\\n39\\n\") == \"34\"\nassert solution(\"6 1\\n40\\n\") == \"34\"\nassert solution(\"6 1\\n41\\n\") == \"36\"\nassert solution(\"6 1\\n42\\n\") == \"36\"\nassert solution(\"6 1\\n43\\n\") == \"36\"\nassert solution(\"6 1\\n44\\n\") == \"38\"\nassert solution(\"6 1\\n45\\n\") == \"38\"\nassert solution(\"6 1\\n46\\n\") == \"38\"\nassert solution(\"6 1\\n47\\n\") == \"38\"\nassert solution(\"6 1\\n48\\n\") == \"40\"\nassert solution(\"6 1\\n49\\n\") == \"40\"\nassert solution(\"6 1\\n50\\n\") == \"40\"\nassert solution(\"6 1\\n51\\n\") == \"42\"\nassert solution(\"6 1\\n52\\n\") == \"42\"\nassert solution(\"6 1\\n53\\n\") == \"42\"\nassert solution(\"6 1\\n54\\n\") == \"44\"\nassert solution(\"6 1\\n55\\n\") == \"44\"\nassert solution(\"6 1\\n56\\n\") == \"44\"\nassert solution(\"6 1\\n57\\n\")",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n3\\n\") == \"4\"\n\nThe solution provided is correct. The problem statement asks us to count the number of ways to climb up the stairs without setting foot on the broken steps. We can solve this problem by iterating through the staircase and checking if we have reached the top step. If we have reached the top step, we increment our counter. Otherwise, we move on to the next step. \n\nTo find the count modulo 1 000 000 007, we need to multiply our count by 1 000 000 007, and then divide by 1 000 000 007. \n\nHere's the Python code to implement this:",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\", \"Error: Expected output: 4, but got: \" + solution(input())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 4\") == \"2\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"3 4 6\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"1 3 3\") == \"0\"\nassert solution(\"1 4 4\") == \"1\"\nassert solution(\"5 6 7\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"7 3 5\") == \"3\"\nassert solution(\"8 2 -2\") == \"2\"\nassert solution(\"9 3 5\") == \"1\"\nassert solution(\"10 10 1\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 4\") == \"2\\n\"\nassert solution(\"1 2 3\") == \"1\\n\"\nassert solution(\"2 3 4\") == \"0\\n\"\nassert solution(\"3 4 5\") == \"1\\n\"\nassert solution(\"4 5 6\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes.\"\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes.\"",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\nassert solution(2128506) == 3",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"",
        "num_ids_2": 72,
        "num_ids_4": 152
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(11) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\n\nassert solution(14) == 0, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\n\nassert solution(61441) == 2, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\n\nassert solution(571576) == 10, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"\n\nassert solution(2128506) == 3, \"Programmers' kids solve this riddle in 5-10 minutes. How fast can you do it?\"",
        "num_ids_2": 72,
        "num_ids_4": 152
    },
    {
        "number": 4070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == 2, \"Test 1\"\nassert solution(14) == 0, \"Test 2\"\nassert solution(61441) == 2, \"Test 3\"\nassert solution(571576) == 10, \"Test 4\"\nassert solution(2128506) == 3, \"Test 5\"",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1, \"The output should be 1\"\nassert solution(\"3\") == 27, \"The output should be 27\"\nassert solution(\"4\") == \"Invalid input. Please enter an integer.\"\nassert solution(\"a\") == \"Invalid input. Please enter an integer.\"\nassert solution(\"30\") == \"Invalid input. Please enter an integer.\"",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == 27\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 27, \"The function should return 27, but it returns \" + str(solution(3)) + \".\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 27, \"Test failed. The solution should return 27\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == 27",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"1\"\nassert solution(927) == \"1\"\nassert solution(48) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == 1\nassert solution(927) == 1\nassert solution(48) == 0",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == 1, \"Test case 1 failed\"\nassert solution(\"927\") == 1, \"Test case 2 failed\"\nassert solution(\"48\") == 0, \"Test case 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"1\", \"Test 1: Correct output for input 13\"\nassert solution(\"927\") == \"1\", \"Test 2: Correct output for input 927\"\nassert solution(\"48\") == \"0\", \"Test 3: Correct output for input 48\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\") == 1, \"Output 1\"\nassert solution(\"927\") == 1, \"Output 1\"\nassert solution(\"48\") == 0, \"Output 0\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"5 2 4 3\") == \"4\"\nassert solution(\"1 2 5 4\") == \"4\"\nassert solution(\"3 4 5 1\") == \"4\"\nassert solution(\"5 3 1 2\") == \"4\"\nassert solution(\"4 3 5 2\") == \"4\"\nassert solution(\"4 1 2 5\") == \"4\"\nassert solution(\"1 5 2 3\") == \"4\"\nassert solution(\"3 2 1 5\") == \"4\"\nassert solution(\"2 4 5 3\") == \"4\"\nassert solution(\"1 3 4 5\") == \"4\"\nassert solution(\"5 1 2 3\") == \"4\"\nassert solution(\"2 5 1 4\") == \"4\"\nassert solution(\"5 4 3 2\") == \"4\"\nassert solution(\"1 4 5 2\") == \"4\"\nassert solution(\"4 5 3 1\") == \"4\"\nassert solution(\"3 5 1 4\") == \"4\"\nassert solution(\"1 5 3 2\") == \"4\"\nassert solution(\"4 2 3 5\") == \"4\"\nassert solution(\"2 1 5 3\") == \"4\"\nassert solution(\"3 4 2 5\") == \"4\"\nassert solution(\"5 2 3 1\") == \"4\"\nassert solution(\"4 1 5 3\") == \"4\"\nassert solution(\"5 4 2 1\") == \"4\"\nassert solution(\"3 1 4 2\") == \"4\"\nassert solution(\"4 5 2 3\") == \"4\"\nassert solution(\"3 5 4 2\") == \"4\"\nassert solution(\"2 4 1 5\") == \"4\"\nassert solution(\"5 1 3 4\") == \"4\"\nassert solution(\"4 1 2 5\") == \"4\"\nassert solution(\"1 3 2 5\") == \"4\"\nassert solution(\"5 3 4 2\") == \"4\"\nassert solution(\"5 1 3 2\") == \"4\"\nassert solution(\"1 3 5 2\") == \"4\"\nassert solution(\"3 1 2 5\") == \"4\"\nassert solution(\"4 2 5 1\") == \"4\"\nassert solution(\"2 1 3 5\") == \"4\"\nassert solution(\"5 4 2 3\") == \"4\"\nassert solution(\"5 3 1 4\") == \"4\"\nassert solution(\"4 1 2 5\") == \"4\"\nassert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"1 2 3 5\") == \"4\"\nassert solution(\"4 3 5 1\") == \"4\"\nassert solution(\"2 1 5 4\") == \"4\"\nassert solution(\"5 2 4 1\") == \"4\"\nassert solution(\"1 4 2 5\") == \"4\"\nassert solution(\"3 2 5 1\") == \"4\"\nassert solution(\"5 1 2 4\") == \"4\"\nassert solution(\"2 5 4 3\") == \"4\"\nassert solution(\"3 1 5 2\") == \"4\"\nassert solution(\"1 4 5 3\") == \"4\"\nassert solution(\"5 3 2 1\") == \"4\"\nassert solution(\"1 3 4 5\") == \"4\"\nassert solution(\"3 5 2 4\") == \"4\"\nassert solution(\"1 2 5 4\") == \"4\"\nassert solution(\"4 2 5 3\") == \"4\"\nassert solution(\"2 3 4 5\") == \"4\"\nassert solution(\"4 5 1 2\") == \"4\"\nassert solution(\"5 3 1 2\") == \"4\"\nassert solution(\"2 3 1 5\") == \"4\"\nassert solution(\"3 4 5 1\") == \"4\"\nassert solution(\"4 2 5 1\") == \"4\"\nassert solution(\"1 5 2 3\") == \"4\"\nassert solution(\"4 3 5 2\") == \"4\"\nassert solution",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 4\nassert solution(5) == 5\nassert solution(6) == 10\nassert solution(7) == \"ABRACADABRA\"\nassert solution(8) == \"NO\"\nassert solution(9) == 0",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 4, \"DO YOU EXPECT ME TO FIND THIS OUT?\"\n\nassert solution(5) == 5, \"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\"\n\nassert solution(6) == 6, \"DON'T BYTE OF MORE THAN YOU CAN CHEW\"\n\nassert solution(7) == 7, \"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS\"\n\nassert solution(8) == 8, \"SAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\"\n\nassert solution(9) == 9, \"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\"\n\nassert solution(10) == 10, \"I HAVE NO ARRAY AND I MUST SCREAM\"",
        "num_ids_2": 43,
        "num_ids_4": 96
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 5 3 1\") == 4",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 3 1\") == 4\nassert solution(\"DO YOU EXPECT ME TO FIND THIS OUT?\") == 3\nassert solution(\"WHAT BASE AND/XOR LANGUAGE INCLUDES string?\") == 5\nassert solution(\"DON'T BYTE OF MORE THAN YOU CAN CHEW\") == 13\nassert solution(\"YOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\") == 7\nassert solution(\"SAYING ABRACADABRA WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\") == 26\nassert solution(\"THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\") == 20\nassert solution(\"I HAVE NO ARRAY AND I MUST SCREAM\") == 0\n",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\n\nDO YOU EXPECT ME TO FIND THIS OUT?\n\nYes, I expected you to find a solution that includes the given string. Here's a possible solution:\n\n```python\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"The answer is not correct\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\\n\"\nassert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\\n\"\n\nsolution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") # This is the correct output.",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\\n8\\n1\\n999999733\\n1\"\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n8\\n1\\n999999733\\n1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\\n\"\nassert solution(\"3 4\\n4 5\\n5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"21\\n\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\") == \"186\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 236
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    2 1 2\n    1 2\n    0 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    2 1 2\n    1 2\n    0 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    2 1 2\n    1 2\n    0 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    1 1 2\n    1 2\n    0 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    1 1 1\n    1 2\n    0 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    2 3\n    1 1 1\n    2 2\n    0 1\n    \"\"\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n2 1 2\\n1 1\") == \"2\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"1 2\\n2 3\\n4 5\") == \"4\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"12\"\n",
        "num_ids_2": 58,
        "num_ids_4": 103
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Error: Input and output do not match.\\nInput: {input()}\\nOutput: {output()}\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\\n\") == \"1\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\nassert solution(\"4 2\\n1 2\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\"4 2\\n1 2\\n1 3\\n2 3\\n\\n\") == \"1\"\nassert solution(\"4 2\\n1 2\\n1 3\\n2 3\\n\\n\") == \"1\"\nassert solution(\"4 2\\n1 2\\n1 3\\n2 3\\n\\n\") == \"1\"\n",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"1\\n\", \"Sample output should be 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.00000000000000000000'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 1 10 30\") == \"2.0000000000000000000\"\nassert solution(\"5 2 10 30\") == \"1.0000000000000000000\"\nassert solution(\"5 3 10 30\") == \"0.0000000000000000000\"\nassert solution(\"5 4 10 30\") == \"0.0000000000000000000\"",
        "num_ids_2": 75,
        "num_ids_4": 151
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.00000000000000000000\", \"Test case 1 failed\"\n\nassert solution(input()) == \"5.00000000000000000000\", \"Test case 2 failed\"\n\nassert solution(input()) == \"5.00000000000000000000\", \"Test case 3 failed\"\n\nassert solution(input()) == \"5.00000000000000000000\", \"Test case 4 failed\"\n\nassert solution(input()) == \"5.00000000000000000000\", \"Test case 5 failed\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '5.00000000000000000000', 'Your solution is wrong.'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5.00000000000000000000\\n'\nassert solution(stdin) == '5.00000000000000000000\\n'\nassert solution(stdin) == '5.00000000000000000000\\n'\nassert solution(stdin) == '5.00000000000000000000\\n'\nassert solution(stdin) == '5.00000000000000000000\\n'",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\\n\", \"Test 1\"\n\nassert solution(\"6 7 9 0\") == \"25.0000000000000000000\\n\", \"Test 2\"\n\nassert solution(\"10 10 9 0\") == \"90.0000000000000000000\\n\", \"Test 3\"\n\nassert solution(\"3 4 11 0\") == \"75.0000000000000000000\\n\", \"Test 4\"\n\nassert solution(\"3 4 12 0\") == \"72.8571428571428571428\\n\", \"Test 5\"",
        "num_ids_2": 88,
        "num_ids_4": 179
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\", \"Test Case 1\"\nassert solution(\"3 4 7 0\") == \"4.00000000000000000000\", \"Test Case 2\"\nassert solution(\"3 4 0 0\") == \"0.00000000000000000000\", \"Test Case 3\"\nassert solution(\"3 4 5 0\") == \"1.25000000000000000000\", \"Test Case 4\"\nassert solution(\"3 4 11 0\") == \"12.5000000000000000000\", \"Test Case 5\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 4 9 0\") == \"5.00000000000000000000\"\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.00000000000000000000\", \"Test failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9 0\") == \"5\"\nprint(\"All test cases passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 94
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Output\\n8\"\nprint(\"All tests passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output: 8\\n\", \"Your solution is not correct.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\", \"Incorrect output\"\nassert solution(input()) == \"6\", \"Incorrect output\"\nassert solution(input()) == \"97\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 88
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output\\n8'\nassert solution(input()) == 'Output\\n97'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"8\"\nassert solution(3) == \"6\"\nassert solution(15) == \"97\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\\n\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\\n\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 100
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2\\n\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 136
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\nassert solution() == \"7\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '6\\n2\\n1 4'\nassert solution() == '7\\n2\\n3 2'\nassert solution() == '0'",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 4\n    2 -2 3 1 2\n    1 3\n    4 5\n    2 5\n    1 3\n\"\"\") == \"\"\"\n    6\n    2\n    1 4\n\"\"\"\n\nassert solution(\"\"\"\n    5 4\n    2 -2 3 1 4\n    3 5\n    3 4\n    2 4\n    2 5\n\"\"\") == \"\"\"\n    7\n    2\n    3 2\n\"\"\"\n\nassert solution(\"\"\"\n    1 0\n    1000000\n\"\"\") == \"\"\"\n    0\n    0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\\n7\\n2\\n3 2\\n\\n0\\n0\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2\\n\\n0\\n0\\n\"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 135,
        "num_ids_4": 161
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n1 4 \\n7\\n2\\n3 2 \\n0\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2 \\n0\\n\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\\n\"",
        "num_ids_2": 127,
        "num_ids_4": 155
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"\"\"6\n2\n1 4\n\"\"\"\n\nassert solution(\"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\"\"\") == \"\"\"7\n2\n3 2\n\"\"\"\n\nassert solution(\"\"\"\n1 0\n1000000\n\"\"\") == \"\"\"0\n0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n1 4\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2\\n\"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n1 4\\n'\n\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2\\n'\n\nassert solution('1 0\\n1000000') == '0\\n0\\n'",
        "num_ids_2": 106,
        "num_ids_4": 132
    },
    {
        "number": 4078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([5, 4] + [[1, 3]] + [[2, 5], [2, 4], [2, 5]] + [[3, 4], [3, 4], [3, 4]]) == 6\nassert solution([5, 4] + [[2, -2], [2, -2], [2, -2]]) == 7\nassert solution([1, 0] + [[1000000, 1000000, 1000000]]) == 0\n",
        "num_ids_2": 88,
        "num_ids_4": 128
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    8\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n    \"\"\"\n) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    abc\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n    \"\"\"\n) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    abc\n    xyz\n    r\n    dabcef\n    def\n    def\n    def\n    def\n    \"\"\"\n) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    abc\n    xyz\n    r\n    dabcef\n    def\n    def\n    def\n    def\n    ghi\n    \"\"\"\n) == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    abc\n    xyz\n    r\n    dabcef\n    def\n    def\n    def\n    def\n    ghij\n    \"\"\"\n) == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', got: '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test {test_case_num} failed. Output: '{output}', Expected: '{expected}'\" for test_case_num, (input(), output, expected) in enumerate(tests)",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"fced\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"xyz\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"r\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"dabcef\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"az\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"aa\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"bad\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\nassert solution(\"babc\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\")\n",
        "num_ids_2": 91,
        "num_ids_4": 182
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"8\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\"\"\"\n) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('fced') == 'Yes'\\nassert solution('xyz') == 'Yes'\\nassert solution('r') == 'Yes'\\nassert solution('dabcef') == 'Yes'\\nassert solution('az') == 'Yes'\\nassert solution('aa') == 'Yes'\\nassert solution('bad') == 'Yes'\\nassert solution('babc') == 'Yes'\\nassert solution('dabecfa') == 'No'\\nassert solution('aabbccd') == 'No'\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('fced') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'Yes'\nassert solution('aa') == 'Yes'\nassert solution('bad') == 'Yes'\nassert solution('babc') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'Yes'\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"bad\") == \"No\"\nassert solution(\"babc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(8) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not any(c == 'a' or c == 'z' for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not any(c == 'a' or c == 'z' or (c == 'a' and c == 'z') for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not any(c.isalpha() and c.lower() == c for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not all(c.isalpha() and c.lower() == c.upper() for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not all(c.isalpha() and c.islower() for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not any(c.isalpha() and c.islower() for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not any(c.isalpha() and c.isupper() for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' if not any(c.isalpha() and c.isupper() for c in stdin) else 'Yes'\\n\\nif __name__ == '__main__':\\n    for _ in range(int(stdin.strip())):\\n        print(solution(input()))\\n\\n# Test cases:\\nassert solution(8) == 'No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\ndef solution(stdin: str) -> str:\\n    return 'No' ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1 \"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 2 \"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"",
        "num_ids_2": 104,
        "num_ids_4": 128
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n2\\n4 1\"\nassert solution(stdin) == \"7\\n2\\n3 2\"\nassert solution(stdin) == \"0\\n0\"",
        "num_ids_2": 36,
        "num_ids_4": 49
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\") == \"6\\n2\\n4 1 \"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\\n2\\n3 2 \"\nassert solution(\"1 0\\n1000000\") == \"0\\n0\"\n\nfrom typing import List",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n2\\n4 1\\n7\\n2\\n3 2\\n0\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '''\n6\n2\n4 1\n'''\n\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '''\n7\n2\n3 2\n'''\n\nassert solution('''\n1 0\n1000000\n''') == '''\n0\n0\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"6\\n2\\n4 1 \\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n4 1 '\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2 '\nassert solution('1 0\\n1000000') == '0\\n0'",
        "num_ids_2": 102,
        "num_ids_4": 126
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4\\nLRRR\\n'\nassert solution('7\\n1 3 5 6 7 4 2\\n') == '7\\nLRLRLLL\\n'\nassert solution('3\\n1 2 3\\n') == '3\\nLLL\\n'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL\\n'",
        "num_ids_2": 65,
        "num_ids_4": 117
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"[2, 1, 5, 4, 3]\") == \"4\"\nassert solution(\"[1, 3, 5, 6, 7, 4, 2]\") == \"7\"\nassert solution(\"[1, 2, 3]\") == \"3\"\nassert solution(\"[1, 2, 4, 3]\") == \"4\"",
        "num_ids_2": 50,
        "num_ids_4": 85
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"\n",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5]) == '4'\nassert solution([2, 1, 5, 4, 3]) == '4'\nassert solution([1, 3, 5, 6, 7, 4, 2]) == '7'\nassert solution([1, 2, 3]) == '3'\nassert solution([1, 2, 4, 3]) == '4'",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\nLRRR\"\nassert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLRLRLLL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"",
        "num_ids_2": 57,
        "num_ids_4": 101
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 5 4 3\\n7\\n1 3 5 6 7 4 2\\n3\\n1 2 3\\n4\\n1 2 4 3') == '4\\nLRRR'\nassert solution('7\\n1 3 5 6 7 4 2\\n3\\n1 2 3\\n4\\n1 2 4 3') == '7\\nLRLRLLL'\nassert solution('3\\n1 2 3\\n4\\n1 2 4 3') == '3\\nLLL'\nassert solution('4\\n1 2 4 3\\n') == '4\\nLLRL'",
        "num_ids_2": 119,
        "num_ids_4": 177
    },
    {
        "number": 4081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == str(input())\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 5 3 4\\n2\\n1 2\\n7\\n6 5 4 3 2 4 3\\n2\\n') == '4'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('7\\n6 5 4 3 2 4 3\\n') == '2'\n",
        "num_ids_2": 69,
        "num_ids_4": 96
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"5\\n1\\n2\\n5\\n3\\n4\") == \"4\"\nassert solution(\"7\\n6\\n5\\n4\\n3\\n2\\n4\\n3\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 79
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\nassert solution(6) == 6\nassert solution(7) == 7\nassert solution(8) == 8\nassert solution(9) == 9\nassert solution(10) == 10\nassert solution(11) == 11\nassert solution(12) == 12\nassert solution(13) == 13\nassert solution(14) == 14\nassert solution(15) == 14\nassert solution(16) == 15\nassert solution(17) == 16\nassert solution(18) == 16\nassert solution(19) == 16\nassert solution(20) == 17\nassert solution(21) == 17\nassert solution(22) == 17\nassert solution(23) == 17\nassert solution(24) == 18\nassert solution(25) == 18\nassert solution(26) == 18\nassert solution(27) == 18\nassert solution(28) == 19\nassert solution(29) == 19\nassert solution(30) == 19\nassert solution(31) == 20\nassert solution(32) == 20\nassert solution(33) == 20\nassert solution(34) == 21\nassert solution(35) == 21\nassert solution(36) == 21\nassert solution(37) == 21\nassert solution(38) == 22\nassert solution(39) == 22\nassert solution(40) == 22\nassert solution(41) == 22\nassert solution(42) == 23\nassert solution(43) == 23\nassert solution(44) == 23\nassert solution(45) == 23\nassert solution(46) == 24\nassert solution(47) == 24\nassert solution(48) == 24\nassert solution(49) == 24\nassert solution(50) == 25\nassert solution(51) == 25\nassert solution(52) == 25\nassert solution(53) == 25\nassert solution(54) == 26\nassert solution(55) == 26\nassert solution(56) == 26\nassert solution(57) == 26\nassert solution(58) == 27\nassert solution(59) == 27\nassert solution(60) == 27\nassert solution(61) == 27\nassert solution(62) == 28\nassert solution(63) == 28\nassert solution(64) == 28\nassert solution(65) == 28\nassert solution(66) == 29\nassert solution(67) == 29\nassert solution(68) == 29\nassert solution(69) == 29\nassert solution(70) == 30\nassert solution(71) == 30\nassert solution(72) == 30\nassert solution(73) == 30\nassert solution(74) == 31\nassert solution(75) == 31\nassert solution(76) == 31\nassert solution(77) == 31\nassert solution(78) == 32\nassert solution(79) == 32\nassert solution(80) == 32\nassert solution(81) == 32\nassert solution(82) == 33\nassert solution(83) == 33\nassert solution(84) == 33\nassert solution(85) == 33\nassert solution(86) == 34\nassert solution(87) == 34\nassert solution(88) == 34\nassert solution(89) == 34\nassert solution(90) == 35\nassert solution(91) == 35\nassert solution(92) == 35\nassert solution(93) == 35\nassert solution(94) == 36\nassert solution(95) == 36",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''5\n1 2 5 3 4''') == '4\\n'\nassert solution(r'''2\n1 2''') == '2\\n'\nassert solution(r'''7\n6 5 4 3 2 4 3''') == '2\\n'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 5 3 4\\n\\n2\\n1 2\\n\\n7\\n6 5 4 3 2 4 3\") == \"4\"\nassert solution(\"2\\n1 2\\n\\n7\\n6 5 4 3 2 4 3\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"",
        "num_ids_2": 86,
        "num_ids_4": 111
    },
    {
        "number": 4082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('example1.txt', 'r')) == '4'\nassert solution(open('example2.txt', 'r')) == '2'\nassert solution(open('example3.txt', 'r')) == '2'\nassert solution(open('example4.txt', 'r')) == '4'\nassert solution(open('example5.txt', 'r')) == '2'",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == 1\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == 2\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == 0",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected '{output()}' but got '{solution(input())}'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == 1\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == 2\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == 0",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n5 3\\n1 2 2 4 5\\n\\nOutput\\n1\\n\\nInput\\n5 3\\n1 2 3 4 5\\n\\nOutput\\n2\\n\\nInput\\n5 3\\n1 2 3 3 3\\n\\nOutput\\n0\\n') == 'Output\\n1\\n\\nOutput\\n2\\n\\nOutput\\n0\\n'",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\"\nassert solution(\"1\\n2\\n3\\n3\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\\n3\\n4\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\", \"Sample Output is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 4 6\") == \"2\"\nassert solution(\"1 2 2\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\", \"Test case 1 failed\"\nassert solution(\"8 2 3\") == \"3\", \"Test case 2 failed\"\nassert solution(\"8 1 2\") == \"2\", \"Test case 3 failed\"\nassert solution(\"8 0 1\") == \"1\", \"Test case 4 failed\"\nassert solution(\"8 5 6\") == \"2\", \"Test case 5 failed\"\nassert solution(\"8 7 8\") == \"4\", \"Test case 6 failed\"\nassert solution(\"8 0 0\") == \"0\", \"Test case 7 failed\"\nassert solution(\"10 2 0\") == \"1\", \"Test case 8 failed\"\nassert solution(\"50 10 0\") == \"1\", \"Test case 9 failed\"\nassert solution(\"100 100 100\") == \"1\", \"Test case 10 failed\"\nassert solution(\"1000000 1000000 1000000\") == \"1\", \"Test case 11 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('6 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('10 10 10') == '100000'\nassert solution('1000000000 1000000000 1000000000') == '1000000000'",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8 3 4) == \"4\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"4\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected output: {}, Received: {}\".format(output(), solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\\n\", \"The output should be 4, but it's not.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, \"Output doesn't match the expected output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n2\\n\\n3\\n10\\n2\\n15\\n\\n\") == \"48\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\",
        "num_ids_2": 61,
        "num_ids_4": 1027
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed: {solution(stdin)}\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=stdin) == output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\") == \"48\\n4\"\nassert solution(\"5\\n8\\n8 2 12 6 4 24 16 3\\n2\") == \"-1\"\nassert solution(\"5\\n8\\n8 2 12 6 4 24 16 3\\n4\") == \"48\\n4\"\n\nfrom typing import List",
        "num_ids_2": 79,
        "num_ids_4": 119
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"48\"\nassert solution(\"1\\n2\\n\") == \"-1\"\nassert solution(\"10\\n5\\n1 10 15\\n5 15\\n\") == \"45\"\nassert solution(\"10\\n3\\n\") == \"4\"\nassert solution(\"10\\n4\\n\") == \"48\"\nassert solution(\"10\\n5\\n1 10 15\\n5 15\\n\") == \"45\"\nassert solution(\"10\\n3\\n\") == \"4\"\nassert solution(\"10\\n4\\n\") == \"48\"\nassert solution(\"10\\n5\\n1 10 15\\n5 15\\n\") == \"45\"\nassert solution(\"10\\n3\\n\") == \"4\"\nassert solution(\"10\\n4\\n\") == \"48\"\nassert solution(\"10\\n5\\n1 10 15\\n5 15\\n\") == \"45\"",
        "num_ids_2": 54,
        "num_ids_4": 102
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"48\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"48\\n4\"\nassert solution() == \"4\\n-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\\n1\\n6\") == \"1\\n6 \"\nassert solution(\"6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\\n1\\n6\") == \"1\\n6 \"",
        "num_ids_2": 110,
        "num_ids_4": 204
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n\") == \"3\\n5 6 1\\n\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n2 4\\n\"\nassert solution(\"5\\n6 6 6 6 6\\n\") == \"1\\n6\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 92
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1 \"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4 \"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6 \"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''3\n5 6 1 '''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n2 4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\\n6\"",
        "num_ids_2": 56,
        "num_ids_4": 80
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n6\\n1 5 5 1 6 1\\n\\nOutput\\n3\\n5 6 1 \\n\\nInput\\n5\\n2 4 2 4 4\\n\\nOutput\\n2\\n2 4 \\n\\nInput\\n5\\n6 6 6 6 6\\n\\nOutput\\n1\\n6') == 'Output\\n3\\n5 6 1 \\n2\\n2 4 \\n1\\n6\\n'",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\\n5\\n2 4 2 4 4\\n5\\n6 6 6 6 6\\n1\\n6\\n\") == \"3\\n5 6 1\\n2\\n2 4\\n1\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '2'\nassert solution(5) == '2'\nassert solution(6) == '1'\nassert solution(7) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(432) == '435'\nassert solution(99) == '103'\nassert solution(237) == '237'\nassert solution(42) == '44'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(432) == 435\nassert solution(99) == 103\nassert solution(237) == 237\nassert solution(42) == 44",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(432) == \"435\"\nassert solution(99) == \"103\"\nassert solution(237) == \"237\"\nassert solution(42) == \"44\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"ab\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"aac\") == \"aac\"\n\nfor _ in range(int(input())):\n    s = input()\n    m = int(input())\n    b = [int(x) for x in input().split()]\n    \n    if any(t == s[i:j] for i in range(m) for j in range(i+1, m+1) if s[i] < s[j]):\n        t = ''.join(sorted(s[i] for i in range(m) if s[i:j] > t[i:j]))\n        print(\" \".join(t))\n    else:\n        print(\"No\")",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"aac\" or solution(stdin) == \"b\" or solution(stdin) == \"aba\" or solution(stdin) == \"codeforces\", f\"Invalid answer: {solution(stdin)}\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Test case {i+1} failed: solution({input_string}), expected_output({expected_output})\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, expected_output)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"aac\\nb\\naba\\ncodeforces\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\\nb\\aba\\codeforces\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abac\") == \"aac\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"abba\") == \"aba\"\nassert solution(\"ecoosdcefr\") == \"aba\"\nassert solution(\"a\") == \"a\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected {output}, got {solution(input())}.\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2\\n') == 'b'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"1\") == \"a\"\nassert solution(\"9\") == \"zzz\"\nassert solution(\"1000000000000001\") == \"a\"\nassert solution(\"5\") == \"ab\"",
        "num_ids_2": 20,
        "num_ids_4": 56
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"5\") == \"zzz\"\nassert solution(\"6\") == \"zzzz\"\nassert solution(\"10\") == \"zzzz\"\nassert solution(\"20000000000000001\") == \"zzzz\"\n\nfor i in range(1, 1000000000000002):\n    print(f\"Solution for dog number {i}: {solution(str(i))}\")",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'b', \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\n\") == \"b\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"b\", \"Test case 1 failed\"\nassert solution(input()) == \"ab\", \"Test case 2 failed\"\nassert solution(input()) == \"z\", \"Test case 3 failed\"\nassert solution(input()) == \"zz\", \"Test case 4 failed\"\nassert solution(input()) == \"zy\", \"Test case 5 failed\"\nassert solution(input()) == \"zzz\", \"Test case 6 failed\"\nassert solution(input()) == \"zzy\", \"Test case 7 failed\"\nassert solution(input()) == \"aaa\", \"Test case 8 failed\"\nassert solution(input()) == \"aab\", \"Test case 9 failed\"\nassert solution(input()) == \"aac\", \"Test case 10 failed\"\nassert solution(input()) == \"aba\", \"Test case 11 failed\"\nassert solution(input()) == \"abb\", \"Test case 12 failed\"\nassert solution(input()) == \"abc\", \"Test case 13 failed\"\nassert solution(input()) == \"abd\", \"Test case 14 failed\"\nassert solution(input()) == \"abe\", \"Test case 15 failed\"\nassert solution(input()) == \"abf\", \"Test case 16 failed\"\nassert solution(input()) == \"aca\", \"Test case 17 failed\"\nassert solution(input()) == \"acb\", \"Test case 18 failed\"\nassert solution(input()) == \"acc\", \"Test case 19 failed\"\nassert solution(input()) == \"acd\", \"Test case 20 failed\"\nassert solution(input()) == \"ace\", \"Test case 21 failed\"\nassert solution(input()) == \"acf\", \"Test case 22 failed\"\nassert solution(input()) == \"ada\", \"Test case 23 failed\"\nassert solution(input()) == \"adb\", \"Test case 24 failed\"\nassert solution(input()) == \"adc\", \"Test case 25 failed\"\nassert solution(input()) == \"adb\", \"Test case 26 failed\"\nassert solution(input()) == \"adb\", \"Test case 27 failed\"\nassert solution(input()) == \"adb\", \"Test case 28 failed\"\nassert solution(input()) == \"adb\", \"Test case 29 failed\"\nassert solution(input()) == \"adb\", \"Test case 30 failed\"\nassert solution(input()) == \"adb\", \"Test case 31 failed\"\nassert solution(input()) == \"adb\", \"Test case 32 failed\"\nassert solution(input()) == \"adb\", \"Test case 33 failed\"\nassert solution(input()) == \"adb\", \"Test case 34 failed\"\nassert solution(input()) == \"adb\", \"Test case 35 failed\"\nassert solution(input()) == \"adb\", \"Test case 36 failed\"\nassert solution(input()) == \"adb\", \"Test case 37 failed\"\nassert solution(input()) == \"adb\", \"Test case 38 failed\"\nassert solution(input()) == \"adb\", \"Test case 39 failed\"\nassert solution(input()) == \"adb\", \"Test case 40 failed\"\nassert solution(input()) == \"adb\", \"Test case 41 failed\"\nassert solution(input()) == \"adb\", \"Test case 42 failed\"\nassert solution(input()) == \"adb\", \"Test case 43 failed\"\nassert solution(input()) == \"adb\", \"Test case 44 failed\"\nassert solution(input()) == \"adb\", \"Test case 45 failed\"\nassert solution(input()) == \"adb\", \"Test case 46 failed\"\nassert solution(input()) == \"adb\", \"Test case 47 failed\"\nassert solution(input()) == \"adb\", \"Test case 48 failed\"\nassert solution(input()) == \"adb\", \"Test case 49 failed\"\nassert solution(input()) == \"adb\", \"Test case 50 failed\"\nassert solution(input()) == \"adb\", \"Test case 51 failed\"\nassert solution(input()) == \"adb\", \"Test case 52 failed\"\nassert solution(input()) == \"adb\", \"Test case 53 failed\"\nassert solution(input()) == \"adb\", \"Test case 54 failed\"\nassert solution(input()) == \"adb\", \"Test case 55 failed\"\nassert solution(input()) == \"adb\", \"Test case 56 failed\"\nassert solution(input()) == \"adb\", \"Test case 57 failed\"\nassert solution(input()) == \"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"b\", \"The correct answer is b\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n\") == \"b\"\nassert solution(stdin=\"10000000000000001\\n\") == \"zy\"\nassert solution(stdin=\"10000000000000002\\n\") == \"zzz\"\nassert solution(stdin=\"10000000000000003\\n\") == \"zzzy\"\nassert solution(stdin=\"10000000000000004\\n\") == \"zzzz\"\nassert solution(stdin=\"10000000000000005\\n\") == \"zzzzy\"\nassert solution(stdin=\"10000000000000006\\n\") == \"zzzzz\"\nassert solution(stdin=\"10000000000000007\\n\") == \"aaaaaaaa\"\nassert solution(stdin=\"10000000000000008\\n\") == \"aaaaab\"\nassert solution(stdin=\"10000000000000009\\n\") == \"aaaaaaaaa\"\nassert solution(stdin=\"10000000000000010\\n\") == \"aaaaaaaaaa\"\nassert solution(stdin=\"10000000000000011\\n\") == \"aaaaaaaaab\"\nassert solution(stdin=\"10000000000000012\\n\") == \"aaaaaaaaac\"\nassert solution(stdin=\"10000000000000013\\n\") == \"aaaaaaaaad\"\nassert solution(stdin=\"10000000000000014\\n\") == \"aaaaaaaaae\"\nassert solution(stdin=\"10000000000000015\\n\") == \"aaaaaaaaaf\"\nassert solution(stdin=\"10000000000000016\\n\") == \"aaaaaaaaag\"\nassert solution(stdin=\"10000000000000017\\n\") == \"aaaaaaaaah\"\nassert solution(stdin=\"10000000000000018\\n\") == \"aaaaaaaaai\"\nassert solution(stdin=\"10000000000000019\\n\") == \"aaaaaaaaaj\"\nassert solution(stdin=\"10000000000000020\\n\") == \"aaaaaaaaak\"\nassert solution(stdin=\"10000000000000021\\n\") == \"aaaaaaaaal\"\nassert solution(stdin=\"10000000000000022\\n\") == \"aaaaaaaaam\"\nassert solution(stdin=\"10000000000000023\\n\") == \"aaaaaaaaan\"\nassert solution(stdin=\"10000000000000024\\n\") == \"aaaaaaaaao\"\nassert solution(stdin=\"10000000000000025\\n\") == \"aaaaaaaaap\"\nassert solution(stdin=\"10000000000000026\\n\") == \"aaaaaaaaaq\"\nassert solution(stdin=\"10000000000000027\\n\") == \"aaaaaaaaar\"\nassert solution(stdin=\"10000000000000028\\n\") == \"aaaaaaaaas\"\nassert solution(stdin=\"10000000000000029\\n\") == \"aaaaaaaaat\"\nassert solution(stdin=\"10000000000000030\\n\") == \"aaaaaaaaau\"\nassert solution(stdin=\"10000000000000031\\n\") == \"aaaaaaaaav\"\nassert solution(stdin=\"10000000000000032\\n\") == \"aaaaaaaaaw\"\nassert solution(stdin=\"10000000000000033\\",
        "num_ids_2": 44,
        "num_ids_4": 106
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"to be or not to be\") == \"12\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nto be or not to be\\n\\n10\\na ab a a b ab a a b c\\n\\n6\\naaa bb aa aa bb bb\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\\n6\\naaa bb aa aa bb bb\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 85,
        "num_ids_4": 104
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"\n",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"to be or not to be\") == \"12\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\"\nassert solution(\"aa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {input_data}!= {expected_output}\" for input_data, expected_output in zip(test_cases, test_results)",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n5 4 2 6 5 1 9 2\\n\") == \"20\\n3 2 3\\n\"\nassert solution(\"5 1\\n1 1 1 1 1\\n\") == \"1\\n5\\n\"\nassert solution(\"4 2\\n1 2000 2000 2\\n\") == \"4000\\n2 2\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 110
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"\n",
        "num_ids_2": 61,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 20\nassert solution(4) == 20\nassert solution(5) == 1\nassert solution(6) == 2\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()))",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"\nassert solution(\"5 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\"",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8 3\n5 4 2 6 5 1 9 2\n\"\"\") == \"20\\n3 2 3\"\n\nassert solution(\"\"\"\n5 1\n1 1 1 1 1\n\"\"\") == \"1\\n5\"\n\nassert solution(\"\"\"\n4 2\n1 2000 2000 2\n\"\"\") == \"4000\\n2 2\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"20\", \"Expected output: '20'\\nGot: '{}'.\".format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n1 1 1 1 1\") == \"1\\n5\"\nassert solution(\"4 2\\n1 2000 2000 2\") == \"4000\\n2 2\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20\\n3 2 3\"\n",
        "num_ids_2": 61,
        "num_ids_4": 98
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"20\\n3 2 3\\n1\\n5\\n4 2\\n1 2000 2000 2\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 -5 3 2') == '1\\n'\nassert solution('5\\n4 -2 3 -9 2') == '0\\n'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6\\n'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3\\n'\n",
        "num_ids_2": 44,
        "num_ids_4": 109
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input {input()} should produce output {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\" # correct result for example 1\nassert solution(input()) == \"0\" # correct result for example 2\nassert solution(input()) == \"0\" # correct result for example 3\nassert solution(input()) == \"6\" # correct result for example 4\nassert solution(input()) == \"3\" # correct result for example 5",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 -5 3 2\") == \"1\"\nassert solution(\"5 4 -2 3 -9 2\") == \"0\"\nassert solution(\"9 -1 1 -1 1 -1 1 1 -1\") == \"6\"\nassert solution(\"8 16 -5 -11 -15 10 5 4 -4\") == \"3\"\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 92
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n4\\n1 -5 3 2\\n\\nOutput\\n1\\n\\nInput\\n5\\n4 -2 3 -9 2\\n\\nOutput\\n0\\n\\nInput\\n9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\\nOutput\\n6\\n\\nInput\\n8\\n16 -5 -11 -15 10 5 4 -4\\n\\nOutput\\n3') == '1\\n\\n0\\n\\n3\\n\\n6'",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    1 -5 3 2\n    ''') == '1\\n'\n\nassert solution('''\n    5\n    4 -2 3 -9 2\n    ''') == '0\\n'\n\nassert solution('''\n    9\n    -1 1 -1 1 -1 1 1 -1 -1\n    ''') == '6\\n'\n\nassert solution('''\n    8\n    16 -5 -11 -15 10 5 4 -4\n    ''') == '3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\\n\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\\n\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\\n\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 -5 3 2\\n') == '1\\n'\nassert solution('5\\n4 -2 3 -9 2\\n') == '0\\n'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6\\n'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4\\n') == '3\\n'",
        "num_ids_2": 48,
        "num_ids_4": 117
    },
    {
        "number": 4092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 -2 3 -9 2\\n9\\n-1 1 -1 1 -1\\n8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\nassert solution(\"5\\n1 -5 3 2\\n10\\n2 -1 100 3 4 -10\\n8\\n16 -5 -11 -15 10 5 4 -4\") == \"0\"\nassert solution(\"4\\n1 -5 3 2\\n10\\n2 -1 100 3 4 -10\\n9\\n-1 1 -1 1 -1\\n8\\n16 -5 -11 -15 10 5 4 -4\") == \"1\"",
        "num_ids_2": 123,
        "num_ids_4": 201
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"10\"\nassert solution() == \"1000000000\"",
        "num_ids_2": 16,
        "num_ids_4": 42
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000\\n'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\n\nassert solution(\"5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\n\nassert solution(\"1\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"",
        "num_ids_2": 187,
        "num_ids_4": 282
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Got: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Test case 1: The correct answer is 0.\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Test case 2: The correct answer is 2.\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Test case 3: The correct answer is 10.\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Test case 4: The correct answer is 1000000000.\"\nassert solution(stdin) == \"0\\n2\\n10\\n1000000000\\n2000000000\", \"Test case 5: The correct answer is 2000000000.\"",
        "num_ids_2": 108,
        "num_ids_4": 226
    },
    {
        "number": 4093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0\\n2\\n10\\n1000000000\\n2000000000', 'The function should return the correct answer.'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\\n\") == \"4\"\nassert solution(\"121\\n\") == \"4\"\nassert solution(\"123\\n\") == \"4\"\nassert solution(\"456\\n\") == \"-1\"\nassert solution(\"12\\n\") == \"-1\"\nassert solution(\"100\\n\") == \"-1\"\nassert solution(\"10100\\n\") == \"100\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101\") == 4\nassert solution(\"\") == -1\nassert solution(\"0\") == -1\nassert solution(\"-1\") == -1\nassert solution(\"9999\") == -1\nassert solution(\"10000\") == -1\nassert solution(\"1100000000\") == -1\nassert solution(\"1234567890\") == -1",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"5\") == \"None of 7, 77, and 777 is a multiple of 5, but 777 is.\"\nassert solution(\"10\") == \"None of 7, 77, and 777 is a multiple of 10, but 777 is.\"\nassert solution(\"50\") == \"4\"\nassert solution(\"1\") == \"None of 7, 77, and 777 is a multiple of 1, but 777 is.\"\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"100\") == \"-1\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\", \"The expected output is 4, but it is {}.\".format(solution(\"101\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"200\") == \"0\"\nassert solution(\"50\") == \"-1\"\nassert solution(\"250\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('101') == '4'\nassert solution('100') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"\n\nfrom typing import List",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect.\"\n\nfrom typing import List",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"",
        "num_ids_2": 46,
        "num_ids_4": 97
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\\n\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\\n\") == \"48\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 4\n2 4 5 3 1\"\"\") == \"4\\n\"\nassert solution(\"\"\"5 5\n1 2 3 4 5\"\"\") == \"1\\n\"\nassert solution(\"\"\"15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\"\"\") == \"48\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4', \"The output is incorrect.\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\", \"Test case 1 failed\"\nassert solution() == \"1\\n\", \"Test case 2 failed\"\nassert solution() == \"48\\n\", \"Test case 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 15\\n5 5 5 5 5') == '1'\nassert solution('5 16\\n5 5 5 5 5') == '2'\nassert solution('5 26\\n5 5 5 5 5') == '-1'",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Expected output: {output()}, but got {solution(input())}.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\\n\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\\n\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\\n7 10\\n1 3 4 2 1 4 2\\n\\n5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n\") == \"4\\n\\n2\\n\\n1\\n\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\\n5 16\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n\") == \"-1\\n\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n5 26\\n5 5 5 5 5\\n\\n\") == \"-1\\n\"",
        "num_ids_2": 187,
        "num_ids_4": 274
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, actual output: {solution(input())}\"\n\nn = int(stdin.readline())\nb = list(map(int, stdin.readline().split()))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution {solution(input())} is incorrect, expected {expected_output}.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}, Solution: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3', \"Test case 1\"\nassert solution() == '0', \"Test case 2\"\nassert solution() == '-1', \"Test case 3\"\nassert solution() == '1', \"Test case 4\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n24 21 14 10\\n\") == \"3\\n\"\nassert solution(\"2\\n500 500\\n\") == \"0\\n\"\nassert solution(\"3\\n14 5 1\\n\") == \"-1\\n\"\nassert solution(\"5\\n1 3 6 9 12\\n\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n24 21 14 10\\n2\\n500 500\\n3\\n14 5 1\\n5\\n1 3 6 9 12\") == \"3\"\nassert solution(\"2\\n500 500\\n0\\n3\\n14 5 1\\n5\\n1 3 6 9 12\") == \"0\"\nassert solution(\"3\\n14 5 1\\n-1\\n5\\n1 3 6 9 12\") == \"-1\"\nassert solution(\"5\\n1 3 6 9 12\") == \"1\"",
        "num_ids_2": 109,
        "num_ids_4": 168
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' instead of expected '{expected}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '-1', \"Invalid output for the first example.\"\nassert solution(\"1\\n24 21 14 10\") == '3', \"Invalid output for the second example.\"\nassert solution(\"1\\n500 500\") == '0', \"Invalid output for the third example.\"\nassert solution(\"1\\n14 5 1\") == '-1', \"Invalid output for the fourth example.\"\nassert solution(\"1\\n1 3 6 9 12\") == '1', \"Invalid output for the fifth example.\"",
        "num_ids_2": 47,
        "num_ids_4": 100
    },
    {
        "number": 4097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"0\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"-1\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5\\n'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2\\n'\nassert solution('4 4\\n1 10 100 1000\\n') == '4\\n'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\\n\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\\n\"\nassert solution(\"4 4\\n1 10 100 1000\\n\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Error: {output}!= {solution(input())} for input {input()}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\", \"The solution should be 5\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5\\n'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2\\n'\nassert solution('4 4\\n1 10 100 1000\\n') == '4\\n'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == 5\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == 2\nassert solution(\"4 4\\n1 10 100 1000\\n\") == 4",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '5', 'Expected \"5\", got \"{}\"'.format(solution())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(f\"Solution: {solution(stdin)}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 'Output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n9 10 3 6\") == \"-1\\n\"\nassert solution(\"10 10 10\") == \"10\\n\"\nassert solution(\"10 10 10\\n5 10 10\") == \"10\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 113
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 7\\n\") == \"1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n7 9 2\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n7 9 2\\n5 9 3\\n\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 6\\n7 9 2\\n5 9 3\\n\") == \"1\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 127
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 12\\n8 10 3 6\\n\") == \"-1\\n\"\nassert solution(\"5 10 8\\n10 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 12\\n10 10 3 6\\n\") == \"-1\\n\"\nassert solution(\"5 10 8\\n10 10 3 6\\n\") == \"8\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 120
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"5 10 7\\n8 10 9 6\") == \"0\"\nassert solution(\"5 10 7\\n8 10 8 6\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 8 7\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 8 5\") == \"1\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\n\nassert solution(\"5 10 7\\n12 10 3 6\") == \"-1\\n\"\n\nassert solution(\"5 10 7\\n8 10 3 6\\n12 10 3 6\") == \"8\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 93
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 7\\n\") == \"7\\n\"\nassert solution(\"5 10 7\\n8 10 3 5\\n\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3\\n\") == \"-1\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 5 6\\n\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 8 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 7\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 2 7\\n\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 5 8\\n\") == \"8\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 15 7\\n8 9 5 6\") == \"8\\n\"\nassert solution(\"5 10 5\\n8 10 3 6\") == \"-1\\n\"\nassert solution(\"1 10 10\") == \"1\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 98
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 5\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 4\") == \"8\\n\"\nassert solution(\"5 10 7\\n8 10 3 2\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 1\") == \"-1\\n\"\nassert solution(\"5 10 7\\n8 10 3 0\") == \"-1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n3\\n\") == \"Yes\\nNo\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 150
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"\nassert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 135
    },
    {
        "number": 4100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\\n\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution(\"10 20 30\\n3\\n2\\n1\\n10\\n\") == \"No\\nNo\\nNo\\nNo\\nYes\\nYes\"\nassert solution(\"40 50 60\\n10\\n9\\n8\\n7\\n\") == \"Yes\\nNo\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"50 20 50\\n100\\n200\\n300\\n\") == \"No\\nYes\\nNo\\nYes\\nNo\\nNo\"\nassert solution(\"100 1000000000 1000000000\\n1000000000\\n9999999999\\n9999999999\\n\") == \"Yes\\nNo\\nNo\\nYes\\nNo\\nNo\"",
        "num_ids_2": 90,
        "num_ids_4": 186
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES\\n00\\n10'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1') == 'YES\\n010\\n0000'\nassert solution('3 3\\n0 0 0\\n1 0 1\\n1 1 0') == 'NO'",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n010\\n0000\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"NO\"\n",
        "num_ids_2": 84,
        "num_ids_4": 119
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\\n0000\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 80,
        "num_ids_4": 113
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\\n010\"\nassert solution(\"3 3\\n0 0 0\\n1 0 1\\n1 1 0\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 103
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\\n3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"YES\\n010\\n0000\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\\n3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\") == \"YES\\n010\\n0000\"",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 2\n1 1\n0 1\"\"\") == \"YES\\n00\\n10\"\n\nassert solution(\"\"\"3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\"\"\") == \"YES\\n010\\n0000\"\n\nassert solution(\"\"\"3 3\n0 0 0\n1 0 1\n1 1 0\"\"\") == \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"373\") == \"Yes\", \"Output 'Yes'\"\nassert solution(\"121\") == \"No\", \"Output 'No'\"\nassert solution(\"436\") == \"Yes\", \"Output 'Yes'\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('373') == 'Yes', \"Incorrect output: The function should return 'Yes' when the input is '373'.\"\nassert solution('121') == 'No', \"Incorrect output: The function should return 'No' when the input is '121'.\"\nassert solution('436') == 'Yes', \"Incorrect output: The function should return 'Yes' when the input is '436'.\"",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"373\") == \"Yes\", \"Incorrect output for input 373\"\nassert solution(\"121\") == \"No\", \"Incorrect output for input 121\"\nassert solution(\"436\") == \"Yes\", \"Incorrect output for input 436\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"373\") == \"Yes\", \"Incorrect output\"\nassert solution(\"121\") == \"No\", \"Incorrect output\"\nassert solution(\"436\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"373\") == \"Yes\", \"Input 373, expected 'Yes'\"\nassert solution(\"121\") == \"No\", \"Input 121, expected 'No'\"\nassert solution(\"436\") == \"Yes\", \"Input 436, expected 'Yes'\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\", \"Expected Output: 5\\nGot: {}\".format(solution(stdin))\n\nassert solution(stdin) == \"3\\n\", \"Expected Output: 3\\nGot: {}\".format(solution(stdin))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == expected_output, f\"Got '{solution(input_string)}', expected '{expected_output}'\" for input_string, expected_output in [\n    (\"5 2 1\", \"5\"),\n    (\"6 2 1\", \"3\"),\n]",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, 2, 1) == 5\nassert solution(6, 2, 1) == 3",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == \"5\\n\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == 5\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5 2 1\n    0 1 0 1 0\n    '''\n) == '5\\n'\n\nassert solution(\n    '''\n    6 2 1\n    1 0 0 1 0 1\n    '''\n) == '3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\nassert solution('10 2 1\\n1 0 0 1 0 1 0 1 0 1\\n') == '4'\nassert solution('10 2 1\\n0 1 0 1 0 1 0 1 0 1\\n') == '4'\nassert solution('5 1 1\\n1 0 0 1 0 1\\n') == '5'\nassert solution('6 1 1\\n1 0 0 1 0 1\\n') == '5'\nassert solution('10 1 1\\n1 0 0 1 0 1 0 1 0 1\\n') == '5'\nassert solution('10 1 1\\n0 1 0 1 0 1 0 1 0 1\\n') == '5'",
        "num_ids_2": 56,
        "num_ids_4": 132
    },
    {
        "number": 4103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Reference solution should return 4\"\nassert solution(\"2+2\") == -46, \"Reference solution should return -46\"\nassert solution(\"112-37\") == 375, \"Reference solution should return 375\"\n",
        "num_ids_2": 56,
        "num_ids_4": 83
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The output of the reference solution is incorrect.\"\nassert solution(\"2+2\") == -46, \"The output of the reference solution is incorrect.\"\nassert solution(\"112-37\") == 375, \"The output of the reference solution is incorrect.\"",
        "num_ids_2": 59,
        "num_ids_4": 86
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Test 1\"\nassert solution(\"2+2\") == -46, \"Test 2\"\nassert solution(\"112-37\") == 375, \"Test 3\"",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"The output should be 4, but is: \" + solution(\"8-7+6-5+4-3+2-1-0\")\nassert solution(\"2+2\") == -46, \"The output should be -46, but is: \" + solution(\"2+2\")\nassert solution(\"112-37\") == 375, \"The output should be 375, but is: \" + solution(\"112-37\")",
        "num_ids_2": 92,
        "num_ids_4": 133
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4, \"Expected output is 4, got {}\".format(solution(\"8-7+6-5+4-3+2-1-0\"))\nassert solution(\"2+2\") == -46, \"Expected output is -46, got {}\".format(solution(\"2+2\"))\nassert solution(\"112-37\") == 375, \"Expected output is 375, got {}\".format(solution(\"112-37\"))",
        "num_ids_2": 88,
        "num_ids_4": 127
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == 4\nassert solution(\"2+2\") == -46\nassert solution(\"112-37\") == 375\n",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES\\n1 3\\n1 3\\n3 2\\n2 3\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1'\nassert solution('13 4') == 'NO'",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 3) == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(10, 4) == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(13, 4) == \"NO\"\n",
        "num_ids_2": 97,
        "num_ids_4": 111
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\nassert solution(\"13 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 134
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"YES\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10\\n4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13\\n4\\n\") == \"NO\"",
        "num_ids_2": 102,
        "num_ids_4": 118
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\n1 2\\n1 3\\n3 2\\n2 3\"\nassert solution(input()) == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 90,
        "num_ids_4": 100
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\"\nassert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 95,
        "num_ids_4": 108
    },
    {
        "number": 4105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"4 3\") == \"YES\\n3 1\"\nassert solution(\"1 2\") == \"YES\\n1 2\"\nassert solution(\"3 2\") == \"YES\\n2 3\"\nassert solution(\"4 4\") == \"YES\\n4 4\"\nassert solution(\"1 2 3\") == \"YES\\n1 2\"\nassert solution(\"2 3 4\") == \"YES\\n2 3\"\nassert solution(\"1 2 4\") == \"YES\\n1 2\"\nassert solution(\"2 3 4\") == \"YES\\n2 3\"\nassert solution(\"1 3 2\") == \"YES\\n1 2\"\nassert solution(\"1 3 4\") == \"YES\\n1 2\"\nassert solution(\"1 4 2\") == \"YES\\n1 2\"\nassert solution(\"1 4 3\") == \"YES\\n1 2\"\nassert solution(\"3 2 1\") == \"YES\\n1 2\"\nassert solution(\"3 2 4\") == \"YES\\n1 2\"\nassert solution(\"3 1 2\") == \"YES\\n1 2\"\nassert solution(\"3 1 4\") == \"YES\\n1 2\"\nassert solution(\"2 4 1\") == \"YES\\n1 2\"\nassert solution(\"2 4 3\") == \"YES\\n1 2\"\nassert solution(\"4 2 1\") == \"YES\\n1 2\"\nassert solution(\"4 2 3\") == \"YES\\n1 2\"\nassert solution(\"4 1 2\") == \"YES\\n1 2\"\nassert solution(\"4 1 3\") == \"YES\\n1 2\"\nassert solution(\"2 1 3\") == \"YES\\n1 2\"\nassert solution(\"2 1 4\") == \"YES\\n1 2\"\nassert solution(\"1 4 2\") == \"YES\\n1 2\"\nassert solution(\"1 4 3\") == \"YES\\n1 2\"\nassert solution(\"1 3 4\") == \"YES\\n1 2\"\nassert solution(\"2 3 1\") == \"YES\\n1 2\"\nassert solution(\"2 3 4\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 4\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 1\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 2\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 1\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 4\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 1 4\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 2 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 4 1\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 2 1\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 4 2\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 1 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 2 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 3 4 1 2\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 1 2 3\") == \"YES\\n1 2\"\nassert solution(\"1 2 4 1 3 2\") == \"YES\\n1 2\"\nassert solution(\"",
        "num_ids_2": 76,
        "num_ids_4": 110
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18\\n'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1\\n'\nassert solution('4 3 1\\n1 100 1 1\\n') == '100\\n'",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == -1 # expected output: -1\nassert solution() == 18 # expected output: 18\nassert solution() == -1 # expected output: -1\nassert solution() == 100 # expected output: 100",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '18'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 2 3\n    5 1 3 10 1\n    \"\"\"\n) == \"18\"\n\nassert solution(\n    \"\"\"\n    6 1 5\n    10 30 30 70 10 10\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    4 3 1\n    1 100 1 1\n    \"\"\"\n) == \"100\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, but got: {solution(stdin)}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == solution2, \"The solutions are not equal\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\") == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\n",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n00100\\n\") == \"3\\n\"\nassert solution(\"6 1\\n000000\\n\") == \"21\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\\n\") == \"15\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 102
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(get_input(), get_output())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2\\n00100') == '3\\n'\nassert solution('6 1\\n000000') == '21\\n'\nassert solution('4 1\\n0011') == '4\\n'\nassert solution('12 6\\n000010000100') == '15\\n'",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n', \"Incorrect output\"\nassert solution() == '21\\n', \"Incorrect output\"\nassert solution() == '4\\n', \"Incorrect output\"\nassert solution() == '15\\n', \"Incorrect output\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\n",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"21\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\\n\"\nassert solution(\"6 1\\n000000\") == \"21\\n\"\nassert solution(\"4 1\\n0011\") == \"4\\n\"\nassert solution(\"12 6\\n000010000100\") == \"15\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"azzel\") == \"Yes\\n\"\nassert solution(\"apple\") == \"No\\n\"\nassert solution(\"\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"azzel\") == \"Yes\\n\"\nassert solution(\"apple\") == \"Yes\\n\"\nassert solution(\"banana\") == \"No\\n\"\nassert solution(\"\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\nassert solution(\"abccde\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"azzel\") == \"Yes\\napple\"\nassert solution(\"apple\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"azzel\") == \"No\"\nassert solution(\"apple\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"xyz\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"hello\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"azzel\\napple\") == \"Yes\\n\", \"The output is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\\napple can be changed to apple, as follows: - Choose e as c_1 and l as c_2. azzel becomes azzle. - Choose z as c_1 and p as c_2. azzle becomes apple.\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\", \"Test case 1 failed.\"\nassert solution(\"apple\") == \"No\", \"Test case 2 failed.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\\nThe i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M).\\nThere is no other way to increase the understanding levels of the algorithms.\\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"Yes, it is achievable.\\nMinimum amount of money needed to achieve it: $100000.00\\n\"",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n'''\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n'''\n) == \"Takahashi is not an AI that can achieve the minimum amount of money.\\n\"\n\nassert solution(\n'''\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n\nTakahashi, who is a novice in competitive programming, wants to learn M algorithms.\nInitially, his understanding level of each of the M algorithms is 0.\nTakahashi is visiting a bookstore, where he finds N books on algorithms.\nThe i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M).\nThere is no other way to increase the understanding levels of the algorithms.\nTakahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\n'''\n) == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of",
        "num_ids_2": 752,
        "num_ids_4": 1025
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1 <= i <= N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1 <= j <= M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"The minimum amount of money needed to achieve this objective is $100,000.\"\n\nThe minimum amount of money needed to achieve this objective is $100,000.",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Takahashi, who is a novice in competitive programming, wants to learn M algorithms.\\n'\n'Initially, his understanding level of each of the M algorithms is 0.\\n'\n'Takahashi is visiting a bookstore, where he finds N books on algorithms.\\n'\n'The i-th book (1\\\\leq i\\\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\\\leq j\\\\leq M).\\n'\n'There is no other way to increase the understanding levels of the algorithms.\\n'\n'Takahashi\\'s objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.') == 'No\\n'\n\nprint(\"All tests passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it. If it is not achievable, find the maximum amount of money needed to achieve it.\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\") == \"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0. Takahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1<=i<=N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1<=j<=M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it. If it is not achievable, find the maximum amount of money needed to achieve it.\"",
        "num_ids_2": 774,
        "num_ids_4": 774
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n10\n10 10 10\n10 20 10\n10 10 20\n10 20 20\n10 10 10\n10 20 10\n10 10 20\n10 20 20\n20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 20\n20 20 ",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n0\\n0\\n0\\n0\\n\") == \"0\"\nassert solution(\"1\\n2\\n1\\n0\\n0\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n0\\n1\\n\") == \"3\"\nassert solution(\"1\\n2\\n1\\n0\\n2\\n\") == \"4\"\nassert solution(\"1\\n2\\n1\\n0\\n3\\n\") == \"7\"\nassert solution(\"1\\n2\\n1\\n0\\n4\\n\") == \"10\"\nassert solution(\"1\\n2\\n1\\n0\\n5\\n\") == \"13\"\nassert solution(\"1\\n2\\n1\\n0\\n6\\n\") == \"16\"\nassert solution(\"1\\n2\\n1\\n0\\n7\\n\") == \"19\"\nassert solution(\"1\\n2\\n1\\n0\\n8\\n\") == \"22\"\nassert solution(\"1\\n2\\n1\\n0\\n9\\n\") == \"25\"\nassert solution(\"1\\n2\\n1\\n0\\n10\\n\") == \"28\"\nassert solution(\"1\\n2\\n1\\n0\\n11\\n\") == \"31\"\nassert solution(\"1\\n2\\n1\\n0\\n12\\n\") == \"34\"\nassert solution(\"1\\n2\\n1\\n0\\n13\\n\") == \"37\"\nassert solution(\"1\\n2\\n1\\n0\\n14\\n\") == \"40\"\nassert solution(\"1\\n2\\n1\\n0\\n15\\n\") == \"43\"\nassert solution(\"1\\n2\\n1\\n0\\n16\\n\") == \"46\"\nassert solution(\"1\\n2\\n1\\n0\\n17\\n\") == \"49\"\nassert solution(\"1\\n2\\n1\\n0\\n18\\n\") == \"52\"\nassert solution(\"1\\n2\\n1\\n0\\n19\\n\") == \"55\"\nassert solution(\"1\\n2\\n1\\n0\\n20\\n\") == \"58\"\nassert solution(\"1\\n2\\n1\\n0\\n21\\n\") == \"61\"\nassert solution(\"1\\n2\\n1\\n0\\n22\\n\") == \"64\"\nassert solution(\"1\\n2\\n1\\n0\\n23\\n\") == \"67\"\nassert solution(\"1\\n2\\n1\\n0\\n24\\n\") == \"70\"\nassert solution(\"1\\n2\\n1\\n0\\n25\\n\") == \"73\"\nassert solution(\"1\\n2\\n1\\n0\\n26\\n\") == \"76\"\nassert solution(\"1\\n2\\n1\\n0\\n27\\n\") == \"79\"\nassert solution(\"1\\n2\\n1\\n0\\n28\\n\") == \"82\"\nassert solution(\"1\\n2\\n1\\n0\\n29\\n\") == \"85\"\nassert solution(\"1\\n2\\n1\\n0\\n30\\n\") == \"88\"\nassert solution(\"1\\n2\\n1\\n0\\n31\\n\") == \"91\"\nassert solution(\"1\\n2\\n1\\n0\\n32\\n\") == \"94\"\nassert solution(\"1\\n2\\n1\\n0\\n33\\n\") == \"97\"\nassert solution(\"1\\n2\\n1\\n0\\n34\\n\") == \"100\"\nassert solution(\"1\\n2\\n1\\n0\\n35\\n\") == \"103\"\nassert solution(\"1\\n2\\n1\\n0\\n36\\n\") == \"106\"\nassert solution(\"1\\n2\\n1\\n0\\n37\\n\") == \"109\"\nassert solution(\"1\\n2\\n1\\n0\\n3",
        "num_ids_2": 32,
        "num_ids_4": 80
    },
    {
        "number": 4109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\") == \"5\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\n\") == \"5\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\n\\n\\n\") == \"5\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\n\\n\\n\\n\\n\\n\") == \"5\\n\"\n\nassert solution(\"Takahashi, who is a novice in competitive programming, wants to learn M algorithms. Initially, his understanding level of each of the M algorithms is 0.\\nTakahashi is visiting a bookstore, where he finds N books on algorithms. The i-th book (1\\leq i\\leq N) is sold for C_i yen (the currency of Japan). If he buys and reads it, his understanding level of the j-th algorithm will increase by A_{i,j} for each j (1\\leq j\\leq M). There is no other way to increase the understanding levels of the algorithms. Takahashi's objective is to make his understanding levels of all the M algorithms X or higher. Determine whether this objective is achievable. If it is achievable, find the minimum amount of money needed to achieve it.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") ==",
        "num_ids_2": 398,
        "num_ids_4": 812
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 10\\n2 20\\n3 30\\n4 40\\n5 50\") == \"2\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='2 700\\n3 500\\n5 800\\n') == '3\\n'\nassert solution(stdin='4 1000\\n5 500\\n6 1000\\n') == '2\\n'\nassert solution(stdin='10 1000\\n15 1000\\n20 1000\\n') == '2\\n'\nassert solution(stdin='1000 1000\\n1000 1000\\n1000 1000\\n') == '1\\n'\nassert solution(stdin='2000 1000\\n2000 1000\\n2000 1000\\n') == '1\\n'\nassert solution(stdin='10000000 10000000\\n10000000 10000000\\n10000000 10000000\\n') == '1\\n'\nassert solution(stdin='100000000 100000000\\n100000000 100000000\\n100000000 100000000\\n') == '1\\n'",
        "num_ids_2": 70,
        "num_ids_4": 156
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\nassert solution(\"10 100\\n10 200\\n20 300\\n30 400\\n40 500\\n50 600\\n60 700\\n70 800\") == \"3\\n\"\nassert solution(\"30 200\\n40 300\\n50 400\\n60 500\\n70 600\\n80 700\\n90 800\\n100 900\\n110 1000\\n120 1100\\n130 1200\\n140 1300\\n150 1400\\n160 1500\\n170 1600\\n180 1700\\n190 1800\\n200 1900\\n210 2000\\n220 2100\\n230 2200\\n240 2300\\n250 2400\\n260 2500\\n270 2600\\n280 2700\\n290 2800\\n300 2900\\n310 3000\\n320 3100\\n330 3200\\n340 3300\\n350 3400\\n360 3500\\n370 3600\\n380 3700\\n390 3800\\n400 3900\\n410 4000\\n420 4100\\n430 4200\\n440 4300\\n450 4400\\n460 4500\\n470 4600\\n480 4700\\n490 4800\\n500 4900\\n510 5000\\n520 5100\\n530 5200\\n540 5300\\n550 5400\\n560 5500\\n570 5600\\n580 5700\\n590 5800\\n600 5900\\n610 6000\\n620 6100\\n630 6200\\n640 6300\\n650 6400\\n660 6500\\n670 6600\\n680 6700\\n690 6800\\n700 6900\\n710 7000\\n720 7100\\n730 7200\\n740 7300\\n750 7400\\n760 7500\\n770 7600\\n780 7700\\n790 7800\\n800 7900\\n810 8000\\n820 8100\\n830 8200\\n840 8300\\n850 8400\\n860 8500\\n870 8600\\n880 8700\\n890 8800\\n900 8900\\n910 9000\\n920 9100\\n930 9200\\n940 9300\\n950 9400\\n960 9",
        "num_ids_2": 103,
        "num_ids_4": 1027
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"3 800\\n1 600\\n2 1000\") == \"1\\n\", \"Test case 2 failed\"\nassert solution(\"1 500\\n4 300\\n5 700\") == \"3\\n\", \"Test case 3 failed\"",
        "num_ids_2": 75,
        "num_ids_4": 112
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"1 1000\") == \"1\"\nassert solution(\"2 1000\") == \"2\"\nassert solution(\"3 1000\") == \"3\"\nassert solution(\"4 1000\") == \"4\"\nassert solution(\"5 1000\") == \"5\"\nassert solution(\"6 1000\") == \"6\"\nassert solution(\"7 1000\") == \"7\"\nassert solution(\"8 1000\") == \"8\"\nassert solution(\"9 1000\") == \"9\"\nassert solution(\"10 1000\") == \"10\"\nassert solution(\"11 1000\") == \"11\"\nassert solution(\"12 1000\") == \"12\"\nassert solution(\"13 1000\") == \"13\"\nassert solution(\"14 1000\") == \"14\"\nassert solution(\"15 1000\") == \"15\"\nassert solution(\"16 1000\") == \"16\"\nassert solution(\"17 1000\") == \"17\"\nassert solution(\"18 1000\") == \"18\"\nassert solution(\"19 1000\") == \"19\"\nassert solution(\"20 1000\") == \"20\"\nassert solution(\"21 1000\") == \"21\"\nassert solution(\"22 1000\") == \"22\"\nassert solution(\"23 1000\") == \"23\"\nassert solution(\"24 1000\") == \"24\"\nassert solution(\"25 1000\") == \"25\"\nassert solution(\"26 1000\") == \"26\"\nassert solution(\"27 1000\") == \"27\"\nassert solution(\"28 1000\") == \"28\"\nassert solution(\"29 1000\") == \"29\"\nassert solution(\"30 1000\") == \"30\"\nassert solution(\"31 1000\") == \"31\"\nassert solution(\"32 1000\") == \"32\"\nassert solution(\"33 1000\") == \"33\"\nassert solution(\"34 1000\") == \"34\"\nassert solution(\"35 1000\") == \"35\"\nassert solution(\"36 1000\") == \"36\"\nassert solution(\"37 1000\") == \"37\"\nassert solution(\"38 1000\") == \"38\"\nassert solution(\"39 1000\") == \"39\"\nassert solution(\"40 1000\") == \"40\"\nassert solution(\"41 1000\") == \"41\"\nassert solution(\"42 1000\") == \"42\"\nassert solution(\"43 1000\") == \"43\"\nassert solution(\"44 1000\") == \"44\"\nassert solution(\"45 1000\") == \"45\"\nassert solution(\"46 1000\") == \"46\"\nassert solution(\"47 1000\") == \"47\"\nassert solution(\"48 1000\") == \"48\"\nassert solution(\"49 1000\") == \"49\"\nassert solution(\"50 1000\") == \"50\"\nassert solution(\"51 1000\") == \"51\"\nassert solution(\"52 1000\") == \"52\"\nassert solution(\"53 1000\") == \"53\"\nassert solution(\"54 1000\") == \"54\"\nassert solution(\"55 1000\") == \"55\"\nassert solution(\"56 1000\") == \"56\"\nassert solution(\"57 1000\") == \"57\"\nassert solution(\"58 1000\") == \"58\"\nassert solution(\"59 1000\") == \"59\"\nassert solution(\"60 1000\") == \"",
        "num_ids_2": 43,
        "num_ids_4": 73
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\\n\"\nassert solution(\"2 200\\n3 100\\n5 50\\n\") == \"2\\n\"\nassert solution(\"2 100\\n3 50\\n5 10\\n\") == \"1\\n\"\nassert solution(\"2 800\\n3 700\\n5 600\\n\") == \"3\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 125
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"10 100\\n10 200\\n10 300\\n10 400\\n10 500\\n10 600\\n10 700\\n10 800\\n10 900\\n10 1000\") == \"5\"\nassert solution(\"10 100\\n10 200\\n10 300\\n10 400\\n10 500\\n10 600\\n10 700\\n10 800\\n10 900\\n10 1000\\n10 1100\\n10 1200\\n10 1300\\n10 1400\\n10 1500\\n10 1600\\n10 1700\\n10 1800\\n10 1900\\n10 2000\\n10 2100\\n10 2200\\n10 2300\\n10 2400\\n10 2500\\n10 2600\\n10 2700\\n10 2800\\n10 2900\\n10 3000\\n10 3100\\n10 3200\\n10 3300\\n10 3400\\n10 3500\\n10 3600\\n10 3700\\n10 3800\\n10 3900\\n10 4000\\n10 4100\\n10 4200\\n10 4300\\n10 4400\\n10 4500\\n10 4600\\n10 4700\\n10 4800\\n10 4900\\n10 5000\\n10 5100\\n10 5200\\n10 5300\\n10 5400\\n10 5500\\n10 5600\\n10 5700\\n10 5800\\n10 5900\\n10 6000\\n10 6100\\n10 6200\\n10 6300\\n10 6400\\n10 6500\\n10 6600\\n10 6700\\n10 6800\\n10 6900\\n10 7000\\n10 7100\\n10 7200\\n10 7300\\n10 7400\\n10 7500\\n10 7600\\n10 7700\\n10 7800\\n10 7900\\n10 8000\\n10 8100\\n10 8200\\n10 8300\\n10 8400\\n10 8500\\n10 8600\\n10 8700\\n10 8800\\n10 8900\\n10 9000\\n10 9100\\n10 9200\\n10 9300\\n10 9400\\n10 9500\\n10 9600\\n10 9700\\n10 9800\\n10 9900\\n10 10000\\n10 10100\\n10 10",
        "num_ids_2": 116,
        "num_ids_4": 1027
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == 2\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == 2\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == 3",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n7\n5 5 4 5 5 5 6\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n8\n4 8 8 7 8 4 4 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n9\n2 3 4 2 2 3 2 2 4\n\"\"\"\n) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\\n\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\\n\") == \"2\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\\n\") == \"3\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Incorrect output\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\\n\", \"Tanya should get the 1st candy and eat 7 candies in the first day, and then give the remaining candies to her dad. She should eat 4 candies in the first day, and then eat 3 candies in the second day, and then eat 3 candies in the third day.\"\n\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"2\\n\", \"Tanya should get the 2nd candy and eat 8 candies in the first day, and then give the remaining candies to her dad. She should eat 7 candies in the first day, and then eat 3 candies in the second day, and then eat 3 candies in the third day.\"\n\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\\n\", \"Tanya should get the 3rd candy and eat 9 candies in the first day, and then give the remaining candies to her dad. She should eat 7 candies in the first day, and then eat 4 candies in the second day, and then eat 3 candies in the third day.\"",
        "num_ids_2": 206,
        "num_ids_4": 312
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"\"  # solution for empty input is empty string\nassert solution(\"1\") == \"1\"  # solution for one candy case is one\nassert solution(\"4\") == \"2\"  # solution for multiple candies case is two\nassert solution(\"8\") == \"2\"  # solution for multiple candies case is two\nassert solution(\"9\") == \"3\"  # solution for multiple candies case is three",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"Testcase 1 incorrect\"\nassert solution(stdin) == \"2\", \"Testcase 2 incorrect\"\nassert solution(stdin) == \"3\", \"Testcase 3 incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == 18\nassert solution(\"6 1 5\") == -1\nassert solution(\"4 3 1\") == 100\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Please see the problem statement for more details.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\") == \"100\"",
        "num_ids_2": 60,
        "num_ids_4": 87
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\"",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100\n",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1, \"expected -1, but got: \" + str(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 1, 5) == 100\nassert solution(4, 3, 1) == 100\nassert solution(5, 2, 3) == 18\nassert solution(5, 1, 3, 10, 1) == -1\nassert solution(7, 3, 1) == -1",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == \"18\\n\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == \"-1\\n\"\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == \"100\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 99
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\\n\") == 18\nassert solution(\"6 1 5\\n10 30 30 70 10 10\\n\") == -1\nassert solution(\"4 3 1\\n1 100 1 1\\n\") == 100",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1') == 18\nassert solution('6 1 5\\n10 30 30 70 10 10') == -1\nassert solution('4 3 1\\n1 100 1 1') == 100",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\n\") == \"Yes\\n\"\nassert solution(\"15\\n\") == \"Yes\\n\"\nassert solution(\"0\\n\") == \"No\\n\"\nassert solution(\"101\\n\") == \"No\\n\"\nassert solution(\"10\\n\") == \"No\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"Yes\"\n\nassert solution(\"5\") == \"No\"\n\nassert solution(\"0\") == \"No\"\n\nassert solution(\"15\") == \"No\"\n\nassert solution(\"25\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"100\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"5\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"9\") == \"No\"\nassert solution(\"8\") == \"No\"\nassert solution(\"7\") == \"No\"\nassert solution(\"6\") == \"No\"\nassert solution(\"5\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the value of N: \")) == 'Yes', \"The code should return Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\\n\", \"Incorrect answer\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes\\n', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'11') == 'Yes'\nassert solution(b'12') == 'No'\nassert solution(b'13') == 'Yes'\nassert solution(b'14') == 'No'\nassert solution(b'15') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 2 6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6\\n'\nassert solution('''5\n3 4 5\n1 3 5\n5 3 5\n1 2 5\n4 2 5''') == '3 3 6\\n'\nassert solution('''10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '1 1 1\\n'",
        "num_ids_2": 10,
        "num_ids_4": 16
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 2 6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\", \"The correct output should be '1'.\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"Yes\\n\"\nassert solution(\"20\") == \"No\\n\"\nassert solution(\"100\") == \"Yes\\n\"\nassert solution(\"1000\") == \"Yes\\n\"\nassert solution(\"1001\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"Yes\"\nassert solution(20) == \"No\"\nassert solution(30) == \"No\"\nassert solution(40) == \"Yes\"\nassert solution(50) == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 'Yes'\nassert solution(7) == 'No'\nassert solution(12) == 'No'\nassert solution(15) == 'Yes'\nassert solution(18) == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"Yes\\n2 \\times 5\\n\", \"Output is incorrect\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\", \"Your solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"20\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(\"4 4 9 7 5\") == \"5\\n\"\nassert solution(\"1 1 1 1 1\") == \"1\\n\"\nassert solution(\"2 2 2 2 2\") == \"2\\n\"\nassert solution(\"3 3 3 3 3\") == \"4\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4 9 7 5') == '5'\nassert solution('5') == '0'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\", \"Test 1\"\nassert solution(\"6\\n3 6 5 4 8\") == \"4\\n\", \"Test 2\"\nassert solution(\"5\\n5 5 5 5 5\") == \"1\\n\", \"Test 3\"\nassert solution(\"10\\n100 50 10 50 100\") == \"2\\n\", \"Test 4\"\nassert solution(\"7\\n2 3 4 5 6\") == \"1\\n\", \"Test 5\"\nassert solution(\"100\\n10 100 10 100 10\") == \"1\\n\", \"Test 6\"\nassert solution(\"10\\n1 1 1 1 1\") == \"1\\n\", \"Test 7\"\nassert solution(\"7\\n7 7 7 7 7\") == \"1\\n\", \"Test 8\"\nassert solution(\"10\\n10 10 10 10 10\") == \"1\\n\", \"Test 9\"\nassert solution(\"10\\n50 10 50 10 50\") == \"1\\n\", \"Test 10\"",
        "num_ids_2": 56,
        "num_ids_4": 120
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\", \"Test 1 failed\"\nassert solution(\"5\\n2 3 4 4 3\") == \"3\\n\", \"Test 2 failed\"\nassert solution(\"5\\n3 3 7 4 2\") == \"3\\n\", \"Test 3 failed\"\nassert solution(\"5\\n4 4 7 3 4\") == \"4\\n\", \"Test 4 failed\"\nassert solution(\"5\\n4 5 6 8 5\") == \"6\\n\", \"Test 5 failed\"\nassert solution(\"5\\n2 2 1 5 3\") == \"2\\n\", \"Test 6 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 7') == -1\nassert solution('10 5') == '10'\nassert solution('5 5') == -1\nassert solution('100 10') == -1",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\", \"The solution should return 10.\"\nassert solution(\"2 10\") == \"20\", \"The solution should return 20.\"\nassert solution(\"1 10\") == \"-1\", \"The solution should return -1.\"\nassert solution(\"9 8\") == \"27\", \"The solution should return 27.\"\nassert solution(\"10 10\") == \"400\", \"The solution should return 400.\"\nassert solution(\"100 100\") == \"400000\", \"The solution should return 400000.\"",
        "num_ids_2": 45,
        "num_ids_4": 88
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\\n\", \"The correct output should be: 10\\n2 \\times 5 = 10.\"\n\nassert solution(\"10 20\") == \"-1\\n\", \"The correct output should be: -1.\"\n\nassert solution(\"5 7\") == \"-1\\n\", \"The correct output should be: -1.\"",
        "num_ids_2": 74,
        "num_ids_4": 98
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\\n2 \\times 5 = 10\\n\"\nassert solution(\"6 3\") == \"-1\\n\"\nassert solution(\"1 10\") == \"-1\\n\"\nassert solution(\"0 0\") == \"-1\\n\"\nassert solution(\"4 0\") == \"-1\\n\"\nassert solution(\"10 10\") == \"10\\n\"\nassert solution(\"10 10 5\") == \"-1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 69
    },
    {
        "number": 4118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n\") == \"10\\n\"\nassert solution(\"1 9\\n\") == \"10\\n\"\nassert solution(\"5 10\\n\") == \"-1\\n\"\nassert solution(\"0 5\\n\") == \"-1\\n\"\nassert solution(\"10 2\\n\") == \"-1\\n\"\nassert solution(\"0 10\\n\") == \"-1\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"3 4\\n1 2 3 4\") == \"2\"\nassert solution(\"2 3\\n1 2 3\") == \"2\"\nassert solution(\"2 2\\n1 1\") == \"2\"\nassert solution(\"4 2\\n1 1 2 3 4\") == \"5\"",
        "num_ids_2": 47,
        "num_ids_4": 83
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 5\\n10 12 1 2 14\") == \"5\\n\"\nassert solution(stdin=\"4 5\\n1 2 3 4 5\") == \"6\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nprint(\"Test Passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 5\\n1 1 1 1 1\") == \"0\"\nassert solution(\"2 5\\n1 1 1 1 1\") == \"1\"\nassert solution(\"2 5\\n1 1 1 1 1\") == \"2\"\nassert solution(\"2 5\\n1 1 1 1 1\") == \"3\"\nassert solution(\"2 5\\n1 1 1 1 1\") == \"4\"\n",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"2 5\\n10 12 1 2 14\\n100 100 1 2 14\\n\") == \"11\"\nassert solution(\"2 5\\n10 12 1 2 14\\n1 2 3\\n\") == \"0\"\nassert solution(\"2 5\\n10 12 1 2 14\\n1 2 3 4 5\\n\") == \"4\"",
        "num_ids_2": 73,
        "num_ids_4": 147
    },
    {
        "number": 4119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\\n\"\nassert solution(\"2 2\\n1 1\\n1 2\") == \"2\\n\"\nassert solution(\"2 5\\n1 1 2 3 4 5\\n6 7 8 9 10\") == \"5\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n\"\nassert solution(\"1 1\\n1 2\") == \"2\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 110
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '2\\n1110\\n1011\\n'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '1\\n101001\\n'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '2\\n111100\\n110110\\n'\n\nfrom typing import List",
        "num_ids_2": 112,
        "num_ids_4": 174
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 4\\n1 3\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 184
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 5\\n3 4\\n3 5\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 195
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed for input '{input()}' and expected output '{expected}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3') == '2\\n1110\\n1011'\nassert solution('4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n2 5') == '1\\n101001\\n110110'\nassert solution('5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '2\\n111100\\n110110'\nassert solution('4 2 2\\n1 2\\n2 3\\n1 2\\n3 4\\n2 3') == '1\\n101010'\nassert solution('4 3 2\\n1 2\\n2 3\\n1 3\\n3 4\\n2 3\\n1 2') == '1\\n101001'\nassert solution('1 1\\n2 1\\n1 1\\n3 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120",
        "num_ids_2": 121,
        "num_ids_4": 228
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 3\\n1 2\\n2 3\\n1 4\\n4 3\\n\") == \"2\\n1110\\n1011\\n\"\nassert solution(\"4 6 3\\n1 2\\n2 3\\n1 4\\n4 3\\n2 4\\n1 3\\n\") == \"1\\n101001\\n\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\\n111100\\n110110\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 170
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output\\n1\\n101001'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"2\\n10 10\") == \"YES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 92,
        "num_ids_4": 140
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'YES\\n'\nassert solution('2\\n10 10\\n') == 'YES\\n'\nassert solution('3\\n1 2 3\\n') == 'NO\\n'",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"3\\n4 5 3\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"2\\n10 10\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"3\\n1 2 3\") == \"NO\"",
        "num_ids_2": 65,
        "num_ids_4": 111
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\\n3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\\n2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\\n3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 102,
        "num_ids_4": 152
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\\n\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\\n\"\nassert solution(\"2\\n10 10\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(stdin: str)}'\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9\\n'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996\\n'\nassert solution('10 4\\n-3 -6 5 4') == '-1\\n'",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(1000) +'' + str(6) + '\\n' + '-100 -200 -300 125 77 -4\\n') == -1\nassert solution(str(1000000000000) +'' + str(5) + '\\n' + '-1 0 0 0 0\\n') == 4999999999996\nassert solution(str(10) +'' + str(4) + '\\n' + '-3 -6 5 4\\n') == -1",
        "num_ids_2": 110,
        "num_ids_4": 145
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\"",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"9\"\nassert solution(stdin) == \"4999999999996\"\nassert solution(stdin) == \"-1\"",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'\n",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == \"9\\n\"\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == \"4999999999996\\n\"\nassert solution(\"10 4\\n-3 -6 5 4\") == \"-1\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 115
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\nassert solution('10 4\\n-3 -6 5 4') == '-1'",
        "num_ids_2": 86,
        "num_ids_4": 109
    },
    {
        "number": 4122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 6\\n-100 -200 -300 125 77 -4\") == 9\nassert solution(\"1000000000000 5\\n-1 0 0 0 0\") == 4999999999996\nassert solution(\"10 4\\n-3 -6 5 4\") == -1",
        "num_ids_2": 84,
        "num_ids_4": 106
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5ZAA\") == \"ZZ\"\n\nSolution:\n\nThe solution is quite simple. We can simply iterate through all the possible substrings of length two from the given string and check if they are present in the given string. If they are present, we return the two-gram.\n\nLet's write the code step by step:\n\n```python\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7') == 'AB'\nassert solution('5') == 'ZZ'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    7\n    ABACABA\n    \"\"\"\n) == \"AB\"\n\nassert solution(\n    \"\"\"\n    5\n    ZZZAA\n    \"\"\"\n) == \"ZZ\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BAACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"ZZ\"\nassert solution(\"7\") == \"AB\"\nassert solution(\"ABACABA\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7ABACABA\") == \"AB\"\nassert solution(\"5ZZZAA\") == \"ZZ\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('test') == 'est', 'Expected \"est\", got \"{}\"'.format(solution('test'))\nassert solution('codeforces') == 'es', 'Expected \"es\", got \"{}\"'.format(solution('codeforces'))\nassert solution('test') == 'yes', 'Expected \"yes\", got \"{}\"'.format(solution('test'))\nassert solution('b') == 'ab', 'Expected \"ab\", got \"{}\"'.format(solution('b'))",
        "num_ids_2": 56,
        "num_ids_4": 106
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"est\", \"Test Case 1 failed\"\nassert solution(\"west\") == \"est\", \"Test Case 2 failed\"\nassert solution(\"codeforces\") == \"es\", \"Test Case 3 failed\"\nassert solution(\"yes\") == \"es\", \"Test Case 4 failed\"\nassert solution(\"b\") == \"es\", \"Test Case 5 failed\"\nassert solution(\"ab\") == \"es\", \"Test Case 6 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"est\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"ab\") == \"ab\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('test') == 'est', \"Expected: est\\nActual: {}\\n\".format(solution('test'))\nassert solution('west') == '', \"Expected: \\nActual: {}\\n\".format(solution('west'))\nassert solution('codeforces') == 'es', \"Expected: es\\nActual: {}\\n\".format(solution('codeforces'))\nassert solution('yes') == 'es', \"Expected: es\\nActual: {}\\n\".format(solution('yes'))\nassert solution('b') == 'a', \"Expected: a\\nActual: {}\\n\".format(solution('b'))\nassert solution('ab') == 'b', \"Expected: b\\nActual: {}\\n\".format(solution('ab'))",
        "num_ids_2": 51,
        "num_ids_4": 111
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"est\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"a\") == \"\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"test\") == \"est\"\nassert solution(\"west\") == \"est\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"yes\") == \"es\"\nassert solution(\"b\") == \"es\"\nassert solution(\"ab\") == \"es\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 7 11') == '2\\n'\nassert solution('4 5\\n1 2 3') == '1\\n'\nassert solution('6 7\\n1 1 1') == '2\\n'\nassert solution('3 2\\n2 2 1') == '2\\n'\nassert solution('5 4\\n3 3 3') == '3\\n'",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7 11\\n\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"4 4\\n2 8 12\") == \"1\"\nassert solution(\"5 5\\n3 9 13\") == \"0\"\nassert solution(\"6 6\\n4 10 14\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"3 2\\n2 3 4 5\") == \"2\\n\"\nassert solution(\"2 1\\n3 4 5 6\") == \"1\\n\"\nassert solution(\"3 1\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"1 1\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"1 1\\n1 2 3 4\") == \"1\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"4 3\\n1 5 9\") == \"2\"\nassert solution(\"2 3\\n1 7 9\") == \"2\"\nassert solution(\"10 3\\n1 5 9\") == \"3\"\nassert solution(\"10 3\\n1 5 9\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\\n\"\nassert solution(\"1 2 3 4 5\") == \"4\\n\"\nassert solution(\"6 8 10 12 14 16\") == \"12\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 69
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abcdefg\") == \"No\"\nassert solution(\"racecar\") == \"No\"\nassert solution(\"hello\") == \"Yes\"\nassert solution(\"no\") == \"No\"\nassert solution(\"123456\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"The given input is not a strong palindrome\"\nassert solution(\"a\") == \"No\", \"The given input is a strong palindrome\"\nassert solution(\"hello\") == \"No\", \"The given input is a strong palindrome\"\nassert solution(\"amanaplanacanalpanama\") == \"Yes\", \"The given input is a strong palindrome\"\nassert solution(\"racecar\") == \"Yes\", \"The given input is a strong palindrome\"",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Your code is not correct\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"S should be a strong palindrome.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('akasaka') == 'Yes', \"Incorrect result: {}\".format(solution('akasaka'))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hello\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('198 1.10') == 217\nassert solution('42 1.1') == 42\nassert solution('4.56 0.0001') == 4\nassert solution('0 0.00001') == 0\nassert solution('0 0') == 0",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Incorrect output\"\nprint(\"Correct!\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Output is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"198 1.10\") == \"217\", \"Test failed for the given input.\"\nprint(solution(\"198 1.10\"))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"197 1.90\") == \"197\"\nassert solution(\"198 1.00\") == \"198\"\nassert solution(\"198 0.99\") == \"198\"\nassert solution(\"198 0.00\") == \"198\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nprint(\"All tests passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('198 1.10') == 217, \"The correct output is 217, but got {}\".format(solution('198 1.10'))\n\nprint(\"The correct output is 217\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 3, \"Expected 3, got {}\".format(solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\"))\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 0, \"Expected 0, got {}\".format(solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243546\"))\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 0, \"Expected 0, got {}\".format(solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243548\"))\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 1, \"Expected 1, got {}\".format(solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243546\"))\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 999999999, \"Expected 999999999, got {}\".format(solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\"))\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == 381621773, \"Expected 381621773, got {}\".format(solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\"))",
        "num_ids_2": 186,
        "num_ids_4": 372
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0\nassert solution(7) == 3\nassert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 0\nassert solution(2000000000) == 0\nassert solution(763243547) == 3\nassert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 0\nassert solution(2000000000) == 0\nassert solution(763243547) == 3",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"",
        "num_ids_2": 152,
        "num_ids_4": 304
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\\n0\\n0\\n1\\n999999999\\n381621773\"\nassert solution(\"4\\n5\\n2\\n3\\n4000000000\\n5000000000\") == \"3\\n0\\n0\\n2\\n1000000000\"\nassert solution(\"7\\n6\\n3\\n4\\n5000000000\\n6000000000\") == \"4\\n0\\n0\\n3\\n2000000000\"\nassert solution(\"9\\n8\\n6\\n7\\n8000000000\\n9000000000\") == \"2\\n0\\n0\\n4\\n1000000000\"\nassert solution(\"6\\n6\\n4\\n5\\n6000000000\\n7000000000\") == \"3\\n0\\n0\\n5\\n1000000000\"",
        "num_ids_2": 140,
        "num_ids_4": 268
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3\\n0\\n0\\n1\\n999999999'\nassert solution('6\\n1\\n2\\n3\\n2000000000\\n763243547') == '3\\n0\\n0\\n1\\n999999999'\nassert solution('7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3\\n0\\n0\\n1\\n999999999'\nassert solution('7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3\\n0\\n0\\n1\\n999999999'\nassert solution('7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3\\n0\\n0\\n1\\n999999999'",
        "num_ids_2": 124,
        "num_ids_4": 248
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == 3\nassert solution(7) == 3\nassert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(2000000000) == 999999999\nassert solution(763243547) == 381621773\n\nfor t in range(1, 11):\n    n = int(input())\n    print(solution(n))",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n0\\n0\\n1\\n999999999\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 3\nassert solution(7) == 0\nassert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(2000000000) == 0\nassert solution(763243547) == 0\nassert solution(10) == 10\nassert solution(50) == 381621773\nassert solution(15) == 1\nassert solution(100) == 999999999\nassert solution(1000) == 381621773",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == 'Output\\n3\\n'\nassert solution('Input\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == 'Output\\n1\\n'\n\nprint(\"All tests passed!\")",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The function should return the expected output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\n\nsolution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\")\nsolution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\")",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\\n\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\\n\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\\nInput\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\\nOutput\\n3\\n\\nInput\\n5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\\nOutput\\n1') == '3\\n\\n1'",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\nassert solution(\"5 4 5\\n1 2",
        "num_ids_2": 95,
        "num_ids_4": 163
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_example) == expected_output, f\"Test case {test_case} failed with input: {stdin}, output: {output}, expected output: {expected_output}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\" # expected output: 3\nassert solution() == \"1\" # expected output: 1",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 4 1\\n\\n6\\n1 1 1 4 4 4\\n\\n') == '4\\n'\n\nassert solution('6\\n1 1 1 4 4 4\\n\\n') == '5\\n'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input {input()} should output {output}, but got {solution(input())}.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == solution(solution)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\\n\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 4",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(example1) == \"4\\n\", \"Solution for the first example should be 4, but it is: {}\".format(solution(example1))\nassert solution(example2) == \"5\\n\", \"Solution for the second example should be 5, but it is: {}\".format(solution(example2))\nassert solution(example3) == \"4\\n\", \"Solution for the third example should be 4, but it is: {}\".format(solution(example3))\nassert solution(example4) == \"4\\n\", \"Solution for the fourth example should be 4, but it is: {}\".format(solution(example4))\nassert solution(example5) == \"4\\n\", \"Solution for the fifth example should be 4, but it is: {}\".format(solution(example5))\n",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Your solution does not match the expected output.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Solution Here\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\nassert solution(\"2 3\\n1 32\\n2 63\\n1 13\") == \"000001000002\\n000002000001\\n000001000002\\n\"\nassert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"\nassert solution(\"1 2\\n1 32\\n2 63\\n1 12\") == \"000001000001\\n000002000002\\n000001000002\\n\"\nassert solution(\"1 2\\n1 32\\n2 63\\n1 13\") == \"000001000001\\n000002000002\\n000001000003\\n\"",
        "num_ids_2": 142,
        "num_ids_4": 284
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution\nprint(\"All test cases passed.\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12\\n') == '000001000002\\n000002000001\\n000001000001\\n'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\\n\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\\n\") == \"000001000002\\n000002000001\\n000001000001\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\\n\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 32\\n2 63\\n1 12\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"1\") == \"000000000001\"\nassert solution(\"5\") == \"000000000006\"\nassert solution(\"10\") == \"000000000010\"\nassert solution(\"5 3\") == \"000000000003\"\nassert solution(\"10 1\") == \"000000000010\"\nassert solution(\"5 1\") == \"000000000001\"\nassert solution(\"10 10\") == \"000000000010\"\nassert solution(\"5 5\") == \"000000000005\"\nassert solution(\"10 10\") == \"000000000010\"",
        "num_ids_2": 90,
        "num_ids_4": 133
    },
    {
        "number": 4131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001\\n'\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nassert solution(\"5\\n2 10 8 40 12\") == \"11\\n\"\nassert solution(\"5\\n2 10 8 40 12 45\") == \"11\\n\"\nassert solution(\"6\\n2 10 8 40 12 45 15\") == \"11\\n\"\nassert solution(\"7\\n2 10 8 40 12 45 15 7\") == \"11\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 113
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"2\\n3 10 10 10\") == \"2\"\nassert solution(\"3\\n2 8 40 20\") == \"5\"\nassert solution(\"4\\n10 10 10 10\") == \"10\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000\") == \"1000000000\"\nprint(\"All test cases pass\")",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"4\\n2 10 8 10\") == \"10\"\nassert solution(\"4\\n2 10 100 40\") == \"20\"\nassert solution(\"4\\n2 10 100 10\") == \"100\"\nassert solution(\"4\\n2 10 100 100\") == \"200\"\nassert solution(\"4\\n2 10 100 1000\") == \"2000\"",
        "num_ids_2": 43,
        "num_ids_4": 92
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"The minimum possible final health of the last monster alive is not 2.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\n\nprint(\"All tests passed!\")",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\") == \"0101\"\nprint(\"All test cases pass\")",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 47,
        "num_ids_4": 125
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\\n\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\\n\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"0\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3\\n'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5\\n'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0\\n'",
        "num_ids_2": 83,
        "num_ids_4": 144
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n\\nOutput\\n3\\n\\nInput\\n3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\\nOutput\\n5\\n\\nInput\\n3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\\nOutput\\n0\\n\\nInput\\n3 4 20000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\\nOutput\\n1000000000000000000') == '3\\n\\n5\\n\\n1000000000000000000'",
        "num_ids_2": 273,
        "num_ids_4": 273
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 11\\n2 1 5\\n7 10 0\\n12 6 4') == '3'\nassert solution('3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '5'\nassert solution('3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1') == '0'",
        "num_ids_2": 79,
        "num_ids_4": 138
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\\n\\nOutput\\n3\\n\\nInput\\n3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\\nOutput\\n5\\n\\nInput\\n3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\\nOutput\\n0\\n\\nNote\\n\\nAll the paths from the first example: $(1, 1) \\rightarrow (2, 1) \\rightarrow (3, 1) \\rightarrow (3, 2) \\rightarrow (3, 3)$. All the paths from the second example: $(1, 1) \\rightarrow (2, 1) \\rightarrow (3, 1) \\rightarrow (3, 2) \\rightarrow (3, 3) \\rightarrow (3, 4)$.') == '3\\n\\n5\\n\\n0\\n\\n'",
        "num_ids_2": 286,
        "num_ids_4": 286
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n        3 3 11\n        2 1 5\n        7 10 0\n        12 6 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n        3 4 2\n        1 3 3 3\n        0 3 3 2\n        3 0 1 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n        3 4 1000000000000000000\n        1 3 3 3\n        0 3 3 2\n        3 0 1 1\n\"\"\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output', 'The function should return the output'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3 11\n    2 1 5\n    7 10 0\n    12 6 4\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 2\n    1 3 3 3\n    0 3 3 2\n    3 0 1 1\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 10000000000000000000\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 10000000000000000000\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 10000000000000000000\n    \"\"\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"thisisexampletwo\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"\n",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\", \"Expected result: 'codeforces', but got: '\"+str(solution(\"rocesfedoc\"))+\"'\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\", \"Expected result: 'thisisexampletwo', but got: '\"+str(solution(\"plmaetwoxesisiht\"))+\"'\"\nassert solution(\"z\") == \"z\", \"Expected result: 'z', but got: '\"+str(solution(\"z\"))+\"'\"\n\nfrom typing import List",
        "num_ids_2": 96,
        "num_ids_4": 126
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10', 'rocesfedoc') == 'codeforces'\nassert solution('16', 'plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('1', 'z') == 'z'",
        "num_ids_2": 46,
        "num_ids_4": 59
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rocesfedoc\") == \"codeforces\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 38,
        "num_ids_4": 48
    },
    {
        "number": 4135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"thisisexampletwo\") == \"thisisexampletwo\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\", \"The solution should return the sum of the given integers.\"\nassert solution(\"381 492\") == \"873\", \"The solution should return the sum of the given integers.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\", \"Output 1\"\nassert solution(\"381 492\") == \"873\", \"Output 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"19\", \"Test Failed\"\nassert solution(input()) == \"873\", \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"+++>\"\nassert solution(\"9-7\") == \"++++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2+3\") == \"+\\n>\"\nassert solution(\"9-7\") == \"-\\n>\"\nassert solution(\"+\") == \">\\n\"\nassert solution(\"7-4\") == \"-\\n>\"\nassert solution(\"100-3\") == \"-\\n>\"\nassert solution(\"5+7+9+10\") == \"+\\n+[+-]-\\n[+-]-\\n[+-]-\\n[+-]-\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\\n++++>\\n<[+-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\", \"Test 1\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\\n\", \"Test 2\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\\n+++>\\n<[<+>-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\nassert solution(\"9-7\") == \"+++++++++>\\n+++++++>\\n<[<->-]<\\n++++++++++++++++++++++++++++++++++++++++++++++++.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"+++++++++>+++++++>++++++++<+++++++>.\\n\"\nassert solution(input()) == \"+++++++++>+++++++>++++++++<+++++++>.\\n\"\nassert solution(input()) == \"+++++++++>+++++++>++++++++<+++++++>.\\n\"\nassert solution(input()) == \"+++++++++>+++++++>++++++++<+++++++>.\\n\"\nassert solution(input()) == \"+++++++++>+++++++>++++++++<+++++++>.\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"+++++++++>\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2+3\\n\") == \"+\\n\"\nassert solution(\"9-7\\n\") == \"->\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>+++>+[<+>-]<\"\nassert solution(\"9-7\") == \"+++++++++>+++++++>+[<->-]<\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '12345\\n23456\\n56789\\n02345\\n01234\\n'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\", \"Test 1 failed\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\", \"Test 2 failed\"",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n9999999999999999999\\n1000000000000000000\") == \"8\\n2\\n4\\n1\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1\n3\n20\n38\n56\n\"\"\") == \"\"\"\n1\n2\n5\n2\n0\n\"\"\"\n\nassert solution(\"\"\"\n4\n2132\n506\n999999999999999999\n1000000000000000000\n\"\"\") == \"\"\"\n8\n2\n4\n1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n2\\n5\\n2\\n0'\nassert solution() == '8\\n2\\n4\\n1'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and output {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"112123123412345$\\dots$\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"42143412345678912345678910\") == \"8\\n2\\n4\\n1\"\nassert solution(\"23456789012345678901234567890\") == \"0\\n2\\n6\\n4\"",
        "num_ids_2": 83,
        "num_ids_4": 130
    },
    {
        "number": 4138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999999999999\\n1000000000000000000\\n\") == \"8\\n2\\n4\\n1\\n\"\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == 4, \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(575) == \"4\"\nassert solution(601) == \"4\"\nassert solution(701) == \"1\"\nassert solution(1000000) == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(575) == \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(575) == \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"575\") == \"4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"The output is not as expected.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == \"There are four Shichi-Go-San numbers not greater than 575: 357, 375, 537 and 573.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(575) == '4', \"Output should be 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('000') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"000\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"  # no repaint is needed",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"000\") == \"1\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"000\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"011\") == \"3\"\nassert solution(\"001\") == \"0\"\nassert solution(\"101\") == \"3\"\nassert solution(\"111\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"000\") == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"APPROVED\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\\n\"\nassert solution(\"1\\n2\") == \"DENIED\\n\"\nassert solution(\"5\\n6 7 9 10 31 50 60\") == \"APPROVED\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 74
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'APPROVED', 'Incorrect output'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"APPROVED\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'DENIED', \"Testcase 1\"\n\nN = int(input())\nA = list(map(int, input().split()))\n\nfor num in A:\n    if num % 2!= 0:\n        if num % 3 == 0 or num % 5 == 0:\n            continue\n        else:\n            return \"DENIED\"\n\nreturn \"APPROVED\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"5\\n6 7 8 10 31\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 11 31\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 32\") == \"DENIED\"\nassert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 'APPROVED'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(b\"4\\n1 2 3 4 5\") == \"DENIED\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"4\\n1 2 3 4\") == \"DENIED\"\nassert solution(\"7\\n2 4 6 8 10\") == \"APPROVED\"\nassert solution(\"6\\n1 2 3 4 5\") == \"DENIED\"\nassert solution(\"3\\n1 2 3\") == \"DENIED\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\\n\"\nassert solution(\"1\\n2 3 4 5 6\") == \"DENIED\\n\"\nassert solution(\"7\\n1 2 3 4 5\") == \"APPROVED\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"DENIED\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n\nTakahashi will do a tap dance. The dance is described by a string S where each character is L, R, U, or D. These characters indicate the positions on which Takahashi should step. He will follow these instructions one by one in order, starting with the first character.\nS is said to be easily playable if and only if it satisfies both of the following conditions:\n - Every character in an odd position (1-st, 3-rd, 5-th, \\ldots) is R, U, or D.\n - Every character in an even position (2-nd, 4-th, 6-th, \\ldots) is L, U, or D.\nYour task is to print Yes if S is easily playable, and No otherwise.\n\n-----Constraints-----\n - S is a string of length between 1 and 100 (inclusive).\n - Each character of S is L, R, U, or D.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint Yes if S is easily playable, and No otherwise.\n\n-----Sample Input-----\nRUDLUDR\n\n-----Sample Output-----\nYes\n\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\nThus, S is easily playable.",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UUUDUD\") == \"No\"\nassert solution(\"LURDLUD\") == \"No\"\nassert solution(\"RUDUDUD\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.'\n\nprint('All tests passed.')",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('RUDLUDR') == 'Yes\\nEvery character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\\nEvery character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\\nThus, S is easily playable.'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RUDDURD') == 'Yes'\nassert solution('RUDULDR') == 'No'\nassert solution('RUDDURL') == 'No'\nassert solution('RUDDUD') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\", \"Test Case 1\"\nassert solution(\"RUDLDR\") == \"No\", \"Test Case 2\"\nassert solution(\"LUDR\") == \"No\", \"Test Case 3\"\nassert solution(\"DLUR\") == \"Yes\", \"Test Case 4\"\nassert solution(\"URDL\") == \"Yes\", \"Test Case 5\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('UDRLLD') == 'No'\nassert solution('LDUDRU') == 'No'\nassert solution('UDRLRD') == 'No'\nassert solution('LDDDRL') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"1\\n3\\n2\\n4\\n3\\n5\") == \"0\"\nassert solution(\"5\\n1\\n2\\n4\\n3\\n5\") == \"6\"\nassert solution(\"1\\n3\\n2\\n4\\n3\\n5\") == \"0\"\nassert solution(\"1\\n3\\n2\\n4\\n3\\n5\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\nassert solution(\"1000000\\n250000000000000000000\\n50000000000000000000\\n100000000000000000000\\n25000000000000000000\\n50000000000000000000\") == \"3000000\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\nassert solution(\"1000000\\n25000000000000000000\\n50000000000000000000\\n10000000000000000000\\n25000000000000000000\\n50000000000000000000\") == \"3000000\\n\"",
        "num_ids_2": 163,
        "num_ids_4": 324
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"2\\n1\\n2\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"0\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\\n\"\nassert solution(\"1\") == \"1\\n\"\nassert solution(\"3\") == \"1\\n\"\nassert solution(\"10\") == \"1\\n\"\nassert solution(\"1000\") == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"  # should pass\nassert solution(\"1\\n\") == \"1\\n\"  # should pass\nassert solution(\"3\\n\") == \"3\\n\"  # should pass\nassert solution(\"5\\n\") == \"2\\n\"  # should pass\nassert solution(\"7\\n\") == \"1\\n\"  # should pass\nassert solution(\"9\\n\") == \"0\\n\"  # should pass",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n', \"Output should be 2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '2'\nassert solution('3\\n') == '1'\nassert solution('5\\n') == '1'\nassert solution('7\\n') == '2'\nassert solution('9\\n') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"2\\n\", \"Two sequences {0, 9} and {9, 0} satisfy all conditions.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'\\n') == '2'\nassert solution(b'2\\n') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n', \"Output should be 2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Incorrect output. Expected 2, but got {}.\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"20\") == \"23\", \"Test case 1 failed.\"\nassert solution(stdin=\"10\") == \"11\", \"Test case 2 failed.\"\nassert solution(stdin=\"0\") == \"0\", \"Test case 3 failed.\"\nassert solution(stdin=\"1\") == \"2\", \"Test case 4 failed.\"\nassert solution(stdin=\"1000000000\") == \"1000000003\", \"Test case 5 failed.\"",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"23\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(20) == '23'\nassert solution(21) == '23'\nassert solution(19) == '22'\nassert solution(17) == '21'\nassert solution(16) == '20'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"20\") == \"23\\n\", \"The minimum prime number greater than or equal to 20 is 23.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(20) == \"23\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='20') == '23', 'The minimum prime number greater than or equal to 20 is 23.'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"23\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20\") == \"23\", \"Test Case 1 Failed\"\nassert solution(\"10\") == \"23\", \"Test Case 2 Failed\"\nassert solution(\"4\") == \"23\", \"Test Case 3 Failed\"\nassert solution(\"7\") == \"23\", \"Test Case 4 Failed\"\nassert solution(\"9\") == \"23\", \"Test Case 5 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(20) == '23', \"The minimum prime number greater than or equal to 20 is 23.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20\") == \"23\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\", \"The sequence 3,1,3,2 is not /\\/\\/\\/, but we can make it /\\/\\/\\/ by replacing one of its elements: for example, replace the fourth element to make it 3,1,3,1.\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\", \"The sequence 1,2,3,4,5 is not /\\/\\/\\/, but we can make it /\\/\\/\\/ by replacing one of its elements: for example, replace the third element to make it 1,3,5,3.\"\nassert solution(\"4\\n3 1 2 1\") == \"2\\n\", \"The sequence 3,1,2,1 is not /\\/\\/\\/, but we can make it /\\/\\/\\/ by replacing one of its elements: for example, replace the second element to make it 3,1,1,1.\"\nassert solution(\"4\\n1 2 3 4\") == \"1\\n\", \"The sequence 1,2,3,4 is not /\\/\\/\\/, but we can make it /\\/\\/\\/ by replacing one of its elements: for example, replace the first element to make it 1,2,3,4.\"\nassert solution(\"4\\n5 5 5 5\") == \"0\\n\", \"The sequence 5,5,5,5 is not /\\/\\/\\/, but we cannot make it /\\/\\/\\/.\"",
        "num_ids_2": 152,
        "num_ids_4": 300
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\nGot: \" + solution()",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\", \"Test Case 1 Failed\"\nassert solution(\"6\\n1 2 3 4 5\") == \"2\\n\", \"Test Case 2 Failed\"\nassert solution(\"4\\n7 8 9 10\") == \"2\\n\", \"Test Case 3 Failed\"\nassert solution(\"4\\n1 2 3 4\") == \"1\\n\", \"Test Case 4 Failed\"\nassert solution(\"6\\n3 2 1 2 3 2\") == \"1\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 58,
        "num_ids_4": 115
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1 3 2\\n\") == \"1\"\nassert solution(\"3\\n1 2 3 4\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'4\\n3 1 3 2\\n') == '1\\n'\nassert solution(b'4\\n3 1 2 3\\n') == '1\\n'\nassert solution(b'4\\n3 2 3 1\\n') == '2\\n'\nassert solution(b'4\\n3 2 1 3\\n') == '2\\n'\nassert solution(b'4\\n3 1 1 2\\n') == '3\\n'",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"3\\n1 2 3 4 5\") == \"2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"3\\n5 5 5 5\") == \"2\"\nassert solution(\"5\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n6 6 6 6\") == \"2\"\nassert solution(\"4\\n2 2 2 2\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"6\\n2 3 4 5 6\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4\\n\"\nassert solution(\"8\\n2 3 4 5 6 7 8\") == \"5\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 94
    },
    {
        "number": 4146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n3 4 3 5 1\") == \"3\"\nassert solution(\"6\\n3 4 1 1 5\") == \"1\"\nassert solution(\"7\\n1 3 2 4 2 1 5\") == \"2\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1 1\") == \"3\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1 1 1\") == \"2\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"23\", \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 180
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\\n\") == \"23\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"23\\n\", \"Incorrect solution\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"98\") == \"2\"\nassert solution(\"40\") == \"10\"\nassert solution(\"30\") == \"1\"\nassert solution(\"21\") == \"1\"\nassert solution(\"80\") == \"10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 55
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nABCXYZ\") == \"BADNYC\"\nassert solution(\"4\\nABCXYZ\") == \"NYBCDE\"\nassert solution(\"1\\nABCXYZ\") == \"ABCXYZ\"\nassert solution(\"2\\n\") == \"\"",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"CDEZAB\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\nassert solution('1\\nCDEFG') == 'CDEFG'\nassert solution('5\\n') == ''\nassert solution('0\\n') == ''\nassert solution('100\\n') == ''",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"5\\nhello\") == \"olleh\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"1000\\n\") == \"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 55
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"CDEZAB\", \"Testcase 1\"\nassert solution(input()) == \"GXACDF\", \"Testcase 2\"\nassert solution(input()) == \"BXDFHL\", \"Testcase 3\"\nassert solution(input()) == \"LXCSBN\", \"Testcase 4\"\nassert solution(input()) == \"BESDF\", \"Testcase 5\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"5\\nxyz\") == \"zxye\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"-1\\n\") == \"\"",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nABCXYZ\\n') == 'CDEZAB'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"3\\nLOVELY\") == \"LOVELYZ\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2\"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\\n\") == \"3 4 2 \"\nassert solution(\"1\\n2750131 199999\\n\") == \"199999  \"\nassert solution(\"1\\n3 6\\n\") == \"6\"",
        "num_ids_2": 63,
        "num_ids_4": 80
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == [3, 4, 2]\nassert solution(1) == [199999, 199999]\nassert solution(1) == [6]",
        "num_ids_2": 39,
        "num_ids_4": 49
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\\n1\\n2750131 199999\\n1\\n3 6\") == \"3 4 2 \" + \"199999 6\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == ['3', '4', '2']\nassert solution(1) == [199999]\nassert solution(1) == [6]",
        "num_ids_2": 31,
        "num_ids_4": 41
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5 2 3 2 4''') == ['3', '4', '2']\nassert solution('''1\n2750131 199999''') == ['199999']\nassert solution('''1\n3 6''') == ['6']",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3 4 2 \"\nassert solution(1) == \"199999  \"\nassert solution(1) == \"199999 \"\n\nprint(\" \".join(map(str, solution(3))))",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3 4 2\"\nassert solution(1) == \"199999\"\nassert solution(1) == \"6\"",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 4 2\", \"Function should return '3 4 2'.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 5 2 3 2 4\") == \"3 4 2\"\nassert solution(\"1\\n2750131 199999\") == \"199999\"\nassert solution(\"1\\n3 6\") == \"6\"\n",
        "num_ids_2": 58,
        "num_ids_4": 73
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'\n\nfor line in ['5 2\\n2 4 5 3 1', '5 1\\n2 1 3 5 4', '7 1\\n7 2 1 3 5 4 6', '5 1\\n2 4 5 3 1']:\n    print(solution(line))",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {test_case_id} failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution(b'5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution(b'7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution(b'5 1\\n2 4 5 3 1\\n') == '21112'\nprint('All test cases pass.')",
        "num_ids_2": 62,
        "num_ids_4": 130
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('5 1\\n2 4 5 3 1') == '21112'",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\\n\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\\n\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\\n\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"\n\nfor line in stdin.splitlines():\n    n, k = map(int, line.split())\n    s = input(line)\n    print(solution(s))",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5 2\n2 4 5 3 1''') == '11111\\n'\nassert solution('''5 1\n2 1 3 5 4''') == '22111\\n'\nassert solution('''7 1\n7 2 1 3 5 4 6''') == '1121122\\n'\nassert solution('''5 1\n2 4 5 3 1''') == '21112\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\\n\") == 2\nassert solution(\"2\\n100 1\\n4\\n1 3 3 7\\n\") == 2\nassert solution(\"4\\n1 3 3 7\\n\") == 4",
        "num_ids_2": 74,
        "num_ids_4": 94
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\") == 2\nassert solution(\"2\\n100 1\\n4\\n1 3 3 7\") == 2\nassert solution(\"4\\n1 3 3 7\") == 4",
        "num_ids_2": 70,
        "num_ids_4": 88
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\\n') == '2'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n2\\n100 1\\n4\\n1 3 3 7\\n\") == 2\nassert solution(\"2\\n100 1\\n4\\n1 3 3 7\\n\") == 2\nassert solution(\"4\\n1 3 3 7\\n\") == 4",
        "num_ids_2": 74,
        "num_ids_4": 94
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"4\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"4\"\nassert solution(5) == \"2\"\nassert solution(6) == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1, 2, 1, 2, 3]) == 2\nassert solution([100, 1]) == 2\nassert solution([1, 3, 3, 7]) == 4",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 1 2 3\\n\") == 2\nassert solution(\"2\\n100 1\\n\") == 2\nassert solution(\"4\\n1 3 3 7\\n\") == 4\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"[16]\") == \"1\"\nassert solution(\"[4, 16]\") == \"2\"\nassert solution(\"[1, 3, 2, 8, 8, 8]\") == \"0\"\nassert solution(\"[1, 1, 1, 1023]\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 72
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(stdin=\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(stdin=\"1\\n16\") == \"1\"\nassert solution(stdin=\"4\\n1 1 1 1023\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 7 1 5 4 9') == '1\\n'\nassert solution('5 1 2 3 4 5') == '2\\n'\nassert solution('1 16') == '1\\n'\nassert solution('4 1 1 1023') == '0\\n'",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n4 7 1 5 4 9\\n') == '1\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('1\\n16\\n') == '1\\n'\nassert solution('4\\n1 1 1 1023\\n') == '0\\n'",
        "num_ids_2": 52,
        "num_ids_4": 96
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n4 7 1 5 4 9\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n16\") == \"1\\n\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"1\"\nassert solution(\"4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4 1 1 1023\") == \"0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\" # correct output 1\nassert solution(input()) == \"2\" # correct output 2\nassert solution(input()) == \"1\" # correct output 3\nassert solution(input()) == \"0\" # correct output 4\nassert solution(input()) == \"0\" # correct output 5",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input {input()} should output {output()}, but got {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"4\"\nassert solution(\"0011\") == \"4\"\nassert solution(\"0101\") == \"2\"\nassert solution(\"1010\") == \"4\"\nassert solution(\"0000\") == \"0\"\nassert solution(\"1100\") == \"3\"\nassert solution(\"1011\") == \"3\"\nassert solution(\"1010\") == \"4\"\nassert solution(\"0001\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1000\") == \"4\"\nassert solution(\"1100\") == \"4\"\nassert solution(\"1111\") == \"4\"\nassert solution(\"1011\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1110\") == \"1\"\nassert solution(\"0110\") == \"3\"\nassert solution(\"1010\") == \"5\"\nassert solution(\"0101\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0110\") == \"5\"\nassert solution(\"0111\") == \"6\"\nassert solution(\"0001\") == \"5\"\nassert solution(\"1111\") == \"5\"\nassert solution(\"1001\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"16\"\nassert solution(\"0101\") == \"4\"\nassert solution(\"1100\") == \"1\"\nassert solution(\"0000\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == \"4\", \"Incorrect output\"\nassert solution(\"1001\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0111\") == \"3\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"1110\") == \"2\"\nassert solution(\"11100\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 4\\n\") == \"3\"\nassert solution(\"4 2\\n1 3\\n2 4\\n5 3\\n6 2\\n7 4\\n\") == \"4\"",
        "num_ids_2": 48,
        "num_ids_4": 87
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 4\\n2 5\\n3 6\\n4 7\") == \"1\"\nassert solution(\"4 1\\n1 4\\n2 7\") == \"2\"\nassert solution(\"2 2\\n1 3\\n2 4\") == \"0\"\nassert solution(\"2 1\\n1 3\\n2 4\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 98
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 4\\n2 3\\n1 2\") == \"1\"\nassert solution(\"5 3\\n4 2\\n1 5\\n2 4\\n3 1\") == \"3\"",
        "num_ids_2": 44,
        "num_ids_4": 76
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"4 2\\n1 3\\n3 4\\n4 5\\n6 7\\n8 9\") == \"3\"\nassert solution(\"4 2\\n1 3\\n2 4\\n1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\") == \"4\"",
        "num_ids_2": 59,
        "num_ids_4": 112
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 5\\n3 3\\n5 5\") == \"3\"\nassert solution(\"2 1\\n1 1\\n1 1\") == \"2\"\nassert solution(\"4 3\\n1 2\\n2 4\\n1 1\") == \"4\"",
        "num_ids_2": 44,
        "num_ids_4": 93
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n2 4\\n\") == \"2\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"2\\n1 2\\n\") == \"1\\n\", \"Test case 3 failed\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\\n\", \"Test case 4 failed\"\nassert solution(\"4\\n1 2 2 1\\n\") == \"2\\n\", \"Test case 5 failed\"\nassert solution(\"2\\n1 2\\n\") == \"1\\n\", \"Test case 6 failed\"\n",
        "num_ids_2": 47,
        "num_ids_4": 101
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"4\\n\"\nassert solution(\"7\\n1 1 1 1 1 1\") == \"4\\n\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\") == \"4\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"4\\n1 3 3 1\\n\") == \"2\"\nassert solution(\"4\\n1 4 3 1\\n\") == \"3\"\nassert solution(\"4\\n1 5 3 1\\n\") == \"3\"\nassert solution(\"4\\n2 4 4 2\\n\") == \"3\"\nassert solution(\"4\\n3 4 5 3\\n\") == \"3\"\nassert solution(\"4\\n4 4 6 4\\n\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\n, but got: \" + solution(input()) + \"\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 2 1') == '2\\n'\nassert solution('4 1 2 3') == '2\\n'\nassert solution('5 1 2 3 4') == '2\\n'\nassert solution('6 1 2 3 4 5') == '2\\n'\nassert solution('1 2 2 1 2 2 1 2 2 1') == '2\\n'\nassert solution('1 1 1 1 1 1 1 1 1 1') == '2\\n'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '2\\n'",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 1\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\n\nstdin = \"\"\"\n4\n1 2 2 1\n\"\"\"\n\nassert solution(stdin) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nprint('All tests passed!')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5\\n2 1 -3\\n') == '3'\nassert solution('2 4\\n-1 1\\n') == '4'\nassert solution('4 10\\n2 4 1 2\\n') == '2'",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 59
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: Expected output: {expected_output}, Received output: {solution(input())}\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution() == '4'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 5) == 3\nassert solution(2, 4) == 4\nassert solution(4, 10) == 2",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 1 -3\\n\") == \"3\\n\"\nassert solution(\"2 4\\n-1 1\\n\") == \"4\\n\"\nassert solution(\"4 10\\n2 4 1 2\\n\") == \"2\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\na_1 -1\\na_2 -2\\na_3 -3\\na_4 -4') == '3'\nassert solution('2 4\\na_1 1\\na_2 2') == '4'\nassert solution('4 10\\na_1 2\\na_2 4\\na_3 1\\na_4 2') == '2'",
        "num_ids_2": 60,
        "num_ids_4": 97
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 1 -3\") == \"3\"\nassert solution(\"2 4\\n-1 1\") == \"4\"\nassert solution(\"4 10\\n2 4 1 2\") == \"2\"",
        "num_ids_2": 37,
        "num_ids_4": 59
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\n2 1 -3\\n') == '3\\n'\nassert solution('2 4\\n-1 1\\n') == '4\\n'\nassert solution('4 10\\n2 4 1 2\\n') == '2\\n'",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected: {}\\nGot: {}\".format(output(), solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 6 3 12 9\") == \"9 3 6 12 4 8 \"\nassert solution(\"4 28 84 126\") == \"126 42 84 28 \"\nassert solution(\"2 1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000 \"",
        "num_ids_2": 63,
        "num_ids_4": 151
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(Solution().solve()) == '9 3 6 12 4 8'\nassert solution(Solution().solve(4)) == '126 42 84 28'\nassert solution(Solution().solve(2)) == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\" \n\nprint(solution(\"6\\n4 8 6 3 12 9\"))\nprint(solution(\"4\\n42 28 84 126\"))\nprint(solution(\"2\\n1000000000000000000 3000000000000000000\"))",
        "num_ids_2": 70,
        "num_ids_4": 160
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8 6 3 12 9\") == \"9 3 6 12 4 8\", \"Test failed for '4 8 6 3 12 9'.\"\nassert solution(\"4\") == \"4\", \"Test failed for '4'.\"\nassert solution(\"2 1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\", \"Test failed for '2 10000000000000000000'.\"",
        "num_ids_2": 69,
        "num_ids_4": 186
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n42 28 84 126') == '126 42 84 28 '\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\nassert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8 '",
        "num_ids_2": 124,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"\nassert solution(\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8 \"\nassert solution(stdin=\"4\\n42 28 84 126\") == \"126 42 84 28 \"\nassert solution(stdin=\"2\\n1000000000000000000 3000000000000000000\") == \"3000000000000000000 1000000000000000000 \"",
        "num_ids_2": 74,
        "num_ids_4": 165
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n7 3 5\\n1\\n8'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\\n\") == \"3\\n7 3 5\\n\"\nassert solution(\"5\\n-1 2 5 8 11\\n\") == \"1\\n8\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 5 4 7 10 12\") == \"3\\n7 3 5\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n6\\n3 5 4 7 10 12\\n\\nOutput\\n3\\n7 3 5\\n\\nInput\\n5\\n-1 2 5 8 11\\n\\nOutput\\n1\\n8\\n\\nNote\\n\\nIn the first example the answer is [7, 3, 5].\\n\\nThe second example has two points in the same subset.') == '7 3 5\\n'\nassert solution('Input\\n5\\n-1 2 5 8 11\\n\\nOutput\\n1\\n8\\n\\nNote\\n\\nIn the first example the answer is [7, 3, 5].\\n\\nThe second example has two points in the same subset.') == '1\\n8\\n'",
        "num_ids_2": 201,
        "num_ids_4": 201
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"\"\"\n6\n3 5 4 7 10 12\n\"\"\") == \"\"\"\n3\n7 3 5\n\"\"\"\n\nassert solution(stdin=\"\"\"\n5\n-1 2 5 8 11\n\"\"\") == \"\"\"\n1\n8\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n-1 2 5 8 11\") == \"1\\n8\"\nprint(\"All tests passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n6\\n3 5 4 7 10 12\\n\") == \"3\\n7 3 5\\n\"\nassert solution(\"Input\\n5\\n-1 2 5 8 11\\n\") == \"1\\n8\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n1\n7 3 5\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6\n3 5 4 7 10 12\n\"\"\") == \"3\\n7 3 5\\n\"\n\nassert solution(\"\"\"\n5\n-1 2 5 8 11\n\"\"\") == \"1\\n8\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\", \"Sample Input/Output is incorrect\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0 2\\n\", \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nassert solution(\"1 1 2\") == \"0 1\\n\"\nassert solution(\"1 2 3\") == \"0 1\\n\"\nassert solution(\"2 2 1\") == \"0 1\\n\"\nassert solution(\"2 2 2\") == \"0 1\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nassert solution(\"1 1 1\") == \"0 1\\n\"\nassert solution(\"0 0 0\") == \"0 0\\n\"\nassert solution(\"2 3 4\") == \"0 2\\n\"\nassert solution(\"10 10 10\") == \"10 10\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"\nassert solution(\"5 5 5\") == \"5 5\\n\"\nassert solution(\"6 6 6\") == \"6 6\\n\"\nassert solution(\"7 7 7\") == \"7 7\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1000000000 1000000000\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"103\") == \"3\\n\", \"Expected output: 3\\n, Actual output: \" + solution(stdin=\"103\") + \"\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103\\n\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\", \"Sample Input Error\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='103') == '3\\n'\nassert solution(stdin='1000000') == '4\\n'\nassert solution(stdin='10000000') == '5\\n'",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"103\") == \"3\\n\", \"Sample Input Error\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(103) == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"103\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"The function should return 9 for the given input.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == '9\\n', \"Invalid Answer\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"9\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"9\\n\", \"The code is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"9\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\", \"Test failed\"\nassert solution(\"5\") == \"9\", \"Test failed\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"9\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '9', \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"9\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\", \"The maximum value of f is not 10.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 6') == '10\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"\nassert solution(\"6\\n1 2 3\") == \"6\\n\"\nassert solution(\"10\\n1 2 3\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\", \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '10', \"Error in the solution.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\\n\", \"Output should be 10.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4 6\\n\") == \"10\\n\", \"Input not in expected format.\"\n\nN = int(stdin.readline().strip())\na_list = list(map(int, stdin.readline().strip().split()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n\") == \"Yes\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n\") == \"No\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n1",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\"\nassert solution(\"1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"No\\n\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\") == \"Yes\\n\"\nassert solution(\"1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"No\\n\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n3 1\\n2 1\\n1 1\") == \"Yes\\n\"\nassert solution(\"1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"No\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 168
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\\n1 2\") == \"No\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"Yes\"",
        "num_ids_2": 75,
        "num_ids_4": 100
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\\n\", \"Test 1 failed\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2\") == \"No\\n\", \"Test 2 failed\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n1 1\") == \"Yes\\n\", \"Test 3 failed\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 3\") == \"No\\n\", \"Test 4 failed\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2\") == \"No\\n\", \"Test 5 failed\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes', \"The solution should return Yes when there are three doublets in a row.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2') == 'Yes'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\\n\"\nassert solution(\"3\") == \"15\\n\"\nassert solution(\"4\") == \"16\\n\"\nassert solution(\"5\") == \"16\\n\"\nassert solution(\"6\") == \"35\\n\"\nassert solution(\"7\") == \"42\\n\"\nassert solution(\"8\") == \"42\\n\"\nassert solution(\"9\") == \"42\\n\"\nassert solution(\"10\") == \"160\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nprint(solution('2'))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2') == '4', \"The area of a circle of radius 2 is 4 times larger than the area of a circle of radius 1.\"\nassert solution(stdin='10') == '0', \"The area of a circle of radius 10 is not equal to the area of a circle of radius 1.\"\nassert solution(stdin='-1') == '0', \"The area of a circle of radius -1 is not equal to the area of a circle of radius 1.\"\nassert solution(stdin='0') == '0', \"The area of a circle of radius 0 is not equal to the area of a circle of radius 1.\"\nassert solution(stdin='2.5') == '4', \"The area of a circle of radius 2.5 is not equal to the area of a circle of radius 1.\"",
        "num_ids_2": 76,
        "num_ids_4": 149
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\", \"The area of a circle of radius 2 is 4 times larger than the area of a circle of radius 1.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\\n\"\nassert solution(\"10\") == \"4\\n\"\nassert solution(\"5\") == \"4\\n\"\nassert solution(\"-2\") == \"Error: Invalid input. Please enter a positive integer.\\n\"\nassert solution(\"100\") == \"Error: Invalid input. Please enter a positive integer.\\n\"\nassert solution(\"\") == \"Error: Invalid input. Please enter a positive integer.\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 58
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 4\nassert solution(5) == 10\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(50) == 4\nassert solution(100) == 4\nassert solution(100.5) == 4\nassert solution(-1) == 0\nassert solution(\"1\") == 0\nassert solution(\"a\") == 0\nassert solution(\"1.5\") == 0\nassert solution(None) == 0\nassert solution([]) == 0\nassert solution({}) == 0\nassert solution(\"hello\") == 0",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 4\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"  # Test case 1\nassert solution(\"2\") == \"4\"  # Test case 2\nassert solution(\"3\") == \"9\"  # Test case 3\nassert solution(\"4\") == \"16\"  # Test case 4\nassert solution(\"5\") == \"25\"  # Test case 5\nassert solution(\"6\") == \"36\"  # Test case 6\nassert solution(\"7\") == \"49\"  # Test case 7\nassert solution(\"8\") == \"64\"  # Test case 8\nassert solution(\"9\") == \"81\"  # Test case 9\nassert solution(\"10\") == \"100\"  # Test case 10\n\nfor r in range(1, 101):\n    assert solution(str(r)) == str(int(r) * 2)  # Test case with fractional radius\n    assert solution(str(r)) == str(int(r) * 4)  # Test case with integer radius",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Yes', \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\"\nassert solution(\"4\\n3 12 5 1\\n\") == \"No\"\nassert solution(\"5\\n3 8 5 10\\n\") == \"Yes\"\nassert solution(\"5\\n3 12 5 10\\n\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 6\\n\") == \"Yes\"\nassert solution(\"10\\n1 2 3 4 5 6\\n\") == \"No\"",
        "num_ids_2": 43,
        "num_ids_4": 88
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == \"Yes\"\nassert solution(\"3\\n8 5 1\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4\\n\") == \"No\"\nassert solution(\"5\\n1 2 3 4\\n5\\n6 7 8 9\\n\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4\\n3 8 5 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nprint(\"Yes\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of sides: \")) == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\\n\"\nassert solution(\"5\\n3 8 5 1\") == \"No\\n\"\nassert solution(\"6\\n3 8 5 1\") == \"No\\n\"\nassert solution(\"7\\n3 8 5 1\") == \"No\\n\"\nassert solution(\"8\\n3 8 5 1\") == \"No\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"3\\n4 8 5 1\") == \"No\"\nassert solution(\"5\\n3 8 5 1\") == \"No\"\nassert solution(\"6\\n3 8 5 1\") == \"No\"\nassert solution(\"7\\n3 8 5 1\") == \"No\"\nassert solution(\"8\\n3 8 5 1\") == \"No\"\nassert solution(\"9\\n3 8 5 1\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"3 3\\n1 9\\n3 2\\n1 8\") == \"-1\"\nassert solution(\"3 3\\n1 8\\n3 2\\n1 9\") == \"702\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 8\") == \"702\"",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"\nassert solution(\"2 3\\n0 7\\n0 2\\n1 7\\n\") == \"-1\"\nassert solution(\"1 9\\n0 0\\n9 8\\n0 1\\n\") == \"999\"\nassert solution(\"1 1\\n0 0\\n0 0\\n0 0\\n\") == \"-1\"\nassert solution(\"1 3\\n1 1\\n1 2\\n1 3\\n\") == \"-1\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"3 3\\n1 0\\n3 2\\n1 7\") == \"-1\"\nassert solution(\"3 3\\n2 2\\n1 7\") == \"-1\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 0\") == \"-1\"",
        "num_ids_2": 56,
        "num_ids_4": 107
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"2 2\\n1 8\\n2 2\") == \"-1\\n\"\nassert solution(\"3 2\\n1 9\\n1 0\") == \"-1\\n\"\nassert solution(\"4 3\\n0 2\\n9 3\") == \"-1\\n\"\nassert solution(\"3 2\\n1 9\\n3 1\") == \"702\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 103
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 9\") == \"-1\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 0\") == \"-1\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 10\") == \"10700\\n\"\nassert solution(\"3 3\\n1 7\\n3 2\\n1 100\") == \"10700\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 123
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"\nprint(\"All tests passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\") == \"702\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\"\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\", \"Test case 1 failed\"\nassert solution(input()) == \"9\", \"Test case 2 failed\"\nassert solution(input()) == \"9\", \"Test case 3 failed\"\nassert solution(input()) == \"9\", \"Test case 4 failed\"\nassert solution(input()) == \"9\", \"Test case 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1)\\n(3,3,3)\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\\n(1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1) and (3,3,3) satisfy the condition.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"9\\n\"\nassert solution(\"10 3\") == \"10\\n\"\nassert solution(\"3 20\") == \"3\\n\"\nassert solution(\"10 20\") == \"2\\n\"\nassert solution(\"1 1\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"9\\n((1,1,1),(1,1,3),(1,3,1),(1,3,3),(2,2,2),(3,1,1),(3,1,3),(3,3,1))\\n((3,1,3),(3,3,3))\\n((1,1,3),(2,2,2),(3,3,2))\"\nassert solution(\"1 1\") == \"1\\n(1,1,1)\"\nassert solution(\"2 3\") == \"12\\n((2,2,2),(3,2,2),(3,3,2))\"\nassert solution(\"3 5\") == \"15\\n((3,3,2),(3,3,3),(3,4,2),(3,4,3),(3,5,2))\"\nassert solution(\"4 6\") == \"23\\n((4,4,2),(4,4,3),(4,4,4),(4,5,2),(4,5,3),(4,5,4))\"",
        "num_ids_2": 119,
        "num_ids_4": 199
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1000\"\nassert solution(\"10\") == \"110000\"\nassert solution(\"100\") == \"11001000\"\nassert solution(\"200\") == \"1101001000\"\nassert solution(\"1000\") == \"111000100000\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 29,
        "num_ids_4": 69
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"1000\") == \"101000101010\"\nassert solution(\"1000000\") == \"1010000101010101010\"\nassert solution(\"1000000000\") == \"101000000101010101000010101010\"",
        "num_ids_2": 25,
        "num_ids_4": 83
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"-9\") == \"1011\"\n\nprint(\"Tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1011\"\nassert solution() == \"1111\"\nassert solution() == \"101001\"\nassert solution() == \"100001\"\nassert solution() == \"11000001\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(-9) == '1011'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"1011\"\nassert solution(\"-9\") == \"-1011\"\nassert solution(\"1000000000\") == \"100000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 26,
        "num_ids_4": 1027
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"101010\", \"Test failed\"\nassert solution(\"0\") == \"0\", \"Test failed\"\nassert solution(\"1\") == \"1\", \"Test failed\"\nassert solution(\"12\") == \"1010\", \"Test failed\"\nassert solution(\"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-9\") == \"1011\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"1011\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-100\") == \"101001101110001\"\nassert solution(\"-2\") == \"1111111111111111111111111111111\"\nassert solution(\"0\") == \"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 23,
        "num_ids_4": 89
    },
    {
        "number": 4168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-12\") == \"11010\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"\nassert solution(\"2 5\\n4 9\\n2 5\\n\") == \"14\\n\"\nassert solution(\"2 5\\n4 9\\n2 5\\n\") == \"15\\n\"\nassert solution(\"2 5\\n4 9\\n2 5\\n\") == \"16\\n\"\nassert solution(\"2 5\\n4 9\\n2 5\\n\") == \"17\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"\nassert solution(\"2 5\\n4 9\\n2 3\\n\") == \"10\"\nassert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"\nassert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"\nassert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12\"\nassert solution() == \"12\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\\n\"\nassert solution(\"3 10\\n1 2\\n3 4\") == \"7\\n\"\nassert solution(\"4 10\\n2 3\\n1 4\") == \"6\\n\"\nassert solution(\"2 5\\n3 7\\n1 3\") == \"12\\n\"\nassert solution(\"2 5\\n3 7\\n1 4\") == \"12\\n\"\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n6 7 8 9 10\") == \"4\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"The solution should return 2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected output: 2\\nGot: {}\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 4 8 7 3\\n\") == \"2\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\" # example output",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"10\\n20 15 10 5 2\") == \"2\"\nassert solution(\"10\\n20 15 10 5 2\") == \"2\"",
        "num_ids_2": 47,
        "num_ids_4": 72
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected output: '{output()}'\\nGot output: '{solution(input())}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\\n1\\n\", \"Test 1\"\nassert solution(input()) == \"Output\\n2\\n\", \"Test 2\"\nassert solution(input()) == \"Output\\n0\\n\", \"Test 3\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution(stdin='5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution(stdin='5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input error: {input()}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 3) == 1\nassert solution(5, 4) == 2\nassert solution(5, 5) == 0",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output', 'Your solution is not correct.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1\\n'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2\\n'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 2 4 5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 3\\n1 2 3 3 3\\n\") == \"0\\n\"\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\nActual output: \" + str(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\") == \"3\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\") == \"4\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(\"7 5\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\" # correct output",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n6\\n1 2 2 4 2 3\\n\") == \"3\\n\"\nassert solution(stdin=\"1\\n7\\n3 3 2 1 1 1 3\\n\") == \"4\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 4 2 3\") == \"3\"\nassert solution(\"1 1 1 1 1 1 3\") == \"4\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\\n3\", \"The solution is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output\", \"Please implement the solution function\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n9\\n1000\\n42000000000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000\\n\") == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '10\\n9\\n1000\\n42000000000000'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {index + 1} failed\" for index, (n_i, a_i, b_i) in enumerate(test_cases) for _ in range(n_i)",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [10, 9, 1000, 42000000000000]",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"your_answer_here\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter N X: \")) == \"2\\n\", \"Test failed\"\n\nfor i in range(1, int(input(\"Enter N: \")) + 1):\n    X = int(input(\"Enter X: \"))\n    L_i = int(input(\"Enter L_\" + str(i) + \": \"))\n    D_i = 0\n    for j in range(i):\n        D_i += L_i\n    bounces = 0\n    if D_i <= X:\n        bounces += 1\n    print(bounces)",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n3 4 5\\n\") == \"2\\n\"\nassert solution(\"5 10\\n5 9 8\\n\") == \"1\\n\"\nassert solution(\"6 10\\n6 8 7\\n\") == \"2\\n\"\nassert solution(\"7 10\\n7 6 5\\n\") == \"0\\n\"\nassert solution(\"8 10\\n8 5 4\\n\") == \"0\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nassert solution(\"10 100\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"1000 1000000\") == \"2\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 1000000000000000\") == \"1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 88
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2\\n', \"The expected output is not correct.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\", \"Incorrect output\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3 6\n3 4 5\n\"\"\"\n) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 6\\n3 4 5\\n') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\\n\"\nassert solution(\"2 1 2 3 4\") == \"2\\n\"\nassert solution(\"10000 10000 10000\") == \"0\\n\"\nassert solution(\"10000 10000\") == \"0\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 91
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhog\\nenig\\n') == 'No'\nassert solution('4\\nhoge\\nenglish\\nhog\\nenig\\nhog\\n') == 'No'\nassert solution('4\\nhoge\\nenglish\\nhog\\nenig\\nhoge\\n') == 'No'\nassert solution('4\\nhoge\\nenglish\\nhog\\nenig\\nhog\\nhog\\n') == 'No'\nassert solution('4\\nhoge\\nenglish\\nhog\\nenig\\nhog\\nhog\\nhog\\n') == 'No'",
        "num_ids_2": 53,
        "num_ids_4": 113
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\nassert solution(\"5\\ngoodbye\\nworld\\nlove\\ncoding\") == \"Yes\"\nassert solution(\"1\\napple\") == \"No\"\nassert solution(\"2\\nI love you\\nI am fine\\nI am enjoying it\") == \"Yes\"\nassert solution(\"3\\nprint\\nNone\") == \"No\"",
        "num_ids_2": 47,
        "num_ids_4": 87
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma') == 'No\\n'\nassert solution('3\\nhog\\nhen\\nhog') == 'Yes\\n'\nassert solution('5\\nword1\\nword2\\nword3\\nword4\\nword5') == 'Yes\\n'",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhog\\nenigma') == 'Yes'\nassert solution('5\\napple\\nbanana\\nbanana\\ncherry') == 'No'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nhoge\\nenigma\\n\") == \"Yes\\n\"\nassert solution(\"4\\nhoge\\nenigma\\n1\\nhola\\n\") == \"No\\n\"\nassert solution(\"4\\nhoge\\nenigma\\n1\\nhola\\n2\\nholaa\\n3\\nholaaa\\n4\\nholaaaa\\n\") == \"No\\n\"\nassert solution(\"4\\nhoge\\nenigma\\n1\\nhola\\n2\\nholaa\\n3\\nholaaa\\n4\\nholaaaa\\n5\\nholaaaab\\n\") == \"Yes\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 152
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\nassert solution(\"4\\napple\\nbanana\\norange\\npineapple\\ngrape\") == \"Yes\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hoge\\nenigma\\n\") == \"No\" # Correct",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\nprint(\"All assertions passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"4 6\") == \"10\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"4 4\") == \"10\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 3\") == \"6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n\") == \"6\\n\"\nassert solution(\"3 1\\n\") == \"3\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\\n\", \"Test case 1 failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Input should be'sardine', but got: '{}'.\".format(solution(\"sardine\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Replace every character in S with x and print the result.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Test case 1: sardine\"\n\nassert solution(\"hello world\") == \"xxxxxxx\", \"Test case 2: hello world\"\n\nassert solution(\"abracadabra\") == \"xxxxxxx\", \"Test case 3: abracadabra\"\n\nassert solution(\"123\") == \"xxxxxxx\", \"Test case 4: 123\"\n\nassert solution(\"\") == \"xxxxxxx\", \"Test case 5: empty string\"",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\", \"Test Case 1 failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('hello world') == 'xxxxxxx'\nassert solution('Python') == 'xxxxxxx'\nassert solution('abc') == 'xxxxxxx'\nassert solution('S') == 'xxxxxxx'",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"\nassert solution(\"5\\n1 2 3 1 1\") == \"No\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"Yes\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"No\", \"Expected No but got: {}\".format(solution(input()))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"5\\n1 1 2 1 1\") == \"Yes\"\nassert solution(\"5\\n2 1 1 1 1\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 2\") == \"No\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 1 1 3\\n') == 'Yes\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == 'No\\n'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\\n\"\nassert solution(\"1\\n1\\n\") == \"Yes\\n\"\nassert solution(\"1\\n1 1\\n\") == \"No\\n\"\nassert solution(\"2\\n1 1 1 1\\n\") == \"No\\n\"\nassert solution(\"3\\n1 1 1 1 1\\n\") == \"Yes\\n\"\nassert solution(\"4\\n1 1 1 1 1 1\\n\") == \"No\\n\"\nassert solution(\"5\\n1 1 1 1 1 1 1\\n\") == \"Yes\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"7\\n1 3 2 1 4 1\\n\") == \"No\"\nassert solution(\"9\\n1 1 1 1 1 1\\n\") == \"No\"\nassert solution(\"3\\n1 2\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) ==",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 3 -10\n1 2 3\n3 2 1\n1 2 2\"\"\") == '1\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\", \"Expected output: 1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2') == '1\\n'\nassert solution('3 4 -5\\n2 3 4\\n5 6 7\\n8 9 10') == '2\\n'\nassert solution('2 3 4\\n1 2 3') == '1\\n'\nassert solution('3 4 5\\n2 3 4\\n5 6 7\\n8 9 10') == '2\\n'",
        "num_ids_2": 76,
        "num_ids_4": 137
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\\n\"\n\nThe output should be \"1\", which is the number of codes that correctly solve this problem.",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nprint(solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\"))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 100, \"The correct answer should be 100.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"100\", \"Expected '100', got '{}'\".format(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1900\") == \"100\"\nprint(\"Success: Test passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1900') == '100'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1900\") == \"100\", \"The correct output should be 100\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1900\") == \"100\", \"Input is not valid\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5 2\\n4 5\\n') == '9\\n'\nassert solution('5\\n1 2 3 4 5\\n3\\n') == '6\\n'\nassert solution('3\\n1 2 3\\n3\\n') == '5\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n') == '12\\n'\nassert solution('6\\n2 3 4 5\\n2\\n') == '3\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n10\\n') == '12\\n'\nassert solution('2\\n10 1000\\n10\\n') == '20\\n'\nassert solution('5\\n1 2 3 4 5\\n3\\n') == '6\\n'",
        "num_ids_2": 54,
        "num_ids_4": 120
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"2\\n1 2\\n3 4\") == \"4\"\nassert solution(\"2\\n1 3\\n2 4\") == \"6\"\nassert solution(\"3\\n1 2 3\\n3 4 5\") == \"8\"\nassert solution(\"3\\n1 2 3\\n3 4 6\") == \"9\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test.in', 'r')) == '9'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '9\\n', \"Test case failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"9\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3 5 2\\n4 5\\n') == '9\\n'\nassert solution('3\\n5 3\\n8 5\\n') == '12\\n'\nassert solution('4\\n5\\n') == '5\\n'",
        "num_ids_2": 51,
        "num_ids_4": 68
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n3 5 2\\n4 5\\n') == '9\\n'\nassert solution('2\\n3 5 2\\n1 2\\n') == '10\\n'\nassert solution('2\\n3 5 2\\n2 3\\n') == '10\\n'",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nprint(\"All tests passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '9\\n', 'The output should be \"9\".'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\\n\"\nassert solution(\"3\\n10 100\\n200\") == \"50\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n\") == \"No War\\n\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n10 20 16\\n\") == \"War\\n\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16 22\\n16",
        "num_ids_2": 77,
        "num_ids_4": 1027
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\\n\"\nassert solution(\"1 2 3\\n4 5 6\") == \"No War\\n\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n4 5 6\") == \"War\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 104
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\\n\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n18 17 19\") == \"No War\\n\"\nassert solution(\"3 2 10 20\\n8 15 13\\n16 22\\n18 17 21\") == \"War\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 130
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 10 20\\n8 15 13\\n16 22') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n25 30 35\\n42 50 60') == 'No War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n25 30 35\\n42 50 60\\n15 30 45\\n20 35 50\\n25 40 45\\n30 45 50') == 'War'\nassert solution('3 2 10 20\\n8 15 13\\n16 22\\n25 30 35\\n42 50 60\\n15 30 45\\n20 35 50\\n25 40 45\\n30 45 50\\n50 55 60') == 'No War'",
        "num_ids_2": 90,
        "num_ids_4": 289
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(stdin=\"3 2 10 20\\n8 15 13\\n16 22\\n\") == \"No War\"\nassert solution(stdin=\"3 2 10 20\\n8 15 13\\n16 22\\n1\\n2\\n3\") == \"No War\"\nassert solution(stdin=\"3 2 10 20\\n8 15 13\\n16 22\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"No War\"\nassert solution(stdin=\"3 2 10 20\\n8 15 13\\n16 22\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"No War\"",
        "num_ids_2": 76,
        "num_ids_4": 230
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22''') == 'No War'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"No War\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 10 20\\n8 15 13\\n16 22\") == \"No War\"\nassert solution(\"2 4 6 8\\n1 3 5 7\") == \"No War\"\nassert solution(\"1 1 1 1\\n1 1 1 1\") == \"No War\"\nassert solution(\"1 2 3 4\\n1 2 3 4\") == \"No War\"\nassert solution(\"5 10 5 15\") == \"No War\"\nassert solution(\"100 100 100 100\") == \"No War\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"No War\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"War\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"War\"",
        "num_ids_2": 61,
        "num_ids_4": 113
    },
    {
        "number": 4182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'No War', \"Test case failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    2\n    3\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    3\n    2\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1\n    2\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3\n    2\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    1\n    2\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    1\n    1\n    \"\"\"\n) == \"6\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed: expected {expected}, got {solution(stdin=input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"50\\n\"",
        "num_ids_2": 427,
        "num_ids_4": 427
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\", \"Incorrect Answer\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\\n\"\n\nfrom collections import Counter",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n1\\n3\\n\") == \"6\"\nassert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n1\\n3\\n\") == \"6\"\nassert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n1\\n3\\n\") == \"6\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '0'\nassert solution(5) == '0'\nassert solution(6) == '0'\nassert solution(8) == '0'\nassert solution(9) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 2 3\\n4 5\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"3\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"2\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\", \"Output should be 0\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == '0\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0'\nprint('All test cases pass!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('4\\n1 2 3 4\\n') == '3\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '0\\n'\nassert solution('6\\n1 2 3 4 5 6\\n') == '0\\n'\nassert solution('7\\n1 2 3 4 5 6 7\\n') == '1\\n'",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n6 7 8 9 10\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"5\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"1\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"1\\n\"\nassert solution(\"25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"0\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 139
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {index+1} failed. Input: {stdin}, Expected output: {expected}, Output: {solution(stdin)}\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\\n\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"0\\n\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\nassert solution() == \"0\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6\\n'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0\\n'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2\\n'",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n\\n3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\\n3 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n\\n3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\\n3 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"0\"\nassert solution(\"3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n\\n3 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\") == \"2\"",
        "num_ids_2": 224,
        "num_ids_4": 303
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12') == '2'",
        "num_ids_2": 76,
        "num_ids_4": 118
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == 6\nassert solution(4, 3) == 0\nassert solution(3, 4) == 2",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\nassert solution() == \"0\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n') == '0'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'",
        "num_ids_2": 80,
        "num_ids_4": 124
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed. Input: {stdin}, Output: {output}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"6\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\\n1 100\") == \"99\"",
        "num_ids_2": 50,
        "num_ids_4": 68
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\"\nassert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(100) == \"99\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\\n\"\nassert solution(\"2\\n1 100\") == \"99\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\\n\"\nassert solution(\"2\\n1 100\\n\") == \"99\\n\"\nassert solution(\"6\\n5 10 2 3 14 5\\n\") == \"5\\n\"\nassert solution(\"2\\n1 100\\n\") == \"99\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1 0 1\") == \"2\"\nassert solution(\"6 0 1 1 1 0\") == \"2\"\nassert solution(\"7 1 1 1 1 0 1\") == \"3\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(5)) == \"2\"\nassert solution(str(6)) == \"2\"\nassert solution(str(7)) == \"3\"\nassert solution(str(3)) == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\\n6\\n0 1 0 1 1 0\\n\\n7\\n1 0 1 1 1 0 1\\n\\n3\\n0 0 0\\n\\n\") == \"2\\n\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\\n7\\n1 0 1 1 1 0 1\\n\\n3\\n0 0 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\\n3\\n0 0 0\\n\\n\") == \"3\\n\"\nassert solution(\"3\\n0 0 0\\n\\n\") == \"0\\n\"",
        "num_ids_2": 136,
        "num_ids_4": 202
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution for the given example should be {output}, but instead it is {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2\"\nassert solution(7) == \"3\"\nassert solution(6) == \"2\"\nassert solution(5) == \"2\"\nassert solution(4) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\\n\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0\") == \"2\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"3\"\nassert solution(\"3\\n0 0 0\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1, \"Your code is wrong. The function should return the sum of the highest mountain and the largest board game tournament.\"\nassert solution(7) == 0, \"Your code is wrong. The function should return 0 if the input is 7, as it is not a valid input for the problem.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1, \"The input should be 1\"\nassert solution(7) == 0, \"The input should be 7\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"7\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1, \"The expected output is 1, but it is \" + str(solution(1)) + \".\"\nassert solution(7) == 0, \"The expected output is 0, but it is \" + str(solution(7)) + \".\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1, \"The solution should return the value 1\"\nassert solution(7) == 0, \"The solution should return the value 0\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1, \"Solution should return 1\"\nassert solution(7) == 0, \"Solution should return 0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(7) == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\\n\") == \"3\", \"Expected output: 3, but got: {}\".format(solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\\n\"))\n\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\", \"Expected output: 4, but got: {}\".format(solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\"))",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\") == 3\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngruyere hard\\nswiss hard\\n\") == 3, \"The correct output is not 3\"\nassert solution(\"parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4, \"The correct output is not 4\"",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3', \"Test case 1 failed\"\n\nassert solution() == '4', \"Test case 2 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == 3, \"Incorrect output\"\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4, \"Incorrect output\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"brie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == 3\nassert solution(\"parmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == 4",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2 \\n'\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4\\n'",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0 0 0 1 0 2 4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([4, 1, 2, 1]) == \"1 0 0 2\"\nassert solution([7, 2, 5, 1, 5, 3, 4]) == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n0 0 0 1 0 2 4\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2\\n\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Please check the examples provided in the prompt.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 1 2 1\n    3 2 1 1\n    \"\"\"\n) == \"\"\"\n    1 0 0 2\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    7\n    2 5 1 5 3 4 3\n    2 4 3 5 6 5 1\n    \"\"\"\n) == \"\"\"\n    0 0 0 1 0 2 4\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    0 1 2 3\n    1 0 1 1\n    \"\"\"\n) == \"\"\"\n    0 1 2 3\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    0 1 2 3\n    0 1 1 1\n    \"\"\"\n) == \"\"\"\n    0 1 2 3\n    \"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\") == \"1 0 0 2\"\nassert solution(\"7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Output is not correct.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"01\") == \"1\"\nassert solution(\"00\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == 0, \"The function should return 0 when given 0\"\nassert solution(\"1\") == 1, \"The function should return 1 when given 1\"\nassert solution(\"01\") == 0, \"The function should return 0 when given 01\"\nassert solution(\"10\") == 1, \"The function should return 1 when given 10\"\nassert solution(\"010\") == 1, \"The function should return 1 when given 010\"\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\", \"Test 1\"\nassert solution(\"1\") == \"1\", \"Test 2\"\nassert solution(\"1\") == \"0\", \"Test 3\"\nassert solution(\"0\") == \"1\", \"Test 4\"\nassert solution(\"1\") == \"1\", \"Test 5\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"01\") == \"0\", \"Test 01\"\nassert solution(\"10\") == \"0\", \"Test 10\"\nassert solution(\"11\") == \"1\", \"Test 11\"\nassert solution(\"00\") == \"1\", \"Test 00\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\\n1\\n1\\n0\") == \"0\"\nassert solution(\"0\\n1\\n1\\n0\\n\") == \"1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes\\n', \"Error: Please provide the correct input\"\nassert solution('1000 15 70') == 'No\\n', \"Error: Please provide the correct input\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\\n\", \"Solution is incorrect\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 20 90\") == \"No\"\nassert solution(\"1001 15 80\") == \"No\"\nassert solution(\"1000 20 90\") == \"No\"\nassert solution(\"1000 15 80\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\\n\", \"Incorrect solution\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='1000 15 80') == 'Yes\\n'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 15 80') == 'Yes\\n'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"No\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"No\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1",
        "num_ids_2": 94,
        "num_ids_4": 1027
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\\n\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\\n\") == \"No\\n\"\n",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n') == 'Yes'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"100 200 300\\n300 400 500\\n500 600 700\\n800 900 1000\\n1100 1200 1300\\n1400 1500 1600\\n1700 1800 1900\\n2000 2100 2200\\n2300 2400 2500\\n2600 2700 2800\\n3000 3100 3200\\n3500 3600 3700\\n4000 4100 4200\\n4500 4600 4700\\n5000 5100 5200\\n5500 5600 5700\\n6000 6100 6200\\n6500 6600 6700\\n7000 7100 7200\\n7500 7600 7700\\n8000 8100 8200\\n8500 8600 8700\\n9000 9100 9200\\n9500 9600 9700\\n10000 10100 10200\\n10500 10600 10700\\n11000 11100 11200\\n11500 11600 11700\\n12000 12100 12200\\n12500 12600 12700\\n13000 13100 13200\\n13500 13600 13700\\n14000 14100 14200\\n14500 14600 14700\\n15000 15100 15200\\n15500 15600 15700\\n16000 16100 16200\\n16500 16600 16700\\n17000 17100 17200\\n17500 17600 17700\\n18000 18100 18200\\n18500 18600 18700\\n19000 19100 19200\\n19500 19600 19700\\n20000 20100 20200\\n20500 20600 20700\\n21000 21100 21200\\n21500 21600 21700\\n22000 22100 22200\\n22500 22600 22700\\n23000 23100 23200\\n23500 23600 23700\\n24000 24100 24200\\n24500 24600 24700\\n25000 25100 25",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '30'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"30\", \"Expected output: 30\"\nassert solution(input()) == \"-1\", \"Expected output: -1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"30\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(41, 2) == 30\nassert solution(5, 6) == 30\nassert solution(5, 1) == -1",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '30\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"40 2\\n5 6\\n\") == \"-1\"\nassert solution(\"41 2\\n5 5\\n\") == \"30\"\nassert solution(\"40 2\\n5 5\\n\") == \"-1\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"30 1\") == \"30\"\nassert solution(\"41 3\") == \"30\"\nassert solution(\"41 1\") == \"30\"\nassert solution(\"41 4\") == \"30\"\nassert solution(\"41 2\\n42 1\\n43 1\\n44 1\\n45 1\") == \"30\"\nassert solution(\"41 2\\n42 1\\n43 1\\n44 1\\n45 2\") == \"30\"\nassert solution(\"41 2\\n42 1\\n43 1\\n44 2\\n45 1\") == \"30\"\nassert solution(\"41 2\\n42 1\\n43 2\\n44 1\\n45 1\") == \"-1\"\nassert solution(\"41 2\\n42 1\\n43 2\\n44 1\\n45 2\") == \"-1\"\nassert solution(\"41 2\\n42 1\\n43 2\\n44 2\\n45 1\") == \"-1\"\nassert solution(\"41 2\\n42 1\\n43 2\\n44 2\\n45 2\") == \"-1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('41 2\\n5 6') == '30'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"41 2\\n5 6\\n\") == \"30\"\nassert solution(\"4 2\\n5 6\\n\") == \"-1\"\nassert solution(\"41 100\\n5 6\\n\") == \"-1\"",
        "num_ids_2": 40,
        "num_ids_4": 62
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"5\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\", \"The given sample input is not valid.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"The output is incorrect.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 5\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"The result should be 5.\"\nassert solution(\"1 5\") == \"5\\n\", \"The result should be 5.\"\nassert solution(\"2 5\") == \"10\\n\", \"The result should be 10.\"\nassert solution(\"3 5\") == \"10\\n\", \"The result should be 10.\"\nassert solution(\"4 5\") == \"100\\n\", \"The result should be 100.\"\nassert solution(\"5 5\") == \"100\\n\", \"The result should be 100.\"\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5\\n\") == \"5\\n\"\nassert solution(\"1 5\\n\") == \"100\\n\"\nassert solution(\"2 5\\n\") == \"350\\n\"\nassert solution(\"3 5\\n\") == \"650\\n\"\nassert solution(\"4 5\\n\") == \"1150\\n\"\nassert solution(\"5 5\\n\") == \"2550\\n\"\nassert solution(\"6 5\\n\") == \"5100\\n\"\nassert solution(\"7 5\\n\") == \"10000\\n\"\nassert solution(\"8 5\\n\") == \"20000\\n\"\nassert solution(\"9 5\\n\") == \"40000\\n\"\nassert solution(\"10 5\\n\") == \"80000\\n\"\nassert solution(\"11 5\\n\") == \"160000\\n\"\nassert solution(\"12 5\\n\") == \"320000\\n\"\nassert solution(\"13 5\\n\") == \"640000\\n\"\nassert solution(\"14 5\\n\") == \"1280000\\n\"\nassert solution(\"15 5\\n\") == \"2560000\\n\"\nassert solution(\"16 5\\n\") == \"5120000\\n\"\nassert solution(\"17 5\\n\") == \"10240000\\n\"\nassert solution(\"18 5\\n\") == \"20480000\\n\"\nassert solution(\"19 5\\n\") == \"40960000\\n\"\nassert solution(\"20 5\\n\") == \"81920000\\n\"\nassert solution(\"21 5\\n\") == \"163840000\\n\"\nassert solution(\"22 5\\n\") == \"327680000\\n\"\nassert solution(\"23 5\\n\") == \"655360000\\n\"\nassert solution(\"24 5\\n\") == \"1310720000\\n\"\nassert solution(\"25 5\\n\") == \"2621440000\\n\"\nassert solution(\"26 5\\n\") == \"5242880000\\n\"\nassert solution(\"27 5\\n\") == \"10485760000\\n\"\nassert solution(\"28 5\\n\") == \"20971520000\\n\"\nassert solution(\"29 5\\n\") == \"41943040000\\n\"\nassert solution(\"30 5\\n\") == \"83886080000\\n\"\nassert solution(\"31 5\\n\") == \"167772160000\\n\"\nassert solution(\"32 5\\n\") == \"335544320000\\n\"\nassert solution(\"33 5\\n\") == \"671088640000\\n\"\nassert solution(\"34 5\\n\") == \"1342177280000\\n\"\nassert solution(\"35 5\\n\") == \"2684354560000\\n\"\nassert solution(\"36 5\\n\") == \"5368709120000\\n\"\nassert solution(\"37 5\\n\") == \"10737418240000\\n\"\nassert solution(\"38 5\\n\") == \"21474836480000\\n\"\nassert solution(\"39 5\\n\") == \"42949672960000\\n\"\nassert solution(\"40 5\\n\") == \"85899345920000\\n\"\nassert solution(\"41 5\\n\") == \"171798691840000\\n\"\nassert solution(\"4",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 5') == '5', 'Please provide the correct input'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 5\") == \"5\\n\", \"The output should be 5.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"2\\n\", \"Testcase 2 failed\"\n\nassert solution(stdin) == \"2\\n\", \"Testcase 3 failed\"\n\nassert solution(stdin) == \"2\\n\", \"Testcase 4 failed\"\n\nassert solution(stdin) == \"2\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"2\\n7 6 8\") == \"2\"\nassert solution(\"2\\n7 4 8\") == \"2\"\nassert solution(\"2\\n7 8 6\") == \"2\"\nassert solution(\"2\\n7 6 6\") == \"2\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nassert solution(\"4\\n10 5 6\") == \"2\\n\"\nassert solution(\"5\\n9 8 7\") == \"3\\n\"\nassert solution(\"6\\n2 4 6\") == \"3\\n\"\nassert solution(\"7\\n1 1 1\") == \"1\\n\"\nassert solution(\"8\\n100 99 98\") == \"1\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 6 8\\n\") == \"2\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nassert solution(\"4\\n2 1 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"3\\n\"\nassert solution(\"4\\n1 2 3\") == \"4\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1 1\") == \"1\\n\"\nassert solution(\"1\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 4 6 8 10\") == \"16\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Output should be 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3 1 2\", \"Test case failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\\n\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\\n\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\\n\") == \"3 1 2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\", \"Test case 1 failed.\"\nassert solution(\"1 2 10\") == \"10\", \"Test case 2 failed.\"\nassert solution(\"1 1 10\") == \"10\", \"Test case 3 failed.\"\nassert solution(\"9 8 10\") == \"12345\", \"Test case 4 failed.\"\nassert solution(\"10 100 1000\") == \"1000000000\", \"Test case 5 failed.\"",
        "num_ids_2": 47,
        "num_ids_4": 96
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 10 100') == '1021'\nassert solution('10 100 100') == '1021'\nassert solution('1000000000 1000000000 1000000000') == '123485'\nassert solution('10 100 0') == '0'\nassert solution('1000000000 1000000000 1000000000') == '0'\nassert solution('1 1 1') == '1'",
        "num_ids_2": 38,
        "num_ids_4": 106
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"5 5 100\") == \"0\\n\"\nassert solution(\"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 37,
        "num_ids_4": 1027
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\", \"Test 1 failed\"\nassert solution(\"5 1 10\") == \"5\\n\", \"Test 2 failed\"\nassert solution(\"2 3 10\") == \"10\\n\", \"Test 3 failed\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Test 4 failed\"\nassert solution(\"10 2 2\") == \"12\\n\", \"Test 5 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\"\nassert solution(\"3 5 10\") == \"0\\n\"\nassert solution(\"2 5 10\") == \"12\\n\"\nassert solution(\"10 10 100\") == \"97\\n\"\nassert solution(\"10 10000 10\") == \"0\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"2000 3000 10000000\") == \"123485\"\nassert solution(\"1000000000000000000\") == \"0\"\nassert solution(\"5 500000000000000000\") == \"0\"",
        "num_ids_2": 49,
        "num_ids_4": 106
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"12 3 5\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 0 10\") == \"0\"\nassert solution(\"1 0 100\") == \"0\"\nassert solution(\"1 1 100\") == \"123456789\"\nassert solution(\"5 5 100\") == \"1000000000\"\nassert solution(\"5 5 0\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 73
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '9', \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 7 100\") == \"9\\n\", \"Takahashi has come to an integer shop to buy an integer.\"\nassert solution(\"5 2 1000000\") == \"0\\n\", \"There is no integer that Takahashi can buy when he has X yen.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"2 40\\n40 50 60 70\") == \"3\"\nassert solution(\"3 50\\n50 40 30 20\") == \"3\"\nassert solution(\"4 60\\n60 50 40 30\") == \"4\"\nassert solution(\"5 80\\n80 70 60 50\") == \"4\"\n",
        "num_ids_2": 57,
        "num_ids_4": 109
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\n\nimport math",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Your solution is incorrect. Please check the sample input and output.\"\n\ninput_data = \"\"\"\n4 150\n150 140 100 200\n\"\"\"\n\nexpected_output = \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"5 200\\n150 140 100 200\") == \"0\"\nassert solution(\"6 100\\n150 140 100 200\") == \"0\"\nassert solution(\"7 200\\n150 140 100 200\") == \"1\"\nassert solution(\"8 200\\n150 140 100 200\") == \"1\"\nassert solution(\"9 200\\n150 140 100 200\") == \"1\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('5 4\\n3\\n4') == 'No'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"4 2\\n5 3 2 1\") == \"No\"\nassert solution(\"4 3\\n5 3 2 1\") == \"No\"\nassert solution(\"4 4\\n5 2 2 1\") == \"Yes\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\nassert solution(\"4 5\\n1 2 3 4 5\") == \"No\\n\"\nassert solution(\"4 1\\n10 20 30\") == \"No\\n\"\nassert solution(\"4 3\\n2 1 5\") == \"No\\n\"\nassert solution(\"4 3\\n1 2 3\") == \"Yes\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 93
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"No\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"Yes\\n\"\nassert solution(\"5 2\\n3 4\\n1 5\\n7 8\\n2 9\") == \"Yes\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 115
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\", \"The given test case is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\\n\", \"Test failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5\\n', f\"Expected: {5}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\"\nprint(\"Five choices below satisfy the condition.\")\nfor i in range(3):\n    print(\" - The\", i+1, \"-st row and\", i+1, \"-st column\")\nprint(\"- The\", 3, \"-rd column\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\\n..#\") == \"5\"\nassert solution(\"3 2 1\\n..#\") == \"1\"\nassert solution(\"1 2 1\\n..#\") == \"1\"\nassert solution(\"1 1 1\\n..#\") == \"1\"\nassert solution(\"3 1 1\\n..#\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\"  # expected output: 5\nassert solution(input()) == \"10\\n\"  # expected output: 10\nassert solution(input()) == \"15\\n\"  # expected output: 15\nassert solution(input()) == \"20\\n\"  # expected output: 20\nassert solution(input()) == \"25\\n\"  # expected output: 25\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"\nassert solution(\"1 2\\n..#\\n\") == \"5\\n\"\nassert solution(\"2 3\\n..#\\n\") == \"1\\n\"\nassert solution(\"1 3\\n..#\\n\") == \"1\\n\"\nassert solution(\"3 2\\n..#\\n\") == \"2\\n\"\nassert solution(\"2 1\\n..#\\n\") == \"2\\n\"\nassert solution(\"1 1\\n..#\\n\") == \"2\\n\"\nassert solution(\"1 2 3\\n..#\\n\") == \"2\\n\"\nassert solution(\"1 2 3 4 5\\n..#\\n\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 2\\n..#') == '5\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) ==",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\\n..#\\n2 3 2\\n..#\\n2 3 2\\n..#\") == \"5\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 2\\n..#\\n\") == \"5\\n\"\nassert solution(\"2 2 2\\n..#\") == \"5\\n\"\nassert solution(\"3 2 2\\n..#\") == \"4\\n\"\nassert solution(\"2 3 3\\n..#\\n\") == \"5\\n\"\nassert solution(\"2 2 3\\n..#\") == \"5\\n\"\nassert solution(\"3 2 3\\n..#\") == \"4\\n\"\nassert solution(\"2 3 2\\n###\\n\") == \"5\\n\"\nassert solution(\"2 2 2\\n###\") == \"5\\n\"\nassert solution(\"3 2 2\\n###\") == \"4\\n\"\nassert solution(\"2 3 3\\n###\\n\") == \"5\\n\"\nassert solution(\"2 2 3\\n###\") == \"5\\n\"\nassert solution(\"3 2 3\\n###\") == \"4\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"2000 1000\") == \"0\"\nassert solution(\"0 1000\") == \"1000\"\nassert solution(\"1000 2000\") == \"0\"\nassert solution(\"1000 0\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2020 2040\") == \"2\\n\"  # expected output: 2",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\nprint(\"Test successful!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"100 200\") == \"0\"\nassert solution(\"50 150\") == \"0\"\nassert solution(\"0 100\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 63
    },
    {
        "number": 4202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'2020 2040\\n') == '2\\n'\nprint('All tests passed!')",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.\"\nassert solution(\"abc\") == \"WA\", \"The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.\"\nassert solution(\"aeiouAEIOU\") == \"AC\", \"The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.\"\nassert solution(\"this is a test\") == \"WA\", \"The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.\"\nassert solution(\"A\") == \"WA\", \"The first letter is A, the third letter is C and the remaining letters are all lowercase, so all the conditions are satisfied.\"",
        "num_ids_2": 75,
        "num_ids_4": 156
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"AC\"\nassert solution(\"abcABCabc\") == \"WA\", \"WA\"\nassert solution(\"AcDeF\") == \"WA\", \"WA\"\nassert solution(\"AbCdEfG\") == \"AC\", \"AC\"\nassert solution(\"AbcDeFgH\") == \"WA\", \"WA\"\nassert solution(\"abcdABCD\") == \"WA\", \"WA\"",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abcAtCDeF\") == \"WA\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\n\nassert solution(\"abc\") == \"WA\"\n\nassert solution(\"Hello\") == \"WA\"\n\nassert solution(\"Abcdefg\") == \"WA\"\n\nassert solution(\"Hello world\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nprint(\"AC\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abcabc\") == \"WA\"\nassert solution(\"ABCABC\") == \"WA\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder\") == \"AC\", \"Test case 1 failed\"\nassert solution(\"Hello\") == \"WA\", \"Test case 2 failed\"\nassert solution(\"A\") == \"WA\", \"Test case 3 failed\"\nassert solution(\"aBC\") == \"WA\", \"Test case 4 failed\"\nassert solution(\"Hello World\") == \"WA\", \"Test case 5 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoDer\") == \"WA\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"abc\") == \"WA\"\nassert solution(\"AbCdEfGhIjKlMnOpQrStUvWxYz\") == \"WA\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2', \"The solution should return the K-th character from the left in Mr. Infinity's string after 5 \\times 10^{15} days.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1214\", \"4\") == \"2\"\n\nThe solution is correct and efficient. We can loop through the string S for 5^15 times and calculate the K-th character from the left.\n\nWe can calculate the K-th character from the left by subtracting 5 from the length of the string and taking the last character. For example, if the length of the string is N, the K-th character from the left is N-K.\n\nHere's the solution:\n\n```python\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1214\\n4\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1214\" * 1000000000) == \"2\"\nassert solution(\"1214\" * 10000000000) == \"2\"\nassert solution(\"1214\" * 100000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 10000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 1000000000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000000000000000000000000000000000000) == \"2\"\nassert solution(\"1214\" * 100000000",
        "num_ids_2": 53,
        "num_ids_4": 110
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1214 4') == '2', \"The solution is incorrect.\"\nprint(\"The solution is correct.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1214\\n4\\n\") == \"2\\n\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1214 4\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1214\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"1\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"2\\n5 2 3 4 1\") == \"NO\"\nassert solution(\"2\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"3\\n5 2 3 4 1\") == \"NO\"\nassert solution(\"3\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"4\\n5 2 3 4 1\") == \"NO\"\nassert solution(\"4\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n5 2 3 4 1\") == \"YES\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n3 2 1\") == \"YES\"\nassert solution(\"2\\n1 3 4\") == \"YES\"\nassert solution(\"3\\n4 1 2\") == \"YES\"\nassert solution(\"4\\n2 3 1\") == \"NO\"\nassert solution(\"5\\n4 5 6 1 2\") == \"NO\"\nassert solution(\"6\\n5 1 2 3 4\") == \"NO\"\nassert solution(\"7\\n3 2 1 6 7\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"NO\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nprint(\"All tests passed.\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 2 3 4 1\\n\") == \"YES\"\nassert solution(\"5\\n5 2 3 4 1\\n5 2 3 4 1\\n\") == \"YES\"\nassert solution(\"5\\n5 2 3 4 1\\n5 3 2 4 1\\n\") == \"NO\"\nassert solution(\"5\\n5 2 3 4 1\\n5 3 2 4 1\\n5 3 2 4 1\\n\") == \"YES\"\nassert solution(\"5\\n5 2 3 4 1\\n5 3 2 4 1\\n5 3 2 4 1\\n5 3 2 4 1\\n\") == \"NO\"",
        "num_ids_2": 57,
        "num_ids_4": 136
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"1\\n2 3 4 5 6\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2 3 4 1\") == \"YES\"\nassert solution(\"5\\n4 2 3 1\") == \"NO\"\nassert solution(\"5\\n5 3 2 4 1\") == \"NO\"\nassert solution(\"5\\n4 2 3 1\") == \"YES\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 85
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3121) == 2, \"Test failed: Polycarp likes numbers that are divisible by 3\"\nassert solution(6) == 1, \"Test failed: Polycarp wants to cut from the number 6 into three parts with two cuts: 6|1|21\"\nassert solution(1000000000000000000000000000000000) == 33, \"Test failed: Polycarp can get 33 valid numbers\"\nassert solution(201920181) == 4, \"Test failed: Polycarp can get 4 numbers that are divisible by 3\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 71,
        "num_ids_4": 168
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(100000000000000000000000000000000) == 33\nassert solution(201920181) == 4",
        "num_ids_2": 21,
        "num_ids_4": 80
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(10000000000000000000000000000000) == 33\nassert solution(201920181) == 4",
        "num_ids_2": 21,
        "num_ids_4": 79
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3121\") == \"2\", \"Test case 1 failed\"\nassert solution(\"6\") == \"1\", \"Test case 2 failed\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\", \"Test case 3 failed\"\nassert solution(\"201920181\") == \"4\", \"Test case 4 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 113
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 84
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(10000000000000000000000000000000) == 33\nassert solution(201920181) == 4\n",
        "num_ids_2": 21,
        "num_ids_4": 79
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(100000000000000000000000000000000000) == 33\nassert solution(201920181) == 4",
        "num_ids_2": 21,
        "num_ids_4": 83
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3121) == 2\nassert solution(6) == 1\nassert solution(100000000000000000000000000000000) == 33\nassert solution(201920181) == 4",
        "num_ids_2": 21,
        "num_ids_4": 80
    },
    {
        "number": 4206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3121\") == \"2\", \"Test 1 failed\"\nassert solution(\"6\") == \"1\", \"Test 2 failed\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\", \"Test 3 failed\"\nassert solution(\"201920181\") == \"4\", \"Test 4 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 109
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '2'\nassert solution(5) == '2'\nassert solution(4) == '0'\nassert solution(2) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(4) == \"0\\n\"\nassert solution(5) == \"2\\n\"\nassert solution(1) == \"2\\n\"\nassert solution(2) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\\n-6 -12 6\\n\") == \"3\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 205
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"3\\n\"",
        "num_ids_2": 217,
        "num_ids_4": 424
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '2'\nassert solution(4) == '0'\nassert solution(3) == '2'\nassert solution(5) == '2'\nassert solution(100) == '2'\nassert solution(3) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"2\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"0\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\"",
        "num_ids_2": 64,
        "num_ids_4": 122
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Your code does not work as expected.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\\n3\\n13 37 39\\n1 2 3\\n\\n4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\") == \"2\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\\n\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\\n3\\n1 2 -1\\n-6 -12 6\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 214
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\nk = 5\nprint(k)\nprint([9, 10, 1, 3, 2])\n\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\ncodeforces\\n dodivthree\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\nassert solution(\"7\\nabaca?b\\nzabbbcc\\n\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\"\nassert solution(\"9\\nbambarbia\\nhellocode\\n\") == \"0\"\nassert solution(\"10\\ncode??????\\n??????test\\n\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\"",
        "num_ids_2": 95,
        "num_ids_4": 193
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\ncodeforces\\ndodivthree\\n') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n'\nassert solution('7\\nabaca?b\\nzabbbcc\\n') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n'\nassert solution('9\\nbambarbia\\nhellocode\\n') == '0\\n'\nassert solution('10\\ncode??????\\n??????test\\n') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 101,
        "num_ids_4": 215
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abaca?b') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('zabbbcc') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('hellocode') == '0'\nassert solution('code??????') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10'",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\ncodeforces\\ndodivthree') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1'\nassert solution('7\\nabaca?b\\nzabbbcc') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2'\nassert solution('9\\nbambarbia\\nhellocode') == '0\\n'\nassert solution('10\\ncode??????\\n??????test') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10'",
        "num_ids_2": 93,
        "num_ids_4": 189
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"codeforces\") == \"5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\"\nassert solution(\"abaca?b\") == \"5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\"\nassert solution(\"bambarbia\") == \"0\"\nassert solution(\"code??????\") == \"10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\"",
        "num_ids_2": 77,
        "num_ids_4": 155
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"your_answer\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\ncodeforces\\ndodivthree') == '5\\n7 8\\n4 9\\n2 2\\n9 10\\n3 1\\n'\nassert solution('7\\nabaca?b\\nzabbbcc') == '5\\n6 5\\n2 3\\n4 6\\n7 4\\n1 2\\n'\nassert solution('9\\nbambarbia\\nhellocode') == '0\\n'\nassert solution('10\\ncode??????\\n??????test') == '10\\n6 2\\n1 6\\n7 3\\n3 5\\n4 8\\n9 7\\n5 1\\n2 4\\n10 9\\n8 10\\n'",
        "num_ids_2": 97,
        "num_ids_4": 195
    },
    {
        "number": 4208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Input: {stdin}\\nOutput: {solution(stdin)}\\nExpected output: {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4 1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 80,
        "num_ids_4": 118
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\\n\") == \"3\\n7 7\\n2 3\\n4 5\\n\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"2\\n3 4\\n1 1\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\\n\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 93,
        "num_ids_4": 142
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '2'\nassert solution('4') == '4'\nassert solution('1 1 1 1') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"7\n4 1 2 2 1 5 3\"\"\") == \"3\\n7 7\\n2 3\\n4 5\"\n\nassert solution(\"\"\"11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\"\") == \"2\\n3 4\\n1 1\"\n\nassert solution(\"\"\"4\n1 1 1 1\"\"\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 11,
        "num_ids_4": 16
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"The output '{solution(stdin)}' is not as expected.\\nExpected output: {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\\n7 7\\n2 3\\n4 5\"\n\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\\n3 4\\n1 1\"\n\nassert solution(\"4\\n1 1 1 1\") == \"4\\n4 4\\n1 1\\n2 2\\n3 3\"",
        "num_ids_2": 85,
        "num_ids_4": 124
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11 -5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2\"\nassert solution(\"4 1 1 1\") == \"4\"",
        "num_ids_2": 55,
        "num_ids_4": 71
    },
    {
        "number": 4209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n7 7\\n2 3\\n4 5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\\n\") == \"7\\n\"\nassert solution(\"4 2\\n2 78 4 10\\n\") == \"12\\n\"\nassert solution(\"5 2\\n3 7 19 3 3\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Input:\\n{stdin}\\n\\nExpected Output:\\n{expected}\\n\\nOutput:\\n{solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 11\\n45 1 10 12 11 7\\n\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\\n\") == \"12\"\nassert solution(\"5 2\\n3 7 19 3 3\\n\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 78 4 10\\n5 2\\n3 7 19 3 3\") == \"12\"\nassert solution(\"6 11\\n45 1 10 12 11 7\") == \"7\"\nassert solution(\"4 2\\n2 78 4 10\\n5 2\\n3 7 19 3 3\") == \"0\"",
        "num_ids_2": 71,
        "num_ids_4": 111
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Expected: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0\nassert solution(\"6 11\\n45 1 10 12 11 7\") == 7\nassert solution(\"4 2\\n2 78 4 10\") == 12\nassert solution(\"5 2\\n3 7 19 3 3\") == 0",
        "num_ids_2": 36,
        "num_ids_4": 82
    },
    {
        "number": 4210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 5\\n') == '9'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 5\") == \"9\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 5\") == \"9\\n\"\nassert solution(\"3\\n2 3\") == \"5\\n\"\nassert solution(\"3\\n3 5\") == \"10\\n\"\nassert solution(\"3\\n2 1 5\") == \"10\\n\"\nassert solution(\"3\\n-1 -2 -3\") == \"-1\\n\"\nassert solution(\"3\\n2 -2 -5\") == \"5\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\"\nassert solution(\"6\\n3 2 5 6\\n\") == \"15\"\nassert solution(\"7\\n4 3 2 5 6 7\\n\") == \"21\"\nassert solution(\"8\\n5 4 3 2 5 6 7 8\\n\") == \"28\"\nassert solution(\"9\\n6 5 4 3 2 5 6 7 8 9\\n\") == \"35\"",
        "num_ids_2": 39,
        "num_ids_4": 95
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n3\\n4\\n\") == \"7\"\nassert solution(\"3\\n2 3\\n\") == \"6\"\nassert solution(\"1\\n5\\n\") == \"6\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"18\"",
        "num_ids_2": 29,
        "num_ids_4": 64
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9\", \"Solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 5\") == \"9\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 5\\n') == '9\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('3\\n5 3\\n') == '12'\nassert solution('3\\n-1 -2 -3\\n') == '13'\nassert solution('3\\n5 1 3 5\\n') == '17'",
        "num_ids_2": 35,
        "num_ids_4": 78
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\"\n) == \"110\\n\"\n\nassert solution(\n    \"3 4 3\\n1 3 3 ",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(stdin=\"2 2 2\\n3 4 4\\n1 3 3 100\\n2 1 1 10\") == \"105\"\nassert solution(stdin=\"1 1 1\\n3 4 4\\n1 3 3 100\\n2 1 1 10\") == \"110\"\nassert solution(stdin=\"2 1 2\\n1 3 3 100\\n3 4 4 10\") == \"100\"\nassert solution(stdin=\"2 2 2\\n3 4 4\\n1 3 3 100\\n1 2 2 10\") == \"110\"",
        "num_ids_2": 95,
        "num_ids_4": 180
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nassert solution(\"5 10 2\") == \"0\"\nassert solution(\"4 1 2\\n5 10 2\\n6 10 2\\n7 10 2\") == \"10\"\nassert solution(\"3 5 3\\n1 2 3 100\\n2 3 3 10\") == \"10\"",
        "num_ids_2": 62,
        "num_ids_4": 137
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\nprint(\"All test cases pass\")",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\nassert solution(\"3 5 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\nassert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\nassert solution(\"3 5 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\\n\"\n",
        "num_ids_2": 98,
        "num_ids_4": 196
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\") == \"110\"\n\nassert solution(\"1 2 3 4\") == \"5\"\n\nassert solution(\"5 6 7 8\") == \"18\"\n\nassert solution(\"100 200 300 400\") == \"500\"\n\nassert solution(\"10 15 20 25 30\") == \"105\"\n\nassert solution(\"10 15 20 25 30\\n25 30 35 40 45\") == \"150\"\n\nassert solution(\"5 6 7 8\\n1 2 3 4\") == \"110\"\n\nassert solution(\"1 2 3 4\\n5 6 7 8\") == \"110\"\n\nassert solution(\"5 6 7 8\\n1 2 3 4\\n9 10 11 12 13\") == \"110\"",
        "num_ids_2": 63,
        "num_ids_4": 106
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\") == \"110\"\n\nassert solution(r\"1 2 2 10\n1 3 3 100\n1 3 3 100\n1 3 3 100\") == \"110\"\n\nassert solution(r\"1 2 2 10\n1 3 3 100\n1 3 3 100\n1 3 3 100\n2 3 2 10\") == \"110\"\n\nassert solution(r\"1 2 2 10\n1 3 3 100\n1 3 3 100\n1 3 3 100\n2 3 2 10\n2 3 2 10\n2 3 2 10\n2 3 2 10\") == \"110\"",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"5\\n\", \"The maximum absolute difference of two elements is A_3-A_1=6-1=5.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"The maximum absolute difference of two elements (with different indices) in A is not correct.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5\\n', \"Test Failed\"\nassert solution(stdin) == '6\\n', \"Test Failed\"\nassert solution(stdin) == '5\\n', \"Test Failed\"\nassert solution(stdin) == '4\\n', \"Test Failed\"\nassert solution(stdin) == '5\\n', \"Test Failed\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\", \"Output not matched\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n3 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n4 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n5 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n6 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n7 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n8 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n9 4 6 3\\n\") == \"5\\n\"\nassert solution(\"4\\n10 4 6 3\\n\") == \"5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\"\nassert solution(\"1\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -3 -4\") == \"4\\n\"\nassert solution(\"3\\n-5 6 7 8\") == \"7\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"5\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5\\n', \"Expected output: 5\\nActual output: \" + str(solution(input())) + \"\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\\n\", \"Test failed.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4 6 3\\n\") == \"5\\n\", \"The maximum absolute difference of two elements is A_3-A_1=6-1=5.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.2761423749\", \"Incorrect output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.276142\\n\"\nassert solution(\"2\\n3 3\\n4 2\\n5 1\\n\") == \"6.738576\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"11.53076\\n\"\nassert solution(\"5\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"18.659774\\n\"\nassert solution(\"6\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == \"26.643527\\n\"\nassert solution(\"6\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\") == \"35.660439\\n\"\nassert solution(\"7\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"46.863503\\n\"\nassert solution(\"8\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"60.301835\\n\"\nassert solution(\"9\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n\") == \"76.43917\\n\"\nassert solution(\"10\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 ",
        "num_ids_2": 72,
        "num_ids_4": 170
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749'  # correct output\nassert solution('2\\n3 2\\n1 0\\n') == '0.0'  # incorrect output (no path to visit the towns)\nassert solution('4\\n0 0\\n0 0\\n1 0\\n') == '0.0'  # incorrect output (all towns visited)\n",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The solution does not match the expected output. Output: '{output}', Expected: '{solution(input())}'\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.2761423749\\n\", \"The output is not the expected output.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"\nassert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"2.2761423749\\n\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"2.2761423749\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 151
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2.2761423749', 'Incorrect output'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749\\n'\nassert solution('3\\n2 4\\n5 7') == '13.0\\n'\nassert solution('2\\n-2 -2\\n-2 -2') == '0.0\\n'\nassert solution('4\\n0 1\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3') == '13.0\\n'\nassert solution('5\\n-1 -1\\n1 1\\n1 1\\n1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '2.5833333333\\n'\n\nimport math",
        "num_ids_2": 63,
        "num_ids_4": 134
    },
    {
        "number": 4214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"The output of the function is incorrect. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 4\") == \"4\\n\", \"Expected output: 4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"15 2\") == \"4\"\nassert solution(\"20 3\") == \"7\"\nassert solution(\"30 4\") == \"10\"\nassert solution(\"35 5\") == \"12\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\", \"Solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\" # Correct",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 4\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'\nprint('All tests passed!')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\\n\", \"Output does not match\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12 4') == '4'\nassert solution('5 5') == '5'\nassert solution('10 10') == '10'\nassert solution('20 20') == '20'",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='12 4') == '4'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"10 8\") == \"0\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"1000 200\") == \"0\"\nprint(\"All test cases passed\")",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\", \"Test case failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"3\", \"Test case 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\\n\") == \"3\\nF(A,B) has a minimum value of 3 at (A,B)=(100,100).\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1\\n'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 4\\n2 1",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"1\\n\", \"Your solution is incorrect. Please check the sample input and output.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n', \"Your solution is incorrect. Please check your code and try again.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\", \"Your solution should return 1.\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"0.5000000000\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"0.5000000000\"  # correct output\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\\n\"\n\nassert solution(\"10\\n\") == \"0.0149011612\\n\"\n\nassert solution(\"30\\n\") == \"0.0001095510\\n\"\n\nassert solution(\"50\\n\") == \"0.0000002190\\n\"\n\nassert solution(\"0\\n\") == \"0\\n\"\n\nassert solution(\"-1\\n\") == \"0\\n\"\n\nassert solution(\"1\\n\") == \"0\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"0.5000000000\\n\", \"Incorrect output.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.5000000000\\n\", \"Test case 1\"\n\nassert solution(input()) == \"0.3333333333\\n\", \"Test case 2\"\n\nassert solution(input()) == \"0.0000000000\\n\", \"Test case 3\"\n\nassert solution(input()) == \"0.0000000000\\n\", \"Test case 4\"\n\nassert solution(input()) == \"0.0000000000\\n\", \"Test case 5\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '0.5000000000\\n', \"The solution should be 0.5.\"\nassert abs(solution(4) - 0.5) <= 1e-6, \"The absolute error should be less than 1e-6.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == '0.5000000000\\n', 'The output is incorrect.'\nassert abs(solution(4) - 0.5) <= 1e-6, 'The output is incorrect.'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"0.5\", \"The correct probability is 0.5\"\nassert solution(15) == \"0.6666666667\", \"The correct probability is 0.6666666667\"\nassert solution(20) == \"0.8333333333\", \"The correct probability is 0.8333333333\"\nassert solution(25) == \"0.9166666667\", \"The correct probability is 0.9166666667\"\nassert solution(30) == \"0.9916666667\", \"The correct probability is 0.9916666667\"\n\nassert solution(4) == \"0.5\", \"The correct probability is 0.5\"\nassert solution(16) == \"0.6666666667\", \"The correct probability is 0.6666666667\"\nassert solution(21) == \"0.8333333333\", \"The correct probability is 0.8333333333\"\nassert solution(26) == \"0.9166666667\", \"The correct probability is 0.9166666667\"\nassert solution(31) == \"0.9916666667\", \"The correct probability is 0.9916666667\"",
        "num_ids_2": 64,
        "num_ids_4": 146
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.5000000000\\n\", \"Your code is not correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.5000000000\\n', \"Solution should return 0.5000000000 but returned '{}'.\".format(solution(stdin))",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\"\n) == \"2\\n\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"0\\n\"\nassert solution(\"2\\n1\\n1\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 134
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output {expected_output}, but got {solution(input_string)}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\n\nSolution:\n\nTo solve the problem, we can iterate through the input file and keep track of the honest and unkind testimonies. We will keep track of the honest testimonies and return the maximum number of honest persons.\n\nWe will also keep track of the maximum number of unkind testimonies among the honest testimonies.\n\nHere's the Python code for the solution:\n\n```python\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand... \\n\\n\"\nassert solution(\"10\\nbacon\") == \"baconbaconbacon\"\nassert solution(\"2\\ncat\") == \"catcat\"\nassert solution(\"4\\nhello\") == \"hellohellohello\"\nassert solution(\"6\\npython\") == \"pythonpythonpython\"",
        "num_ids_2": 43,
        "num_ids_4": 72
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"1\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"2\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"3\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"4\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"5\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"6\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"\nassert solution(\"7\\nnikoandsolstice\\n\") == \"nikoand...solstice\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...solstice\"\nassert solution(\"1\\nhello\") == \"hello\"\nassert solution(\"3\\nhello world\") == \"hello world\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n123\") == \"123\"",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...solstice\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\"\nassert solution(\"5\\nhello\") == \"hello\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\nnikoandsolstice') == 'nikoand...solstice'\nprint('All tests passed!')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoand...\".",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nnikoandsolstice\") == \"nikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand....\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"nikoand...\".replace(\" \", \"\")\nassert solution(input()) == \"nikoandsolstice has a length of 15, which exceeds K=7.\".replace(\" \", \"\")",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'nikoand...n'\nassert solution(input()) == 'nikoandsolstice has a length of 15, which exceeds K=7. We should extract the first 7 characters in this string, append... to the end of them, and print the result nikoand....'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"car\") == \"cars\"\nassert solution(\"dog\") == \"dogs\"\nassert solution(\"frog\") == \"frogs\"\nassert solution(\"horse\") == \"horses\"\nassert solution(\"person\") == \"people\"\nassert solution(\"table\") == \"tables\"\nassert solution(\"tv\") == \"tvs\"\nassert solution(\"water\") == \"waters\"\nassert solution(\"xmas\") == \"xmas\"\nassert solution(\"yoga\") == \"yogas\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"apple\") == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples', \"The solution should return 'apples'\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\", \"Test Case 1 Failed\"\nassert solution(\"banana\") == \"bannas\", \"Test Case 2 Failed\"\nassert solution(\"cherry\") == \"cherries\", \"Test Case 3 Failed\"\nassert solution(\"date\") == \"dates\", \"Test Case 4 Failed\"\nassert solution(\"elderberry\") == \"elderberries\", \"Test Case 5 Failed\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\", \"Test case 1 failed\"\nassert solution(\"banana\") == \"bananas\", \"Test case 2 failed\"\nassert solution(\"cherry\") == \"cherrys\", \"Test case 3 failed\"\nassert solution(\"elephant\") == \"elephants\", \"Test case 4 failed\"\nassert solution(\"fig\") == \"figs\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\", \"The solution should return apples.\"\nassert solution(\"banana\") == \"bananas\", \"The solution should return bananas.\"\nassert solution(\"grape\") == \"grapes\", \"The solution should return grapes.\"\nassert solution(\"cherry\") == \"cherries\", \"The solution should return cherries.\"\nassert solution(\"fig\") == \"fizzes\", \"The solution should return fizzes.\"",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"apple\") == \"apples\", \"Output is incorrect\"\nassert solution(\"banana\") == \"bananas\", \"Output is incorrect\"\nassert solution(\"grape\") == \"grapes\", \"Output is incorrect\"\nassert solution(\"mango\") == \"mangos\", \"Output is incorrect\"\nassert solution(\"pineapple\") == \"pineapples\", \"Output is incorrect\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('carrot') == 'carrots'\nassert solution('dog') == 'dogs'\nassert solution('elephant') == 'elephants'\nassert solution('giraffe') == 'giraffes'\nassert solution('horse') == 'horses'\nassert solution('lion') == 'lions'\nassert solution('monkey') =='monkeys'\nassert solution('mushroom') =='mushrooms'\nassert solution('ostrich') == 'ostriches'\nassert solution('person') == 'people'\nassert solution('pig') == 'pigs'\nassert solution('rabbit') == 'rabbits'\nassert solution('sheep') =='sheep'\nassert solution('snake') =='snakes'\nassert solution('spider') =='spiders'\nassert solution('tiger') == 'tigers'\nassert solution('wolf') == 'wolves'\nassert solution('zebra') == 'zebras'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"banana\") == \"bananas\"\nassert solution(\"cherry\") == \"cherrys\"\nassert solution(\"date\") == \"dates\"\nassert solution(\"elderberry\") == \"elderberries\"\nassert solution(\"fig\") == \"figs\"\nassert solution(\"grape\") == \"grapes\"\nassert solution(\"honeydew\") == \"honeydews\"\nassert solution(\"kiwi\") == \"kivis\"\nassert solution(\"lemon\") == \"lemons\"\nassert solution(\"mango\") == \"mangos\"\nassert solution(\"nectarine\") == \"nectarines\"\nassert solution(\"orange\") == \"orangs\"\nassert solution(\"peach\") == \"peaches\"\nassert solution(\"quince\") == \"quinces\"\nassert solution(\"raspberry\") == \"raspberrys\"\nassert solution(\"strawberry\") == \"strawberries\"\nassert solution(\"sunflower\") == \"sunflowers\"\nassert solution(\"tangerine\") == \"tangerines\"\nassert solution(\"watermelon\") == \"watermelons\"\nassert solution(\"yellowberry\") == \"yellowberries\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"apples\", \"Test Failed\"\nassert solution(\"banana\") == \"bananas\", \"Test Failed\"\nassert solution(\"pear\") == \"pears\", \"Test Failed\"\nassert solution(\"cherry\") == \"cherries\", \"Test Failed\"\nassert solution(\"mango\") == \"mangos\", \"Test Failed\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\"\n\nsolution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") # expected output: 1",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected {output_data}, got {solution(input_data)}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"2\\n1 3\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"5 3\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 99
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n1\\n2 3\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n2\\n1 3\\n3\") == \"1\\n\"\nassert solution(\"3 2\\n3\\n2 1\\n1\") == \"1\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3') == '1\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\" # expected output: 1\n\nimport sys\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"  # expected output: \"1\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\", \"Test case 1 failed\"\nassert solution(\"10\\naabbbaaca\\naabbbaaca\") == \"5\", \"Test case 2 failed\"\nassert solution(\"10\\nbbbb\\nccc\\nddd\\neeee\") == \"4\", \"Test case 3 failed\"\nassert solution(\"10\\naabbbaaca\\nbbbbaaba\") == \"5\", \"Test case 4 failed\"\nassert solution(\"10\\naabbbaaca\\nbbbbaaba\\naaaabbba\") == \"5\", \"Test case 5 failed\"\nassert solution(\"10\\naabbbaaca\\nbbbbaaba\\naaaabbba\\naaaabbba\") == \"5\", \"Test case 6 failed\"\nassert solution(\"10\\naaa\\nbbbb\\nccc\\nddd\\neeee\") == \"4\", \"Test case 7 failed\"\nassert solution(\"10\\naabbbaaca\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\") == \"5\", \"Test case 8 failed\"\nassert solution(\"10\\naabbbaaca\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\") == \"5\", \"Test case 9 failed\"\nassert solution(\"10\\naabbbaaca\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\") == \"5\", \"Test case 10 failed\"\nassert solution(\"10\\naabbbaaca\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\\naaaabbba\") == \"5\", \"Test case 11 failed\"\nassert solution(\"10\\naaa\\nbbbb\\nccc\\nddd\\neeee\\nfff\\nggg\\nhhh\\niii\\njjj\\nkkk\\nlll\\nmmm\\nnnn\\nnnn\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\nyyy\\nnnn\\nooo\\nopp\\nppp\\npqr\\nqqq\\nrrr\\nsss\\nttt\\nuvv\\nxxx\\",
        "num_ids_2": 51,
        "num_ids_4": 109
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\naabbbbaaca') == '5'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\", \"The output should be 5, but it is {}\".format(solution(\"10\\naabbbaaca\"))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\naabbbbaaca') == '5'\nassert solution('5\\nbbb') == '2'\nassert solution('3\\naaa') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 43
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nassert solution(\"2\\naaa\") == \"1\"\nassert solution(\"1\\nbbb\") == \"2\"\nassert solution(\"3\\ncccddd\") == \"2\"\nassert solution(\"4\\nqqqqq\") == \"3\"\nassert solution(\"5\\",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nabbbbaaca\") == \"5\\n\"\nassert solution(\"1\\nabc\") == \"1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\naabbbbaaca\") == \"5\"\nassert solution(\"5\\nb\\nc\\nd\\ne\\nf\\ng\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\naabbbaaca') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\naabbbaaca\") == \"5\"\nassert solution(\"12\\naabbbb\") == \"6\"\nassert solution(\"10\\nabcde\") == \"1\"\nassert solution(\"9\\naabb\") == \"1\"\nassert solution(\"2\\naaaaa\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"4\\n1 1 1\") == \"1\\n\"\nassert solution(\"4\\n1 1 0\") == \"1\\n\"\nassert solution(\"4\\n2 2 2\") == \"2\\n\"\nassert solution(\"5\\n100 100 100\") == \"100\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 2 4\\n\") == \"3\"\nassert solution(\"4\\n1 2 3\\n\") == \"2\"\nassert solution(\"5\\n1000000000 1000000000 1000000000\\n\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n5 2 4') == '3\\n'\nassert solution('5\\n2 4') == '3\\n'\nassert solution('3\\n2 4 6') == '3\\n'\nassert solution('5\\n2 4 6') == '3\\n'\nassert solution('3\\n2 4 6 8') == '3\\n'\nassert solution('5\\n2 4 6 8') == '3\\n'",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\\n\"\nassert solution(\"2\\n2\") == \"2\\n\"\nassert solution(\"3\\n4 5 3\") == \"3\\n\"\nassert solution(\"2\\n3 4\") == \"2\\n\"\nassert solution(\"3\\n7 8 9\") == \"3\\n\"\nassert solution(\"3\\n10 5 3\") == \"3\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"\nassert solution(\"3 2 1 2\") == \"2\\n\"\nassert solution(\"4 3 1 3\") == \"1\\n\"\nassert solution(\"2 4 2 4\") == \"2\\n\"\nassert solution(\"2 2 2 2\") == \"3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"3 1 1 2\") == \"1\"\nassert solution(\"4 1 1 2\") == \"0\"\nassert solution(\"5 1 1 2\") == \"2\"\nassert solution(\"6 1 1 2\") == \"1\"\nassert solution(\"7 1 1 2\") == \"0\"\nassert solution(\"8 1 1 2\") == \"2\"\nassert solution(\"9 1 1 2\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\", \"Test case 1 failed.\"\n\nassert solution(\"2 1 0 3\") == \"1\\n\", \"Test case 2 failed.\"\n\nassert solution(\"2 1 1 -3\") == \"1\\n\", \"Test case 3 failed.\"\n\nassert solution(\"2 1 1 4\") == \"2\\n\", \"Test case 4 failed.\"\n\nassert solution(\"2 1 1 3\") == \"2\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\\n\"\nassert solution(\"1 0 1 1\") == \"2\\n\"\nassert solution(\"2 2 1 1\") == \"2\\n\"\nassert solution(\"2 2 2 2\") == \"4\\n\"\nassert solution(\"2 2 2 3\") == \"6\\n\"\nassert solution(\"1 0 1 0\") == \"2\\n\"\nassert solution(\"1 1 1 0\") == \"2\\n\"\nassert solution(\"2 1 1 2\") == \"2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 7\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 10\") == \"No\"\nassert solution(\"6 7\") == \"No\"\nassert solution(\"2 4\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"6 4\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 9\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nprint(\"All test cases passed\")",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"1 100\") == \"No\"\nassert solution(\"101 100\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\"\nassert solution(\"5 10\") == \"No\\n\"\nassert solution(\"3 4\") == \"Yes\\n\"\nassert solution(\"10 10\") == \"No\\n\"\nassert solution(\"2 2\") == \"Yes\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"4 10\") == \"No\\n\", \"Test case 2 failed\"\nassert solution(\"1 1\") == \"Yes\\n\", \"Test case 3 failed\"\nassert solution(\"1 3\") == \"No\\n\", \"Test case 4 failed\"\nassert solution(\"2 4\") == \"Yes\\n\", \"Test case 5 failed\"",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 4\") == \"No\"\nassert solution(\"2 5\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\n\nprint(\"2\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3) == 2",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2', \"The given graph is not correct. Please check the format and sample input.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\\n\") == \"2\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\n\nassert solution('6 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '4'\n\nassert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n1 5\\n2 6') == '2'\n\nassert solution('5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n1 5\\n2 6\\n3 5') == '1'\n\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n2 4') == '0'\n\nassert solution('3 3\\n1 2\\n1 3\\n2 3') == '1'\n\nassert solution('2 2\\n1 2\\n1 3\\n2 3\\n2 4') == '1'",
        "num_ids_2": 64,
        "num_ids_4": 163
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\", \"Input is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5 2\\n\") == \"18\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\\n\", \"Test case 1 failed.\"\nassert solution(\"3 1\") == \"2\\n\", \"Test case 2 failed.\"\nassert solution(\"3 2\") == \"4\\n\", \"Test case 3 failed.\"\nassert solution(\"3 3\") == \"6\\n\", \"Test case 4 failed.\"\nassert solution(\"3 4\") == \"8\\n\", \"Test case 5 failed.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 43,
        "num_ids_4": 85
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed. Input: {input_data}, Output: {output_data}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 2) == 18\nassert solution(1, 1) == 1\nassert solution(3, 1) == 2\nassert solution(4, 1) == 3\nassert solution(5, 1) == 4\nassert solution(6, 1) == 5\nassert solution(7, 1) == 6\nassert solution(8, 1) == 7\nassert solution(9, 1) == 8\nassert solution(10, 1) == 9\nassert solution(11, 1) == 10\nassert solution(12, 1) == 11\nassert solution(13, 1) == 12\nassert solution(14, 1) == 13\nassert solution(15, 1) == 14\nassert solution(16, 1) == 15\nassert solution(17, 1) == 16\nassert solution(18, 1) == 17\nassert solution(19, 1) == 18\nassert solution(20, 1) == 19\nassert solution(21, 1) == 20\nassert solution(22, 1) == 21\nassert solution(23, 1) == 22\nassert solution(24, 1) == 23\nassert solution(25, 1) == 24\nassert solution(26, 1) == 25\nassert solution(27, 1) == 26\nassert solution(28, 1) == 27\nassert solution(29, 1) == 28\nassert solution(30, 1) == 29\nassert solution(31, 1) == 30\nassert solution(32, 1) == 31\nassert solution(33, 1) == 32\nassert solution(34, 1) == 33\nassert solution(35, 1) == 34\nassert solution(36, 1) == 35\nassert solution(37, 1) == 36\nassert solution(38, 1) == 37\nassert solution(39, 1) == 38\nassert solution(40, 1) == 39\nassert solution(41, 1) == 40\nassert solution(42, 1) == 41\nassert solution(43, 1) == 42\nassert solution(44, 1) == 43\nassert solution(45, 1) == 44\nassert solution(46, 1) == 45\nassert solution(47, 1) == 46\nassert solution(48, 1) == 47\nassert solution(49, 1) == 48\nassert solution(50, 1) == 49\nassert solution(51, 1) == 50\nassert solution(52, 1) == 51\nassert solution(53, 1) == 52\nassert solution(54, 1) == 53\nassert solution(55, 1) == 54\nassert solution(56, 1) == 55\nassert solution(57, 1) == 56\nassert solution(58, 1) == 57\nassert solution(59, 1) == 58\nassert solution(60, 1) == 59\nassert solution(61, 1) == 60\nassert solution(62, 1) == 61\nassert solution(63, 1) == 62\nassert solution(64, 1) == 63\nassert solution(65, 1) == 64\nassert solution(66, 1) == 65\nassert solution(67, 1) == 66\nassert solution(68, 1) == 67\nassert solution(69, 1) == 68\nassert solution(70, 1) == 69\nassert solution(71, 1) == 70\nassert solution(72, 1) == 71\nassert solution(73, 1) == 72\nassert solution(74, 1) == 73\nassert solution(75, 1",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"18\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18', \"The correct answer is: 18\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"15\") == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(15) == \"60\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15\") == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15\") == \"60\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(15) == '60', 'Incorrect output'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(15) == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"60\"\nprint(\"The sum of all numbers among the first N terms of the FizzBuzz sequence is:\", sum(range(1, 16)))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(15) == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(15) == \"60\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"15\") == \"60\", \"The sum of all numbers among the first N terms of the FizzBuzz sequence is 60.\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"7 5\\n3 8 2 5 6\") == \"5\\n\"\nassert solution(\"6 2\\n3 8 2 5 6\") == \"5\\n\"\nassert solution(\"7 3\\n4 9 2 5 6\") == \"5\\n\"\nassert solution(\"5 1\\n3 8 2 5 6\") == \"5\\n\"\nassert solution(\"8 3\\n4 9 2 5 6\") == \"5\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\\n\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\\n3 8 9 10 6\\n\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\\n2 3 4 5 6\\n\") == \"6\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\\n1 2 3 4 5\\n\") == \"4\\n\"\nassert solution(\"6 5\\n4 7 10 6 5\\n1 2 3 4 5\\n2 1 1 1 1\\n\") == \"4\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 146
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\", \"Test case 1 failed\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\", \"Test case 2 failed\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\", \"Test case 3 failed\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\", \"Test case 4 failed\"\nassert solution(\"6 5\\n4 7 10 6 5\") == \"8\", \"Test case 5 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '8\\n'\nprint('All tests passed.')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"8\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8\\n\", \"Test case failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 4\") == \"4\\n\"\nassert solution(\"6 5\\n4 7 10 6 3\") == \"6\\n\"\nassert solution(\"6 5\\n4 7 10 6 2\") == \"8\\n\"\nassert solution(\"6 5\\n4 7 10 6 1\") == \"4\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"5 3\\n1 1\\n2 2\\n3 1\\n\") == \"3\\n\"\nassert solution(\"3 2\\n4 3\\n\") == \"1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 99
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n', \"Test case 1\"\nassert solution(input()) == '1\\n', \"Test case 2\"\nassert solution(input()) == '0\\n', \"Test case 3\"\nassert solution(input()) == '2\\n', \"Test case 4\"\nassert solution(input()) == '3\\n', \"Test case 5\"\nassert solution(input()) == '0\\n', \"Test case 6\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\", \"Invalid input\"\nassert solution(\"3 2\\n2 1\\n\") == \"1\\n\", \"Invalid input\"\nassert solution(\"3 2\\n2 1\\n3 1\\n\") == \"2\\n\", \"Invalid input\"\nassert solution(\"2 3\\n2 1\\n3 1\\n\") == \"2\\n\", \"Invalid input\"\nassert solution(\"2 3\\n1 1\\n3 1\\n\") == \"2\\n\", \"Invalid input\"\nassert solution(\"3 2\\n2 2\\n\") == \"3\\n\", \"Invalid input\"",
        "num_ids_2": 41,
        "num_ids_4": 101
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"4 5\\n1 5\\n2 3\\n\") == \"2\"\nassert solution(\"5 5\\n1 2\\n3 1\\n\") == \"3\"\nassert solution(\"10 10\\n1 1\\n1 1\\n\") == \"4\"",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\") == \"1\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1'\nprint('All tests passed!')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n\"\nassert solution(\"10 5\\n7 8\\n9 10\\n6 7\\n4 5\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 111
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '6'\nassert solution(open('input2.txt', 'r')) == '-1'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\" # expected output: 6\nassert solution(input()) == \"6\" # expected output: 6\nassert solution(input()) == \"6\" # expected output: 6\nassert solution(input()) == \"6\" # expected output: 6\nassert solution(input()) == \"-1\" # expected output: -1",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\\n\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\\n\") == \"-1\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\nassert solution() == \"-1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\\n\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"6\"\nassert solution(str(input())) == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*.",
        "num_ids_2": 107,
        "num_ids_4": 151
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****.",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\"\n) == \"3\\n3 4 1\\n3 5 2\\n\"\n\nassert solution(\n    \"5 5\\n.*...\\n****.",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\"\"\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\"\n\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\"\"\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\n\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\"\"\") == \"-1\"\n\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\"\"\") == \"-1\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == 3\nassert solution(r'5 5\\n.*...\\n****. \\n.**** \\n..**. \\n.....') == 3\nassert solution(r'5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....') == -1\nassert solution(r'3 3\\n*.*\\n.*. \\n*.*') == -1",
        "num_ids_2": 67,
        "num_ids_4": 123
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\n\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\n\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\"\n\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\"",
        "num_ids_2": 107,
        "num_ids_4": 161
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\\n5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '3\\n3 4 1\\n3 5 2\\n3 5 1\\n'\nassert solution('5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\\n3 3\\n*.*\\n.*. \\n*.*\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1\\n'\nassert solution('3 3\\n*.*\\n.*. \\n*.*\\n\\n5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n') == '-1\\n'",
        "num_ids_2": 178,
        "num_ids_4": 228
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\"",
        "num_ids_2": 108,
        "num_ids_4": 165
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.* \\n.*. \\n*.* \\n\") == \"-1\"",
        "num_ids_2": 111,
        "num_ids_4": 169
    },
    {
        "number": 4233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"good\") == 0, \"Good string should have length 0\"\nassert solution(\"aabc\") == 2, \"Aabc string should have length 2\"\nassert solution(\"aaa\") == 3, \"Aaa string should have length 3\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def solution(stdin: str) -> str:\\n    pass'\n\nassert solution('') == ''",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"good\") == \"good\", \"Solution does not match the expected output.\"\nassert solution(\"aabc\") == \"ab\", \"Solution does not match the expected output.\"\nassert solution(\"aaa\") == \"def\", \"Solution does not match the expected output.\"",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def\"\nassert solution(\"\") == \"\"\nassert solution(\"good\") == \"g\"",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 'def'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('good') == 'good'\nassert solution('aabc') == 'ab'\nassert solution('aaa') == 'def'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"good\") == \"good\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"aaa\") == \"def solution(stdin: str) -> str:\\npass\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"good\") == 0\nassert solution(\"aabc\") == 2\nassert solution(\"aaa\") == 3",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 2\\n\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 3\\n\") == \"YES\\n01000\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 4\\n\") == \"YES\\n01001\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 5\\n\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 6\\n\") == \"YES\\n01010\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 7\\n\") == \"YES\\n01011\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 8\\n\") == \"YES\\n01100\"",
        "num_ids_2": 85,
        "num_ids_4": 177
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n3 2\\n1 4\\n5 1\\n6 5\\n\") == \"YES\\n10100\"\nassert solution(\"1 2\\n2 3\\n4 1\\n5 4\\n\") == \"NO\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES\\n10100'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\\n10100\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES\\n10100'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"4 3\\n2 1\\n1 2\") == \"NO\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 2\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 3\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 4\") == \"YES\\n10100\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 5\") == \"NO\"\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 6\") == \"YES\\n10100\"",
        "num_ids_2": 81,
        "num_ids_4": 169
    },
    {
        "number": 4235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\\n10100\" # correct\n\nassert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\" # no edges to be directed\n\nassert solution(\"5 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"YES\\n10011\" # all edges oriented correctly",
        "num_ids_2": 91,
        "num_ids_4": 136
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5\\n') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"\nassert solution(\"3 4\\n1 3\\n2 2\\n4 4\\n\") == \"3 4\"\nassert solution(\"4 3\\n1 4\\n2 3\\n3 3\\n\") == \"3\"\nassert solution(\"1 5\\n3 3\\n\") == \"1 5\"\nassert solution(\"5 5\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 108
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"\") == \"0\\n0\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n2\\n\") == \"2\\n3 4\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 109
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4\"\nassert solution(\"1 7\\n1 7\") == \"0\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2\\n3 4\\n\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n2 4\\n\") == \"3 4\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n6 4\\n\") == \"0\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n3 2\\n\") == \"1 2\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n4 2\\n\") == \"2 2\\n\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n5 2\\n\") == \"0\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 131
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4\"\nassert solution(\"1 7\\n1 7\") == \"0\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n3 4\") == \"2\"",
        "num_ids_2": 49,
        "num_ids_4": 81
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Expected '{output}', got '{solution(input)}'\"\nfor i, (l, r) in enumerate(segments):\n    if l == r:\n        print(f\"0\")\n    else:\n        print(f\"{i}\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\n2 2\\n1 2\\n5 5') == '2\\n3 4\\n'\nassert solution('1 7\\n1 7\\n') == '0\\n'\nassert solution('3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1\\n3 1",
        "num_ids_2": 55,
        "num_ids_4": 1027
    },
    {
        "number": 4236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n3 4\"\nassert solution(input()) == \"0\"\nprint(solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"4 6 2 3\") == \"2\\n\"\nassert solution(\"4 7 2 3\") == \"2\\n\"\nassert solution(\"4 8 2 3\") == \"0\\n\"\nassert solution(\"4 5 2 3\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"2 3 4 5\") == \"5\\n\"\nassert solution
        "num_ids_2": 36,
        "num_ids_4": 1027
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\", \"Test case 1 failed\"\n\nassert solution(\"1 10 5 1\") == \"5\\n\", \"Test case 2 failed\"\n\nassert solution(\"2 10 3 5\") == \"0\\n\", \"Test case 3 failed\"\n\nassert solution(\"1 1 2 3\") == \"4\\n\", \"Test case 4 failed\"\n\nassert solution(\"1 10 0 1\") == \"0\\n\", \"Test case 5 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\\n\"\nassert solution(\"5 7 10 11\") == \"5\\n\"\nassert solution(\"2 4 6 8\") == \"1\\n\"\nassert solution(\"1 1 1 1\") == \"0\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4 9 2 3\\n\") == \"2\\n\"\nassert solution(stdin=\"6 8 4 6\\n\") == \"5\\n\"\nassert solution(stdin=\"100 100 100 100\\n\") == \"2\\n\"\nassert solution(stdin=\"100 100 100 100 100\\n\") == \"5\\n\"\nassert solution(stdin=\"1000000 1000000 1000000 1000000 1000000\\n\") == \"2\\n\"\nassert solution(stdin=\"1000000 1000000 1000000 1000000 1000000 1000000\\n\") == \"5\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 108
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"5 7\") == \"5 and 7 satisfy the condition.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"4 5 6 7\") == \"5 and 7 satisfy the condition.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"The output is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"987654321\") == \"No\"\nassert solution(\"0\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 46
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(123456789) == \"Yes\", \"Test failed\"\nassert solution(9123456789) == \"Yes\", \"Test failed\"\nassert solution(12345678912) == \"Yes\", \"Test failed\"\nassert solution(12345678901) == \"Yes\", \"Test failed\"\nassert solution(12345678900) == \"No\", \"Test failed\"",
        "num_ids_2": 45,
        "num_ids_4": 93
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(123456789) == \"Yes\"\n\nassert solution(12345678) == \"No\"\n\nassert solution(0) == \"No\"\n\nassert solution(-123456789) == \"No\"\n\nassert solution(123456790) == \"Yes\"",
        "num_ids_2": 35,
        "num_ids_4": 63
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(123456789) == 'Yes'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes', \"Input is not a multiple of 9.\"\nprint('Yes')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"987654321\") == \"No\"\nassert solution(\"12345678\") == \"Yes\"\nassert solution(\"1234567\") == \"No\"\nassert solution(\"123456\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"1234567890\") == \"No\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"123456789\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(123456789) == \"Yes\"\nassert solution(12345678) == \"No\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"Sample Input does not match the expected output.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('127') == '4'\nassert solution('300') == '1'\nassert solution('100000') == '1'\nassert solution('500000') == '1'\nassert solution('1000000') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='127') == '4\\n', 'The solution is incorrect.'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4', \"Expected output 4, got '{}'\".format(solution(stdin))\n\nHere's the code to test the correctness of the solution:\n\n```python\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(127) == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\nprint(\"Correct\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"127\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"127\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\nprint(\"All test cases pass\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\nprint('All test cases passed!')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\", \"Incorrect output for the given input\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\\ntokyo\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cabacc\\nabc\") == \"1\\n\", \"Test 1 failed.\"\nassert solution(\"abcabc\\nyyy\") == \"1\\n\", \"Test 2 failed.\"\nassert solution(\"abcabc\\nxyz\") == \"0\\n\", \"Test 3 failed.\"\nassert solution(\"abcabc\\naxyz\") == \"2\\n\", \"Test 4 failed.\"\nassert solution(\"abcabc\\nxxyy\") == \"1\\n\", \"Test 5 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('cabacc\\nbcabc') == '1'\nassert solution('abcabc') == '1'\nassert solution('xxyyxx') == '2'\nassert solution('xxyxyx') == '2'\nassert solution('xyxxyy') == '3'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"aabca\") == \"2\"\nassert solution(\"hello\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"aab\") == \"2\"\nassert solution(\"bab\") == \"2\"\nassert solution(\"aabbbcbc\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"cabacc\") == \"1\\n\"\nassert solution(stdin=\"abc\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\n\nprint(\"Test passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abbcabc\") == \"3\"\nassert solution(\"abcdabcd\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"cabacc\") == \"1\", \"Test Case 1\"\nassert solution(\"abc\") == \"1\", \"Test Case 2\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('cabaccabc') == '1'\nassert solution('abcabc') == '0'\nassert solution('aaaabbc') == '3'\nassert solution('abccba') == '0'\nassert solution('abc') == '0'\nassert solution('ab') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 12 2\") == \"2\", \"The output should be 2\"\n\nfor i in range(2, 101):\n    if i % (A * B) == 0 and i % A == 0 and i % B == 0:\n        print(i)\n        break\nelse:\n    print(\"No such number\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"4 6 3\") == \"4\"\nassert solution(\"3 5 1\") == \"1\"\nassert solution(\"10 20 40\") == \"40\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"10 5 3\") == \"3\"\nassert solution(\"15 10 7\") == \"7\"\nassert solution(\"10 15 12\") == \"15\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"999999999\"",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"The K-th largest positive integer that divides both A and B should be 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"10 10 1\") == \"10\\n\", \"Incorrect output\"\nassert solution(\"100 100 100\") == \"100\\n\", \"Incorrect output\"",
        "num_ids_2": 44,
        "num_ids_4": 72
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2', 'The correct output should be: 2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 12 2\") == \"2\"\n\nThe code above first asserts that the input is valid. Then it prints the K-th largest positive integer that divides both A and B. The K-th largest positive integer is 2.",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\\n\", \"Sample Output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"100000\") == \"36210\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"500000\") == \"600000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1024) == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1024\") == \"2020\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1024\") == \"2020\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1024\") == \"2020\\n\", \"Test failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1024\") == \"2020\", \"Incorrect output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1024\") == \"2020\\n\", \"Expected output: 2020\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n\", \"Test Case 1 Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\n4\\n1 4\\n2\\n1\\n3\\n5\\n2 6\\n3 7\\n4 8\\n5') == '5'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"2\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n1 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"2\\n1 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n2 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n3 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n4 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n2 3\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n3 3\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n4 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n1 2\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n2 2\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n3 3\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n4 4\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n5 5\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n6 6\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n7 7\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n8 8\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n9 9\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n10 10\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n11 11\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n12 12\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n13 13\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n14 14\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n15 15\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n16 16\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n17 17\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n18 18\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n19 19\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"\n\nassert solution(\"3\\n20 20\\n\") == \"Invalid input. Please enter the number of people and their coordinates separated by spaces.\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 118
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\") == \"5\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n\"  # Expected output: 5",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\", \"The minimum total stamina the N people have to spend is 5.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(\"All tests passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"3\\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3\\n'\nassert solution(stdin) == '3\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 10') == '3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.'\nassert solution('1 2') == '1 power strip, extend the socket into 2 empty sockets.'\nassert solution('2 1') == '1 power strip, extend the socket into 1 empty socket.'\nassert solution('3 4') == '3 power strips, each with 3 sockets, extend the socket into 4 empty sockets.'\nassert solution('4 3') == '3 power strips, each with 4 sockets, extend the socket into 3 empty sockets.'\nassert solution('5 2') == '5 power strips, each with 5 sockets, extend the socket into 2 empty sockets.'\n",
        "num_ids_2": 55,
        "num_ids_4": 108
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4 10\\n\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output\\n3\\n\\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('CSS\\nCSR') == 2",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CSS\") == \"2\", \"Testcase 1\"\nassert solution(\"CSR\") == \"2\", \"Testcase 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSY\") == \"0\"\nassert solution(\"RSR\") == \"1\"\nassert solution(\"RRR\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\n\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\\n\"\nassert solution(\"CSR\") == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CCR\") == \"0\"\nassert solution(\"RRR\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"5 4 3 2 1\") == \"2\"\nassert solution(\"5 4 3 2 1\") == \"3\"\nassert solution(\"5 4 3 2 1\") == \"4\"\nassert solution(\"5 4 3 2 1\") == \"5\"\nassert solution(\"5 4 3 2 1\") == \"6\"\nassert solution(\"5 4 3 2 1\") == \"7\"\nassert solution(\"5 4 3 2 1\") == \"8\"\nassert solution(\"5 4 3 2 1\") == \"9\"\nassert solution(\"5 4 3 2 1\") == \"10\"\nassert solution(\"5 4 3 2 1\") == \"11\"\nassert solution(\"5 4 3 2 1\") == \"12\"\nassert solution(\"5 4 3 2 1\") == \"13\"\nassert solution(\"5 4 3 2 1\") == \"14\"\nassert solution(\"5 4 3 2 1\") == \"15\"\nassert solution(\"5 4 3 2 1\") == \"16\"\nassert solution(\"5 4 3 2 1\") == \"17\"\nassert solution(\"5 4 3 2 1\") == \"18\"\nassert solution(\"5 4 3 2 1\") == \"19\"\nassert solution(\"5 4 3 2 1\") == \"20\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 5 4 2\\n\") == \"2\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 5 4 2\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3 2 1 5 4\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"5 3 2 1\") == \"0\"\nassert solution(\"10 5 3 2 1\") == \"0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b\"5\\n1 3 5 4 2\\n\") == \"2\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 5 4 2\\n\") == \"2\\n\"\n\nassert solution(\"5\\n1 3 5 4 2\\n\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\\n\", \"Invalid output\"\n\nassert solution(\"5\\n2 1 3 5 4\") == \"0\\n\", \"Invalid output\"\n\nassert solution(\"5\\n1 3 4 5 2\") == \"3\\n\", \"Invalid output\"\n\nassert solution(\"5\\n3 2 1 4 5\") == \"1\\n\", \"Invalid output\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\\n\", \"Test 1\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\", \"Test 2\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\\n\", \"Test 3\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\\n\", \"Test 4\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\", \"Test 5\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\\n\", \"Test 6\"\n",
        "num_ids_2": 197,
        "num_ids_4": 379
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == 5.410\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == 5.620\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == 5.480\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == 6.040\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == 6.040\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == 6.720",
        "num_ids_2": 179,
        "num_ids_4": 345
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n') == '5.410\\n'\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620\\n'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480\\n'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n') == '6.040\\n'\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == '6.040\\n'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '6.720\\n'",
        "num_ids_2": 187,
        "num_ids_4": 359
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\n\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\n\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\n\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.040\"\n\nassert solution(\"\"\"\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\"\"\") == \"6.720\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\nassert solution(\"-2.14 2.06\") == 5.410\n\nassert solution(\"-2.14 2.",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410\\n'\n\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620\\n'\n\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480\\n'\n\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040\\n'\n\nassert solution('''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.040\\n'\n\nassert solution('''\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62') == 5.410\nassert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == 5.620\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == 5.480\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n') == 6.040\nassert solution('8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n') == 6.040\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == 6.720",
        "num_ids_2": 179,
        "num_ids_4": 345
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\n\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\n\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\n\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\n\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.040'\n\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\") == \"5.410\\n\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\\n\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\\n\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == \"6.040\\n\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.040\\n\"\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == \"6.720\\n\"",
        "num_ids_2": 185,
        "num_ids_4": 357
    },
    {
        "number": 4248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == 5.410\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == 5.620\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == 5.480\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n\") == 6.040\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == 6.040\nassert solution(\"7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n\") == 6.720",
        "num_ids_2": 181,
        "num_ids_4": 347
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4\\n'\nassert solution('''\n7 10\n1 3 4 2 1 4 2\n''') == '2\\n'\nassert solution('''\n5 15\n5 5 5 5 5\n''') == '1\\n'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '2\\n'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4\\n'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2\\n'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1\\n'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2\\n'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1\\n'",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {solution(input())}!= {output} ({i+1}) - {solution(input())}!= {output} ({i+1})\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'\n\nfrom typing import List",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Expected output: '{output}', Received output: '{solution(input())}'\"\nfor i in range(2, 6):\n    assert solution(f\"Input\\n{n} {m}\\n\") == output, f\"Test case {i} failed. Expected output: '{output}', Received output: '{solution(f'Input\\n{n} {m}\\n')}'\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 8\\n2 3 1 1 2\\n') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2\\n') == '2'\nassert solution('5 15\\n5 5 5 5 5\\n') == '1'\nassert solution('5 16\\n5 5 5 5 5\\n') == '2'\nassert solution('5 26\\n5 5 5 5 5\\n') == '-1'",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"-1\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index+1} failed. Expected output: {expected_output}, actual output: {solution(input())}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 3\\n7 3 1 3\\n1 1 1 1 1 1 1 1\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\\n\") == \"1 2 3\\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"7 3 1 3\\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\") == \"1 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 2 4 3 1\\n\") == \"1 2 3\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\\n\") == \"7 3 1 3\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == \"1 2 3\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == \"7 3 1 3\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == \"1 1\"\n",
        "num_ids_2": 73,
        "num_ids_4": 119
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n\\n10 4\\n1 3 1 3 10 3 7 7 12 3\\n\\n15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\\n1 1\\n') == '1 2 3\\n'",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\") == [\"1\", \"2\", \"3\"]\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\") == [\"7\", \"3\", \"1\", \"3\"]\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\") == [\"1\", \"1\"]",
        "num_ids_2": 78,
        "num_ids_4": 125
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 3\\n1 2 3 2 4 3 1\\n') == '1 2 3\\n'\nassert solution('10 4\\n1 3 1 3 10 3 7 7 12 3\\n') == '7 3 1 3\\n'\nassert solution('15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n') == '1 1\\n'",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n1 2 3 2 4 3 1\\n\") == \"1 2 3\\n\"\nassert solution(\"10 4\\n1 3 1 3 10 3 7 7 12 3\\n\") == \"7 3 1 3\\n\"\nassert solution(\"15 2\\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\\n\") == \"1 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 131
    },
    {
        "number": 4250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1 2 3\\n7 3 1 3\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"\n",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\") == \"3\\n\"\n\nfrom typing import List",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\") == \"5\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\"",
        "num_ids_2": 68,
        "num_ids_4": 100
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, \"The solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 2 3 4\\n10 3 7 3\\n6 1\\n3') == '3'\nassert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'",
        "num_ids_2": 74,
        "num_ids_4": 106
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"5\\n\"\nassert solution(\"2 4\\n1 2 3 4\\n10 3 7 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\") == \"3\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 104
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n') == '5\\n'\nassert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n') == '5\\n'\nassert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n') == '5\\n'\nassert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n') == '0\\n'\nassert solution('Input\\n4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n5\\n\\nInput\\n2 4\\n1 2 3 4\\n10 3 7 3\\n\\nOutput\\n0\\n\\nInput\\n6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n\\nOutput\\n3\\n') == '3\\n'",
        "num_ids_2": 356,
        "num_ids_4": 656
    },
    {
        "number": 4251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"6\\nxiii\\n5\\nxoxx\\n10\\xxxxxxxxxx\\n\") == 1, \"Output should be 1.\"\nassert solution(stdin=\"6\\nxiii\\n5\\nxoxx\\n10\\xxxxxxxxxx\\n\") == 0, \"Output should be 0.\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\nxiii') == '1'\nassert solution('5\\nxxoxx') == '0'\nassert solution('10\\nxxxxxxxxxxx') == '8'\n\nimport sys",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == '1'\nassert solution(5) == '0'\nassert solution(10) == '8'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output(), f\"Expected {output()}, got {solution(stdin=input())}\"\n\ninput_file = 'input.txt'\ninput_data = open(input_file).read()\n\nn = int(input())\nfile_name = input_data[:n]\nforbidden_substring = \"xxx\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nxxxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6, \"xxxiii\") == \"1\"\nassert solution(5, \"xxoxx\") == \"0\"\nassert solution(10, \"xxxxxxxxxx\") == \"8\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nxxxiii\") == \"1\"\nassert solution(\"5\\nxxoxx\") == \"0\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"48\", \"The area of the regular dodecagon inscribed in a circle of radius 4 is incorrect.\"\nassert solution(5) == \"50\", \"The area of the regular dodecagon inscribed in a circle of radius 5 is incorrect.\"\nassert solution(6) == \"54\", \"The area of the regular dodecagon inscribed in a circle of radius 6 is incorrect.\"\nassert solution(7) == \"58\", \"The area of the regular dodecagon inscribed in a circle of radius 7 is incorrect.\"\nassert solution(8) == \"62\", \"The area of the regular dodecagon inscribed in a circle of radius 8 is incorrect.\"\nassert solution(9) == \"66\", \"The area of the regular dodecagon inscribed in a circle of radius 9 is incorrect.\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"48\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4\") == \"48\", \"The area of the regular dodecagon inscribed in a circle of radius 4 is incorrect.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"48\"\n\nassert solution(\"6\") == \"144\"\n\nassert solution(\"8\") == \"1440\"\n\nassert solution(\"10\") == \"27020\"\n\nassert solution(\"12\") == \"1676417\"",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"48\", \"Sample Input and Output do not match\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 48",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"48\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"safe\", \"The code is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"7 10\") == \"safe\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'unsafe'\nassert solution(input()) =='safe'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nprint(\"All good!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"unsafe\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"The area of the triangle ABC should be 6.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '6', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"The area of the triangle ABC should be 6\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\", \"There is no solution to this problem.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n', \"Test case failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 11 4\") == \"4\", \"Test case 1\"\nassert solution(\"5 1 1\") == \"1\", \"Test case 2\"\nassert solution(\"5 1 2\") == \"2\", \"Test case 3\"\nassert solution(\"100 100 100\") == \"4\", \"Test case 4\"\nassert solution(\"1 50 2\") == \"2\", \"Test case 5\"",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Invalid input\"\nassert solution(\"1 1 1\") == \"1\\n\", \"Invalid input\"\nassert solution(\"20 10 1\") == \"1\\n\", \"Invalid input\"\nassert solution(\"1 10 1\") == \"1\\n\", \"Invalid input\"\nassert solution(\"10 10 1\") == \"1\\n\", \"Invalid input\"",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\"\nassert solution(\"2 1 4\") == \"4\\n\"\nassert solution(\"1 1 4\") == \"4\\n\"\nassert solution(\"2 1 1\") == \"4\\n\"\nassert solution(\"2 11 1\") == \"4\\n\"\nassert solution(\"2 100 1\") == \"4\\n\"\nassert solution(\"2 101 1\") == \"4\\n\"\nassert solution(\"2 102 1\") == \"4\\n\"\nassert solution(\"2 103 1\") == \"4\\n\"\nassert solution(\"2 104 1\") == \"4\\n\"\nassert solution(\"2 105 1\") == \"4\\n\"\nassert solution(\"2 106 1\") == \"4\\n\"\nassert solution(\"2 107 1\") == \"4\\n\"\nassert solution(\"2 108 1\") == \"4\\n\"\nassert solution(\"2 109 1\") == \"4\\n\"\nassert solution(\"2 110 1\") == \"4\\n\"\nassert solution(\"2 111 1\") == \"4\\n\"\nassert solution(\"2 112 1\") == \"4\\n\"\nassert solution(\"2 113 1\") == \"4\\n\"\nassert solution(\"2 114 1\") == \"4\\n\"\nassert solution(\"2 115 1\") == \"4\\n\"\nassert solution(\"2 116 1\") == \"4\\n\"\nassert solution(\"2 117 1\") == \"4\\n\"\nassert solution(\"2 118 1\") == \"4\\n\"\nassert solution(\"2 119 1\") == \"4\\n\"\nassert solution(\"2 120 1\") == \"4\\n\"\nassert solution(\"2 121 1\") == \"4\\n\"\nassert solution(\"2 122 1\") == \"4\\n\"\nassert solution(\"2 123 1\") == \"4\\n\"\nassert solution(\"2 124 1\") == \"4\\n\"\nassert solution(\"2 125 1\") == \"4\\n\"\nassert solution(\"2 126 1\") == \"4\\n\"\nassert solution(\"2 127 1\") == \"4\\n\"\nassert solution(\"2 128 1\") == \"4\\n\"\nassert solution(\"2 129 1\") == \"4\\n\"\nassert solution(\"2 130 1\") == \"4\\n\"\nassert solution(\"2 131 1\") == \"4\\n\"\nassert solution(\"2 132 1\") == \"4\\n\"\nassert solution(\"2 133 1\") == \"4\\n\"\nassert solution(\"2 134 1\") == \"4\\n\"\nassert solution(\"2 135 1\") == \"4\\n\"\nassert solution(\"2 136 1\") == \"4\\n\"\nassert solution(\"2 137 1\") == \"4\\n\"\nassert solution(\"2 138 1\") == \"4\\n\"\nassert solution(\"2 139 1\") == \"4\\n\"\nassert solution(\"2 140 1\") == \"4\\n\"\nassert solution(\"2 141 1\") == \"4\\n\"\nassert solution(\"2 142 1\") == \"4\\n\"\nassert solution(\"2 143 1\") == \"4\\n\"\nassert solution(\"2 144 1\") == \"4\\n\"\nassert solution(\"2 145 1\") == \"4\\n\"\nassert solution(\"2 146 1\") == \"4\\n\"\nassert solution(\"2 147 1\") == \"4\\n\"\nassert solution(\"2 148 1\") == \"4\\n\"\nassert solution(\"2 149 1\") == \"4\\n\"\nassert solution(\"2 150 1\") == \"4\\n\"\nassert solution(\"2 151 1\") == \"4\\n\"\nassert solution(\"2 152",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 11 4\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"4 2 10\") == \"4\\n\", \"Test case 2 failed\"\nassert solution(\"2 11 3\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"2 100 3\") == \"3\\n\", \"Test case 4 failed\"\nassert solution(\"5 100 4\") == \"4\\n\", \"Test case 5 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\nassert solution(\"1 11 4\") == \"4\"\nassert solution(\"2 11 4\") == \"1\"\nassert solution(\"2 11 8\") == \"1\"\nassert solution(\"3 11 3\") == \"3\"\nassert solution(\"3 11 7\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"The correct output should be: 4\"\n\nfrom typing import List",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\\n\", \"Test case 1 failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\" # assert statement to check the solution",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\", \"Compute A \\times B\"\nassert solution(\"3 5\") == \"15\", \"Compute A \\times B\"\nassert solution(\"6 3\") == \"18\", \"Compute A \\times B\"\nassert solution(\"1 1\") == \"2\", \"Compute A \\times B\"\nassert solution(\"100 100\") == \"200000\", \"Compute A \\times B\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\", \"Compute A \\times B\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10', \"The expected output is 10, but got: \" + solution('2 5')\nprint(\"All tests passed.\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 5\") == \"15\"\nassert solution(\"4 6\") == \"22\"\nassert solution(\"5 8\") == \"32\"\nassert solution(\"6 9\") == \"54\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\", \"Incorrect output. Please fix the code.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"100 100\") == \"10000\"\nassert solution(\"100 0\") == \"0\"\nassert solution(\"0 100\") == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 5\\n\") == \"10\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 7\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"4 10 15\") == \"25\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 1 3\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\", \"Test case 1\"\n\nassert solution(\"1 2 3\") == \"6\\n\", \"Test case 2\"\n\nassert solution(\"4 5 6\") == \"12\\n\", \"Test case 3\"\n\nassert solution(\"7 8 9\") == \"21\\n\", \"Test case 4\"\n\nassert solution(\"10 11 12\") == \"30\\n\", \"Test case 5\"",
        "num_ids_2": 45,
        "num_ids_4": 91
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"4 5 6\") == \"12\"\nassert solution(\"7 8 9\") == \"18\"\nassert solution(\"1000000000 2000000000 1000000000\") == \"1000000000\"\nprint(\"All tests passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '10'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_sample) == output_sample, f\"Test failed. Expected output: '{output_sample}'.\"\nelse:\n    print(\"Test successful.\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n500 600') == 'OK'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n500\\n600\") == \"OK\\nAmong the multiples of 7, for example, 567 lies between 500 and 600.\"\n\nsolution(stdin.readline().strip())\n\nK = int(stdin.readline())\nA = int(stdin.readline())\nB = int(stdin.readline())",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'OK'\nassert solution(input()) == 'NG'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"7\\n400 500\") == \"NG\\n\"\nassert solution(\"7\\n1000 1000\") == \"OK\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'OK'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n500 600\\n') == 'OK\\n'\nassert solution('1\\n2 3\\n') == 'NG\\n'\nassert solution('7\\n500 600 700\\n') == 'OK\\n'\nassert solution('5\\n250 300 350\\n') == 'NG\\n'",
        "num_ids_2": 42,
        "num_ids_4": 96
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"1\\n1 100\") == \"OK\"\nassert solution(\"2\\n2 100\") == \"NG\"\nassert solution(\"3\\n3 100\") == \"OK\"\nassert solution(\"4\\n500 1000\") == \"NG\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(500) == \"OK\"\nassert solution(600) == \"OK\"\nassert solution(501) == \"NG\"\nassert solution(601) == \"NG\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\\n\"\nassert solution(\"2\\n500 600\") == \"NG\\n\"\nassert solution(\"1\\n500 600\") == \"NG\\n\"\nassert solution(\"6\\n500 600\") == \"NG\\n\"\nassert solution(\"5\\n500 600\") == \"NG\\n\"\nassert solution(\"7\\n500 601\") == \"OK\\n\"\nassert solution(\"1\\n500 601\") == \"NG\\n\"\nassert solution(\"1\\n500 600\") == \"NG\\n\"\nassert solution(\"10\\n500 600\") == \"NG\\n\"\nassert solution(\"15\\n500 600\") == \"NG\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution does not satisfy the given constraints. The output is: {output}\"\n\ninput_line = input()\nT = int(input_line.split()[0])\nX = int(input_line.split()[1])\n\noutput = 0\nfor i in range(X):\n    output += (T // X) * X\noutput += T % X\n\nprint(output)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.6666666667\", \"The output is not correct.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"The output is incorrect\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\", \"The output is incorrect.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2.6666666667\", \"Error: Incorrect Output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2.6666666667\", \"Test Case 1 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 2 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 3 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 4 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 5 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 6 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 7 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 8 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 9 failed\"\nassert solution(input()) == \"2.6666666667\", \"Test Case 10 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nprint(\"Test Passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4 3\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"6 4 6\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"6 3 3\") == \"0\\n\", \"Test case 3 failed\"\nassert solution(\"6 10 1\") == \"10\\n\", \"Test case 4 failed\"\nassert solution(\"10 4 1\") == \"10\\n\", \"Test case 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n\nWe have a function named solution() that takes a string as input. We will test the correctness of the function by sending the given test case.",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"5 5 6\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 1, \"Sample Output is incorrect\"\nassert solution(\"6 4 3\") == 1, \"Sample Output is incorrect\"\nassert solution(\"5 1 10\") == 2, \"Sample Output is incorrect\"\nassert solution(\"10 10 10\") == 0, \"Sample Output is incorrect\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"4 2 1\") == \"2\"\nassert solution(\"5 2 1\") == \"3\"\nassert solution(\"6 1 1\") == \"4\"\nassert solution(\"4 1 1\") == \"5\"\nassert solution(\"5 1 1\") == \"6\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1', \"Output does not match the expected output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"5 7 2\") == \"0\"\nassert solution(\"7 5 3\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"4\\n\"\nassert solution() == \"6\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"3\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 2\n3 1 2''') == '3\\n'\nassert solution('''5\n1 4 3 2 5\n4 1 3 2 5\n5 1 4 3 2''') == '5\\n'\nassert solution('''7\n1 5 6 7 2 4 3\n5 1 6 7 2 4 3\n6 1 5 6 7 2 4\n7 1 5 6 7 2 4\n2 4 5 1 3 6 7\n4 5 1 3 6 7 2\n5 1 6 7 2 4 3\n6 1 7 2 5 3 4\n7 2 5 1 3 4 6\n''') == '15\\n'\nassert solution('''8\n1 6 7 2 5 3 4 8\n6 1 7 2 5 3 4 8\n7 1 6 7 2 5 3 4\n2 5 1 3 6 7 8\n5 1 7 2 5 3 4 8\n4 1 3 6 7 2 8\n3 1 2 7 8 4 5\n''') == '16\\n'",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3\\n', 'Incorrect output.'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n2 1 3 4\") == \"4\\n\"\nassert solution(\"5\\n1 3 2 4 5\\n3 1 2 4 5\") == \"5\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n2 1 3 4 5 6\") == \"6\\n\"\nassert solution(\"7\\n1 3 2 4 5 6 7\\n3 1 2 4 5 6 7\") == \"7\\n\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 56,
        "num_ids_4": 128
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"2\\n1 2 3\\n2 1 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\\n2 3 1\") == \"2\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"2\\n1 2 3\\n2 1 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\\n2 3 1\") == \"2\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2') == '3'\nassert solution('4\\n1 2 3 4\\n2 1 4 3') == '5'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n3 4 2 5 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n3 4 2 5 1\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n3 4 2 5 1\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n3 4 2 5 1\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n3 4 2 5 1\") == \"5\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 128
    },
    {
        "number": 4262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Test case 1 failed\"\nassert solution(\"abc\") == \"1\", \"Test case 2 failed\"\nassert solution(\"abcde\") == \"3\", \"Test case 3 failed\"\nassert solution(\"ATAC\") == \"2\", \"Test case 4 failed\"\nassert solution(\"A\") == \"1\", \"Test case 5 failed\"\n\nsolution(\"ATCODER\")\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"ABC\") == \"0\"\nassert solution(\"ABCD\") == \"3\"\nassert solution(\"ATCDE\") == \"4\"\nassert solution(\"AGTG\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"The solution is not correct\"\nassert solution(\"AbcdEfG\") == \"0\", \"The solution is not correct\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ATCODER\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == 3, \"The length of the longest ACGT string that is a substring of S should be 3.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\", \"The output should be '3'.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"3\", \"Test Failed\"\nassert solution(\"AGGTAB\") == \"2\", \"Test Failed\"\nassert solution(\"ACGTAB\") == \"3\", \"Test Failed\"\nassert solution(\"AGGTABCD\") == \"4\", \"Test Failed\"\nassert solution(\"HELLO\") == \"5\", \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 9, \"The expected output is not correct\"\nassert solution(1234) == 1, \"The expected output is not correct\"\nassert solution(10000) == 0, \"The expected output is not correct\"\nassert solution(10001) == 1, \"The expected output is not correct\"\nassert solution(100000) == 2, \"The expected output is not correct\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"22\") == \"3\"\nassert solution(\"99\") == \"2\"\nassert solution(\"111\") == \"7\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"200\") == \"0\"\nassert solution(\"20\") == \"1\"\nassert solution(\"300\") == \"0\"\nassert solution(\"30\") == \"1\"\nassert solution(\"400\") == \"0\"\nassert solution(\"40\") == \"1\"\nassert solution(\"500\") == \"0\"\nassert solution(\"50\") == \"1\"\nassert solution(\"600\") == \"0\"\nassert solution(\"60\") == \"1\"\nassert solution(\"700\") == \"0\"\nassert solution(\"70\") == \"1\"\nassert solution(\"800\") == \"0\"\nassert solution(\"80\") == \"1\"\nassert solution(\"900\") == \"0\"\nassert solution(\"90\") == \"1\"\nassert solution(\"1000\") == \"0\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1100\") == \"0\"\nassert solution(\"110\") == \"1\"\nassert solution(\"1200\") == \"0\"\nassert solution(\"120\") == \"1\"\nassert solution(\"1300\") == \"0\"\nassert solution(\"130\") == \"1\"\nassert solution(\"1400\") == \"0\"\nassert solution(\"140\") == \"1\"\nassert solution(\"1500\") == \"0\"\nassert solution(\"150\") == \"1\"\nassert solution(\"1600\") == \"0\"\nassert solution(\"160\") == \"1\"\nassert solution(\"1700\") == \"0\"\nassert solution(\"170\") == \"1\"\nassert solution(\"1800\") == \"0\"\nassert solution(\"180\") == \"1\"\nassert solution(\"1900\") == \"0\"\nassert solution(\"190\") == \"1\"\nassert solution(\"2000\") == \"0\"\nassert solution(\"200\") == \"1\"\nassert solution(\"2100\") == \"0\"\nassert solution(\"210\") == \"1\"\nassert solution(\"2200\") == \"0\"\nassert solution(\"220\") == \"1\"\nassert solution(\"2300\") == \"0\"\nassert solution(\"230\") == \"1\"\nassert solution(\"2400\") == \"0\"\nassert solution(\"240\") == \"1\"\nassert solution(\"2500\") == \"0\"\nassert solution(\"250\") == \"1\"\nassert solution(\"2600\") == \"0\"\nassert solution(\"260\") == \"1\"\nassert solution(\"2700\") == \"0\"\nassert solution(\"270\") == \"1\"\nassert solution(\"2800\") == \"0\"\nassert solution(\"280\") == \"1\"\nassert solution(\"2900\") == \"0\"\nassert solution(\"290\") == \"1\"\nassert solution(\"3000\") == \"0\"\nassert solution(\"300\") == \"1\"\nassert solution(\"3100\") == \"0\"\nassert solution(\"310\") == \"1\"\nassert solution(\"3200\") == \"0\"\nassert solution(\"320\") == \"1\"\nassert solution(\"3300\") == \"0\"\nassert solution(\"330\") == \"1\"\nassert solution(\"3400\") == \"0\"\nassert solution(\"340\") == \"1\"\nassert solution(\"3500\") == \"0\"\nassert solution(\"350\") == \"1\"\nassert solution(\"3600\") == \"0\"\nassert solution(\"360\") == \"1\"\nassert solution(\"3700\") == \"0\"\nassert solution(\"370\") == \"1\"\nassert solution(\"3800\") == \"0\"\nassert solution(\"380\") == \"1\"\nassert solution(\"3900\") == \"0\"\nassert solution(\"390\") == \"1\"\nassert solution(\"4",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 9, \"The number of positive integers less than or equal to 11 with an odd number of digits is not 9.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 9, \"The number of positive integers less than or equal to 11 that have an odd number of digits is not correct. Expected 9, but got {}\".format(solution(11))",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == \"9\"\nprint(\"All tests passed\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\\n\" # sample output",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 9",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == \"9\", \"The number of positive integers less than or equal to 11 with an odd number of digits is incorrect.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\", \"Test Failed: S should be replaced by T, but it is not\"\nassert solution(\"cupofhottea\") == \"cupofhot\", \"Test Failed: T should be replaced by C, but it is not\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\"\nassert solution(\"cupofhottea\") == \"hottea\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"hippopotamus\"\nassert solution(\"cupofhottea\") == \"hotdog\"\nassert solution(\"loveleetcode\") == \"hateloveleetcode\"\nassert solution(\"banana\") == \"banana\"\nassert solution(\"google\") == \"olleh\"\n",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('cupofcoffee') == 'hottea', \"The given strings are not equal.\"\nassert solution('cupofhottea') == 'hottea', \"The given strings are not equal.\"\nassert solution('acupofcoffee') == 'acotofhoctea', \"The given strings are not equal.\"\nassert solution('cupoftea') == 'hottea', \"The given strings are not equal.\"\nassert solution('acupoftea') == 'acotofhoctea', \"The given strings are not equal.\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"cupofcoffee\") == \"hTafce\", \"The solution is not correct.\"\nassert solution(\"cupofhottea\") == \"htafco\", \"The solution is not correct.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"hofotcpde\"\nassert solution(\"cupofhottea\") == \"httaocpe\"\nassert solution(\"catdogcat\") == \"ttctaat\"\nassert solution(\"hello\") == \"ellohoh\"\n",
        "num_ids_2": 32,
        "num_ids_4": 59
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"cupofcoffee\") == \"hottea\"\nassert solution(\"cupofhottea\") == \"hottea\"\n\nprint(\"All tests passed.\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"hapofcofeo\", \"Test failed\"\nassert solution(\"cupofhottea\") == \"potofhotto\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"cupofcoffee\") == \"cuouofhottea\"\nassert solution(\"cupofhottea\") == \"cuouofhottea\"\nassert solution(\"Hello\") == \"Hell\"\nassert solution(\"World\") == \"rdw\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"def\") == \"def\"",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"cpoocfe\", \"Test failed\"\nassert solution(\"cupofhottea\") == \"cofhtte\", \"Test failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of stones: \")) == \"5 6 7 8 9\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"2 3\") == \"3 4\"\nassert solution(\"4 1\") == \"1 2\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5 6 7 8 9\\n\", \"Test case 1 failed.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\\n\", \"Your code is incorrect!\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\\n\"\nassert solution(\"2 3\") == \"3 4 5 6 7\\n\"\nassert solution(\"4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"6 7\") == \"2 3 4 5 6\\n\"\nassert solution(\"7 8\") == \"3 4 5 6 7\\n\"\nassert solution(\"8 9\") == \"4 5 6 7 8\\n\"\nassert solution(\"9 10\") == \"5 6 7 8 9\\n\"\nassert solution(\"10 11\") == \"6 7 8 9 10\\n\"\nassert solution(\"11 12\") == \"7 8 9 10 11\\n\"\nassert solution(\"12 13\") == \"8 9 10 11 12\\n\"\nassert solution(\"13 14\") == \"9 10 11 12 13\\n\"\nassert solution(\"14 15\") == \"10 11 12 13 14\\n\"\nassert solution(\"15 16\") == \"11 12 13 14 15\\n\"\nassert solution(\"16 17\") == \"12 13 14 15 16\\n\"\nassert solution(\"17 18\") == \"13 14 15 16 17\\n\"\nassert solution(\"18 19\") == \"14 15 16 17 18\\n\"\nassert solution(\"19 20\") == \"15 16 17 18 19\\n\"\nassert solution(\"20 21\") == \"16 17 18 19 20\\n\"\nassert solution(\"21 22\") == \"17 18 19 20 21\\n\"\nassert solution(\"22 23\") == \"18 19 20 21 22\\n\"\nassert solution(\"23 24\") == \"19 20 21 22 23\\n\"\nassert solution(\"24 25\") == \"20 21 22 23 24\\n\"\nassert solution(\"25 26\") == \"21 22 23 24 25\\n\"\nassert solution(\"26 27\") == \"22 23 24 25 26\\n\"\nassert solution(\"27 28\") == \"23 24 25 26 27\\n\"\nassert solution(\"28 29\") == \"24 25 26 27 28\\n\"\nassert solution(\"29 30\") == \"25 26 27 28 29\\n\"\nassert solution(\"30 31\") == \"26 27 28 29 30\\n\"\nassert solution(\"31 32\") == \"27 28 29 30 31\\n\"\nassert solution(\"32 33\") == \"28 29 30 31 32\\n\"\nassert solution(\"33 34\") == \"29 30 31 32 33\\n\"\nassert solution(\"34 35\") == \"30 31 32 33 34\\n\"\nassert solution(\"35 36\") == \"31 32 33 34 35\\n\"\nassert solution(\"36 37\") == \"32 33 34 35 36\\n\"\nassert solution(\"37 38\") == \"33 34 35 36 37\\n\"\nassert solution(\"38 39\") == \"34 35 36 37 38\\n\"\nassert solution(\"39 40\") == \"35 36 37 38 39\\n\"\nassert solution(\"40 41\") == \"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 7\\n\") == \"5 6 7 8 9\\n\"\nassert solution(\"4 8\\n\") == \"6 7 8 9\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 10\\n\") == \"1 2 3 4 5 6 7 8 9 10\\n\"\nassert solution(\"3 10\\n\") == \"1 2 3 4 5 6 7 8 9 10\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5 6 7 8 9\\n', \"The output should be '5 6 7 8 9\\n', but it is '{}'\".format(solution(input()))",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5 6 7 8 9\\n\", \"Test Failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\\n\"\nassert solution(\"1 1\") == \"1\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(25) == 'No'\nassert solution(35) == 'No'\nassert solution(40) == 'Yes'\nassert solution(45) == 'No'\nassert solution(50) == 'No'\nassert solution(55) == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(25) == 'No' # Expected Output: No",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(25) == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"No\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"25\") == \"No\"\nassert solution(\"35\") == \"No\"\nassert solution(\"40\") == \"Yes\"\nassert solution(\"20\") == \"No\"\nassert solution(\"50\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(25) == 'No'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('25') == 'No', 'Test 1 failed'\nassert solution('30') == 'No', 'Test 2 failed'\nassert solution('40') == 'Yes', 'Test 3 failed'\nassert solution('20') == 'No', 'Test 4 failed'\nassert solution('15') == 'No', 'Test 5 failed'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(25) == 'No'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"25\") == \"No\", \"Test Failed\"\nassert solution(\"30\") == \"Yes\", \"Test Failed\"\nassert solution(\"45\") == \"Yes\", \"Test Failed\"\nassert solution(\"35\") == \"No\", \"Test Failed\"\nassert solution(\"30\") == \"Yes\", \"Test Failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(25) == \"No\"\nassert solution(35) == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1\\n', \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 2\\n5 5\\n-2 8') == '1\\n'\nassert solution('3 3\\n1 1\\n5 5\\n-2 8') == '0\\n'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n9 10\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n9 10\\n11 12\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n9 10\\n11 12\\n13 14\") == \"1\"\nassert solution(\"3 2\\n1 2\\n5 5\\n-2 8\\n9 10\\n11 12\\n13 14\\n15 16\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 151
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nassert solution(\"2 3\\n-4 2\\n0 7\") == \"0\\n\"\nassert solution(\"3 4\\n1 2\\n3 4\\n5 5\") == \"0\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"2\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\\n\"\nprint(\"Test Passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2\\n5 5\\n-2 8\") == \"1\"\nassert solution(\"1 2\\n5 5\\n3 4\\n7 8\") == \"0\"\nassert solution(\"3 1\\n2 2\\n1 3\\n4 5\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"1\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 2\\n5 5\\n-2 8') == '1\\n'\nprint('All tests pass!')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3776\") == \"Bad\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3776\") == \"Bad\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"2345\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"9876\") == \"Good\"\nassert solution(\"987\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3776\") == \"Good\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"7635\") == \"Bad\"\nassert solution(\"0000\") == \"Good\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"9876\") == \"Good\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Good\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Good\"\nassert solution(\"1234\") == \"Bad\"\nassert solution(\"2345\") == \"Good\"\nassert solution(\"3456\") == \"Bad\"\nassert solution(\"4567\") == \"Good\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Good\", \"The second and third digits are the same, so 3776 is hard to enter.\"\nassert solution(\"1234\") == \"Bad\", \"The security code is hard to enter when it contains two consecutive digits that are the same.\"\nassert solution(\"12345\") == \"Good\", \"The security code is hard to enter when it contains two consecutive digits that are the same.\"\nassert solution(\"123456\") == \"Bad\", \"The security code is hard to enter when it contains two consecutive digits that are the same.\"\nassert solution(\"1234567\") == \"Good\", \"The security code is hard to enter when it contains two consecutive digits that are the same.\"\nassert solution(\"12345678\") == \"Bad\", \"The security code is hard to enter when it contains two consecutive digits that are the same.\"",
        "num_ids_2": 66,
        "num_ids_4": 133
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3776\") == \"Good\", \"Incorrect output\"\nassert solution(\"1234\") == \"Bad\", \"Incorrect output\"\nassert solution(\"9999\") == \"Good\", \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Good\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected output: {expected_output}, actual output: {solution(input_data)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\\n\") == \"3.5\"\nassert solution(\"2\\n3 4 ",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 4\") == \"3.50001\\n3.49999\\n\"\n\nassert solution(\"3\\n4 5 6\") == \"5.00000\\n4.99999\\n\"\n\nassert solution(\"4\\n1 2 3\") == \"2.50000\\n2.49999\\n\"\n\nassert solution(\"5\\n10 20 30\") == \"20.00000\\n19.99999\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 139
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3.5\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3.5\"\nassert solution(input()) == \"3.5\"\nassert solution(input()) == \"3.5\"\nassert solution(input()) == \"3.5\"\nassert solution(input()) == \"3.5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\n3 4\") == \"3.50001\\n3.49999\\n\"\nassert solution(stdin=\"2\\n1 2\\n3 4\") == \"2.0\\n2.0\\n\"\nassert solution(stdin=\"2\\n1 2\\n3 4\\n\") == \"2.0\\n2.0\\n\"\nassert solution(stdin=\"2\\n1 2\\n3 4\\n5\") == \"2.0\\n2.0\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 132
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"3\\n1 2\\n\") == \"1.5\"\nassert solution(\"2\\n2 3\\n\") == \"4\"\nassert solution(\"5\\n3 4 5\\n\") == \"3.5\"\nassert solution(\"2\\n5\\n\") == \"5\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"4\\n2 3\\n\") == \"1\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\nassert solution(\"5\\n1 2\\n3 4\") == \"3.5\"\nassert solution(\"6\\n2 3 4\") == \"3.5\"\nassert solution(\"10\\n10 10 10 10 10 10 10\") == \"3.5\"",
        "num_ids_2": 39,
        "num_ids_4": 93
    },
    {
        "number": 4270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 4\\n\") == \"3.5\"\nassert solution(\"2\\n3 4\\n\") == \"3.49999\"\nassert solution(\"2\\n3 4\\n\") == \"3.50001\"\nassert solution(\"2\\n3 4\\n\") == \"3.50001\"\nassert solution(\"2\\n3 4\\n\") == \"3.49999\"\nassert solution(\"2\\n3 4\\n\") == \"3.49999\"\nassert solution(\"2\\n3 4\\n\") == \"3.50001\"\nassert solution(\"2\\n3 4\\n\") == \"3.49999\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == 14\nassert solution('5\\n1 2 3 4 5\\n3 4 5\\n1 2') == 14\nassert solution('10\\n1 2 3 4 5\\n3 4 5\\n1 2 3 4 5 6\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9 10') == 475\nassert solution('10\\n2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10 11\\n1 2 3 4 5 6 7 8 9 10 11 12\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 475",
        "num_ids_2": 62,
        "num_ids_4": 635
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nprint(\"All tests passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"14\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"2\\n1 2\\n3\") == \"6\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"10\\nZABCDBABCQ\\nABC\") == \"2\"\nassert solution(\"10\\nZABCDBABCQ\\nXYZ\") == \"0\"\nassert solution(\"10\\nZABCDBABCQ\\nZ\") == \"0\"\nassert solution(\"10\\nZABCDBABCQ\\nAB\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"Output: 2\"\nassert solution(\"3\\nabc\") == \"0\", \"Output: 0\"\nassert solution(\"5\\nhello\") == \"0\", \"Output: 0\"\nassert solution(\"10\\n\") == \"0\", \"Output: 0\"\nassert solution(\"5\\n\") == \"0\", \"Output: 0\"",
        "num_ids_2": 43,
        "num_ids_4": 81
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"5\\nXYZABC\") == \"1\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"2\\nABCAB\") == \"0\"\nassert solution(\"1\\n\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"The output should be '2'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\"\nassert solution(\"20\\nYBCBCBCBY\\n\") == \"1\\n\"\nassert solution(\"1\\nABC\") == \"1\\n\"\nassert solution(\"5\\nXYZ\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 73
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\", \"The solution should output '2'.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\" # Expected Output: 2",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\\n\"\nassert solution(\"15\\nABCBCDAB\") == \"3\\n\"\nassert solution(\"2\\nXYZ\") == \"0\\n\"\nassert solution(\"5\\nABBCDEAB\") == \"1\\n\"\nassert solution(\"5\\nABCBDAB\") == \"0\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 72
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\nfrom itertools import combinations",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('tests/sample_input.txt', 'r').read()) == '2'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nprint(\"Success\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"MASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n\") == \"Yes\\n\"\nassert solution(\"4 5\\n\") == \"No\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 7\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"\nassert solution(\"1 3\") == \"No\\n\"\nassert solution(\"2 3\") == \"Yes\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\\n\"\nassert solution(\"4 4\") == \"No\\n\"\nassert solution(\"5 5\") == \"No\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Yes', \"Solution should return 'Yes'\"\nassert solution() == 'No', \"Solution should return 'No'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"cabbage\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"cdcdf\") == \"No\"\nassert solution(\"aabbcc\") == \"No\"\nassert solution(\"zzzzz\") == \"No\"\nassert solution(\"dsa\") == \"No\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Solution should return 'Yes' for the given input.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Expected 'Yes', got '{}'\".format(solution(\"sippuu\"))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Your code is incorrect. Please check the sample input and output.\"\n\nprint(\"Yes\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"TLE\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n1 80\\n10 60\\n2 50\") == \"TLE\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\nTLE\"\nassert solution(\"3 100\\n100 90\") == \"TLE\"\nassert solution(\"3 70\\n1000 90\") == \"TLE\"\nassert solution(\"2 70\\n7 60\\n1000 90\") == \"TLE\"\n",
        "num_ids_2": 56,
        "num_ids_4": 106
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\\n\"\nassert solution(\"2 100\\n5 50\\n\") == \"TLE\\n\"\nassert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n1 100\\n\") == \"4\\n\"\nassert solution(\"2 100\\n5 50\\n\") == \"TLE\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 125
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"3 1000000000\\n1000000000 1000000000\\n2000000000 3000000000\\n1000000000 5000000000\") == \"TLE\"\nassert solution(\"3 1000000000\\n1000000000 1000000000\\n2000000000 3000000000\\n1000000000 5000000000\") == \"TLE\"\nassert solution(\"3 1000000000\\n1000000000 1000000000\\n2000000000 3000000000\\n1000000000 5000000000\") == \"TLE\"\nassert solution(\"3 1000000000\\n1000000000 1000000000\\n2000000000 3000000000\\n1000000000 5000000000\") == \"TLE\"",
        "num_ids_2": 121,
        "num_ids_4": 301
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"3 100\\n7 200\\n1 300\\n4 400\") == \"TLE\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 60\\n7 70\\n1 80\\n4 50\") == \"4\\n\"\nassert solution(\"3 70\\n7 70\\n1 80\\n4 50\") == \"TLE\\n\"\nassert solution(\"3 70\\n7 70\\n1 80\\n4 60\") == \"TLE\\n\"\nassert solution(\"3 70\\n7 70\\n1 80\\n4 50\\n5 60\\n6 70\\n7 80\") == \"TLE\\n\"\nassert solution(\"3 70\\n7 70\\n1 80\\n4 50\\n5 60\\n6 70\\n7 80\\n8 90\\n9 100\") == \"TLE\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '8'\nassert solution(input()) == '8'\nassert solution(input()) == '8'\nassert solution(input()) == '8'\nassert solution(input()) == '8'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\", \"Expected output: 8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\", \"Output is wrong.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\", \"Incorrect output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\\n\"\nassert solution(\"6 4 10\") == \"20\\n\"\nassert solution(\"3 7 5\") == \"10\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"0 0 0\") == \"0\\n\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2 9') == '8', \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 9\") == \"8\", \"The train will cost us 4 \\times 2 = 8 yen, and the taxi will cost us 9 yen, so the minimum total travel expense is 8 yen.\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\\n\"\nassert solution(stdin=\"2\\nhello\\nworld\\n\") == \"1\\n\"\nassert solution(stdin=\"1\\n1\\n\") == \"0\\n\"\nassert solution(stdin=\"1\\n\") == \"1\\n\"\nassert solution(stdin=\"2\\n\") == \"0\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 86
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\nassert solution(\"1\\nsoda\") == \"2\"\nassert solution(\"1\\n\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1\\n'\nassert solution('4\\napple\\nbigapple\\norange\\nbananas\\n') == '1\\n'\nassert solution('2\\nhello\\nworld\\n') == '0\\n'\nassert solution('5\\nbob\\nalice\\nsally\\n') == '3\\n'\nassert solution('6\\ncd\\nefg\\nhij\\nkln\\n') == '0\\n'",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"acornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"abc\\nabc\\nabc\\n\") == \"0\\n\"\nassert solution(\"hello\\nworld\\n\") == \"1\\n\"\nassert solution(\"abcdef\\nuvwxyz\\nxyzabc\\n\") == \"1\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 86
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\\n\"\nassert solution(\"4\\napple\\nbanana\\ncherry\\n\") == \"0\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"1\\napple\\n\") == \"1\\n\"\nassert solution(\"3\\nabcde\\nxyzef\\n\") == \"0\\n\"\nassert solution(\"3\\naaa\\nbbb\\nccc\\nddd\\n\") == \"2\\n\"\nassert solution(\"1\\nabc\\n\") == \"0\\n\"\nassert solution(\"3\\n\") == \"0\\n\"\nassert solution(\"1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 54,
        "num_ids_4": 85
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nacornistnt\\npeautbomb\\nconstraint\") == \"1\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Expected {output_string}, got {solution(input_string)}.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nacornistnt\\peanutbomb\\constraint\\n') == '1\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n20\\n38\\n56\\n\") == \"1\\n2\\n5\\n2\\n0\\n\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\\n\") == \"8\\n2\\n9\\n8\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n\") == \"1\\n1\\n1\\n1\\n1\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 139
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"8\"\nassert solution(\"2132\") == \"8\"\nassert solution(\"506\") == \"2\"\nassert solution(\"999999999\") == \"9\"\nassert solution(\"1000000000\") == \"8\"\n\nfor _ in range(10):\n    q = int(input())\n    for _ in range(q):\n        k_i = int(input())\n        x_i = k_i % 10\n        print(x_i)",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1\\n3\\n20\\n38\\n56\\n') == '1\\n2\\n5\\n2\\n0\\n'\nassert solution('4\\n2132\\n506\\n999999999\\n1000000000\\n') == '8\\n2\\n9\\n8\\n'",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == ['8', '2', '9', '8']",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == '\\n'.join(['8\\n', '2\\n', '9\\n', '8\\n'])\nassert solution(4) == '\\n'.join(['2\\n', '9\\n', '8\\n', '0\\n'])\nassert solution(1) == '\\n'.join(['1\\n'])\nassert solution(4) == '\\n'.join(['2\\n', '9\\n', '8\\n', '0\\n'])\nassert solution(5) == '\\n'.join(['8\\n', '2\\n', '9\\n', '8\\n'])\nassert solution(4) == '\\n'.join(['2\\n', '9\\n', '8\\n', '0\\n'])\nassert solution(1) == '\\n'.join(['1\\n'])\nassert solution(4) == '\\n'.join(['2\\n', '9\\n', '8\\n', '0\\n'])\nassert solution(5) == '\\n'.join(['8\\n', '2\\n', '9\\n', '8\\n'])\nassert solution(4) == '\\n'.join(['2\\n', '9\\n', '8\\n', '0\\n'])\nassert solution(1) == '\\n'.join(['1\\n'])",
        "num_ids_2": 62,
        "num_ids_4": 109
    },
    {
        "number": 4279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\\n2\\n5\\n2\\n0\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\\n2\\n9\\n8\"\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 1 \nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"",
        "num_ids_2": 80,
        "num_ids_4": 158
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n3\\n3\\n5\\n2\") == \"2\"\nassert solution(\"4\\n3\\n1\\n1\\n2\") == \"1\"\nassert solution(\"10\\n10\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n\") == \"3\"",
        "num_ids_2": 47,
        "num_ids_4": 103
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\") == \"2\\n1 2 1 1 2 \"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\") == \"1\\n1 1 1 \nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\") == \"3\\n1 1 2 3 2 3 1 3 1\"",
        "num_ids_2": 82,
        "num_ids_4": 160
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1 2 1 1 2 1\\n1\\n1 1 1 1\"\n\nassert solution(open(\"input2.txt\", \"r\")) == \"1\\n1 1 1 1\"\n\nassert solution(open(\"input3.txt\", \"r\")) == \"3\\n1 1 2 3 2 3 1\"",
        "num_ids_2": 69,
        "num_ids_4": 102
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed with input {stdin}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2 1 1 2 1\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"1\\n1 1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 182
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2 1 1 2 3\\n1 2 1 1 2 3\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"1\\n1 1 1 1\\n\"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n1 1 2 3 2 3 1 3 1\\n\"",
        "num_ids_2": 107,
        "num_ids_4": 208
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2') == '2\\n1 2 1 1 2 2\\n1 2 1 1 2 2'\nassert solution('4 2\\n3 1\\n1 4\\n1 2') == '1\\n1 1 1 1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9') == '3\\n1 1 2 3 2 3 1 3 1'",
        "num_ids_2": 99,
        "num_ids_4": 177
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n\") == \"2\\n1 2\\n\"\nassert solution(\"4 2\\n3 1\\n1 4\\n1 2\\n\") == \"1\\n1 1 1 1 \"\nassert solution(\"10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n\") == \"3\\n1 1 2 3 2 3 1 3 1\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 166
    },
    {
        "number": 4280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output\\n1\\n1 1 1 1 1 1 \n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\", \"Test 1\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\", \"Test 2\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\", \"Test 3\"",
        "num_ids_2": 62,
        "num_ids_4": 94
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"\nassert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"",
        "num_ids_2": 56,
        "num_ids_4": 108
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 4 4\\n1 2 4 4\") == \"2 4\\n\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\\n\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'",
        "num_ids_2": 52,
        "num_ids_4": 79
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 5, 1, 4, 2, 4, 1, 5, 2, 3) == \"3 2 4 1 5\"\nassert solution(3, 2, 3, 1, 1, 2, 3, 3, 1, 2) == \"3 1 2\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3 2 4 1 5\\n3 1 2'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 2 4 1 5\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\\n\") == \"3 1 2\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\\n\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2\\n\"\nassert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\\n\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '''\n3 2 4 1 5 \n'''\n\nassert solution('''\n3\n2 3\n3 1\n1 2\n''') == '''\n3 1 2 \n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\") == \"3 2 4 1 5\\n\"\nassert solution(\"3\\n2 3\\n3 1\\n1 2\") == \"3 1 2\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution, \"No solution available\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 2 4 1 5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3\\n\") == \"3 2 4 1 5\\n\", \"Incorrect output.\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('3\\n2 3\\n3 1\\n1 2') == '3 1 2'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n6\\n1 1000 10000 10 100 1000000000\\n') == '10\\n'",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\\n\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\\n\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(10) == 10\nassert solution(6) == 1\nassert solution(1000000000) == 1",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"6\\n1 10 17 12 15 2\") == \"3\\n\"\nassert solution(r\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\") == \"10\\n\"\nassert solution(r\"6\\n1 1000 10000 10 100 1000000000\") == \"1\\n\"",
        "num_ids_2": 98,
        "num_ids_4": 144
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed for case {i+1}.\\nExpected output: {output()}, but got {solution(input())}.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 11):\n    assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\\n\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\\n\") == \"10\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\\n\") == \"1\"",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == -1, \"Expected -1 but got {}\".format(solution())  # Test case 1\nassert solution() == 5, \"Expected 5 but got {}\".format(solution())  # Test case 2\nassert solution() == 2, \"Expected 2 but got {}\".format(solution())  # Test case 3\nassert solution() == 0, \"Expected 0 but got {}\".format(solution())  # Test case 4\nassert solution() == 1, \"Expected 1 but got {}\".format(solution())  # Test case 5",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}\\nExpected output: {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Your code is wrong. Please fix it and run the tests.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4\nassert solution() == 5\nassert solution() == -1\nassert solution() == 2\nassert solution() == 0\nassert solution() == 1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n') == '4\\n-1\\n5\\n2\\n0\\n1'\nassert solution('1\\n0\\n0\\n0\\n0\\n') == '-1'\nassert solution('0\\n0\\n0\\n0\\n0\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1'",
        "num_ids_2": 112,
        "num_ids_4": 160
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\\n0\\n1\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'\nassert solution(stdin) == '4\\n-1\\n5\\n2\\n0\\n1\\n'",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"24\"\nassert solution(input()) == \"2835\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"46\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == \"acabac\", \"Test 1\"\nassert solution(7) == \"acabbcac\", \"Test 2\"\nassert solution(9) == \"0\", \"Test 3\"\nassert solution(5) == \"aabcabcabc\", \"Test 4\"",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nac?b?c\\n\") == \"24\"\nassert solution(\"7\\n?????\\n\") == \"2835\"\nassert solution(\"9\\ncccbbbaaa\\n\") == \"0\"\nassert solution(\"5\\na???c\\n\") == \"46\"",
        "num_ids_2": 37,
        "num_ids_4": 72
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"?????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\n\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"??????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nac?b?c\") == \"24\"\nassert solution(\"7\\n?????\") == \"2835\"\nassert solution(\"9\\ncccbbbaaa\") == \"0\"\nassert solution(\"5\\na???c\") == \"46\"\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\nac?b?c') == '24'\nassert solution('7\\n?????') == '2835'\nassert solution('9\\ncccbbbaaa') == '0'\nassert solution('5\\na???c') == '46'",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ac?b?c\") == \"24\"\nassert solution(\"??????\") == \"2835\"\nassert solution(\"cccbbbaaa\") == \"0\"\nassert solution(\"a???c\") == \"46\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed.\")\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Test case failed.\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\\nOutput\\n5\\n\\nInput\\n4 0\\n1 3 3 7\\n\\nOutput\\n16\\n\\nInput\\n5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\\nOutput\\n18') == 'Output\\n5\\n\\nInput\\n3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\\nOutput\\n5\\n\\nInput\\n4 0\\n1 3 3 7\\n\\nOutput\\n16\\n\\nInput\\n5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\\nOutput\\n18'",
        "num_ids_2": 262,
        "num_ids_4": 262
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"\n\nfrom typing import List",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input {input()} should output {output}, but got {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\\n\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\"",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3 2\\n1 3 3\\n2 3 5\\n2 1 1\\n\") == \"5\\n\"\nassert solution(\"Input\\n4 0\\n1 3 3 7\\n\") == \"16\\n\"\nassert solution(\"Input\\n5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\\n\") == \"18\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 130
    },
    {
        "number": 4286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 3 3\\n2 3 5\\n2 1 1\") == \"5\"\nassert solution(\"4 0\\n1 3 3 7\") == \"16\"\nassert solution(\"5 4\\n1 2 3 4 5\\n1 2 8\\n1 3 10\\n1 4 7\\n1 5 15\") == \"18\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\\n\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\\n\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\\n\"\nassert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"-1\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 154
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\"\"\") == \"14\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n0 5\n\"\"\") == \"45\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n1 5\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\"\"\") == \"14\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n0 5\n\"\"\") == \"45\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n1 5\n\"\"\") == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case failed: \\n{input()}\\nExpected: {output()}\\nGot: {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n0 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"",
        "num_ids_2": 74,
        "num_ids_4": 99
    },
    {
        "number": 4287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n0 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"",
        "num_ids_2": 78,
        "num_ids_4": 105
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 7, 5) == \"Yes\"\nassert solution(1, 2, 2) == \"No\"\nassert solution(3, 4, 5) == \"No\"\nassert solution(4, 5, 6) == \"Yes\"\nassert solution(1, 1, 1) == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Expected output: Yes\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"2 4 6\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"3 3 3\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"No\", \"Your solution should return 'No'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == 'Yes\\n', 'Test 1'\nassert solution('4 6 6') == 'No\\n', 'Test 2'\nassert solution('7 9 1') == 'No\\n', 'Test 3'\nassert solution('2 8 2') == 'Yes\\n', 'Test 4'\nassert solution('9 8 1') == 'Yes\\n', 'Test 5'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"No\", \"The given triple is poor, so it should be printed as No.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"4 6 4\") == \"No\\n\", \"Test case 2 failed\"\nassert solution(\"1 2 2\") == \"Yes\\n\", \"Test case 3 failed\"\nassert solution(\"5 5 5\") == \"No\\n\", \"Test case 4 failed\"\nassert solution(\"10 2 3\") == \"No\\n\", \"Test case 5 failed\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"7 6 5\") == \"No\"\nassert solution(\"6 7 8\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"4 5 6\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"2 3 4\") == \"No\"\nassert solution(\"5 5 5\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"1\\n-50 60\\n1000 2000\") == \"0\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\n",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\" # test case 1\nassert solution(\"2\\n12 5\\n1000 2000\\n\") == \"1\\n\" # test case 2\nassert solution(\"2\\n12 5\\n1000 2000\\n3 5\") == \"2\\n\" # test case 3\nassert solution(\"2\\n12 5\\n1000 2000\\n4 6\") == \"2\\n\" # test case 4\nassert solution(\"2\\n12 5\\n1000 2000\\n5 8\") == \"2\\n\" # test case 5",
        "num_ids_2": 70,
        "num_ids_4": 148
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\", \"The palace should be built at Place 1.\"\nassert solution(\"3\\n15 3\\n100 100\") == \"2\\n\", \"The palace should be built at Place 2.\"\nassert solution(\"3\\n12 2\\n100 100\") == \"0\\n\", \"There is no palace to build.\"",
        "num_ids_2": 80,
        "num_ids_4": 116
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n15 5\\n2000 1500\") == \"2\\n\"\nassert solution(\"4\\n20 5\\n1500 2500\") == \"3\\n\"\nassert solution(\"5\\n25 5\\n2000 2500\") == \"4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\\n\"\nassert solution(\"3\\n15 10\\n1000 2000\") == \"2\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"The function should return '1\\n'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"4 4\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1', \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('4 3') == '1'\nassert solution('5 4') == '1'\nassert solution('6 5') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\n\nassert solution(\"3 3\") == \"2\\n\"\n\nassert solution(\"4 2\") == \"2\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"4 1\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == [\"2\", \"0\", \"3\"]",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n8 3\nACACTACG\n3 7\n2 3\n1 8\n\"\"\"\n) == '2\\n0\\n3\\n'\nassert solution(\n\"\"\"\n8 3\nABABABAB\n4 6\n2 5\n\"\"\"\n) == '0\\n0\\n3\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == ['2', '0', '3']",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8') == '2\\n0\\n3'\nassert solution('20 5\\nAAGGGG\\n1 10\\n6 12\\n14 18') == '3\\n0\\n0'\nassert solution('10 2\\nAGCT\\n1 3\\n4 5\\n6 7\\n8 9') == '0\\n2\\n0'\nassert solution('10 5\\nAAGAGA\\n3 7\\n0 4\\n2 6\\n8 10') == '0\\n1\\n0'\nassert solution('20 10\\nAGACTAGGGGACTGCTCGCTAGACAAGCTTCAGAGAGATGCGCGAGAGTACGGATCAGAGTCGAGTGCGAGAGTCGAGATGAGCAGAGATCGACAGCTGATGCAGCAGCGCTCTTGGTAGATGCTCGCTAGATGCTTCAGATGCTAGCGGTATCGATCGATCGGCTACCTGAGCGATCGATCGACTCGCAGCAGCTGCTCGCGAGCAGAGCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCTCGCTAGCT",
        "num_ids_2": 82,
        "num_ids_4": 170
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''2\n0\n3'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\\n0\\n3\"\nassert solution(\"5 2\\nCCTAC\\n3 8\\n1 2\") == \"0\\n2\\n2\"\nassert solution(\"2 4\\nAAC\\n2 5\\n1 3\") == \"1\\n0\\n1\"\nassert solution(\"2 3\\nACG\\n1 2\\n3 4\") == \"1\\n1\\n1\"",
        "num_ids_2": 72,
        "num_ids_4": 135
    },
    {
        "number": 4291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected Output: {expected}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '210'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 4\\n30 90 70 110 70\") == \"190\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"210\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5) + \" \" + str(3) + \"\\n\" + \"50 100 80 120 80\") == \"210\\n\", \"Test Failed\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"210\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"210\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"210\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nassert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nassert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nassert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"\nassert solution(\"5 3\\n50 100 80 120 80\") == \"210\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nprint(\"Test Passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n', \"The minimum possible sum of the flight times should be 4 hours.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"5 4 3\") == \"7\"\nassert solution(\"10 9 8\") == \"10\"\nassert solution(\"10 15 10\") == \"20\"\nassert solution(\"10 10 10\") == \"20\"",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 1') == '0'\nassert solution('5 3 1') == '4'\nassert solution('4 2 3') == '7'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"The sum of the flight times in the route A \\rightarrow B \\rightarrow C: 1 + 3 = 4 hours\\nThe sum of the flight times in the route A \\rightarrow C \\rightarrow C: 4 + 3 = 7 hours\\nThe sum of the flight times in the route B \\rightarrow A \\rightarrow C: 1 + 4 = 5 hours\\nThe sum of the flight times in the route B \\rightarrow C \\rightarrow A: 3 + 4 = 7 hours\\nThe sum of the flight times in the route C \\rightarrow A \\rightarrow B: 4 + 1 = 5 hours\\nThe sum of the flight times in the route C \\rightarrow B \\rightarrow A: 3 + 1 = 4 hours\\nThe minimum of these is 4 hours.\"",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1 3 4') == '4\\n'\nassert solution(stdin='1 2 3') == '0\\n'\nassert solution(stdin='5 3 6') == '0\\n'\nassert solution(stdin='1000 300 400') == '0\\n'",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\", \"The minimum possible sum of the flight times is 4 hours.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\\n\", \"Test Case 1 failed\"\nassert solution(\"1 3 5\") == \"5\\n\", \"Test Case 2 failed\"\nassert solution(\"1 3 6\") == \"6\\n\", \"Test Case 3 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"1 2\") == \"0\\n\"\nassert solution(\"0 2\") == \"10\\n\"\nassert solution(\"3 0\") == \"0\\n\"\nassert solution(\"4 5\") == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\\n3 is less than 5, so we should print 0.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\" # Input: 3 5\nassert solution(\"6 2\") == \"10\" # Input: 6 2\nassert solution(\"7 2\") == \"0\" # Input: 7 2\nassert solution(\"9 4\") == \"10\" # Input: 9 4\nassert solution(\"0 0\") == \"0\" # Input: 0 0",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\\n\" or solution(input()) == \"10\\n\"\nassert int(input()) in range(0, 10)\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number X and the number A: \")) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\nassert solution(\"2 3\") == \"10\\n\"\nassert solution(\"0 1\") == \"0\\n\"\nassert solution(\"10 5\") == \"10\\n\"\nassert solution(\"11 5\") == \"10\\n\"\nassert solution(\"12 5\") == \"0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Output is incorrect\"\nassert solution(\"2 5\") == \"10\\n\", \"Output is incorrect\"\nassert solution(\"1 5\") == \"0\\n\", \"Output is incorrect\"\nassert solution(\"10 5\") == \"10\\n\", \"Output is incorrect\"\nassert solution(\"10 3\") == \"0\\n\", \"Output is incorrect\"",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"2 3\") == \"2\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"5 5\") == \"1\\n\"\nassert solution(\"1 5\") == \"3\\n\"\nassert solution(\"10 10\") == \"3\\n\"\nassert solution(\"2 10\") == \"5\\n\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\n\nSolution:\n\nWe can solve this problem by using binary exponentiation. We will find the minimum possible value that can be obtained by multiplying N with itself k times. We will start by initializing the variable k to 1. \n\nAt each iteration, we will multiply N with itself k times and take the absolute value of the result. We will keep track of the minimum value taken by N as we iterate through the k times.\n\nHere's the code: \n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4\") == \"1\\n\"\nassert solution(\"10 10\") == \"1\\n\"\nassert solution(\"100 100\") == \"1\\n\"\nassert solution(\"1000 1000\") == \"1\\n\"\nassert solution(\"10000 10000\") == \"1\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\", \"Please provide a valid input\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"1\\n\", \"Test case 1 failed.\"\nassert solution(\"1000000000 1\") == \"1\\n\", \"Test case 2 failed.\"\nassert solution(\"9999999999 1\") == \"1\\n\", \"Test case 3 failed.\"\nassert solution(\"9999999999 10\") == \"1\\n\", \"Test case 4 failed.\"\nassert solution(\"9999999999 100\") == \"1\\n\", \"Test case 5 failed.\"\n",
        "num_ids_2": 51,
        "num_ids_4": 112
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"The output should be 'win'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"win\"\nassert solution(\"10 10 10\") == \"bust\"\nassert solution(\"1 2 3\") == \"bust\"\nassert solution(\"10 10 11\") == \"bust\"\n\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"1 1 2\") == \"bust\"\nassert solution(\"1 1 3\") == \"bust\"\n\nassert solution(\"1 1 10\") == \"bust\"\nassert solution(\"1 1 20\") == \"bust\"\nassert solution(\"1 1 30\") == \"bust\"\n\nassert solution(\"100 100 100\") == \"win\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\", \"Solution should print win when the input is: 5 7 9\"\nassert solution(\"1 2 3\") == \"bust\\n\", \"Solution should print bust when the input is: 1 2 3\"\nassert solution(\"1 1 1\") == \"win\\n\", \"Solution should print win when the input is: 1 1 1\"\nassert solution(\"1 1 10\") == \"bust\\n\", \"Solution should print bust when the input is: 1 1 10\"\nassert solution(\"10 11 12\") == \"bust\\n\", \"Solution should print bust when the input is: 10 11 12\"",
        "num_ids_2": 68,
        "num_ids_4": 138
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\\n\"\nassert solution(\"1 2 3\") == \"bust\\n\"\nassert solution(\"100 200 300\") == \"win\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"Test 1 failed\"\nassert solution(\"4 6 8\") == \"win\", \"Test 2 failed\"\nassert solution(\"2 5 8\") == \"win\", \"Test 3 failed\"\nassert solution(\"10 12 13\") == \"bust\", \"Test 4 failed\"\nassert solution(\"23 22 21\") == \"bust\", \"Test 5 failed\"\nassert solution(\"5 10 15\") == \"bust\", \"Test 6 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5 7 9) == 'win'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Expected output is 6, but got: {}\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\n\nassert solution(\"10\") == \"20\"\n\nassert solution(\"20\") == \"24\"\n\nassert solution(\"50\") == \"60\"\n\nassert solution(\"100\") == \"120\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\"\nprint(\"6 is divisible by both 2 and 3.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"6\"\nassert solution(5) == \"12\"\nassert solution(6) == \"6\"\nassert solution(10) == \"12\"\nassert solution(15) == \"20\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"6\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6 is divisible by both 2 and 3.\\nThere is no positive integer less than 6 that is divisible by both 2 and 3.\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"6 is divisible by both 2 and 3.\\nThere is no positive integer less than 6 that is divisible by both 2 and 3.\\nThe answer is 6.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'6 2\\n') == '2\\n'\nassert solution(b'10 4\\n') == '4\\n'\nassert solution(b'1 10\\n') == '1\\n'\nassert solution(b'3 5\\n') == '1\\n'\nassert solution(b'5 3\\n') == '2\\n'",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"2\", \"Expected output: 2\"\nassert solution(\"4 1\") == \"1\", \"Expected output: 1\"\nassert solution(\"10 3\") == \"3\", \"Expected output: 3\"\nassert solution(\"2 5\") == \"4\", \"Expected output: 4\"\nassert solution(\"4 7\") == \"5\", \"Expected output: 5\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == \"2\\n\"\nassert solution(\"5 1\") == \"1\\n\"\nassert solution(\"6 5\") == \"2\\n\"\nassert solution(\"6 8\") == \"4\\n\"\nassert solution(\"8 2\") == \"2\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"6 2\") == \"2\"\nassert solution(stdin=\"8 1\") == \"0\"\nassert solution(stdin=\"10 2\") == \"2\"\nassert solution(stdin=\"5 1\") == \"1\"\nassert solution(stdin=\"3 2\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"2\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"10 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 2') == '2\\n', \"Expected Output: '2\\n', but got: '{}'.\".format(solution('6 2'))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"5 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2\\n', 'Test case 1 failed'\nassert solution(input()) == '3\\n', 'Test case 2 failed'\nassert solution(input()) == '5\\n', 'Test case 3 failed'\nassert solution(input()) == '7\\n', 'Test case 4 failed'\nassert solution(input()) == '9\\n', 'Test case 5 failed'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"2\", \"Test case failed\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"pon\", \"Your solution should be correct.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"16\") == \"pon\", \"Incorrect answer\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='16\\n') == 'pon'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"16\") == \"pon\", \"The digit in the one's place of 16 is 6, so the '\u672c' in '16 \u672c' is pronounced pon.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(16) == 'pon', 'The output should be pon'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == 'pon'\nassert solution(stdin='16') == 'pon'\nassert solution(stdin='1000') == 'bon'\nassert solution(stdin='12345') == 'pon'\nassert solution(stdin='99999') == 'hon'",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(16) == \"pon\", \"The digit in the one's place of 16 is 6, so the '\u672c' in '16 \u672c' is pronounced pon.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '11'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '11\\n'\nprint('All tests passed!')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\", \"The solution should be 11, but is {}\".format(solution(\"3\\n3 1 2\"))",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"11\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '11\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"11\", \"Invalid output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n4\\n3\\n') == '4\\n3\\n4'\nprint('All tests passed!')",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"\"\"4\n3\n4\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"\n4\n3\n4\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n4\n3\n4\n3\n4\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"4\\n3\\n4\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1\\n2\\n3\\n4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 122
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n4\\n3\\n') == '4\\n3\\n4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\\n\"\nassert solution(\"4\\n2\\n1\") == \"1\\n2\\n1\\n\"\nassert solution(\"2\\n6\\n1\") == \"6\\n1\\n1\\n\"\nassert solution(\"4\\n1\\n4\\n3\\n2\") == \"4\\n4\\n3\\n3\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 108
    },
    {
        "number": 4301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n2\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n1\\n5\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n1\\n4\\n5\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n2\\n4\\n5\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\nassert solution(\"3 4\") == \"10\\n\"\nassert solution(\"5 5\") == \"10\\n\"\nassert solution(\"6 5\") == \"15\\n\"\nassert solution(\"3 1\") == \"0\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3') == '9\\n', \"Test case 1\"\n\nassert solution('10 5') == '15\\n', \"Test case 2\"\n\nassert solution('5 5') == '10\\n', \"Test case 3\"\n\nassert solution('3 4') == '6\\n', \"Test case 4\"\n\nassert solution('2 5') == '12\\n', \"Test case 5\"",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"Testcase 1 failed\"\nassert solution(\"10 2\") == \"18\\n\", \"Testcase 2 failed\"\nassert solution(\"10 4\") == \"36\\n\", \"Testcase 3 failed\"\nassert solution(\"15 3\") == \"55\\n\", \"Testcase 4 failed\"\nassert solution(\"10 1\") == \"12\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"9\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"9\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"9\\n\", \"The output is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='5 3') == '9\\n', \"Solution should return '9\\n', but got '{}'.\".format(solution(stdin='5 3'))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"5 3\") == \"9\\n\", \"Test failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '40\\n'\nassert solution(stdin) == '120\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-30 -10 10 20 50\") == \"40\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"40\", \"Output should be 40\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nprint(\"All test cases passed\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"40\", \"The minimum time required to light K candles is 40.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\\nHe should move and light candles as follows:\\n - Move from coordinate 0 to -10.\\n - Light the second candle from the left.\\n - Move from coordinate -10 to 10.\\n - Light the third candle from the left.\\n - Move from coordinate 10 to 20.\\n - Light the fourth candle from the left.\\n\"",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == 40",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"8 13\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"11 21\") == \"0\"\nassert solution(\"10 20\") == \"0\"\nassert solution(\"1000 4000\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"6 18\") == \"4\"\nassert solution(\"999 999\") == \"1000\"",
        "num_ids_2": 26,
        "num_ids_4": 45
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 13') == '2'\nassert solution('10 20') == '0'\nassert solution('10 5') == '1'\nassert solution('100 100') == '0'\nassert solution('10000 10000') == '0'",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nprint('All tests passed!')",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 13\") == \"2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3', \"The solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3\\n', \"Test case 1\"\n\nassert solution(input()) == '4\\n', \"Test case 2\"\n\nassert solution(input()) == '10\\n', \"Test case 3\"\n\nassert solution(input()) == '4\\n', \"Test case 4\"\n\nassert solution(input()) == '10\\n', \"Test case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n\") == \"3\\n\"\nassert solution(\"10 0\\n\") == \"0\\n\"\nassert solution(\"10 -4\\n\") == \"-3\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Test case 1 failed.\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    H, A = map(int, stdin.split())\n    if H < 0 or H > 10**4 or A < 1 or A > 10**4:\n        return \"Invalid input.\\n\"\n\n    if H == 0:\n        return \"Serval wins.\\n\"\n\n    for i in range(A):\n        H -= 1\n        if H == 0:\n            return \"Serval wins.\\n\"\n\n    return \"Serval needs to make more attacks.\\n\"\"\"\"\n\nassert solution(\"10 4\") == \"3\\n\", \"Test case 2 failed.\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    H, A = map(int, stdin.split())\n    if H < 0 or H > 10**4 or A < 1 or A > 10**4:\n        return \"Invalid input.\\n\"\n\n    if H == 0:\n        return \"Serval wins.\\n\"\n\n    for i in range(A):\n        H -= 1\n        if H == 0:\n            return \"Serval wins.\\n\"\n\n    return \"Serval needs to make more attacks.\\n\"\"\"\"\n\nassert solution(\"10 4\") == \"3\\n\", \"Test case 3 failed.\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    H, A = map(int, stdin.split())\n    if H < 0 or H > 10**4 or A < 1 or A > 10**4:\n        return \"Invalid input.\\n\"\n\n    if H == 0:\n        return \"Serval wins.\\n\"\n\n    for i in range(A):\n        H -= 1\n        if H == 0:\n            return \"Serval wins.\\n\"\n\n    return \"Serval needs to make more attacks.\\n\"\"\"\"\n\nassert solution(\"10 4\") == \"3\\n\", \"Test case 4 failed.\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    H, A = map(int, stdin.split())\n    if H < 0 or H > 10**4 or A < 1 or A > 10**4:\n        return \"Invalid input.\\n\"\n\n    if H == 0:\n        return \"Serval wins.\\n\"\n\n    for i in range(A):\n        H -= 1\n        if H == 0:\n            return \"Serval wins.\\n\"\n\n    return \"Serval needs to make more attacks.\\n\"\"\"\"\n\nassert solution(\"10 4\") == \"3\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"10 4\\n\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(stdin=\"5 1\\n\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(stdin=\"10 5\\n\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(stdin=\"10 5\\n\") == \"3\\n\", \"Test case 4 failed\"\nassert solution(stdin=\"10 4\\n\") == \"3\\n\", \"Test case 5 failed\"\nassert solution(stdin=\"10 0\\n\") == \"3\\n\", \"Test case 6 failed\"\nassert solution(stdin=\"10 2\\n\") == \"2\\n\", \"Test case 7 failed\"\nassert solution(stdin=\"10 1\\n\") == \"1\\n\", \"Test case 8 failed\"\nassert solution(stdin=\"10 3\\n\") == \"2\\n\", \"Test case 9 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Test failed\"\nassert solution(\"20 2\") == \"0\\n\", \"Test failed\"\nassert solution(\"100 5\") == \"2\\n\", \"Test failed\"\nassert solution(\"10 100\") == \"10\\n\", \"Test failed\"\nassert solution(\"0 5\") == \"3\\n\", \"Test failed\"",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4') == '3\\n', 'Test 1'\nassert solution('5 2') == '1\\n', 'Test 2'\nassert solution('15 1') == '2\\n', 'Test 3'\nassert solution('5 2') == '1\\n', 'Test 4'\nassert solution('3 5') == '2\\n', 'Test 5'\nassert solution('10 2') == '3\\n', 'Test 6'\n\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\") == \"3\", \"Test failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"3\\n\", \"Solution must return the number of attacks Serval needs to make before winning.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"0 75 25 100\") == \"50\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Alice and Bob are controlling a robot. They each have one switch that controls the robot.\\nAlice started holding down her button A second after the start-up of the robot, and released her button B second after the start-up.\\nBob started holding down his button C second after the start-up, and released his button D second after the start-up.\\nFor how many seconds both Alice and Bob were holding down their buttons?\\n-----Constraints-----\\n - 0\u2264A<B\u2264100\\n - 0\u2264C<D\u2264100\\n - All input values are integers.\\n-----Input-----\\nInput is given from Standard Input in the following format:\\nA B C D\\n-----Output-----\\nPrint the length of the duration (in seconds) in which both Alice and Bob were holding down their buttons.\\n-----Sample Input-----\\n0 75 25 100\\n-----Sample Output-----\\n50\\n\\nAlice started holding down her button 0 second after the start-up of the robot, and released her button 75 second after the start-up.\\nBob started holding down his button 25 second after the start-up, and released his button 100 second after the start-up.\\nTherefore, the time when both of them were holding down their buttons, is the 50 seconds from 25 seconds after the start-up to 75 seconds after the start-up.\") == \"50\")",
        "num_ids_2": 333,
        "num_ids_4": 333
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\\n\", \"The function should return the length of the duration in seconds, but it returns {}\".format(solution(\"0 75 25 100\"))\nprint(\"All tests passed!\")",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"1 25 100 100\") == \"50\"\nassert solution(\"0 100 100 100\") == \"50\"\nassert solution(\"50 0 0 0\") == \"0\"\nassert solution(\"100 100 100 100\") == \"50\"\nassert solution(\"0 100 100 100\") == \"50\"\n",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"1 10 30 40\") == \"100\"\nassert solution(\"2 50 200 1000\") == \"2000\"\nassert solution(\"3 100 400 500\") == \"1000\"\nassert solution(\"4 200 300 400\") == \"2000\"\nassert solution(\"5 300 400 500\") == \"3000\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nprint(\"Test Passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"50\", \"Invalid input\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1\\n', \"Sample Input and Output do not match\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(105) == 1, \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(105) == 1, \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\", \"Test Case Failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\", \"Test Case 1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(105) == '1', \"Test case 1 failed\"\nassert solution(113) == '0', \"Test case 2 failed\"\nassert solution(121) == '1', \"Test case 3 failed\"\nassert solution(200) == '1', \"Test case 4 failed\"\nassert solution(201) == '0', \"Test case 5 failed\"\nassert solution(202) == '1', \"Test case 6 failed\"\nassert solution(203) == '0', \"Test case 7 failed\"\nassert solution(204) == '1', \"Test case 8 failed\"\nassert solution(205) == '0', \"Test case 9 failed\"\nassert solution(206) == '1', \"Test case 10 failed\"\nassert solution(207) == '0', \"Test case 11 failed\"\nassert solution(208) == '1', \"Test case 12 failed\"\nassert solution(209) == '0', \"Test case 13 failed\"\nassert solution(210) == '1', \"Test case 14 failed\"\nassert solution(211) == '0', \"Test case 15 failed\"\nassert solution(212) == '1', \"Test case 16 failed\"\nassert solution(213) == '0', \"Test case 17 failed\"\nassert solution(214) == '1', \"Test case 18 failed\"\nassert solution(215) == '0', \"Test case 19 failed\"\nassert solution(216) == '1', \"Test case 20 failed\"\nassert solution(217) == '0', \"Test case 21 failed\"\nassert solution(218) == '1', \"Test case 22 failed\"\nassert solution(219) == '0', \"Test case 23 failed\"\nassert solution(220) == '1', \"Test case 24 failed\"\nassert solution(221) == '0', \"Test case 25 failed\"\nassert solution(222) == '1', \"Test case 26 failed\"\nassert solution(223) == '0', \"Test case 27 failed\"\nassert solution(224) == '1', \"Test case 28 failed\"\nassert solution(225) == '0', \"Test case 29 failed\"\nassert solution(226) == '1', \"Test case 30 failed\"\nassert solution(227) == '0', \"Test case 31 failed\"\nassert solution(228) == '1', \"Test case 32 failed\"\nassert solution(229) == '0', \"Test case 33 failed\"\nassert solution(230) == '1', \"Test case 34 failed\"\nassert solution(231) == '0', \"Test case 35 failed\"\nassert solution(232) == '1', \"Test case 36 failed\"\nassert solution(233) == '0', \"Test case 37 failed\"\nassert solution(234) == '1', \"Test case 38 failed\"\nassert solution(235) == '0', \"Test case 39 failed\"\nassert solution(236) == '1', \"Test case 40 failed\"\nassert solution(237) == '0', \"Test case 41 failed\"\nassert solution(238) == '1', \"Test case 42 failed\"\nassert solution(239) == '0', \"Test case 43 failed\"\nassert solution(240) == '1', \"Test case 44 failed\"\nassert solution(241) == '0', \"Test case 45 failed\"\nassert solution(242) == '1', \"Test case 46 failed\"\nassert solution(243) == '0', \"Test case 47 failed\"\nassert solution(244) == '1', \"Test case 48 failed\"\nassert solution(245) == '0', \"Test case 49 failed\"\nassert solution(246) == '1', \"Test case 50 failed\"\nassert solution(247) == '0', \"Test case 51 failed\"\nassert solution(248) == '1', \"Test case ",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(105) == 1\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(105) == 1, \"The number 105 is not correct\"\nassert solution(200) == 4, \"The number 200 is not correct\"\nassert solution(100) == 1, \"The number 100 is not correct\"\nassert solution(2) == 0, \"The number 2 is not correct\"\nassert solution(1) == 0, \"The number 1 is not correct\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(105) == 1, \"The number 105 is not odd but has exactly eight positive divisors.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"5 7\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"7 10\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"8 9\") == \"3\\n\", \"Test case 4 failed\"\nassert solution(\"10 10\") == \"3\\n\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3\") == \"1\\n\", \"The solution is incorrect\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\\n\", \"Test Case 1 failed\"\nassert solution(\"8 2\") == \"0\\n\", \"Test Case 2 failed\"\nassert solution(\"10 4\") == \"2\\n\", \"Test Case 3 failed\"\nassert solution(\"5 7\") == \"4\\n\", \"Test Case 4 failed\"\nassert solution(\"100 100\") == \"0\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Please provide input N and K.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1\\n', \"Testcase 1 failed\"\nassert solution(input()) == '1\\n', \"Testcase 2 failed\"\nassert solution(input()) == '1\\n', \"Testcase 3 failed\"\nassert solution(input()) == '1\\n', \"Testcase 4 failed\"\nassert solution(input()) == '1\\n', \"Testcase 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\nassert solution(\"9 3\") == \"2\\n\"\nassert solution(\"7 8\") == \"1\\n\"\nassert solution(\"5 4\") == \"2\\n\"\nassert solution(\"5 3\") == \"2\\n\"\n\nimport sys",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1\\n\"\nassert solution(\"5 3\") == \"1\\n\"\nassert solution(\"1 3\") == \"0\\n\"\nassert solution(\"2 1\") == \"0\\n\"\nassert solution(\"2 0\") == \"0\\n\"\nassert solution(\"4 1\") == \"0\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"111\") == \"111\", \"Input should be 111\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"111\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='111') == '111'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(111) == 111, \"Test 1 failed\"\nassert solution(1111) == 111, \"Test 2 failed\"\nassert solution(11111) == 1111, \"Test 3 failed\"\nassert solution(111111) == 11111, \"Test 4 failed\"\nassert solution(1111111) == 111111, \"Test 5 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 89
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"111\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"111\", \"The next ABC to be held is ABC 111, where Kurohashi can make his debut.\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 6 3') == '5', 'Testcase failed'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Test failed\"\nassert solution(\"1 4 3\") == \"9\\n\", \"Test failed\"\nassert solution(\"1 5 3\") == \"10\\n\", \"Test failed\"\nassert solution(\"1 7 3\") == \"14\\n\", \"Test failed\"\nassert solution(\"1 8 3\") == \"15\\n\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"Test case 1 failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\", \"The solution should be 5, but it is \" + solution(\"1 6 3\") + \".\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"2 7 5\") == \"12\"\nassert solution(\"3 8 6\") == \"15\"\nassert solution(\"4 9 7\") == \"21\"\nassert solution(\"5 10 8\") == \"28\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\" # Solution is correct.",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 1 3\") == \"6\"\nassert solution(\"1 2 1\") == \"5\"\nassert solution(\"1 2 4\") == \"8\"\nassert solution(\"1 2 1 1 1\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\", \"Incorrect answer. Please check the solution and try again.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n\") == \"5\\n\", \"A sequence a=\\{a_1,a_2,a_3,......\\} is determined as follows: - The first term s is given as input. - Let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd. - a_i = s when i = 1, and a_i = f(a_{i-1}) when i > 1. Find the minimum integer m that satisfies the following condition: - There exists an integer n such that a_m = a_n (m > n).\"\nassert solution(\"9\\n\") == \"5\\n\", \"A sequence a=\\{a_1,a_2,a_3,......\\} is determined as follows: - The first term s is given as input. - Let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd. - a_i = s when i = 1, and a_i = f(a_{i-1}) when i > 1. Find the minimum integer m that satisfies the following condition: - There exists an integer n such that a_m = a_n (m > n).\"\nassert solution(\"10\\n\") == \"5\\n\", \"A sequence a=\\{a_1,a_2,a_3,......\\} is determined as follows: - The first term s is given as input. - Let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd. - a_i = s when i = 1, and a_i = f(a_{i-1}) when i > 1. Find the minimum integer m that satisfies the following condition: - There exists an integer n such that a_m = a_n (m > n).\"\nassert solution(\"11\\n\") == \"1\\n\", \"A sequence a=\\{a_1,a_2,a_3,......\\} is determined as follows: - The first term s is given as input. - Let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd. - a_i = s when i = 1, and a_i = f(a_{i-1}) when i > 1. Find the minimum integer m that satisfies the following condition: - There exists an integer n such that a_m = a_n (m > n).\"\nassert solution(\"12\\n\") == \"5\\n\", \"A sequence a=\\{a_1,a_2,a_3,......\\} is determined as follows: - The first term s is given as input. - Let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd. - a_i = s when i = 1, and a_i = f(a_{i-1}) when i > 1. Find the minimum integer m that satisfies the following condition: - There exists an integer n such that a_m = a_n (m > n).\"",
        "num_ids_2": 304,
        "num_ids_4": 610
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"5\", \"Solution should return 5\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5\", \"The output should be 5\"\nprint(solution(\"8\"))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"5\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"100\") == \"5\"\nassert solution(\"1000\") == \"5\"\nassert solution(\"10000\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"20 10 10 10\") == \"No\"\nassert solution(\"10 10 10 10\") == \"Yes\"",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 9 10 10') == 'Yes'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"10 9 10 9\") == \"Yes\"\nassert solution(\"10 10 10 9\") == \"No\"\nassert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"9 10 10 10\") == \"No\"",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"15 8 15 15\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'No'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"A B C D\\n\")) == \"No\"\nassert solution(input(\"10 9 10 10\\n\")) == \"Yes\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 9 10 10\") == \"No\\n\", \"Test 1 failed\"\nassert solution(\"2 1 2 2 2\") == \"Yes\\n\", \"Test 2 failed\"\nassert solution(\"10 10 10 10\") == \"Yes\\n\", \"Test 3 failed\"\nassert solution(\"10 20 30 40\") == \"Yes\\n\", \"Test 4 failed\"\nassert solution(\"2 1 2 3 2\") == \"Yes\\n\", \"Test 5 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 109
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"2\\n1 2\\n1 3\") == \"2\"\nassert solution(\"4\\n2 4\\n4 2\") == \"6\"\nassert solution(\"3\\n3 5\\n5 3\") == \"15\"\nassert solution(\"5\\n2 3\\n4 1\") == \"10\"",
        "num_ids_2": 45,
        "num_ids_4": 86
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"4\\n1 2 3 4\\n5 6 7 8\") == \"10\\n\"\nassert solution(\"5\\n2 3 4 5\\n6 7 8 9 10\") == \"15\\n\"\nassert solution(\"6\\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20\") == \"100\\n\"\nassert solution(\"7\\n10 2 5\\n7 7 8 9 10\\n8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"26\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 209
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"3\\n4 3 2\\n3 2 1\\n4 1 5\") == \"9\"",
        "num_ids_2": 37,
        "num_ids_4": 68
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\\n\") == \"5\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"3\\n7 6 5\\n8 9 10\") == \"1\\n\"\nassert solution(\"3\\n2 3 1\\n4 5 6\\n7 8 9\") == \"4\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"1\\n\"\nassert solution(\"3\\n1 2 1\\n3 4 5\\n6 7 8\") == \"2\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 120
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\\n\"\nassert solution(\"1\\n2 3 4\") == \"0\\n\"\nassert solution(\"5\\n1 2 3\\n4 5 6\") == \"10\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 73
    },
    {
        "number": 4313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '###\\n###\\n.##\\n\\n'\n\nprint('Test passed successfully!')",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter H and W: \")) == \"###\\n###\\n.##\\n\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect. Please see the sample output for the correctness.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '''\n###\n###\n.##\n\nThe second row and the third column in the original grid will be removed.\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\\n\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '''\n###\n###\n.##\n\nThe second row and the third column in the original grid will be removed.\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '6.28318530717958623200', \"Your implementation is incorrect.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\", \"1\"\nassert solution(\"2\") == \"NaN\", \"2\"\nassert solution(\"3\") == \"Infinity\", \"3\"\nassert solution(\"4\") == \"6.28318530717958623200\", \"4\"\nassert solution(\"5\") == \"12.566370614359172464000\", \"5\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\n\nfrom math import pi",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6.28318530717958623200\", \"Test failed: incorrect output\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 6.28318530717958623200, \"Error: Incorrect output\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6.28318530717958623200\\n', \"Print the circumference of a circle of radius R\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"  # Test 1\nassert solution(\"2\") == \"6.28318530717958623210\"  # Test 2\nassert solution(\"3\") == \"6.28318530717958623210\"  # Test 3\nassert solution(\"4\") == \"6.28318530717958623210\"  # Test 4\nassert solution(\"5\") == \"6.28318530717958623210\"  # Test 5",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == 6.28318530717958623200, \"6.28318530717958623200 should be the output\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Solution should return Yes\"\nassert solution(\"AAAABBBCCDDEEFF\") == \"No\", \"Solution should return No\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAS\") == \"No\"\nassert solution(\"AAB\") == \"No\"\nassert solution(\"AB\") == \"No\"\nassert solution(\"ABAB\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"BB\") == \"No\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"ABBC\") == \"No\"\nassert solution(\"BBC\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"The solution should return Yes when the input is 'ASSA'.\"\nassert solution(\"AASA\") == \"Yes\", \"The solution should return Yes when the input is 'AASA'.\"\nassert solution(\"AABA\") == \"No\", \"The solution should return No when the input is 'AABA'.\"\nassert solution(\"AAAABBB\") == \"No\", \"The solution should return No when the input is 'AAAABBB'.\"\nassert solution(\"AAAABBBC\") == \"Yes\", \"The solution should return Yes when the input is 'AAAABBBC'.\"",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ACCA\") == \"No\"\nassert solution(\"ABC\") == \"Yes\"\nassert solution(\"AAB\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AASS\") == \"Yes\"\nassert solution(\"Aaaa\") == \"No\"\nassert solution(\"Aabb\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes', \"Incorrect output: expected 'Yes', got '{}'\".format(solution('ASSA'))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"AAAABBB\") == \"No\"\nassert solution(\"ABCDE\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"AAAA\") == \"No\"\nassert solution(\"AAAB\") == \"No\"\nassert solution(\"AAAABBB\") == \"Yes\"\nassert solution(\"A\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"-10\\n\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"5 -5\") == \"-10\\n\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"0 0\") == \"-10\\n\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"-5 5\") == \"-10\\n\", \"The largest number among A + B, A - B, and A \\times B should be -10.\"\nassert solution(\"5 5\") == \"5\\n\", \"The largest number among A + B, A - B, and A \\times B should be 5.\"",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-10 4\") == \"-20\"\nassert solution(\"2 7\") == \"24\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"100 100\") == \"100\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"-16\\n\"\nassert solution(\"-13 3\") == \"-16\\n\"\nassert solution(\"-10 -5\") == \"-16\\n\"\nassert solution(\"12 4\") == \"108\\n\"\nassert solution(\"2 1\") == \"2\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-13 3\") == \"-10\\n\", \"Test Case 1\"\nassert solution(\"-12 4\") == \"-24\\n\", \"Test Case 2\"\nassert solution(\"-10 0\") == \"-10\\n\", \"Test Case 3\"\nassert solution(\"-100 50\") == \"-100\\n\", \"Test Case 4\"\nassert solution(\"1 1\") == \"2\\n\", \"Test Case 5\"\nassert solution(\"1 0\") == \"0\\n\", \"Test Case 6\"\nassert solution(\"0 1\") == \"0\\n\", \"Test Case 7\"\nassert solution(\"0 0\") == \"0\\n\", \"Test Case 8\"",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"-10\"\nassert solution(\"-1 3\") == \"-16\"\nassert solution(\"4 4\") == \"-39\"\nassert solution(\"10 20\") == \"-10\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"5\\n\", \"Test 1: A + B = 5\"\nassert solution(\"-13 3\") == \"-10\\n\", \"Test 2: A - B = -10, A \\times B = -39\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13 3\") == -10",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 3\") == \"-10\", \"The largest number among A + B = -10, A - B = -16, and A \\times B = -39 is -10.\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"-12\"\nassert solution(\"-10 0\") == \"10\"\nassert solution(\"100 100\") == \"2000\"\nassert solution(\"10 0\") == \"10\"\n",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\", \"Expected output: 3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"6\\n5 6 8\") == \"0\"\nassert solution(\"5\\n6 6 6\") == \"3\"\nassert solution(\"5\\n5 6 6\") == \"3\"\nassert solution(\"4\\n6 5 7 9\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"4\\n6 5 6 8\\n6 7 6 9\") == \"4\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"3\\n10 8 7 9\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\"\nassert solution(\"7\\n2 4 6 7 9 10\") == \"0\\n\"\nassert solution(\"5\\n2 4 6 8 10\") == \"2\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"7\n1 2 3 1 2 3 4\n\"\"\") == \"\"\"2\n3 4\"\"\"\n\nassert solution(\"\"\"4\n1 1 1 1\n\"\"\") == \"\"\"4\n1 1 1 1\"\"\"\n\nassert solution(\"\"\"5\n1 2 1 2 1\n\"\"\") == \"\"\"3\n2 2 1\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4 '\nassert solution('4\\n1 1 1 1\\n') == '4\\n1 1 1 1 '\nassert solution('5\\n1 2 1 2 1\\n') == '3\\n2 2 1 '\n\nfrom typing import List",
        "num_ids_2": 62,
        "num_ids_4": 92
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution failed for {input()} and expected {output}.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\\n3 4 \"\nassert solution(\"4\\n1 1 1 1\") == \"4\\n1 1 1 1 \"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5\\n1 2 1 2 1\") == \"3\\n2 2 1 \"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 1 2 3 4\") == \"2\\n3 4\"\nassert solution(\"4 1 1 1\") == \"4\\n1 1 1 1\"\nassert solution(\"5 1 2 3 4 5\") == \"1\\n5 \nassert solution(\"5 1 2 1 2 1\") == \"3\\n2 2 1\"",
        "num_ids_2": 52,
        "num_ids_4": 102
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n4\\n5\\n1 2 1 2 1\\n5') == '2\\n3 4 \\n4\\n5'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Incorrect output\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.strip().split('\\n'), output.strip().split('\\n'))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4') == '2\\n3 4 '\nassert solution('4\\n1 1 1 1') == '4\\n1 1 1 1 '\nassert solution('5\\n1 2 1 2 1') == '3\\n2 2 1'",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(6) == 2\nassert solution(7) == 1\nassert solution(21) == 7\nassert solution(28) == 4\nassert solution(999999999) == 1\nassert solution(999999984) == 2",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution() == '2'\nassert solution() == '1'\nassert solution() == '7'\nassert solution() == '4'\nassert solution() == '333333333'\nassert solution() == '333333328'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\\n') == '1\\n2\\n1\\n7\\n4\\n333333333\\n333333328'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\\n\", \"Incorrect output\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3\\n6\\n7\\n21\\n28\\n999999999\\n999999984\") == \"1\\n2\\n1\\n7\\n4\\n333333333\\n333333328\"",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"512 4\") == \"50\", \"The result should be 50\"\nassert solution(\"1000000000 9\") == \"1\", \"The result should be 1\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"50\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"512 4\") == \"50\", \"Incorrect output for 512 4.\"\nassert solution(\"1000000000 9\") == \"1\", \"Incorrect output for 1000000000 9.\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n5\\n3 7 5 1 5\\n3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\\n\") == \"5\\n2 1 1 2 3\\n2\\n5 5\\n2\\n4 5\\n7\\n1 2 2 2 2 3 2\"\n\nassert solution(\"5\\n3 7 5 1 5\\n3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\\n\") == \"2\\n5 5\\n2\\n4 5\\n\"\n\nassert solution(\"3\\n5 1 4\\n7\\n2 2 3 2 1 2 2\\n\") == \"2\\n4 5\\n\"\n\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 180,
        "num_ids_4": 266
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\\n5\\n3 7 5 1 5\\n\\n3\\n5 1 4\\n\\n7\\n2 2 3 2 1 2 2\\n\") == \"5\\n2 1 1 2 3\\n\\n2\\n5 5\\n\\n2\\n4 5\\n\\n7\\n1 2 2 2 2 3 2\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\"\nassert solution(7) == \"7\"\nassert solution(2) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5\"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5\"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n7\\n4 3 5 1 2 2 1\\n\\nOutput\\n5\\n2 1 1 2 3\\n\\nInput\\n5\\n3 7 5 1 5\\n\\nOutput\\n2\\n5 5 \\n\\nInput\\n3\\n5 1 4\\n\\nOutput\\n2\\n4 5 \\n\\nInput\\n7\\n2 2 3 2 1 2 2\\n\\nOutput\\n7\\n1 2 2 2 2 3 2\") == \"Output\\n5\\n2 1 1 2 3\\n\\nInput\\n5\\n3 7 5 1 5\\n\\nOutput\\n2\\n5 5 \\n\\nInput\\n3\\n5 1 4\\n\\nOutput\\n2\\n4 5 \\n\\nInput\\n7\\n2 2 3 2 1 2 2\\n\\nOutput\\n7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 273,
        "num_ids_4": 273
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\") == \"5\\n2 1 1 2 3\"\nassert solution(\"5\\n3 7 5 1 5\") == \"2\\n5 5 \"\nassert solution(\"3\\n5 1 4\") == \"2\\n4 5 \"\nassert solution(\"7\\n2 2 3 2 1 2 2\") == \"7\\n1 2 2 2 2 3 2\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n4 3 5 1 2 2 1\\n\") == \"5\\n2 1 1 2 3\\n\"\nassert solution(\"5\\n3 7 5 1 5\\n\") == \"2\\n5 5\\n\"\nassert solution(\"3\\n5 1 4\\n\") == \"2\\n4 5\\n\"\nassert solution(\"7\\n2 2 3 2 1 2 2\\n\") == \"7\\n1 2 2 2 2 3 2\\n\"\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 21\n10 8\n7 4\n3 1\n5 4\"\"\") == \"2\"\n\nassert solution(\"\"\"4 16\n10 8\n7 4\n3 1\n5 4\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n4 21\n10 8\n7 4\n3 1\n5 4\"\"\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 20
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution failed for input {input()}, expected {output()}, got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"2\"\nassert solution(solution) == \"2\"\nassert solution(solution) == \"2\"\nassert solution(solution) == \"2\"\nassert solution(solution) == \"-1\"\nassert solution(solution) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\\n\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\nassert solution(\"4 16\\n10 16\\n7 16\\n3 16\\n5 16\") == \"12\"",
        "num_ids_2": 68,
        "num_ids_4": 107
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\nassert solution(\"2 1\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 107
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'tleelte'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'qwerty'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'vvvvvv'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'abcde'",
        "num_ids_2": 79,
        "num_ids_4": 158
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"tleelte\" # expected output: \"tleelte\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'tleelte'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"tleelte\"\n\nt = int(stdin.strip())\n\nfor i in range(t):\n    n, a, b = map(int, stdin.split())\n    s = \"\".join([chr(ord('a') + i % 26) for i in range(n)])\n    print(\" \".join(sorted(set(s))))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"qwerty\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"vvvvvv\"\nassert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"abcde\"",
        "num_ids_2": 79,
        "num_ids_4": 158
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\nassert solution(\"5\\n3 2 2\\n1 1 1\\n1 1 1\") == \"abcde\"\nassert solution(\"2\\n5 3 1\\n1 1 1\\n1 1 1\") == \"abcde\"\nassert solution(\"5\\n10 4 1\\n1 1 1\\n1 1 1\") == \"aaaaaa\"\nassert solution(\"2\\n1 2 1\\n1 1 1\\n1 1 1\") == \"abcde\"\nprint(\"All test cases passed\")",
        "num_ids_2": 72,
        "num_ids_4": 137
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"tleelte\"\nassert solution(open(\"input.txt\").read()) == \"qwerty\"\nassert solution(open(\"input.txt\").read()) == \"vvvvvv\"\nassert solution(open(\"input.txt\").read()) == \"abcde\"",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"tleelte\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'tleelte'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 3') == 'qwerty'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'vvvvvv'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'abcde'",
        "num_ids_2": 79,
        "num_ids_4": 158
    },
    {
        "number": 4324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"tleelte\", \"Incorrect output: tleelte\"\nassert solution(input()) == \"qwerty\", \"Incorrect output: qwerty\"\nassert solution(input()) == \"vvvvvv\", \"Incorrect output: vvvvvvv\"\nassert solution(input()) == \"abcde\", \"Incorrect output: abcde\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"20 12 6\") == \"12\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '12' # pass",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\", \"Takahashi loves takoyaki - a ball-shaped snack. With a takoyaki machine, he can make at most X pieces of takoyaki at a time, taking T minutes regardless of the number of pieces to make. How long does it take to make N takoyaki?\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"12\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 12 6\") == \"12\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\", \"The output is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\", \"Sample Output: 12\"\nassert solution(\"10 3 5\") == \"20\", \"Sample Output: 20\"\nassert solution(\"5 1 2\") == \"1\", \"Sample Output: 1\"\nassert solution(\"1 2 3\") == \"0\", \"Sample Output: 0\"\nassert solution(\"5 5 5\") == \"1\", \"Sample Output: 1\"\nassert solution(\"10 5 1\") == \"1\", \"Sample Output: 1\"\nassert solution(\"5 2 1\") == \"1\", \"Sample Output: 1\"\nassert solution(\"5 1 1\") == \"0\", \"Sample Output: 0\"\nassert solution(\"3 5 10\") == \"1\", \"Sample Output: 1\"\nassert solution(\"5 5 5\") == \"1\", \"Sample Output: 1\"",
        "num_ids_2": 49,
        "num_ids_4": 91
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"10 2 4\") == \"12\"\nassert solution(\"4 3 2\") == \"24\"\nassert solution(\"20 12 4\") == \"24\"\nassert solution(\"100 50 20\") == \"300\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 12 6\") == \"12\\n\", \"Test case 1 failed\"\nassert solution(\"10 20 10\") == \"60\\n\", \"Test case 2 failed\"\nassert solution(\"10 20 30\") == \"120\\n\", \"Test case 3 failed\"\nassert solution(\"5 3 2\") == \"8\\n\", \"Test case 4 failed\"\nassert solution(\"6 20 4\") == \"5\\n\", \"Test case 5 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 104
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"2\"\nassert solution(\"10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n\") == \"1\"",
        "num_ids_2": 80,
        "num_ids_4": 104
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"2\"\nassert solution(\"10\\n\") == \"1\"\nassert solution(\"15\\n\") == \"0\"\nassert solution(\"20\\n\") == \"0\"\nassert solution(\"25\\n\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"12\") == \"3\"\nassert solution(\"15\") == \"5\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"17\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"2\" # correct",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3\\n', \"Expected output: '3', but got: '{}'\\n\".format(solution(input()))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\", \"The output should be '3\\n'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"10 0\") == \"10\"\nassert solution(\"2 0\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Test failed\"\nassert solution(\"2 3\") == \"6\\n\", \"Test failed\"\nassert solution(\"3 4\") == \"9\\n\", \"Test failed\"\nassert solution(\"5 1\") == \"5\\n\", \"Test failed\"\nassert solution(\"20 50\") == \"5425\\n\", \"Test failed\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Test case 1\"\nassert solution(\"5 2\") == \"0\\n\", \"Test case 2\"\nassert solution(\"4 6\") == \"3\\n\", \"Test case 3\"\nassert solution(\"1 0\") == \"0\\n\", \"Test case 4\"\nassert solution(\"0 1\") == \"0\\n\", \"Test case 5\"\n\nfor stdin in [input(), input(), input(), input(), input()]:\n    assert solution(stdin) == \"3\\n\", f\"Test case {stdin}\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"2 2\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"3 1\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"5 6\") == \"6\\n\", \"Test case 4 failed\"\nassert solution(\"10 7\") == \"15\\n\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"3\"\n\nassert solution(\"5 0\") == \"0\"\n\nassert solution(\"0 0\") == \"0\"\n\nassert solution(\"-1 3\") == \"-1\"\n\nassert solution(\"5 -1\") == \"-1\"\n\nassert solution(\"0 -1\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 12') == '16', 'Test failed' # Test case 1\nassert solution('2 3') == '3', 'Test failed' # Test case 2\nassert solution('6 30') == '36', 'Test failed' # Test case 3\nassert solution('8 12') == '18', 'Test failed' # Test case 4\nassert solution('5 15') == '3', 'Test failed' # Test case 5\nassert solution('10 7') == '10', 'Test failed' # Test case 6\nassert solution('7 11') == '11', 'Test failed' # Test case 7\nassert solution('30 20') == '20', 'Test failed' # Test case 8\nassert solution('15 10') == '5', 'Test failed' # Test case 9\nassert solution('20 15') == '20', 'Test failed' # Test case 10\nassert solution('10 10') == '0', 'Test failed' # Test case 11\nassert solution('5 5') == '0', 'Test failed' # Test case 12\nassert solution('12 24') == '24', 'Test failed' # Test case 13\nassert solution('5 7') == '12', 'Test failed' # Test case 14\nassert solution('3 1') == '3', 'Test failed' # Test case 15\nassert solution('1000000 2000000') == '5000000', 'Test failed' # Test case 16",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 12\") == \"16\", \"The expected output is not correct.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\", \"Test case 1 failed\"\nassert solution(\"7 13\") == \"12\", \"Test case 2 failed\"\nassert solution(\"2 5\") == \"5\", \"Test case 3 failed\"\nassert solution(\"10 15\") == \"10\", \"Test case 4 failed\"\nassert solution(\"100 100\") == \"0\", \"Test case 5 failed\"\n",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"16\", \"The output is not as expected.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 12\") == \"16\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"16\\n\", \"Incorrect solution\"\nassert solution(\"1 5\") == \"5\\n\", \"Incorrect solution\"\nassert solution(\"10 20\") == \"20\\n\", \"Incorrect solution\"\nassert solution(\"7 11\") == \"1\\n\", \"Incorrect solution\"\nassert solution(\"20 30\") == \"30\\n\", \"Incorrect solution\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 12') == '16\\n', \"Your function should return '16\\n', but instead returned '{}'\\n\".format(solution('4 12'))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"chokudaiz can be obtained by appending z at the end of chokudai.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"chokudai\") == \"Yes\\nchokudaiz can be obtained by appending z at the end of chokudai.\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'chokudaiz can be obtained by appending z at the end of chokudai.'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes\\nchokudaiz can be obtained by appending z at the end of chokudai'\nassert solution('chokudaiz') == 'No'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"17 16\") == \"IMPOSSIBLE\"\nassert solution(\"-1 -2\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\") == \"9\\n7\"\nassert solution(\"4 12\") == \"IMPOSSIBLE\"\nassert solution(\"3 7\") == \"IMPOSSIBLE\"\nassert solution(\"7 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 0\") == \"IMPOSSIBLE\"",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"2 14\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\") == \"IMPOSSIBLE\"\nassert solution(\"7 7\") == \"IMPOSSIBLE\"\nassert solution(\"0 0\") == \"IMPOSSIBLE\"\nassert solution(\"5 5 5\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"5 11\") == \"IMPOSSIBLE\"\nassert solution(\"7 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 7\") == \"IMPOSSIBLE\"\nassert solution(\"10 10\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\") == \"9\", \"Your code is not correct!\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"9\\n|2 - 9| = 7 and |16 - 9| = 7, so 9 satisfies the condition.\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\") == \"9\"\nprint(\"ok\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"2 10\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"10 10\") == \"IMPOSSIBLE\"\nassert solution(\"-10 -10\") == \"IMPOSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"123\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(117) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes', 'Test case 1 failed'\nassert solution('116') == 'No', 'Test case 2 failed'\nassert solution('115') == 'No', 'Test case 3 failed'\nassert solution('1177') == 'No', 'Test case 4 failed'\nassert solution('1178') == 'Yes', 'Test case 5 failed'\n\nprint('All test cases passed!')",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"127\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"222\") == \"No\"\nassert solution(\"333\") == \"No\"\nassert solution(\"444\") == \"Yes\"\nassert solution(\"555\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('117') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\n\nprint(\"Yes\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"Yes\", \"Test case 1\"\nassert solution(\"13\") == \"No\", \"Test case 2\"\nassert solution(\"9999999999\") == \"Yes\", \"Test case 3\"\nassert solution(\"10000000001\") == \"No\", \"Test case 4\"\nassert solution(\"101\") == \"Yes\", \"Test case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 85
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\", \"Sample Output does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\\n\", \"Test 1 failed\"\nassert solution(\"101\") == \"Yes\\n\", \"Test 2 failed\"\nassert solution(\"1000\") == \"No\\n\", \"Test 3 failed\"\nassert solution(\"5\") == \"No\\n\", \"Test 4 failed\"\nassert solution(\"1001\") == \"Yes\\n\", \"Test 5 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(12) == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"21\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"200\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"124\") == \"Yes\"\nassert solution(\"125\") == \"No\"\nassert solution(\"126\") == \"Yes\"\nassert solution(\"127\") == \"No\"\nassert solution(\"128\") == \"Yes\"\nassert solution(\"129\") == \"No\"\nassert solution(\"130\") == \"Yes\"\nassert solution(\"131\") == \"No\"\nassert solution(\"132\") == \"Yes\"\nassert solution(\"133\") == \"No\"\nassert solution(\"134\") == \"Yes\"\nassert solution(\"135\") == \"No\"\nassert solution(\"136\") == \"Yes\"\nassert solution(\"137\") == \"No\"\nassert solution(\"138\") == \"Yes\"\nassert solution(\"139\") == \"No\"\nassert solution(\"140\") == \"Yes\"\nassert solution(\"141\") == \"No\"\nassert solution(\"142\") == \"Yes\"\nassert solution(\"143\") == \"No\"\nassert solution(\"144\") == \"Yes\"\nassert solution(\"145\") == \"No\"\nassert solution(\"146\") == \"Yes\"\nassert solution(\"147\") == \"No\"\nassert solution(\"148\") == \"Yes\"\nassert solution(\"149\") == \"No\"\nassert solution(\"150\") == \"Yes\"\nassert solution(\"151\") == \"No\"\nassert solution(\"152\") == \"Yes\"\nassert solution(\"153\") == \"No\"\nassert solution(\"154\") == \"Yes\"\nassert solution(\"155\") == \"No\"\nassert solution(\"156\") == \"Yes\"\nassert solution(\"157\") == \"No\"\nassert solution(\"158\") == \"Yes\"\nassert solution(\"159\") == \"No\"\nassert solution(\"160\") == \"Yes\"\nassert solution(\"161\") == \"No\"\nassert solution(\"162\") == \"Yes\"\nassert solution(\"163\") == \"No\"\nassert solution(\"164\") == \"Yes\"\nassert solution(\"165\") == \"No\"\nassert solution(\"166\") == \"Yes\"\nassert solution(\"167\") == \"No\"\nassert solution(\"168\") == \"Yes\"\nassert solution(\"169\") == \"No\"\nassert solution(\"170\") == \"Yes\"\nassert solution(\"171\") == \"No\"\nassert solution(\"172\") == \"Yes\"\nassert solution(\"173\") == \"No\"\nassert solution(\"174\") == \"Yes\"\nassert solution(\"175\") == \"No\"\nassert solution(\"176\") == \"Yes\"\nassert solution(\"177\") == \"No\"\nassert solution(\"178\") == \"Yes\"\nassert solution(\"179\") == \"No\"\nassert solution(\"180\") == \"Yes\"\nassert solution(\"181\") == \"No\"\nassert solution(\"182\") == \"Yes\"\nassert solution(\"183\") == \"No\"\nassert solution(\"184\") == \"Yes\"\nassert solution(\"185\") == \"No\"\nassert solution(\"186\") == \"Yes\"\nassert solution(\"187\") == \"No\"\nassert solution(\"188\") == \"Yes\"\nassert solution(\"189\") == \"No\"\nassert solution(\"190\") == \"Yes\"\nassert solution(\"191\") == \"No\"\nassert solution(\"192\") == \"Yes\"\nassert solution(\"193\") == \"No\"\nassert solution(\"194\") == \"Yes\"\nassert solution(\"195\") == \"No\"\nassert solution(\"196\") == \"Yes\"\nassert solution(\"197\") == \"No\"\nassert solution(\"198\") == \"Yes\"\nassert solution(\"199\") == \"No\"\nassert solution(\"200\") == \"Yes\"\nassert solution(\"201\") == \"No\"\nassert solution(\"202\") == \"Yes\"\nassert solution(\"203\") == \"No\"\nassert solution(\"204\") ==",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\", \"Incorrect output for N=12.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nprint(\"All tests passed!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '-1 1 -1 0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {i+1} failed\" for i, (input_data, output_data) in enumerate(zip(stdin_data, stdout_data))",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\\n\"\nassert solution(\"0 0 1 0\") == \"-1 0 1 0\\n\"\nassert solution(\"1 0 1 0\") == \"-1 0 -1 0\\n\"\nassert solution(\"1 1 1 0\") == \"-1 0 -1 0\\n\"\nassert solution(\"0 1 1 0\") == \"-1 0 -1 0\\n\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\\n\"\nassert solution(\"1 1 0 1\") == \"-1 0 -1 0\\n\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 0 0 1\\n-1 1 -1 0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"0 0 0 1\") == \"-1 1 -1 0\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"green apple\\n1 2\\norange\\n\") == \"2 2\\n\"\nassert solution(\"blue yellow\\n4 5\\nred\\n\") == \"4 5\\n\"\nassert solution(\"purple orange\\n2 3\\nred\\n\") == \"2 3\\n\"\nassert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4\\n', \"Expected output: '2 4\\n', but got: '{}'\".format(solution('red blue\\n3 4\\nred\\n'))\n\nassert solution('blue\\n4 2\\nblue\\n') == '4 2\\n', \"Expected output: '4 2\\n', but got: '{}'\".format(solution('blue\\n4 2\\nblue\\n'))\n\nassert solution('red\\n1 1\\nred\\n') == '1 1\\n', \"Expected output: '1 1\\n', but got: '{}'\".format(solution('red\\n1 1\\nred\\n'))",
        "num_ids_2": 116,
        "num_ids_4": 172
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"blue red\\n1 4\\nred\\n\") == \"0 4\\n\"\nassert solution(\"blue red\\n1 4\\nblue\\n\") == \"4 4\\n\"\nassert solution(\"blue red\\n1 4\\nred\\nblue\\n\") == \"4 4\\n\"\nassert solution(\"blue red\\n1 4\\nred\\nblue\\nred\\n\") == \"4 4\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"blue red\\n4 2\\nred\\n\") == \"2 4\\n\"\nassert solution(\"blue green\\n1 3\\nred\\n\") == \"3 4\\n\"\nassert solution(\"blue green\\n1 3\\ngreen\\n\") == \"1 4\\n\"\nassert solution(\"red blue\\n2 4\\nblue\\n\") == \"3 4\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\\n\", \"Test failed\"\n\nimport sys",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('red blue\\n3 4\\nred') == '2 4\\nTakahashi chose a ball with red written on it and threw it away.\\nNow we have two balls with the string S and four balls with the string T.'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\", \"Test 1: Incorrect output\"\nassert solution(\"yellow green\\n2 4\\nblue\\n\") == \"2 4\\n\", \"Test 2: Incorrect output\"\nassert solution(\"purple blue\\n5 6\\nred\\n\") == \"4 6\\n\", \"Test 3: Incorrect output\"\nassert solution(\"green red\\n2 5\\ngreen\\n\") == \"1 5\\n\", \"Test 4: Incorrect output\"\nassert solution(\"green blue\\n2 5\\nblue\\n\") == \"4 5\\n\", \"Test 5: Incorrect output\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 69,
        "num_ids_4": 137
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"blue red\\n5 6\\nblue\\n\") == \"4 6\\n\"\nassert solution(\"yellow green\\n2 3\\nyellow\\n\") == \"1 3\\n\"\nassert solution(\"green blue\\n3 2\\ngreen\\n\") == \"0 2\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 101
    },
    {
        "number": 4334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"red blue\\n3 4\\nred\\n\") == \"2 4\\n\"\nassert solution(\"green yellow\\n5 2\\nred\\n\") == \"1 2\\n\"\nassert solution(\"blue yellow\\n6 2\\nred\\n\") == \"1 2\\n\"\nassert solution(\"blue black\\n5 2\\nred\\n\") == \"1 2\\n\"\nassert solution(\"red black\\n5 2\\nred\\n\") == \"1 2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"7\\nabcdef\") == \"Yes\"\nassert solution(\"8\\nabcabcabc\") == \"Yes\"\nassert solution(\"9\\nabc\") == \"No\"\nassert solution(\"10\\nabcd\") == \"No\"\nassert solution(\"11\\n\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"10\\nabc\") == \"No\"\nassert solution(\"10\\nabcd\") == \"No\"\nassert solution(\"1\\n\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('6\\ndefg') == 'No'\nassert solution('6\\nabcabcabc') == 'Yes'\nassert solution('6\\nabcdabcdabcdabcdabcdabcd') == 'No'",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcabc\\n\") == \"Yes\"\nassert solution(\"6\\nabcd\\n\") == \"No\"\nassert solution(\"6\\naaabc\\n\") == \"No\"\nassert solution(\"6\\naabb\\n\") == \"No\"\nassert solution(\"6\\nbabb\\n\") == \"No\"\nassert solution(\"6\\ncabb\\n\") == \"No\"\nassert solution(\"6\\ndabb\\n\") == \"No\"\nassert solution(\"6\\neabb\\n\") == \"No\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"6\\nabcd\") == \"No\"\nassert solution(\"6\\naaabc\") == \"No\"\nassert solution(\"6\\naaaaa\") == \"No\"\nassert solution(\"6\\naaaaaaaaa\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"7\\nxyzxyz\") == \"No\"\nassert solution(\"3\\nab\") == \"Yes\"\nassert solution(\"4\\naaa\") == \"Yes\"\nassert solution(\"2\\naa\") == \"No\"\nassert solution(\"6\\nabcabc\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"2\\nabc\") == \"No\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 2\\n\") == \"3.000000 0\\n\"\nassert solution(\"1 1 0 0\\n\") == \"0.000000 0\\n\"\nassert solution(\"1 1 1 1\\n\") == \"2.000000 0\\n\"\nassert solution(\"1 2 2 2\\n\") == \"1.000000 0\\n\"\nassert solution(\"1 1 10 10\\n\") == \"10.000000 0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.000000 0\\n\", \"Test failed\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 3 1 2\") == \"3.000000 0\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"\nassert solution(\"8\\nG W Y P Y W G W\") == \"Four\\n\"\nassert solution(\"10\\nP Y W G Y Y G Y G\") == \"Three\\n\"\nassert solution(\"11\\nP Y W G Y Y G Y G\") == \"Four\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Four'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nG W Y P Y W\\n\") == \"Four\"\nassert solution(\"1\\nW\\n\") == \"Three\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Four\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\\n\"\nassert solution(\"7\\nG W Y P Y W\") == \"Three\\n\"\nassert solution(\"8\\nG W Y P Y W\") == \"Three\\n\"\nassert solution(\"9\\nG W Y P Y W\") == \"Three\\n\"\nassert solution(\"10\\nG W Y P Y W\") == \"Three\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\n\nprint(\"All tests passed.\")",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 6\nassert solution(2) == 2\nassert solution(5) == 2\nassert solution(5, 3, 3) == 2\nassert solution(5, 5, 6) == 2",
        "num_ids_2": 18,
        "num_ids_4": 42
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\", \"Example 1\"\nassert solution(input()) == \"6\", \"Example 2\"\nassert solution(input()) == \"2\", \"Example 3\"\nassert solution(input()) == \"2\", \"Example 4\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == \"2\"",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == \"6\"\nassert solution(\"5 3 3\\n1 2 4 2 3\") == \"2\"\nassert solution(\"5 5 6\\n1 2 6 10 3\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\") == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == 2",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3 2\\n2 3 1 3 4 2') == 6\nassert solution('5 3 3\\n1 2 4 2 3') == 2\nassert solution('5 5 6\\n1 2 6 10 3') == 2",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n6 3 2\n2 3 1 3 4 2\n\"\"\") == \"6\"\n\nassert solution(r\"\"\"\n5 3 3\n1 2 4 2 3\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n5 5 6\n1 2 6 10 3\n\"\"\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 8 2 6 2') == '7'\nassert solution('4 5 4 1 3') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '7\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == \"7\"\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == \"0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\" # Correct solution",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 7",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2 6 2\\n4 5 4 1 3\\n\") == 7\nassert solution(\"4\\n1 3 2 4\\n1 3 2 4\\n\") == 0",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 5 10\\n\") == \"1 1 3 5 9\\n\"\n\nassert solution(\"10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\\n\"",
        "num_ids_2": 159,
        "num_ids_4": 159
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n5\\n1 2 4 5 10\\n\\nOutput\\n1 1 3 5 9\\n\\nInput\\n10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n\\nOutput\\n9999 9 50605065 1 5 89 5 999999999 60506055 999999999') == ['1', '1', '3', '5', '9']",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [9999, 9, 50605065, 1, 5, 89, 5, 999999999, 60506055, 999999999]",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n10\\n\") == \"1 1 3 5 9\"\nassert solution(\"10000\\n10\\n50605065\\n1\\n5\\n89\\n5\\n999999999\\n60506056\\n1000000000\\n\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"",
        "num_ids_2": 161,
        "num_ids_4": 161
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''1 1 3 5 9'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1', \"Incorrect solution\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n\nn = int(input())\nm = int(input())\n\nedges = []\nfor _ in range(m):\n    v_i, u_i = map(int, input().split())\n    edges.append((v_i, u_i))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\", \"The correct answer is not provided.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == 1\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == 2",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\") == \"2\"\n\nfor line in stdin.split(\"\\n\"):\n    assert solution(line) == \"Error: Invalid input format\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\", \"Testcase 1 failed\"\n\nassert solution(stdin) == \"2\", \"Testcase 2 failed\"\n\nassert solution(stdin) == \"2\", \"Testcase 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == 1\n\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == 4\n\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == 0",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1\\n'\n\nassert solution(\nr'''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4\\n'\n\nassert solution(\nr'''\n3\n1 1 2\n2 3\n1 3\n''') == '0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\\n\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1\\n'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4\\n'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0\\n'",
        "num_ids_2": 90,
        "num_ids_4": 121
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"Output\\n1\\n\\nInput\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\") == \"Output\\n0\"\nassert solution(\"Input\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\") == \"Output\\n0\"\nassert solution(\"Input\\n5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"Output\\n1\\n\\nInput\\n5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\\nInput\\n3\\n1 1 2\\n2 3\\n1 3\\n\") == \"Output\\n0\"",
        "num_ids_2": 196,
        "num_ids_4": 318
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\"",
        "num_ids_2": 82,
        "num_ids_4": 109
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0, \"Please implement the solution\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\\n\") == \"0\"",
        "num_ids_2": 86,
        "num_ids_4": 115
    },
    {
        "number": 4342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution() == '4'\nassert solution() == '0'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"alvuw\"\nassert solution(6) == \"qoztvz\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5') == 'alvuw'\nassert solution('6') == 'qoztvz'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"alvuw\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\naz\\nbf\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\") == \"alvuw\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\") == \"qoztvz\"",
        "num_ids_2": 36,
        "num_ids_4": 59
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'alvuw', 'Incorrect solution'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"bc\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"az\") == \"bc\"\nassert solution(\"bf\") == \"bc\"\nassert solution(\"afogk\") == \"alvuw\"\nassert solution(\"asdji\") == \"alvuw\"\nassert solution(\"nijfvj\") == \"qoztvz\"",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"bc\"\nassert solution() == \"alvuw\"\nassert solution() == \"qoztvz\"",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"bc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5 3\\n15 13 15 15 12\\n\\nOutput\\nYES\\n1 2 5\\n\\nInput\\n5 4\\n15 13 15 15 12\\n\\nOutput\\nNO\\n\\nInput\\n4 4\\n20 10 40 30\\n\\nOutput\\nYES\\n1 2 3 4 \") == \"YES\\n1 2 3 4 \"\nassert solution(\"Input\\n5 4\\n15 13 15 15 12\\n\\nOutput\\nNO\\n\\nInput\\n4 5\\n20 10 40 30 50\\n\\nOutput\\nYES\\n1 2 3 4 5 \") == \"YES\\n1 2 3 4 \"\nassert solution(\"Input\\n5 3\\n15 13 15 15 12\\n\\nOutput\\nYES\\n1 2 5\\n\\nInput\\n5 4\\n15 13 15 15 12\\n\\nOutput\\nYES\\n1 2 3 4 \") == \"YES\\n1 2 3 4 \"\nassert solution(\"Input\\n5 4\\n15 13 15 15 12\\n\\nOutput\\nYES\\n1 2 3 4 \") == \"YES\\n1 2 3 4 \"",
        "num_ids_2": 222,
        "num_ids_4": 377
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 63,
        "num_ids_4": 97
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\\n\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 71,
        "num_ids_4": 107
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 63,
        "num_ids_4": 97
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 3\\n15 13 15 15 12\\n\"\n) == \"YES\\n1 2 5\\n\"\n\nassert solution(\n    \"5 4\\n15 13 15 15 12\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"4 4\\n20 10 40 30\\n\"\n) == \"YES\\n1 2 3 4\\n\"\n\nassert solution(\n    \"1 2 3 4\\n2 3 4 5\\n\"\n) == \"YES\\n2 3 4 5\\n\"\n\nassert solution(\n    \"5 5\\n15 13 15 15 12\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"1 2 3 4 5\\n2 3 4 5 6\\n\"\n) == \"NO\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n15 13 15 15 12\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n15 13 15 15 12\\n') == 'NO'\nassert solution('4 4\\n20 10 40 30\\n') == 'YES\\n1 2 3 4'",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\na1 13\\na2 15\\na3 15\\na4 12\\na5 15') == 'YES\\n1 2 5'\nassert solution('5 4\\na1 13\\na2 15\\na3 15\\na4 12\\na5 15') == 'NO'\nassert solution('4 4\\na20 10\\na10 40\\na30 30') == 'YES\\n1 2 3 4'",
        "num_ids_2": 91,
        "num_ids_4": 133
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n1 2 5\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\\n\") == \"YES\\n1 2 5\"\nassert solution(\"5 4\\n15 13 15 15 12\\n\") == \"NO\"\nassert solution(\"4 4\\n20 10 40 30\\n\") == \"YES\\n1 2 3 4\"",
        "num_ids_2": 67,
        "num_ids_4": 103
    },
    {
        "number": 4344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n1 2 5\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n1 2 5\"\nassert solution() == \"YES\\n1 2 5\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution is not correct. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 4 0 2\") == \"YES\\n0 0 0 0 0\"\nassert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"5\\n1 3 6 8 2\") == \"NO\"",
        "num_ids_2": 83,
        "num_ids_4": 104
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\\n1 0 0 0 0 1 0 1 0\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\nprint('NO')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\", \"Expected YES, but got %s\" % (solution())\nprint(\"YES\")\n\nfrom typing import List\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n5 1 3 6 8 2 9 0 10\") == \"YES\\n1 0 0 0 0 1 0 1 0\"\nassert solution(\"5\\n1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 4 0 2') == 'YES\\n0 1 1 0 0'\nassert solution('9\\n5 1 3 6 8 2 9 0 10') == 'YES\\n0 0 1 1 1 0 0 1 1'\nassert solution('1\\n5') == 'NO'\nassert solution('9\\n5 1 3 6 8 2 9 0 10') == 'NO'",
        "num_ids_2": 81,
        "num_ids_4": 124
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('5 6 1 10') == '2'\nassert solution('5 5 2 10') == '1'\nassert solution('5 5 5 10') == '1'\nassert solution('5 5 10 10') == '1'\nassert solution('5 10 5 10') == '1'\nassert solution('5 10 10 10') == '1'\n",
        "num_ids_2": 103,
        "num_ids_4": 137
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 3\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n\") == \"3\\n0\\n1134\\n0\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"answer\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3\\n0\\n1134\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '0\\n0\\n0\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '1134\\n0\\n0\\n0'\nassert solution('10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '0\\n0\\n0\\n0'",
        "num_ids_2": 169,
        "num_ids_4": 338
    },
    {
        "number": 4346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 1, \"Expected 1, got {}\".format(solution(\"2\")) # Test 1\nassert solution(\"4\") == 3, \"Expected 3, got {}\".format(solution(\"4\")) # Test 2\nassert solution(\"8\") == 1260, \"Expected 1260, got {}\".format(solution(\"8\")) # Test 3\nassert solution(\"20\") == 12164510040883200, \"Expected 12164510040883200, got {}\".format(solution(\"20\")) # Test 4",
        "num_ids_2": 54,
        "num_ids_4": 148
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1\nassert solution(4) == 3\nassert solution(8) == 1260\nassert solution(20) == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"4\") == 3\nassert solution(\"8\") == 1260\nassert solution(\"20\") == 12164510040883200",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\n",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 1, \"Test 1 failed.\"\nassert solution(4) == 3, \"Test 2 failed.\"\nassert solution(8) == 1260, \"Test 3 failed.\"\nassert solution(20) == 12164510040883200, \"Test 4 failed.\"",
        "num_ids_2": 32,
        "num_ids_4": 84
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(15, 3) == \"cccbbabaccbc\"\nassert solution(15, 9) == \"cccccc\"\nassert solution(1, 1) == \"def solution(stdin: str) -> str:\"",
        "num_ids_2": 32,
        "num_ids_4": 53
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\\n\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\\n\") == \"cccccc\"\nassert solution(\"1 1\\nu\\n\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 50,
        "num_ids_4": 78
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str: pass'",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 46,
        "num_ids_4": 72
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str:\"",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(15, 3) == 'cccbbabaccbc'\nassert solution(15, 9) == 'cccccc'\nassert solution(1, 1) == 'def'",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"cccbbabaccbc\"\nassert solution(\"15 9\\ncccaabababaccbc\") == \"cccccc\"\nassert solution(\"1 1\\nu\") == \"def solution(stdin: str) -> str: pass\"",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\nassert solution('15 9\\ncccaabababaccbc') == 'cccccc'\nassert solution('1 1\\nu') == 'def solution(stdin: str) -> str: pass'",
        "num_ids_2": 46,
        "num_ids_4": 70
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is incorrect. Received: {solution(stdin)}, Expected: {expected_output}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\\n\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test failed. Input: {input}, Output: {output}\"\nfor i in range(1, 10):\n    input = input(f\"Input {i}:\\n\")\n    output = output(f\"Output {i}:\\n\")\n    assert solution(input) == output, f\"Test failed. Input: {input}, Output: {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3') == '8\\n'\nassert solution('5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5') == '20\\n'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == str(8), \"Solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"6 8\") == \"-1\"\nassert solution(\"6 8\") == \"3\"\nassert solution(\"6 8\") == \"3\"\nassert solution(\"6 8\") == \"3\"\n\nprint(solution(\"6 8\"))",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '''-1'''\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....''') == '''-1'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '''\n3\n3 4 1\n3 5 2\n3 5 1\n'''\n\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '''\n3\n2 2 1\n3 3 1\n3 4 1\n'''\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '''\n-1\n'''\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '''\n-1\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\"\"\") == 3\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\"\"\") == 3\nassert solution(\"\"\"5 5\n.*...\n***..\n.*...\n.*...\n.....\"\"\") == -1\nassert solution(\"\"\"3 3\n*.*\n.*.\n*.*\n\"\"\") == -1\nassert solution(\"\"\"1 1\n*\n*\n*\"\"\") == -1\nassert solution(\"\"\"1 1\n*\n**\n*\"\"\") == 3\nassert solution(\"\"\"1 1\n**\n*\n*\"\"\") == 3\nassert solution(\"\"\"1 1\n**\n***\n*\"\"\") == 3\nassert solution(\"\"\"1 1\n***\n***\n*\"\"\") == 3\nassert solution(\"\"\"1 1\n***\n**\n*\"\"\") == -1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........''') == '''3\n3 4 1\n3 5 2\n3 5 1'''\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....''') == '''3\n2 2 1\n3 3 1\n3 4 1'''\n\nassert solution('''3 3\n*.*\n.*.\n*.*\n''') == '''-1'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****.",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n\"\nassert solution(\"5 5\\n.*...\\n****. \\n.****\\n..**. \\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***.. \\n.*... \\n.*... \\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\"",
        "num_ids_2": 108,
        "num_ids_4": 165
    },
    {
        "number": 4350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n\"\nassert solution(\"5 5\\n.*...\\n***..\\n.*...\\n.*...\\n.....\\n\") == \"-1\"\nassert solution(\"3 3\\n*.*\\n.*.",
        "num_ids_2": 114,
        "num_ids_4": 158
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(575) == \"Yes\\n\", \"Solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Expected Yes, got: {}\".format(solution(stdin))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"Yes\", \"N=575 is also 575 when read backward, so it is a palindromic number.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"123\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"999\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(575) == 'Yes', \"N=575 is also 575 when read backward, so it is a palindromic number.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(575) == 'Yes'\n\nprint(\"Yes\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(575) == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"2 9\") == \"Bob\"\nassert solution(\"8 6\") == \"Draw\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6\") == \"Alice\\n8 is written on Alice's card, and 6 is written on Bob's card.Alice has the stronger card, and thus the output should be Alice.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('2 4') == 'Bob'\nassert solution('3 7') == 'Draw'\nassert solution('2 12') == 'Draw'\nassert solution('9 13') == 'Draw'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6\") == \"Alice\\nAlice\"\nassert solution(\"8 10\") == \"Alice\\nAlice\"\nassert solution(\"6 8\") == \"Bob\\nBob\"\nassert solution(\"6 10\") == \"Bob\\nBob\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"2 2\") == \"Bob\"\nassert solution(\"7 12\") == \"Draw\"\nassert solution(\"6 2\") == \"Draw\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"10 4\") == \"Draw\"\nassert solution(\"3 5\") == \"Bob\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"5 1\") == \"Alice\"\nassert solution(\"10 9\") == \"Bob\"\nassert solution(\"10 4\") == \"Bob\"\nassert solution(\"5 1\") == \"Alice\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6\") == \"Alice\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hello,world!\") == \"hello world!\"\nassert solution(\"12345,67890,12345\") == \"12345 67890 12345\"\nassert solution(\"test,test,test\") == \"test test test\"",
        "num_ids_2": 32,
        "num_ids_4": 90
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\", \"The solution should be 'happy newyear enjoy', but it is '{}'\".format(solution(\"happy,newyear,enjoy\"))",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"Test Passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"Hello, World!\") == \"Hello World!\"\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"1,2,3,4,5\") == \"1 2 3 4 5\"\nassert solution(\"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\") == \"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\nassert solution(\"apple,banana,cherry,date,fig,grape,orange,pear,strawberry\") == \"apple banana cherry date fig grape orange pear strawberry\"\nassert solution(\"123,456,789,012,345,678,901\") == \"123 456 789 012 345 678 901\"",
        "num_ids_2": 32,
        "num_ids_4": 86
    },
    {
        "number": 4353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 0\\n0 0\\n-1 0\\n1 0') == '2\\n1\\n'\nassert solution('3 3\\n3 0\\n1 0\\n2 0\\n0 0\\n2 0') == '3\\n2\\n'\nassert solution('4 4\\n2 1\\n3 0\\n1 1\\n0 0\\n2 0') == '2\\n1\\n'\nassert solution('5 5\\n4 2\\n1 0\\n1 1\\n0 0\\n0 1') == '1\\n1\\n'\n",
        "num_ids_2": 80,
        "num_ids_4": 164
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n1 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"3 3\\n-2 1\\n0 0\\n1 0\") == \"1\\n2\\n\"\nassert solution(\"2 1\\n1 0\\n0 0\\n-1 0\") == \"2\\n1\\n\"\nassert solution(\"5 5\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\\n1\\n2\\n3\\n4\\n\"\n",
        "num_ids_2": 71,
        "num_ids_4": 150
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"1\\n5\\n7\\n9\\n\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\\n\") == \"1\\n5\\n7\\n9\\n\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"1\\n5\\n7\\n9\\n10\\n\"\n",
        "num_ids_2": 78,
        "num_ids_4": 214
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}\"\n\nN = int(stdin.readline().strip())\nM = int(stdin.readline().strip())\n\na_list = list(map(int, stdin.readline().strip().split()))\nb_list = list(map(int, stdin.readline().strip().split()))\n\nresult = []\nfor i in range(N):\n    min_index = i\n    min_distance = float('inf')\n    for j in range(1, M+1):\n        distance = abs(a_list[i] - b_list[j]) + abs(a_list[i] - b_list[j-1])\n        if distance < min_distance:\n            min_index = j\n            min_distance = distance\n    result.append(min_index)\n\nprint(*result)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"\nassert solution(\"5 5\\n1 2\\n3 4\\n5 6\\n2 3\\n\") == \"1\\n4\\n\"\nassert solution(\"2 5\\n1 2\\n3 4\\n5 6\\n\") == \"1\\n3\\n\"\nassert solution(\"3 3\\n2 4\\n5 6\\n\") == \"2\\n4\\n\"",
        "num_ids_2": 79,
        "num_ids_4": 142
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n1'\nassert solution(input()) == '1\\n2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''2\n1'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2\\n1\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2\\n1\\n\"\nassert solution(\"5 3\\n1 0\\n4 0\\n3 0\\n2 0\") == \"3\\n1\\n2\\n\"\nassert solution(\"6 4\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\") == \"3\\n2\\n1\\n\"\nassert solution(\"5 4\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\") == \"4\\n3\\n2\\n1\\n\"\nassert solution(\"1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 202
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '14', \"The correct output is: 14\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 14, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '14\\n', \"Expected output '14', got '{}'\".format(solution(stdin))\nprint(\"All tests passed\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 14, \"Test failed: The function should return 14, but it returned {}\".format(solution(2))\nprint(\"Test passed.\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"a: \")) == 14, \"Incorrect output. Expected 14, but got {}.\"\nassert solution(input(\"a: \")) == 14, \"Incorrect output. Expected 14, but got {}.\"\nassert solution(input(\"a: \")) == 14, \"Incorrect output. Expected 14, but got {}.\"\nassert solution(input(\"a: \")) == 14, \"Incorrect output. Expected 14, but got {}.\"\nassert solution(input(\"a: \")) == 14, \"Incorrect output. Expected 14, but got {}.\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"14\", \"Solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 14\nassert solution(input()) == 14.0\nassert solution(input()) == 14.0\nassert solution(input()) == 14.0\nassert solution(input()) == 14.0\nassert solution(input()) == 14.0",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == 14\nassert solution(\"5\") == 15\nassert solution(\"0\") == 0\nassert solution(\"10\") == 100\nassert solution(\"1\") == 1\nassert solution(\"-5\") == -1\nassert solution(\"abc\") == \"Invalid input\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"14\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n#.#\\n.#. \\n#.#\\n#. \\n.#') == 'Yes\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n#.#\\n.#. \\n#.#\\n#. \\n.#\") == \"Yes\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n#.#\\n.#. \\n#.#') == 'Yes'\nassert solution('3 2\\n#.#\\n.#. \\n#.#') == 'No'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#. \\n.#\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#. \\n.#\") == \"No\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#. \\n.#\") == \"No\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Yes', 'Test failed'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 2\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Yes'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nprint(\"All tests passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 5 2\") == \"53\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Expected '53', got '{}' instead.\".format(solution(\"1 5 2\"))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '53\\n', \"The amount of the allowance will be 53 when the panels are arranged as 52+1, and this is the maximum possible amount.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '53'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\", \"Expected output: 53\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\\n4980\\n7980\\n6980\\n\") == 15950\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n100\\n200\\n\") == 26950\nassert solution(stdin=\"1\\n4980\\n7980\\n6980\\n\") == 15950\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n500\\n200\\n\") == 56950\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n100\\n200\\n\") == 15950\nassert solution(stdin=\"3\\n4980\\n7980\\n6980\\n\") == \"15950\"\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n100\\n200\\n\") == \"26950\"\nassert solution(stdin=\"1\\n4980\\n7980\\n6980\\n\") == \"15950\"\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n500\\n200\\n\") == \"56950\"\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n100\\n200\\n\") == \"15950\"\nassert solution(stdin=\"3\\n4980\\n7980\\n6980\\n\") == \"Wrong Answer\"\nassert solution(stdin=\"5\\n4980\\n7980\\n6980\\n100\\n200\\n\") == \"Wrong Answer\"\nassert solution(stdin=\"1\\n4980\\n7980\\n6980\\n\") == \"Wrong Answer\"",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"Output should be 15950\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4980\\n7980\\n6980') == '15950\\n'\nassert solution('1\\n500\\n300') == '4000\\n'\nassert solution('5\\n1000\\n2000\\n3000\\n4000') == '20750\\n'\n",
        "num_ids_2": 59,
        "num_ids_4": 99
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\\n\") == \"15950\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the value of N: \")) == \"15950\", \"The 7980-yen item gets the discount and the total is 4980 + 7980 / 2 + 6980 = 15950 yen.\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == 15950, \"Incorrect output\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"15950\\n\", \"Output should be 15950.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4980\\n7980\\n6980\") == \"15950\\n\", \"The solution should be 15950.\"\nassert solution(\"3\\n4980\\n7980\\n6980\") == \"15950.0\\n\", \"The solution should be 15950.0.\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\" # sample output\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"215\", \"The output is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"17\\n23\\n45\\n7\") == \"47\"\nassert solution(\"27\\n31\\n29\\n30\") == \"43\"\nassert solution(\"35\\n30\\n25\\n20\") == \"45\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"",
        "num_ids_2": 52,
        "num_ids_4": 100
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nprint(\"All tests passed successfully\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"\nassert solution(stdin=\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\\n\"\nassert solution(\"4\\n10 30\\n\") == \"7.5\\n\"\nassert solution(\"10\\n10 30\\n\") == \"7.5\\n\"\nassert solution(\"30\\n10 30\\n\") == \"7.5\\n\"\nassert solution(\"50\\n10 30\\n\") == \"7.5\\n\"\nassert solution(\"4\\n10 50 30\\n\") == \"7.5\\n\"\nassert solution(\"10\\n10 50 30\\n\") == \"7.5\\n\"\nassert solution(\"30\\n10 50 30\\n\") == \"7.5\\n\"\nassert solution(\"50\\n10 50 30\\n\") == \"7.5\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 94
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7.5\"\nassert solution(input()) == \"7.49999\"\nassert solution(input()) == \"7.49998\"\nassert solution(input()) == \"7.49997\"\nassert solution(input()) == \"7.49996\"\nassert solution(input()) == \"7.49995\"\nassert solution(input()) == \"7.49994\"\nassert solution(input()) == \"7.49993\"\nassert solution(input()) == \"7.49992\"\nassert solution(input()) == \"7.49991\"\nassert solution(input()) == \"7.49990\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7.5\"\nprint(\"7.50001\", \"7.49999\", \"7.49998\", \"7.49997\", \"7.49996\", sep=\"\\n\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n10 30') == '7.50001'\nassert solution('2\\n10 20') == '7.49999'\nassert solution('2\\n20 10') == '7.50001'\nassert solution('2\\n10 100') == '7.50001'\nassert solution('2\\n50 100') == '7.50001'",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'2\\n10 30') == '7.5\\n'\nassert solution(b'4\\n-20 50') == '-5.0\\n'\nassert solution(b'5\\n1000000') == '1.000000\\n'",
        "num_ids_2": 47,
        "num_ids_4": 77
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"3\\n10 30 20\") == \"7.5\"\nassert solution(\"4\\n10 30 20 40\") == \"7.5\"\nassert solution(\"5\\n10 30 20 40 50\") == \"7.5\"\nassert solution(\"6\\n10 30 20 40 50 60\") == \"7.5\"\nassert solution(\"7\\n10 30 20 40 50 60 70\") == \"7.5\"\nassert solution(\"8\\n10 30 20 40 50 60 70 80\") == \"7.5\"\nassert solution(\"9\\n10 30 20 40 50 60 70 80 90\") == \"7.5\"\nassert solution(\"10\\n10 30 20 40 50 60 70 80 90 100\") == \"7.5\"\nassert solution(\"11\\n10 30 20 40 50 60 70 80 90 100 110\") == \"7.5\"\nassert solution(\"12\\n10 30 20 40 50 60 70 80 90 100 110 120\") == \"7.5\"\nassert solution(\"13\\n10 30 20 40 50 60 70 80 90 100 110 120 130\") == \"7.5\"\nassert solution(\"14\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140\") == \"7.5\"\nassert solution(\"15\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150\") == \"7.5\"\nassert solution(\"16\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150 160\") == \"7.5\"\nassert solution(\"17\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150 160 170\") == \"7.5\"\nassert solution(\"18\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180\") == \"7.5\"\nassert solution(\"19\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190\") == \"7.5\"\nassert solution(\"20\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200\") == \"7.5\"\nassert solution(\"21\\n10 30 20 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 2",
        "num_ids_2": 41,
        "num_ids_4": 94
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\\n\", \"The solution should be 7.5\"\nassert solution(\"2\\n20 10\\n\") == \"20.0\\n\", \"The solution should be 20.0\"\nassert solution(\"2\\n10 20\\n\") == \"10.0\\n\", \"The solution should be 10.0\"\nassert solution(\"2\\n1000 20\\n\") == \"999.0\\n\", \"The solution should be 999.0\"\nassert solution(\"2\\n100 1000\\n\") == \"0.001\\n\", \"The solution should be 0.001\"",
        "num_ids_2": 68,
        "num_ids_4": 142
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nprint(\"7.50001, 7.49999, and so on will also be accepted.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10 30\") == \"7.50001\"\nassert solution(\"3\\n10 20 30\") == \"6.66667\"\nassert solution(\"4\\n1000000000 1 2 3 4\") == \"1491790325.100000\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 49,
        "num_ids_4": 116
    },
    {
        "number": 4360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '7.50001', 'Test case 1 failed'\nassert solution(input()) == '7.49999', 'Test case 2 failed'\nassert solution(input()) == '7.49998', 'Test case 3 failed'\nassert solution(input()) == '7.49997', 'Test case 4 failed'\nassert solution(input()) == '7.49996', 'Test case 5 failed'",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str=\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(input_str=\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(input_str=\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(input_str=\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n\") == \"0\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"10 5\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n\") == \"2\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(\"5 5\\n10\\n15\\n11\\n14\\n12\") == \"0\"\nassert solution(\"5 5\\n10\\n15\\n11\\n14\\n12\\n10\") == \"1\"\nassert solution(\"5 5\\n10\\n15\\n11\\n14\\n12\\n10\\n10\") == \"2\"",
        "num_ids_2": 64,
        "num_ids_4": 140
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"100 100\\n20\\n100\\n50\\n30\\n\") == \"50\\n\"\nassert solution(\"10 1000\\n100\\n100\\n50\\n50\\n\") == \"50\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 113
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"B\"\nassert solution(\"\u03b3\") == \"C\"\nassert solution(\"\u03b4\") == \"D\"\nassert solution(\"\u03b5\") == \"E\"\nassert solution(\"\u03b6\") == \"F\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Test case 1 failed.\"\nassert solution(\"\u03b2\") == \"B\", \"Test case 2 failed.\"\nassert solution(\"\u03b3\") == \"G\", \"Test case 3 failed.\"\nassert solution(\"\u03b4\") == \"D\", \"Test case 4 failed.\"\nassert solution(\"\u03b5\") == \"E\", \"Test case 5 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Input is incorrect\"\nassert solution(\"B\") == \"A\", \"Input is incorrect\"\nassert solution(\"b\") == \"A\", \"Input is incorrect\"\nassert solution(\"B\u00c1\") == \"A\", \"Input is incorrect\"\nassert solution(\"bA\") == \"a\", \"Input is incorrect\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"A\"\nassert solution(\"B\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Input is not in uppercase format\"\nassert solution(\"\u03b2\") == \"a\", \"Input is not in lowercase format\"\nassert solution(\"a\") == \"A\", \"Input is not in uppercase format\"\nassert solution(\"b\") == \"a\", \"Input is not in lowercase format\"\nassert solution(\"C\") == \"Error: Input is not in uppercase format\", \"Input is not in uppercase format\"\nassert solution(\"D\") == \"Error: Input is not in lowercase format\", \"Input is not in lowercase format\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"b\") == \"a\"\nassert solution(\"c\") == \"A\"\nassert solution(\"d\") == \"a\"\nassert solution(\"e\") == \"A\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b2\") == \"B\"\nassert solution(\"\u03b1\") == \"A\"\nassert solution(\"\u03b1\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\u03b1\") == \"A\", \"The output should be 'A'.\"\nassert solution(\"B\") == \"A\", \"The output should be 'A'.\"\nassert solution(\"b\") == \"a\", \"The output should be 'a'.\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"1 1\\n\") == \"6\\n\"\nassert solution(\"2 3\\n\") == \"6\\n\"\nassert solution(\"3 2\\n\") == \"6\\n\"\nassert solution(\"1 3\\n\") == \"10\\n\"\nassert solution(\"1 100\\n\") == \"240\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the value of K and S: \")) == \"6\\n\", \"The output is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"  # Expected Output: \"6\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2, 2) == '6'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n\") == \"6\"\nassert solution(\"5 10\\n\") == \"0\"\nassert solution(\"10 20\\n\") == \"3\"\nassert solution(\"25 30\\n\") == \"2\"\nassert solution(\"20 20\\n\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2 2\\n') == '6\\n'\nassert solution(stdin='3 3\\n') == '12\\n'\nassert solution(stdin='5 4\\n') == '31\\n'\nassert solution(stdin='8 6\\n') == '170\\n'\nassert solution(stdin='10 8\\n') == '3400\\n'\nassert solution(stdin='12 8\\n') == '4200\\n'\n",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('01234') == 'MMYY'\nassert solution('12345') == 'AMBIGUOUS'\nassert solution('6789') == 'NA'",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM', \"Test case 1 failed: The output is not correct.\"\nassert solution('0101') == 'MMYY', \"Test case 2 failed: The output is not correct.\"\nassert solution('1234') == 'AMBIGUOUS', \"Test case 3 failed: The output is not correct.\"\nassert solution('12345') == 'NA', \"Test case 4 failed: The output is not correct.\"\nassert solution('123456789') == 'NA', \"Test case 5 failed: The output is not correct.\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"Invalid input: 1905\"\nassert solution(\"1105\") == \"MMYY\", \"Invalid input: 1105\"\nassert solution(\"1901\") == \"YYMM\", \"Invalid input: 1901\"\nassert solution(\"0501\") == \"MMYY\", \"Invalid input: 0501\"\nassert solution(\"1201\") == \"AMBIGUOUS\", \"Invalid input: 1201\"\nassert solution(\"1900\") == \"NA\", \"Invalid input: 1900\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0123\") == \"MMYY\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"5678\") == \"NA\"\nassert solution(\"110\") == \"NA\"\nassert solution(\"22\") == \"NA\"\nassert solution(\"123\") == \"NA\"\nassert solution(\"000\") == \"NA\"\nassert solution(\"001\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1905\") == \"MMYY\"\nassert solution(\"1234\") == \"NA\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0102\") == \"MMYY\"\nassert solution(\"1234\") == \"AMBIGUOUS\"\nassert solution(\"12345\") == \"NA\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"Test failed\"  # Test case 1\nassert solution(\"0123\") == \"MMYY\", \"Test failed\"  # Test case 2\nassert solution(\"1234\") == \"AMBIGUOUS\", \"Test failed\"  # Test case 3\nassert solution(\"5678\") == \"NA\", \"Test failed\"  # Test case 4\nassert solution(\"9012\") == \"NA\", \"Test failed\"  # Test case 5",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1234\") == \"NA\"\nassert solution(\"0101\") == \"MMYY\"\nassert solution(\"0501\") == \"AMBIGUOUS\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0519\") == \"MMYY\"\nassert solution(\"190519\") == \"AMBIGUOUS\"\nassert solution(\"190501\") == \"NA\"\n\nfrom typing import List\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\\n\") == \"2\\n\"\nassert solution(stdin=\"5\\n\") == \"14\\n\"\nassert solution(stdin=\"10\\n\") == \"5824\\n\"\nassert solution(stdin=\"100\\n\") == \"1073741824\\n\"\nassert solution(stdin=\"101\\n\") == \"1073741825\\n\"\nassert solution(stdin=\"1000\\n\") == \"10495266345\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 80
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2, \"The output is not as expected\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"2\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"5\\n\") == \"6\\n\"\nassert solution(\"10\\n\") == \"36\\n\"\nassert solution(\"15\\n\") == \"120\\n\"\nassert solution(\"20\\n\") == \"504\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"2\", \"Input is not valid\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\\n\", \"Solution should return '2\\n'\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2\"\nassert solution(10) == \"6\"\nassert solution(0) == \"0\"\nassert solution(1) == \"0\"\nassert solution(2) == \"2\"\nassert solution(5) == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"2\\n\", \"Output should be 2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\\n\"\nassert solution(\"5\") == \"3\\n\"\nassert solution(\"10\") == \"4\\n\"\nassert solution(\"20\") == \"5\\n\"\nassert solution(\"100\") == \"10\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"10 20\") == \"22\"\nassert solution(\"20 24\") == \"24\"\nassert solution(\"25 0\") == \"24\"\nassert solution(\"25 30\") == \"24\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"21\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 12\") == \"21\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"7 3\") == \"11\"\nassert solution(\"0 24\") == \"24\"\nassert solution(\"12 0\") == \"0\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"21\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 12') == '21'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"17 8\") == \"25\"\nassert solution(\"25 36\") == \"36\"\nassert solution(\"23 22\") == \"22\"\nassert solution(\"10 1\") == \"10\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='9 12') == '21'\nprint(\"All tests passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 40\") == \"40\"\nassert solution(\"5 4000\") == \"2200\"\nassert solution(\"10 6500\") == \"22650\"\nassert solution(\"100 10000\") == \"10000\"",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"Test Case 1 Failed\"\nassert solution(\"10 2000\") == \"10000\\n\", \"Test Case 2 Failed\"\nassert solution(\"100 2000\") == \"20000\\n\", \"Test Case 3 Failed\"\nassert solution(\"1000 2000\") == \"20000\\n\", \"Test Case 4 Failed\"\nassert solution(\"10000 20000\") == \"20000\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 56,
        "num_ids_4": 117
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"3 4001\") == \"4001\"\nassert solution(\"1 1000\") == \"0\"\nassert solution(\"1 1001\") == \"5001\"\nassert solution(\"1 2000\") == \"10000\"\nassert solution(\"2 2001\") == \"30001\"",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nprint(\"All test cases passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"The output is incorrect\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('5 3999') == '4999'\nassert solution('10 4838') == '5962'\nassert solution('15 5687') == '6725'\nassert solution('20 6556') == '7470'",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\\n\", \"Input not correct\"\nassert solution(\"1 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"2 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"3 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"4 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"5 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"6 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"7 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"8 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"9 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"10 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"11 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"12 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"13 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"14 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"15 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"16 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"17 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"18 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"19 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"20 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"21 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"22 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"23 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"24 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"25 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"26 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"27 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"28 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"29 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"30 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"31 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"32 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"33 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"34 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"35 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"36 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"37 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"38 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"39 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"40 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"41 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"42 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"43 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"44 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"45 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"46 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"47 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"48 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"49 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"50 1\") == \"1\\n\", \"Input not correct\"\nassert solution(\"51 1\") == \"",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"Output should be 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"123 4\") == \"4\"\nassert solution(\"9876543210 5\") == \"16\"\nassert solution(\"12345678901234567890 16\") == \"32\"\nassert solution(\"123456789012345678901234567890 32\") == \"32\"",
        "num_ids_2": 27,
        "num_ids_4": 82
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4', 'Solution does not pass the test'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\") == \"4\", \"Test case 1 failed\"\nassert solution(\"123 3\") == \"3\", \"Test case 2 failed\"\nassert solution(\"1000000 10\") == \"33\", \"Test case 3 failed\"\nassert solution
        "num_ids_2": 41,
        "num_ids_4": 1027
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 2\") == \"4\", \"Test case 1 failed\"\nassert solution(\"123 3\") == \"3\", \"Test case 2 failed\"\nassert solution(\"12345 4\") == \"5\", \"Test case 3 failed\"\nassert solution(\"1234567890 5\") == \"12\", \"Test case 4 failed\"\nassert solution(\"12345678901234567890 13\") == \"34\", \"Test case 5 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 93
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"11 2\") == \"4\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"123 2\") == \"3\"\nassert solution(\"456 3\") == \"4\"\nassert solution(\"789 3\") == \"5\"\nassert solution(\"0 1\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\", \"Incorrect output\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\", \"Takahashi wants to print a document with N pages double-sided, where two pages of data can be printed on one sheet of paper. At least how many sheets of paper does he need?\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3\\n', \"The solution should return the correct output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\", \"Solution should output 3.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\", \"Incorrect output. Expected '3', got '{}'.\".format(solution(stdin))\nprint(\"All tests passed.\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5\") == \"3\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"3\\n\", \"Your code is incorrect. It should return the output '3' when given the input '5'.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"10\") == \"30\\n\"\nassert solution(\"50\") == \"105\\n\"\nassert solution(\"-5\") == \"Invalid input\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\nassert solution(\"5 5\") == \":(\"\nassert solution(\"2 2\") == \":(\"",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 4\") == \"Yay!\"\nassert solution(\"2 3\") == \"Yay!\"\nassert solution(\"3 2\") == \"Yay!\"\nassert solution(\"4 1\") == \"Yay!\"\nassert solution(\"5 1\") == \"Yay!\"\nassert solution(\"6 2\") == \"Yay!\"\nassert solution(\"7 1\") == \"Yay!\"\nassert solution(\"8 2\") == \"Yay!\"\nassert solution(\"9 1\") == \"Yay!\"\nassert solution(\"10 2\") == \"Yay!\"\nassert solution(\"11 1\") == \"Yay!\"\nassert solution(\"12 2\") == \"Yay!\"\nassert solution(\"13 1\") == \"Yay!\"\nassert solution(\"14 2\") == \"Yay!\"\nassert solution(\"15 1\") == \"Yay!\"\nassert solution(\"16 2\") == \"Yay!\"\nassert solution(\"17 1\") == \"Yay!\"\nassert solution(\"18 2\") == \"Yay!\"\nassert solution(\"19 1\") == \"Yay!\"\nassert solution(\"20 2\") == \"Yay!\"\nassert solution(\"21 1\") == \"Yay!\"\nassert solution(\"22 2\") == \"Yay!\"\nassert solution(\"23 1\") == \"Yay!\"\nassert solution(\"24 2\") == \"Yay!\"\nassert solution(\"25 1\") == \"Yay!\"\nassert solution(\"26 2\") == \"Yay!\"\nassert solution(\"27 1\") == \"Yay!\"\nassert solution(\"28 2\") == \"Yay!\"\nassert solution(\"29 1\") == \"Yay!\"\nassert solution(\"30 2\") == \"Yay!\"\nassert solution(\"31 1\") == \"Yay!\"\nassert solution(\"32 2\") == \"Yay!\"\nassert solution(\"33 1\") == \"Yay!\"\nassert solution(\"34 2\") == \"Yay!\"\nassert solution(\"35 1\") == \"Yay!\"\nassert solution(\"36 2\") == \"Yay!\"\nassert solution(\"37 1\") == \"Yay!\"\nassert solution(\"38 2\") == \"Yay!\"\nassert solution(\"39 1\") == \"Yay!\"\nassert solution(\"40 2\") == \"Yay!\"\nassert solution(\"41 1\") == \"Yay!\"\nassert solution(\"42 2\") == \"Yay!\"\nassert solution(\"43 1\") == \"Yay!\"\nassert solution(\"44 2\") == \"Yay!\"\nassert solution(\"45 1\") == \"Yay!\"\nassert solution(\"46 2\") == \"Yay!\"\nassert solution(\"47 1\") == \"Yay!\"\nassert solution(\"48 2\") == \"Yay!\"\nassert solution(\"49 1\") == \"Yay!\"\nassert solution(\"50 2\") == \"Yay!\"\nassert solution(\"51 1\") == \"Yay!\"\nassert solution(\"52 2\") == \"Yay!\"\nassert solution(\"53 1\") == \"Yay!\"\nassert solution(\"54 2\") == \"Yay!\"\nassert solution(\"55 1\") == \"Yay!\"\nassert solution(\"56 2\") == \"Yay!\"\nassert solution(\"57 1\") == \"Yay!\"\nassert solution(\"58 2\") == \"Yay!\"\nassert solution(\"59 1\") == \"Yay!\"\nassert solution(\"60 2\") == \"Yay!\"\nassert solution(\"61 1\") == \"Yay!\"\nassert solution(\"62 2\") == \"Yay!\"\nassert solution(\"63 1\") == \"Yay!\"\nassert solution(\"64 2\") == \"Yay!\"\nassert solution(\"65 1\") == \"Yay!\"\nassert solution(\"66 2\") == \"Yay!\"\nassert solution(\"67 1\") == \"Yay!\"\nassert solution(\"68 2\") == \"Yay!\"\nassert solution(\"69 1\") == \"Yay!\"\nassert solution(\"70 2\") == \"Yay!\"\nassert solution(\"71 1\") == \"Yay!\"\nassert solution(\"72 2\") == \"Yay!\"\nassert solution(\"73 1\") == \"Yay!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"5 4\\n\")) == 'Yay!'\nassert solution(input(\"5 3\\n\")) == ':('\nassert solution(input(\"6 10\\n\")) == 'Yay!'\nassert solution(input(\"5 10\\n\")) == ':('\nassert solution(input(\"10 10\\n\")) == 'Yay!'\nassert solution(input(\"5 6\\n\")) == ':('",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"Yay!\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"10 16\") == \"Yay!\"\nassert solution(\"3 7\") == \"Yay!\"\nassert solution(\"17 16\") == \"Yay!\"\nassert solution(\"10 2\") == \"Yay!\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"3 6\") == \":(\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yay!\"\nassert solution(\"3 1\") == \":(\"\nassert solution(\"1 10\") == \":(\"\nassert solution(\"5 2\") == \"Yay!\"\nassert solution(\"3 11\") == \"Yay!\"\nassert solution(\"2 3\") == \"Yay!\"\nassert solution(\"6 4\") == \"Yay!\"\nassert solution(\"4 5\") == \"Yay!\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"2 7\") == \":(\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\", \"Test 1 failed.\"\nassert solution(\"1234567890\") == \"0\", \"Test 2 failed.\"\nassert solution(\"1234567891\") == \"34\", \"Test 3 failed.\"\nassert solution(\"1234567892\") == \"0\", \"Test 4 failed.\"\nassert solution(\"1234567893\") == \"34\", \"Test 5 failed.\"\nassert solution(\"1234567894\") == \"0\", \"Test 6 failed.\"\nassert solution(\"1234567895\") == \"34\", \"Test 7 failed.\"\nassert solution(\"1234567896\") == \"0\", \"Test 8 failed.\"\nassert solution(\"1234567897\") == \"34\", \"Test 9 failed.\"\nassert solution(\"1234567898\") == \"0\", \"Test 10 failed.\"\nassert solution(\"1234567899\") == \"34\", \"Test 11 failed.\"\nassert solution(\"1234567900\") == \"0\", \"Test 12 failed.\"\nassert solution(\"1234567901\") == \"34\", \"Test 13 failed.\"\nassert solution(\"1234567902\") == \"0\", \"Test 14 failed.\"\nassert solution(\"1234567903\") == \"34\", \"Test 15 failed.\"\nassert solution(\"1234567904\") == \"0\", \"Test 16 failed.\"\nassert solution(\"1234567905\") == \"34\", \"Test 17 failed.\"\nassert solution(\"1234567906\") == \"0\", \"Test 18 failed.\"\nassert solution(\"1234567907\") == \"34\", \"Test 19 failed.\"\nassert solution(\"1234567908\") == \"0\", \"Test 20 failed.\"\nassert solution(\"1234567909\") == \"34\", \"Test 21 failed.\"\nassert solution(\"1234567910\") == \"0\", \"Test 22 failed.\"\nassert solution(\"1234567911\") == \"34\", \"Test 23 failed.\"\nassert solution(\"1234567912\") == \"0\", \"Test 24 failed.\"\nassert solution(\"1234567913\") == \"34\", \"Test 25 failed.\"\nassert solution(\"1234567914\") == \"0\", \"Test 26 failed.\"\nassert solution(\"1234567915\") == \"34\", \"Test 27 failed.\"\nassert solution(\"1234567916\") == \"0\", \"Test 28 failed.\"\nassert solution(\"1234567917\") == \"34\", \"Test 29 failed.\"\nassert solution(\"1234567918\") == \"0\", \"Test 30 failed.\"\nassert solution(\"1234567919\") == \"34\", \"Test 31 failed.\"\nassert solution(\"1234567920\") == \"0\", \"Test 32 failed.\"\nassert solution(\"1234567921\") == \"34\", \"Test 33 failed.\"\nassert solution(\"1234567922\") == \"0\", \"Test 34 failed.\"\nassert solution(\"1234567923\") == \"34\", \"Test 35 failed.\"\nassert solution(\"1234567924\") == \"0\", \"Test 36 failed.\"\nassert solution(\"1234567925\") == \"34\", \"Test 37 failed.\"\nassert solution(\"1234567926\") == \"0\", \"Test 38 failed.\"\nassert solution(\"1234567927\") == \"34\", \"Test 39 failed.\"\n",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1111111111\") == \"0\"\nassert solution(\"1111111112\") == \"2\"\nassert solution(\"1111111113\") == \"2\"\nassert solution(\"1111111114\") == \"1\"\nassert solution(\"1111111115\") == \"3\"\nassert solution(\"1111111116\") == \"1\"\nassert solution(\"1111111117\") == \"2\"\nassert solution(\"1111111118\") == \"2\"\nassert solution(\"1111111119\") == \"1\"\nassert solution(\"1111111120\") == \"2\"\nassert solution(\"1111111121\") == \"3\"\nassert solution(\"1111111122\") == \"3\"\nassert solution(\"1111111123\") == \"2\"\nassert solution(\"1111111124\") == \"2\"\nassert solution(\"1111111125\") == \"1\"\nassert solution(\"1111111126\") == \"2\"\nassert solution(\"1111111127\") == \"2\"\nassert solution(\"1111111128\") == \"1\"\nassert solution(\"1111111129\") == \"2\"\nassert solution(\"1111111130\") == \"3\"\nassert solution(\"1111111131\") == \"3\"\nassert solution(\"1111111132\") == \"2\"\nassert solution(\"1111111133\") == \"2\"\nassert solution(\"1111111134\") == \"1\"\nassert solution(\"1111111135\") == \"3\"\nassert solution(\"1111111136\") == \"2\"\nassert solution(\"1111111137\") == \"2\"\nassert solution(\"1111111138\") == \"1\"\nassert solution(\"1111111139\") == \"2\"\nassert solution(\"1111111140\") == \"3\"\nassert solution(\"1111111141\") == \"3\"\nassert solution(\"1111111142\") == \"2\"\nassert solution(\"1111111143\") == \"2\"\nassert solution(\"1111111144\") == \"1\"\nassert solution(\"1111111145\") == \"3\"\nassert solution(\"1111111146\") == \"2\"\nassert solution(\"1111111147\") == \"2\"\nassert solution(\"1111111148\") == \"1\"\nassert solution(\"1111111149\") == \"2\"\nassert solution(\"1111111150\") == \"3\"\nassert solution(\"1111111151\") == \"3\"\nassert solution(\"1111111152\") == \"2\"\nassert solution(\"1111111153\") == \"2\"\nassert solution(\"1111111154\") == \"1\"\nassert solution(\"1111111155\") == \"3\"\nassert solution(\"1111111156\") == \"2\"\nassert solution(\"1111111157\") == \"2\"\nassert solution(\"1111111158\") == \"1\"\nassert solution(\"1111111159\") == \"2\"\nassert solution(\"1111111160\") == \"3\"\nassert solution(\"1111111161\") == \"3\"\nassert solution(\"1111111162\") == \"2\"\nassert solution(\"1111111163\") == \"2\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567876\") == \"34\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"34\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1234567876') == '34'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 12 6\\n\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\\n\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\\n\") == \"12 13\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 130
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 12 6\\n\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\\n\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\\n\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\\n\") == \"12 13\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 130
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\", \"Expected 5 3, got %s\" % solution(\"3\\n3 12 6\")\nassert solution(\"2\\n2 9\") == \"1 7\", \"Expected 1 7, got %s\" % solution(\"2\\n2 9\")\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\", \"Expected 2999999987 2, got %s\" % solution(\"7\\n2 1000000000 4 6 8 4 2\")\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\", \"Expected 12 13, got %s\" % solution(\"6\\n13 52 0 13 26 52\")",
        "num_ids_2": 82,
        "num_ids_4": 244
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 122
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\"\nassert solution(\"2\\n2 9\") == \"1 7\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\"",
        "num_ids_2": 37,
        "num_ids_4": 114
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2999999987 2'\nassert solution() == '12 13'\nassert solution() == '2 7'",
        "num_ids_2": 31,
        "num_ids_4": 41
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 12 6\") == \"5 3\\n\", \"1st example\"\nassert solution(\"2\\n2 9\") == \"1 7\\n\", \"2nd example\"\nassert solution(\"7\\n2 1000000000 4 6 8 4 2\") == \"2999999987 2\\n\", \"3rd example\"\nassert solution(\"6\\n13 52 0 13 26 52\") == \"12 13\\n\", \"4th example\"",
        "num_ids_2": 51,
        "num_ids_4": 142
    },
    {
        "number": 4372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"1\"\nassert solution(5) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(5) == \"2\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1\"\nassert solution(5) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Incorrect output: {solution(stdin)}\\nExpected output: {expected}\"\n\nclass Solution:\n    def max_days(self, n: int, a: List[int]) -> int:\n        max_days = 0\n        for i in range(n):\n            if sum(a[:i+1]) > 0:\n                max_days += 1\n        return max_days",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('3') == '2'\nassert solution('5') == '3'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 4 1\\n3\\n1 1 1\\n5\\n1 1 1 2 2\") == \"3\"\nassert solution(\"3\\n1 1 1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"",
        "num_ids_2": 66,
        "num_ids_4": 87
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution for the given input does not match the expected output: {solution(stdin)}!= {expected}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 4 1\\n1\\n3\\n1 1 1\\n1\") == \"3\"\nassert solution(\"3\\n1 1 1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1 1 1 2 2\\n2\\n2\") == \"2\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n1\\n3\\n1\\n3\\n\") == \"3\"\nassert solution(\"4\\n3\\n1\\n3\\n1\\n3\\n\") == \"3\"\nassert solution(\"3\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"5\\n1\\n1\\n2\\n2\\n\") == \"2\"",
        "num_ids_2": 54,
        "num_ids_4": 99
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output is wrong. Expected: {expected_output}, Actual: {solution(input())}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n4 2\\n\"\nassert solution() == \"1\\n1 2\\n\"\nassert solution() == \"2\\n1 2\\n\"\nassert solution() == \"1\\n1 2\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n4 2\\n\"\nassert solution(input()) == \"1\\n1 2\\n\"\nassert solution(input()) == \"2\\n1 2\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"Input\\n4 2\\n1 2\\n2 3\\n\\nOutput\\n2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\") == \"2\"\nassert solution(\"Input\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\") == \"1\"\nassert solution(\"Input\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\") == \"2\"",
        "num_ids_2": 148,
        "num_ids_4": 237
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\\n\\n2\") == \"2\"\nassert solution(\"2 0\\n\\n3 2\\n1 3\\n2 3\\n\") == \"1\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 2\\n1 2\\n2 3\\n\\n2 0\\n\\n3 2\\n1 3\\n2 3\\n\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 82,
        "num_ids_4": 154
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n3 2\\n1 3\\n4 2\\n\") == \"2\\n4 2\\n\"\nassert solution(\"4 2\\n2 0\\n1 3\\n3 2\\n\") == \"2\\n4 2\\n\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"4 2\\n2 0\\n1 3\\n3 2\\n\") == \"1\\n4 2\\n\"\nassert solution(\"2 0\\n3 2\\n1 3\\n4 2\\n\") == \"1\\n4 2\\n\"\n\nsolution(\"4 2\\n2 0\\n1 3\\n3 2\\n\")",
        "num_ids_2": 72,
        "num_ids_4": 139
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4 2\\n1 2\\n2 3\\n\") == \"2\\n4 2\\n\"\nassert solution(\"Input\\n2 0\\n\") == \"1\\n1 2\\n\"\nassert solution(\"Input\\n3 2\\n1 3\\n2 3\\n\") == \"2\\n2 3\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 92
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}, Got: {solution(stdin=input())}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n2\\n\\n3\\n3\\n3\") == \"2\"\nassert solution(\"1\\n2\\n2\\n\\n3\\n3\\n3\") == \"2\"\nassert solution(\"2\\n0\\n1\\n\\n3\\n3\\n3\") == \"1\"\nassert solution(\"3\\n2\\n1\\n\\n4\\n4\\n4\") == \"2\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2\\n2 3\\n\\nInput\\n4 2\\n1 2\\n2 3\\n\\nOutput\\n2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\") == \"2\\n4 2\\n\\nInput\\n2 0\\n\\nOutput\\n1\\n1 2\\n\\nInput\\n3 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\\n\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Output', '\\n'.join(['assert solution(input()) == \"Output\", '\\n'.join(['pass']) for _ in range(10)])",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == 11\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == 4",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5') == '11\\n'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4') == '4\\n'",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\n\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\") == \"11\"\n\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Output: {output}, but expected output: {output}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n\") == \"11\\n\"\nassert solution(\"7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n\") == \"4\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 11",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1\nassert solution == 2\nassert solution == 3",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\nprint('Correct')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == solution",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test {test_case_number} failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\\n\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\\n\") == \"1 5\\n2 1\\n2 9999999994\\n\"\n",
        "num_ids_2": 140,
        "num_ids_4": 140
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n10 15 12\\n1 9 12 23 26 37\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution(\"2 3\\n5 10000000000\\n5 6 9999999999\") == \"1 5\\n2 1\\n2 9999999994\\n\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"The solution is {solution(input_str)} but should be {output_str}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 6\n10 15 12\n1 9 12 23 26 37\n\"\"\"\n) == \"\"\"\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\"\"\"\n\nassert solution(\n\"\"\"\n2 3\n5 10000000000\n5 6 9999999999\n\"\"\"\n) == \"\"\"\n1 5\n2 1\n2 9999999994\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 6 5 4') == '2 1 3\\n'\nassert solution('40 40 40 60') == '20 20 20\\n'\nassert solution('201 101 101 200') == '1 100 100\\n'",
        "num_ids_2": 51,
        "num_ids_4": 85
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3 6 5 4) == \"2 1 3\"\nassert solution(40 40 40 60) == \"20 20 20\"\nassert solution(201 101 101 200) == \"1 100 100\"",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 6, 5, 4) == 2\nassert solution(40, 40, 40, 60) == 20\nassert solution(201, 101, 101, 200) == 1, 100, 100",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n') == '2 1 3\\n1 100 100\\n'\n\nassert solution('20 20 20 20\\n100 100 100 100\\n100 100 100 100\\n100 100 100 100\\n') == '1 100 100\\n1 100 100\\n1 100 100\\n'",
        "num_ids_2": 170,
        "num_ids_4": 170
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3 6 5 4) == '2 1 3', \"Expected output: 2 1 3\"\nassert solution(40 40 40 60) == '20 20 20', \"Expected output: 20 20 20\"\nassert solution(201 101 101 200) == '1 100 100', \"Expected output: 1 100 100\"",
        "num_ids_2": 72,
        "num_ids_4": 119
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3', \"Incorrect output: Expected '2 1 3', got '{}'.\".format(solution('3 6 5 4'))\nassert solution('40 40 40 60') == '20 20 20', \"Incorrect output: Expected '20 20 20', got '{}'.\".format(solution('40 40 40 60'))\nassert solution('201 101 101 200') == '1 100 100', \"Incorrect output: Expected '1 100 100', got '{}'.\".format(solution('201 101 101 200'))",
        "num_ids_2": 110,
        "num_ids_4": 182
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\", \"Expected 2 1 3, got: \" + solution(\"3 6 5 4\")\nassert solution(\"40 40 40 60\") == \"20 20 20\", \"Expected 20 20 20, got: \" + solution(\"40 40 40 60\")\nassert solution(\"201 101 101 200\") == \"1 100 100\", \"Expected 1 100 100, got: \" + solution(\"201 101 101 200\")",
        "num_ids_2": 100,
        "num_ids_4": 167
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3\\n', \"Polycarp has guessed three positive integers a, b, and c and their pairwise sums are: a+b, a+c, b+c, a+b+c. Print them in any order.\"\nassert solution('40 40 40 60') == '20 20 20\\n', \"Polycarp has guessed four positive integers a, b, and c and their pairwise sums are: a+b, a+c, b+c, a+b+c. Print them in any order.\"\nassert solution('201 101 101 200') == '1 100 100\\n', \"Polycarp has guessed three positive integers a, b, and c and their pairwise sums are: a+b, a+c, b+c, a+b+c. Print them in any order.\"",
        "num_ids_2": 145,
        "num_ids_4": 226
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 6, 5, 4) == \"2 1 3\", \"Polycarp has guessed three positive integers a, b, and c. He keeps these numbers in secret, but he writes down four numbers on a board in arbitrary order, but there are no guessed integers. He writes down these numbers: a=3, b=6, c=5.\"\n\nassert solution(40, 40, 40, 60) == \"20 20 20\", \"Polycarp has guessed three positive integers a, b, and c. He keeps these numbers in secret, but he writes down four numbers on a board in arbitrary order, but there are no guessed integers. He writes down these numbers: a=20, b=20, c=20.\"\n\nassert solution(201, 101, 101, 200) == \"1 100 100\", \"Polycarp has guessed three positive integers a, b, and c. He keeps these numbers in secret, but he writes down four numbers on a board in arbitrary order, but there are no guessed integers. He writes down these numbers: a=1, b=100, c=100.\"",
        "num_ids_2": 182,
        "num_ids_4": 284
    },
    {
        "number": 4377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 4\\n40 40 40 60\\n201 101 101 200\\n\") == \"2 1 3\\n20 20 20\\n1 100 100\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == '2\\nRBGRGBRGR\\n'\nassert solution('8\\nBBBGBRRR\\n') == '2\\nBRBGBRGR\\n'\nassert solution('13\\nBBRRRRGGGGGRR\\n') == '6\\nBGRBRBGBGBGRG\\n'\n",
        "num_ids_2": 55,
        "num_ids_4": 88
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\\n\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\\n\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 51,
        "num_ids_4": 82
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == 2\nassert solution(\"9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == 2\nassert solution(\"9\\nRBGRRBRGG\\n\\n8\\nBBBGBRRR\\n\\n13\\nBBRRRRGGGGGRR\") == 2",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\nRBGRRBRGG\\n') == 2\nassert solution('8\\nBBBGBRRR\\n') == 2\nassert solution('13\\nBBRRRRGGGGGRR\\n') == 6",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9\\nRBGRRBRGG') == '2\\nRBGRGBRGR'\nassert solution('8\\nBBBGBRRR') == '2\\nBRBGBRGR'\nassert solution('13\\nBBRRRRGGGGGRR') == '6\\nBGRBRBGBGBGRG'",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == 2\nassert solution(\"8\\nBBBGBRRR\") == 2\nassert solution(\"13\\nBBRRRRGGGGGRR\") == 6\n",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2\nRBGRGBRGR\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\nRBGRRBRGG\") == \"2\\nRBGRGBRGR\"\nassert solution(\"8\\nBBBGBRRR\") == \"2\\nBRBGBRGR\"\nassert solution(\"13\\nBBRRRRGGGGGRR\") == \"6\\nBGRBRBGBGBGRG\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"",
        "num_ids_2": 51,
        "num_ids_4": 95
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n4\\n7\\n5\\n6\\n8\") == \"4\\n2 3 5 6 \"\nassert solution(\"6\\n1\\n3\\n5\\n2\\n4\\n6\") == \"2\\n1 4 \"\nassert solution(\"4\\n10\\n9\\n8\\n7\") == \"1\\n1 \"\nassert solution(\"9\\n6\\n7\\n8\\n3\\n4\\n5\\n9\\n10\\n11\") == \"6\\n1 2 3 7 8 9 \"",
        "num_ids_2": 70,
        "num_ids_4": 148
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '4\\n2 3 5 6'\nassert solution(6) == '2\\n1 4 '\nassert solution(4) == '1\\n1'\nassert solution(9) == '6\\n1 2 3 7 8 9'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output does not match the expected output. Got: {solution(input())}, expected: {expected_output}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\") == \"4\\n2 3 5 6\"\nassert solution(\"6\\n1 3 5 2 4 6\") == \"2\\n1 4\"\nassert solution(\"4\\n10 9 8 7\") == \"1\\n1\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\") == \"6\\n1 2 3 7 8 9\"\n\nprint(\"All valid answers passed\")",
        "num_ids_2": 62,
        "num_ids_4": 129
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\") == \"4\\n2 3 5 6\\n\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\") == \"2\\n1 4\\n\"\nassert solution(\"4\\n10 9 8 7\\n\") == \"1\\n1\\n\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n6\\n1 3 5 2 4 6\\n4\\n10 9 8 7\\n9\\n6 7 8 3 4 5 9 10 11\\n6\") == \"4\\n2 3 5 6\\n2\\n1 4\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\") == \"4\\n2 3 5 6 \\n\"\nassert solution(\"6\\n1 3 5 2 4 6\\n\") == \"2\\n1 4 \\n\"\nassert solution(\"4\\n10 9 8 7\\n\") == \"1\\n1 \\n\"\nassert solution(\"9\\n6 7 8 3 4 5 9 10 11\\n\") == \"6\\n1 2 3 7 8 9 \\n\"",
        "num_ids_2": 70,
        "num_ids_4": 145
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: '{expected_output}'. Received output: '{solution(input())}'\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3 3 4 7 5 6 8\\n\\n6\\n1 3 5 2 4 6\\n\\n4\\n10 9 8 7\\n\\n9\\n6 7 8 3 4 5 9 10 11\\n\") == \"4\\n2 3 5 6\\n\\n2\\n1 4\\n\\n1\\n1\\n\\n6\\n1 2 3 7 8 9\"",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 1\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 4\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n\") == \"Yes\"\nassert solution(\"4 2\\n\") == \"No\"\nassert solution(\"1 1\\n\") == \"No\"\nassert solution(\"1 3\\n\") == \"No\"\nassert solution(\"2 2\\n\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"Yes\\n\"\nassert solution(\"2 1\") == \"No\\n\"\nassert solution(\"1 1\") == \"No\\n\"\nassert solution(\"1 2\") == \"No\\n\"\nassert solution(\"3 3\") == \"No\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"6 4\") == \"Yes\"\nassert solution(\"7 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"81 58\") == \"110\" # sample input\nprint(\"All test cases passed successfully.\") # sample output",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"81 58\") == \"110\", \"Sample Input and Output do not match.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('81 58') == '110'\n\nSolution:\n\nLet's start by implementing the function `solution`. We will use the `int` function to read the values of `X` and `Y` from the input. Then, we will check if `Y` is an even number. If it is not, we will print an error message. If it is, we will calculate the discount amount for the bus.\n\nHere's the code:\n\n```python\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"110\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"81 58\") == \"110\", \"The train fare is 81 yen. The train fare is 58 \u2044 2=29 yen with the 50% discount. Thus, it costs 110 yen to travel from Station A to Station C.\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"81 58\") == \"110\\n\", \"The train fare is 81 yen.\"\nassert solution(\"27 38\") == \"29\\n\", \"The train fare is 27 yen.\"\nassert solution(\"100 100\") == \"100\\n\", \"The train fare is 100 yen.\"\nassert solution(\"50 20\") == \"0\\n\", \"There is no such bus fare.\"\nassert solution(\"0 50\") == \"0\\n\", \"There is no such bus fare.\"",
        "num_ids_2": 59,
        "num_ids_4": 117
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('81 58') == '110'\nassert solution('91 70') == '142'\nassert solution('100 100') == '100'\nassert solution('5 5') == '10'\nassert solution('10 0') == '0'",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"81 58\") == \"110\", \"Test 1 failed\"\nassert solution(\"81 60\") == \"220\", \"Test 2 failed\"\nassert solution(\"81 50\") == \"110\", \"Test 3 failed\"\nassert solution(\"81 55\") == \"220\", \"Test 4 failed\"\nassert solution(\"81 52\") == \"110\", \"Test 5 failed\"\n\nprint(\"All tests passed\")",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='2') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"8\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"\nassert solution(\"3\") == \"16\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"\nassert solution(\"4\") == \"256\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"\nassert solution(\"5\") == \"65536\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"\nassert solution(\"6\") == \"1073741824\", \"Takahashi is going to set a 3-character password. How many possible passwords are there if each of its characters must be a digit between 1 and N (inclusive)?\"",
        "num_ids_2": 101,
        "num_ids_4": 207
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"8\"\nassert solution(\"3\\n4\") == \"16\"\nassert solution(\"5\\n6\") == \"25\"\nassert solution(\"7\\n8\") == \"36\"\nassert solution(\"9\\n10\") == \"49\"\nassert solution(\"11\\n12\") == \"64\"\nassert solution(\"13\\n14\") == \"81\"\nassert solution(\"15\\n16\") == \"100\"\nassert solution(\"17\\n18\") == \"121\"\nassert solution(\"19\\n20\") == \"144\"\nassert solution(\"21\\n22\") == \"169\"\nassert solution(\"23\\n24\") == \"196\"\nassert solution(\"25\\n26\") == \"225\"\nassert solution(\"27\\n28\") == \"256\"\nassert solution(\"29\\n30\") == \"289\"\nassert solution(\"31\\n32\") == \"324\"\nassert solution(\"33\\n34\") == \"361\"\nassert solution(\"35\\n36\") == \"400\"\nassert solution(\"37\\n38\") == \"441\"\nassert solution(\"39\\n40\") == \"484\"\nassert solution(\"41\\n42\") == \"529\"\nassert solution(\"43\\n44\") == \"576\"\nassert solution(\"45\\n46\") == \"625\"\nassert solution(\"47\\n48\") == \"676\"\nassert solution(\"49\\n50\") == \"729\"\nassert solution(\"51\\n52\") == \"784\"\nassert solution(\"53\\n54\") == \"841\"\nassert solution(\"55\\n56\") == \"900\"\nassert solution(\"57\\n58\") == \"961\"\nassert solution(\"59\\n60\") == \"1024\"\nassert solution(\"61\\n62\") == \"1089\"\nassert solution(\"63\\n64\") == \"1156\"\nassert solution(\"65\\n66\") == \"1225\"\nassert solution(\"67\\n68\") == \"1296\"\nassert solution(\"69\\n70\") == \"1369\"\nassert solution(\"71\\n72\") == \"1444\"\nassert solution(\"73\\n74\") == \"1521\"\nassert solution(\"75\\n76\") == \"1600\"\nassert solution(\"77\\n78\") == \"1681\"\nassert solution(\"79\\n80\") == \"1764\"\nassert solution(\"81\\n82\") == \"1849\"\nassert solution(\"83\\n84\") == \"1936\"\nassert solution(\"85\\n86\") == \"2025\"\nassert solution(\"87\\n88\") == \"2116\"\nassert solution(\"89\\n90\") == \"2209\"\nassert solution(\"91\\n92\") == \"2304\"\nassert solution(\"93\\n94\") == \"2401\"\nassert solution(\"95\\n96\") == \"2500\"\nassert solution(\"97\\n98\") == \"2601\"\nassert solution(\"99\\n100\") == \"2704\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"8\\n\", \"Test case failed!\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"8\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n\", \"Please complete the solution\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 8, \"The number of possible passwords does not match the expected value.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"8\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"\nprint(\"8\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"9\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"20\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\", \"Expected YES but got %s\" % solution(\"5\")\nassert solution(\"10\") == \"YES\", \"Expected YES but got %s\" % solution(\"10\")\nassert solution(\"0\") == \"YES\", \"Expected YES but got %s\" % solution(\"0\")\nassert solution(\"-5\") == \"YES\", \"Expected YES but got %s\" % solution(\"-5\")\nassert solution(\"100\") == \"NO\", \"Expected NO but got %s\" % solution(\"100\")",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"YES\"\nassert solution(\"1\\n\") == \"NO\"\nassert solution(\"10\\n\") == \"NO\"\nassert solution(\"11\\n\") == \"YES\"\nassert solution(\"100\\n\") == \"YES\"\nassert solution(\"101\\n\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES', \"The growth of a five-year-old child will be celebrated.\"\nassert solution('30') == 'NO', \"The growth of a three-year-old child will not be celebrated.\"\nassert solution('0') == 'YES', \"The growth of a zero-year-old child will be celebrated.\"\nassert solution('70') == 'YES', \"The growth of a seven-year-old child will be celebrated.\"\nassert solution('90') == 'NO', \"The growth of an nine-year-old child will not be celebrated.\"",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES', \"Solution should print YES\"\nassert solution('') == 'NO', \"Solution should print NO\"\nassert solution('10') == 'YES', \"Solution should print YES\"\nassert solution('100') == 'NO', \"Solution should print NO\"",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\", \"Expected 'YES', but got '{}'\".format(solution(\"5\"))\nassert solution(\"3\") == \"NO\", \"Expected 'NO', but got '{}'\".format(solution(\"3\"))\nassert solution(\"10\") == \"NO\", \"Expected 'NO', but got '{}'\".format(solution(\"10\"))\nassert solution(\"0\") == \"NO\", \"Expected 'NO', but got '{}'\".format(solution(\"0\"))\nassert solution(\"-1\") == \"NO\", \"Expected 'NO', but got '{}'\".format(solution(\"-1\"))",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"YES\\n\"\nassert solution(\"1\\n\") == \"NO\\n\"\nassert solution(\"9\\n\") == \"YES\\n\"\nassert solution(\"0\\n\") == \"NO\\n\"\nassert solution(\"10\\n\") == \"NO\\n\"\nassert solution(\"99\\n\") == \"YES\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5\\n\") == \"YES\"\nassert solution(stdin=\"10\\n\") == \"NO\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'ABC', 'The 999-th round of AtCoder Beginner Contest is labeled as ABC999.'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\", \"Test failed\"\nassert solution(\"998\") == \"ABD\", \"Test failed\"\nassert solution(\"997\") == \"ABD\", \"Test failed\"\nassert solution(\"996\") == \"ABD\", \"Test failed\"\nassert solution(\"995\") == \"ABD\", \"Test failed\"\nassert solution(\"994\") == \"ABD\", \"Test failed\"\nassert solution(\"993\") == \"ABD\", \"Test failed\"\nassert solution(\"992\") == \"ABD\", \"Test failed\"\nassert solution(\"991\") == \"ABD\", \"Test failed\"\nassert solution(\"990\") == \"ABD\", \"Test failed\"\nassert solution(\"989\") == \"ABD\", \"Test failed\"\nassert solution(\"988\") == \"ABD\", \"Test failed\"\nassert solution(\"987\") == \"ABD\", \"Test failed\"\nassert solution(\"986\") == \"ABD\", \"Test failed\"\nassert solution(\"985\") == \"ABD\", \"Test failed\"\nassert solution(\"984\") == \"ABD\", \"Test failed\"\nassert solution(\"983\") == \"ABD\", \"Test failed\"\nassert solution(\"982\") == \"ABD\", \"Test failed\"\nassert solution(\"981\") == \"ABD\", \"Test failed\"\nassert solution(\"980\") == \"ABD\", \"Test failed\"\nassert solution(\"979\") == \"ABD\", \"Test failed\"\nassert solution(\"978\") == \"ABD\", \"Test failed\"\nassert solution(\"977\") == \"ABD\", \"Test failed\"\nassert solution(\"976\") == \"ABD\", \"Test failed\"\nassert solution(\"975\") == \"ABD\", \"Test failed\"\nassert solution(\"974\") == \"ABD\", \"Test failed\"\nassert solution(\"973\") == \"ABD\", \"Test failed\"\nassert solution(\"972\") == \"ABD\", \"Test failed\"\nassert solution(\"971\") == \"ABD\", \"Test failed\"\nassert solution(\"970\") == \"ABD\", \"Test failed\"\nassert solution(\"969\") == \"ABD\", \"Test failed\"\nassert solution(\"968\") == \"ABD\", \"Test failed\"\nassert solution(\"967\") == \"ABD\", \"Test failed\"\nassert solution(\"966\") == \"ABD\", \"Test failed\"\nassert solution(\"965\") == \"ABD\", \"Test failed\"\nassert solution(\"964\") == \"ABD\", \"Test failed\"\nassert solution(\"963\") == \"ABD\", \"Test failed\"\nassert solution(\"962\") == \"ABD\", \"Test failed\"\nassert solution(\"961\") == \"ABD\", \"Test failed\"\nassert solution(\"960\") == \"ABD\", \"Test failed\"\nassert solution(\"959\") == \"ABD\", \"Test failed\"\nassert solution(\"958\") == \"ABD\", \"Test failed\"\nassert solution(\"957\") == \"ABD\", \"Test failed\"\nassert solution(\"956\") == \"ABD\", \"Test failed\"\nassert solution(\"955\") == \"ABD\", \"Test failed\"\nassert solution(\"954\") == \"ABD\", \"Test failed\"\nassert solution(\"953\") == \"ABD\", \"Test failed\"\nassert solution(\"952\") == \"ABD\", \"Test failed\"\nassert solution(\"951\") == \"ABD\", \"Test failed\"\nassert solution(\"950\") == \"ABD\", \"Test failed\"\nassert solution(\"949\") == \"ABD\", \"Test failed\"\nassert solution(\"948\") == \"ABD\", \"Test failed\"\nassert solution(\"947\") == \"ABD\", \"Test failed\"\nassert solution(\"946\") == \"ABD\", \"Test failed\"\nassert solution(\"945\") == \"ABD\", \"Test failed\"\nassert solution(\"944\") == \"ABD\", \"Test failed\"\nassert solution(\"943\") == \"ABD\", \"Test failed\"\nassert solution(\"942\") == \"ABD\", \"Test failed\"\nassert solution(\"941\") == \"ABD\", \"Test failed\"\nassert solution(\"940\") == \"ABD\", \"Test failed\"\nassert solution(\"939\")",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(999) == 'ABC', \"The 999-th round of AtCoder Beginner Contest is labeled as ABC999\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(999) == \"ABC\"\nassert solution(1000) == \"ABD\"\nassert solution(2000) == \"ACD\"\nassert solution(3000) == \"BCD\"\nassert solution(4000) == \"CDE\"\nassert solution(5000) == \"DEF\"\nassert solution(6000) == \"EFE\"\nassert solution(7000) == \"FGH\"\nassert solution(8000) == \"GHE\"\nassert solution(9000) == \"HIE\"\nassert solution(10000) == \"IJK\"\nassert solution(11000) == \"KLM\"\nassert solution(12000) == \"NOP\"\nassert solution(13000) == \"QRST\"\nassert solution(14000) == \"UVWX\"\nassert solution(15000) == \"YZ\"\nassert solution(16000) == \"Z\"\nassert solution(17000) == \"AAA\"\nassert solution(18000) == \"ABCD\"\nassert solution(19000) == \"AEF\"\nassert solution(20000) == \"BGH\"\nassert solution(21000) == \"CEF\"\nassert solution(22000) == \"DFG\"\nassert solution(23000) == \"EFH\"\nassert solution(24000) == \"GHI\"\nassert solution(25000) == \"HIJ\"\nassert solution(26000) == \"KLM\"\nassert solution(27000) == \"NOPQ\"\nassert solution(28000) == \"QRSTU\"\nassert solution(29000) == \"UVWXY\"\nassert solution(30000) == \"YZ\"\nassert solution(31000) == \"Z\"\nassert solution(32000) == \"AAA\"\nassert solution(33000) == \"ABCD\"\nassert solution(34000) == \"AEF\"\nassert solution(35000) == \"BGH\"\nassert solution(36000) == \"CEF\"\nassert solution(37000) == \"DFG\"\nassert solution(38000) == \"EFH\"\nassert solution(39000) == \"GHI\"\nassert solution(40000) == \"HIJ\"\nassert solution(41000) == \"KLM\"\nassert solution(42000) == \"NOPQ\"\nassert solution(43000) == \"QRSTU\"\nassert solution(44000) == \"UVWXY\"\nassert solution(45000) == \"YZ\"\nassert solution(46000) == \"Z\"\nassert solution(47000) == \"AAA\"\nassert solution(48000) == \"ABCD\"\nassert solution(49000) == \"AEF\"\nassert solution(50000) == \"BGH\"\nassert solution(51000) == \"CEF\"\nassert solution(52000) == \"DFG\"\nassert solution(53000) == \"EFH\"\nassert solution(54000) == \"GHI\"\nassert solution(55000) == \"HIJ\"\nassert solution(56000) == \"KLM\"\nassert solution(57000) == \"NOPQ\"\nassert solution(58000) == \"QRSTU\"\nassert solution(59000) == \"UVWXY\"\nassert solution(60000) == \"YZ\"\nassert solution(61000) == \"Z\"\nassert solution(62000) == \"AAA\"\nassert solution(63000) == \"ABCD\"\nassert solution(64000) == \"AEF\"\nassert solution(65000) == \"BGH\"\nassert solution(66000) == \"CEF\"\nassert solution(67000) == \"DFG\"\nassert solution(68000) == \"EFH\"\nassert solution(69000) == \"GHI\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(999) == 'ABC'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"ABC\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"1000\") == \"ABD\"\nassert solution(\"1001\") == \"ABE\"\nassert solution(\"1998\") == \"ABD\"\nassert solution(\"1999\") == \"ABE\"\nassert solution(\"2000\") == \"ABF\"\n\nfrom typing import TextIO",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n5\\n9\\n10\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n7\\n9\\n12\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n10\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n11\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n12\\n16\") == \"Yay!\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 122
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\", \"The output should be Yay!\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(stdin=\"5\\n6\\n7\\n8\\n9\") == \"No such pair.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"2\\n3\\n5\\n7\\n11\") == \"Yay!\\n\"\nassert solution(\"4\\n5\\n6\\n7\\n10\") == \"Yay!\\n\"\nassert solution(\"6\\n8\\n10\\n12\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"2\\n3\\n5\\n7\\n11\") == \"Yay!\\n\"\nassert solution(\"4\\n5\\n6\\n7\\n10\") == \"Yay!\\n\"\nassert solution(\"6\\n8\\n10\\n12\\n15\") == \"Yay!\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"Yay!\\n\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n0\") == \"No pair of antennas can communicate directly.\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 92
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\"\nassert solution(\"1\\n3\\n4\\n5\\n6\\n7\\n\") == \"Yay!\\n\"\nassert solution(\"2\\n10\\n11\\n12\\n13\\n14\\n\") == \"Yay!\\n\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\\n\") == \"Yay!\\n\"\nassert solution(\"4\\n5\\n6\\n7\\n8\\n9\\n\") == \"Yay!\\n\"\nassert solution(\"5\\n6\\n7\\n8\\n9\\n10\\n\") == \"Yay!\\n\"\nassert solution(\"6\\n7\\n8\\n9\\n10\\n11\\n\") == \"Yay!\\n\"\nassert solution(\"7\\n8\\n9\\n10\\n11\\n12\\n\") == \"Yay!\\n\"\nassert solution(\"8\\n9\\n10\\n11\\n12\\n13\\n\") == \"Yay!\\n\"\nassert solution(\"9\\n10\\n11\\n12\\n13\\n14\\n\") == \"Yay!\\n\"\nassert solution(\"10\\n11\\n12\\n13\\n14\\n15\\n\") == \"Yay!\\n\"\nassert solution(\"1000\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 126
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\\n\"\nassert solution(\"0\\n0\\n0\\n0\\n0\") == \"Yay!\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n0\\n0\\n0\\n0\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n2\\n4\\n8\\n9\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n3\\n4\\n8\\n9\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n4\\n5\\n6\\n7\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n5\\n6\\n7\\n8\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n6\\n7\\n8\\n9\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n7\\n8\\n9\\n10\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n8\\n9\\n10\\n11\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n9\\n10\\n11\\n12\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n10\\n11\\n12\\n13\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n11\\n12\\n13\\n14\") == \"No pair of antennas cannot communicate directly.\\n\"\nassert solution(\"1\\n12\\n13\\n14\\n15\") == \"No pair of antennas cannot communicate directly.\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 118
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"No solution!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n1\") == \"No solution!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n-1\") == \"No solution!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n0\") == \"No solution!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n10\") == \"No solution!\"",
        "num_ids_2": 54,
        "num_ids_4": 107
    },
    {
        "number": 4385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\npink\") == \"red\"\nassert solution(\"1800\\npink\") == \"red\"\nassert solution(\"3000\\npink\") == \"pink\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"\nprint(\"a = 3200 is not less than 3200, so we print s = pink.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"4200\\npink\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3200\\npink\") == \"pink\\na = 3200 is not less than 3200, so we print s = pink.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\napple\") == \"red\"\nassert solution(\"5001\\nbanana\") == \"red\"\nassert solution(\"5000\\napple\") == \"red\"\nassert solution(\"5000\\npink\") == \"pink\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3200\\npink\") == \"pink\", \"Your code is incorrect.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"2800\\napple\") == \"red\"\nassert solution(\"3201\\nbanana\") == \"red\"\nassert solution(\"2799\\nlion\") == \"pink\"\nassert solution(\"2800\\n\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3200\\npink\\n\") == \"pink\\n\"\nassert solution(\"4500\\napple\\n\") == \"red\\n\"\nassert solution(\"2800\\ncat\\n\") == \"pink\\n\"\nassert solution(\"3200\\ngrape\\n\") == \"red\\n\"\nassert solution(\"1000\\nzebra\\n\") == \"red\\n\"\nassert solution(\"1000\\ncar\\n\") == \"red\\n\"\nassert solution(\"2000\\nfrog\\n\") == \"red\\n\"\nassert solution(\"1000\\nhorse\\n\") == \"red\\n\"\nassert solution(\"3000\\npig\\n\") == \"red\\n\"\nassert solution(\"4000\\nninja\\n\") == \"red\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3200\\npink\") == \"pink\"\nassert solution(\"1200\\napple\") == \"apple\"\nassert solution(\"3000\\nbanana\") == \"red\"\nassert solution(\"4000\\norange\") == \"orange\"\nassert solution(\"5000\\npink\") == \"red\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1199\\n\") == \"ABC\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1199\") == \"ABC\\n\"\nassert solution(\"2800\") == \"ARC\\n\"\nassert solution(\"4208\") == \"AGC\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1199\") == \"ABC\"\nassert solution(\"1099\") == \"ABC\"\nassert solution(\"1200\") == \"ABC\"\nassert solution(\"2800\") == \"ARC\"\nassert solution(\"2000\") == \"AGC\"\nassert solution(\"4208\") == \"AGC\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'1199\\n') == 'ABC\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC', \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Test failed\"\nassert solution(\"1200\") == \"ABC\", \"Test failed\"\nassert solution(\"1201\") == \"ABC\", \"Test failed\"\nassert solution(\"1202\") == \"ABC\", \"Test failed\"\nassert solution(\"1203\") == \"ABC\", \"Test failed\"\nassert solution(\"1204\") == \"ABC\", \"Test failed\"\nassert solution(\"1205\") == \"ABC\", \"Test failed\"\nassert solution(\"1206\") == \"ABC\", \"Test failed\"\nassert solution(\"1207\") == \"ABC\", \"Test failed\"\nassert solution(\"1208\") == \"ABC\", \"Test failed\"\nassert solution(\"1209\") == \"ABC\", \"Test failed\"\nassert solution(\"1210\") == \"ABC\", \"Test failed\"\nassert solution(\"1211\") == \"ABC\", \"Test failed\"\nassert solution(\"1212\") == \"ABC\", \"Test failed\"\nassert solution(\"1213\") == \"ABC\", \"Test failed\"\nassert solution(\"1214\") == \"ABC\", \"Test failed\"\nassert solution(\"1215\") == \"ABC\", \"Test failed\"\nassert solution(\"1216\") == \"ABC\", \"Test failed\"\nassert solution(\"1217\") == \"ABC\", \"Test failed\"\nassert solution(\"1218\") == \"ABC\", \"Test failed\"\nassert solution(\"1219\") == \"ABC\", \"Test failed\"\nassert solution(\"1220\") == \"ABC\", \"Test failed\"\nassert solution(\"1221\") == \"ABC\", \"Test failed\"\nassert solution(\"1222\") == \"ABC\", \"Test failed\"\nassert solution(\"1223\") == \"ABC\", \"Test failed\"\nassert solution(\"1224\") == \"ABC\", \"Test failed\"\nassert solution(\"1225\") == \"ABC\", \"Test failed\"\nassert solution(\"1226\") == \"ABC\", \"Test failed\"\nassert solution(\"1227\") == \"ABC\", \"Test failed\"\nassert solution(\"1228\") == \"ABC\", \"Test failed\"\nassert solution(\"1229\") == \"ABC\", \"Test failed\"\nassert solution(\"1230\") == \"ABC\", \"Test failed\"\nassert solution(\"1231\") == \"ABC\", \"Test failed\"\nassert solution(\"1232\") == \"ABC\", \"Test failed\"\nassert solution(\"1233\") == \"ABC\", \"Test failed\"\nassert solution(\"1234\") == \"ABC\", \"Test failed\"\nassert solution(\"1235\") == \"ABC\", \"Test failed\"\nassert solution(\"1236\") == \"ABC\", \"Test failed\"\nassert solution(\"1237\") == \"ABC\", \"Test failed\"\nassert solution(\"1238\") == \"ABC\", \"Test failed\"\nassert solution(\"1239\") == \"ABC\", \"Test failed\"\nassert solution(\"1240\") == \"ABC\", \"Test failed\"\nassert solution(\"1241\") == \"ABC\", \"Test failed\"\nassert solution(\"1242\") == \"ABC\", \"Test failed\"\nassert solution(\"1243\") == \"ABC\", \"Test failed\"\nassert solution(\"1244\") == \"ABC\", \"Test failed\"\nassert solution(\"1245\") == \"ABC\", \"Test failed\"\nassert solution(\"1246\") == \"ABC\", \"Test failed\"\nassert solution(\"1247\") == \"ABC\", \"Test failed\"\nassert solution(\"1248\") == \"ABC\", \"Test failed\"\nassert solution(\"1249\") == \"ABC\", \"Test failed\"\nassert solution(\"1250\") == \"ABC\", \"Test failed\"\nassert solution(\"1251\") == \"ABC\", \"Test failed\"\nassert solution(\"1252\") == \"ABC\", \"Test failed\"\nassert solution(\"1253\") == \"ABC\", \"Test failed\"\nassert solution(\"1254\") == \"ABC\", \"Test failed\"\nassert solution(\"1255\") == \"ABC\", \"Test failed\"\nassert solution(\"1256\") == \"ABC\", \"Test failed\"\nassert solution(\"1257\") == \"ABC\", \"Test failed\"\nassert solution(\"1258\") == \"ABC\", \"Test failed\"\nassert solution(\"125",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1199) == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1199\\n\") == \"ABC\\n\"\nassert solution(\"1199\\n\") == \"ABC\\n\"\nassert solution(\"1200\\n\") == \"ABC\\n\"\nassert solution(\"2800\\n\") == \"ABC\\n\"\nassert solution(\"4208\\n\") == \"ABC\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1199\") == \"ABC\\n\"\nassert solution(\"1200\") == \"ABC\\n\"\nassert solution(\"2800\") == \"ABC\\n\"\nassert solution(\"4208\") == \"ABC\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"119\") == \"991\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('119') == '991'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"119\") == \"991\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"119\") == \"991\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"119\") == \"991\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abbaac\\nac\\bccddaaf\\nzzzzzzzzzz\") == \"abac\\nac\\bcdaf\\nzzzzzzz\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"abbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\\nac\\nbcdaf\\nzzzzzz\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'abac'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'abac'\nassert solution(input()) == 'ac'\nassert solution(input()) == 'bcdaf'\nassert solution(input()) == 'zzzzzz'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"\n\nsolution(stdin)",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbaac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bcdaf\") == \"bccddaaf\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4\\n333\\n0'\nassert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46\\n0') == '0'",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"2\\n1\"\nassert solution(\"1 4\\n2 8\\n3 12\\n4 16\") == \"0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n133 134\\n135 136\\n137 138\\n139 140\\n141 142\\n143 144\\n145 146\\n147 148\\n149 150\\n151 152\\n153 154\\n155 156\\n157 158\\n159 160\\n161 162\\n163 164\\n165 166\\n167 168\\n169 170\\n171 172\\n173 174\\n175 176\\n177 178\\n179 180\\n181 182\\n183 184\\n185 186\\n187 188\\n189 190\\n191 192\\n193 194\\n195 196\\n197 198\\n199 200\\n201 202\\n203 204\\n205 206\\n207 208\\n209 210\\n211 212\\n213 214\\n215 216\\n217 218\\n219 220\\n221 222\\n223 224\\n2",
        "num_ids_2": 93,
        "num_ids_4": 1027
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5') == '2\\n'\nassert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4\\n333\\n0'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n13\\n100\\n123\\n92\\n46\\n\") == \"2\\n5\\n4\\n333\\n0\\n\"\n\nassert solution(\"2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"\n\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"0\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 168
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"0\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4\\n333\\n0'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n5\\n4\\n333\\n0\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n13 9\\n100 13\\n123 456\\n92 46\") == \"2\\n5\\n4\\n333\\n0\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2.666666666666667', 'Your solution is incorrect.'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2.666666666666667\\n\", \"The output should be 2.666666666666667\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.666666666666667\", \"The solution is incorrect.\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 3) == 2.666666666666667\nassert solution(3, 4) == 2.777777777777778\nassert solution(3, 5) == 2.888888888888889\nassert solution(3, 6) == 2.99999999999999\nassert solution(3, 7) == 3.111111111111111\nassert solution(3, 8) == 3.222222222222222\nassert solution(3, 9) == 3.333333333333333\nassert solution(3, 10) == 3.444444444444444",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3) == 2.666666666666667\nassert solution(4, 3) == 2.666666666666667\nassert solution(5, 3) == 2.666666666666667\nassert solution(6, 3) == 2.666666666666667\nassert solution(7, 3) == 2.666666666666667\nassert solution(8, 3) == 2.666666666666667\nassert solution(9, 3) == 2.666666666666667\nassert solution(10, 3) == 2.666666666666667\nassert solution(11, 3) == 2.666666666666667\nassert solution(12, 3) == 2.666666666666667\nassert solution(13, 3) == 2.666666666666667\nassert solution(14, 3) == 2.666666666666667\nassert solution(15, 3) == 2.666666666666667\nassert solution(16, 3) == 2.666666666666667\nassert solution(17, 3) == 2.666666666666667\nassert solution(18, 3) == 2.666666666666667\nassert solution(19, 3) == 2.666666666666667\nassert solution(20, 3) == 2.666666666666667\nassert solution(21, 3) == 2.666666666666667\nassert solution(22, 3) == 2.666666666666667\nassert solution(23, 3) == 2.666666666666667\nassert solution(24, 3) == 2.666666666666667\nassert solution(25, 3) == 2.666666666666667\nassert solution(26, 3) == 2.666666666666667\nassert solution(27, 3) == 2.666666666666667\nassert solution(28, 3) == 2.666666666666667\nassert solution(29, 3) == 2.666666666666667\nassert solution(30, 3) == 2.666666666666667\nassert solution(31, 3) == 2.666666666666667\nassert solution(32, 3) == 2.666666666666667\nassert solution(33, 3) == 2.666666666666667\nassert solution(34, 3) == 2.666666666666667\nassert solution(35, 3) == 2.666666666666667\nassert solution(36, 3) == 2.666666666666667\nassert solution(37, 3) == 2.666666666666667\nassert solution(38, 3) == 2.66666",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2.666666666666667\\n', 'Test case failed'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == \"2.666666666666667\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2.666666666666667', 'Test failed'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 4 1 2\") == \"2.666666666666667\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 3) == 2.666666666666667\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES\\nNO\\nYES\\nYES\\nNO\\nYES'",
        "num_ids_2": 139,
        "num_ids_4": 139
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\nassert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"",
        "num_ids_2": 242,
        "num_ids_4": 484
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\" or solution() == \"NO\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == \"YES\"\nassert solution(3, 2, 1) == \"YES\"\nassert solution(1, 2) == \"NO\"\nassert solution(4, 2) == \"YES\"\nassert solution(4, 1, 2, 3) == \"YES\"\nassert solution(3, 2) == \"NO\"\nassert solution(5, 1) == \"YES\"\nassert solution(1, 2, 3, 4, 5) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(4, 2, 2, 1, 4, 3) == \"YES\"\nassert solution(1, 3) == \"NO\"\nassert solution(4, 2, 4, 3, 2, 1) == \"YES\"\nassert solution(1, 3) == \"NO\"\nassert solution(5, 2, 2, 1, 2, 3, 3) == \"YES\"\nassert solution(1, 4) == \"NO\"",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\", \"Incorrect output\"\nassert solution() == \"NO\", \"Incorrect output\"\nassert solution() == \"YES\", \"Incorrect output\"\nassert solution() == \"YES\", \"Incorrect output\"\nassert solution() == \"NO\", \"Incorrect output\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4') == 'YES\\nNO\\nYES\\nYES\\nNO'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\\n') == 'YES\\nNO\\nYES\\nYES\\nNO\\nYES'",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3\\n5 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 2 3 3\\n1 4\") == \"NO\"",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"baabbb\") == \"bab\"\nassert solution(stdin=\"ooopppssss\") == \"oops\"\nassert solution(stdin=\"z\") == \"z\"",
        "num_ids_2": 30,
        "num_ids_4": 42
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Invalid solution\"\nassert solution(\"ooopppssss\") == \"oops\", \"Invalid solution\"\nassert solution(\"z\") == \"z\", \"Invalid solution\"",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"Polycarp loves ciphers. He has invented his own cipher called repeating. You should write 5 lines of code to test the correctness of solution.\"\n\nassert solution(\"ooopppssss\") == \"oops\", \"Polycarp loves ciphers. He has invented his own cipher called repeating. You should write 5 lines of code to test the correctness of solution.\"\n\nassert solution(\"z\") == \"z\", \"Polycarp loves ciphers. He has invented his own cipher called repeating. You should write 5 lines of code to test the correctness of solution.\"\n\nassert solution(\"def solution(stdin: str) -> str:\") == \"def solution(stdin: str) -> str:\", \"Polycarp loves ciphers. He has invented his own cipher called repeating. You should write 5 lines of code to test the correctness of solution.\"",
        "num_ids_2": 98,
        "num_ids_4": 206
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"bab\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"baabbb\") == \"bab\"\nassert solution(\"ooopppssss\") == \"oops\"\nassert solution(\"z\") == \"z\"",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"bab\", \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"baabbb\") == \"bab\", \"baabbb\"\nassert solution(\"ooopppssss\") == \"oops\", \"ooopppssss\"\nassert solution(\"z\") == \"z\", \"z\"",
        "num_ids_2": 37,
        "num_ids_4": 50
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\") == \"1\\n\"\n\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\") == \"0\\n\"\n\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"0\\n\"\n\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\") == \"1\\n\"\n\nassert solution(\"1 0\\n\") == \"0\\n\"\n\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"2\\n\"",
        "num_ids_2": 124,
        "num_ids_4": 198
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n\\n4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\\n2\") == \"1\\n\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n\\n3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n\\n1 0\\n\\n5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n\") == \"1\\n\"",
        "num_ids_2": 379,
        "num_ids_4": 621
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1\\n'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0\\n'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '0\\n'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1\\n'\n\nassert solution('''1 0\n''') == '0\\n'\n\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2\\n'",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"1\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Input {input} should output {output}, but got {solution(input)}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Your solution is wrong. Please check the example inputs provided and the provided test case.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\nGot: {}\\n\".format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 3\\n2 1 3\\n4 3 4\\n2 4 1\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 3\") == \"0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 3\\n1 3 3\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\") == \"2\"\n",
        "num_ids_2": 41,
        "num_ids_4": 107
    },
    {
        "number": 4394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"Incorrect solution\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BRB\") == \"GRB\"\nassert solution(\"RGBGRBB\") == \"RGBRGBR\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nBRB\") == 1, \"Test 1 failed\"\nassert solution(\"7\\nRGBGRBB\") == 3, \"Test 2 failed\"\nassert solution(\"3\\nRR\") == 0, \"Test 3 failed\"\nassert solution(\"6\\nRGR\") == 1, \"Test 4 failed\"\nassert solution(\"1\\nRRR\") == 1, \"Test 5 failed\"\nassert solution(\"4\\nR\") == 1, \"Test 6 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BRB\") == \"GRB\"\nassert solution(\"RGBGRBB\") == \"RGBRGBR\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nBRB\") == 1, \"Test 1 failed\"\nassert solution(\"7\\nRGBGRBB\") == 3, \"Test 2 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nBRB\") == \"1\\nGRB\"\nassert solution(\"7\\nRGBGRBB\") == \"3\\nRGBRGBR\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected output: {output_data}, but got: {solution(input_data)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"N\\nx_1 u_1\\nx_2 u_2\\nx_3 u_3\\nx_4 u_4\\nx_5 u_5\\n\")) == \"48000.0\"\nassert solution(input(\"2\\n10000 JPY\\n0.10000000 BTC\\n\")) == \"48000.0\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n        2\n        10000 JPY\n        0.10000000 BTC\n        ''') == '48000.0'\n\nassert solution('''\n        2\n        10000 JPY\n        0.10000000 BTC\n        999999 JPY\n        0.99999999 BTC\n        1000000 JPY\n        0.00000000 BTC\n        ''') == '3000000.0'\n\nassert solution('''\n        2\n        10000 JPY\n        0.10000000 BTC\n        0 JPY\n        0.0 BTC\n        10000 JPY\n        0.00000000 BTC\n        0 JPY\n        0.0 BTC\n        10000 JPY\n        0.00000000 BTC\n        ''') == '4000000.0'\n\nassert solution('''\n        2\n        10000 JPY\n        0.10000000 BTC\n        0 JPY\n        0.0 BTC\n        10000 JPY\n        0.00000000 BTC\n        0 JPY\n        0.0 BTC\n        0 JPY\n        0.0 BTC\n        10000 JPY\n        0.00000000 BTC\n        ''') == '10000000.0'\n\nassert solution('''\n        2\n        10000 JPY\n        0.10000000 BTC\n        0 JPY\n        0.0 BTC\n        10000 JPY\n        0.00000000 BTC\n        0 JPY\n        0.0 BTC\n        0 JPY\n        0.0 BTC\n        0 JPY\n        0.0 BTC\n        ''') == '10000000.0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"The solution provided is not correct. Provided output: '{output_str}', expected output: '{output_str}'\"\nfor i in range(1, N+1):\n    assert abs(x_i - x_i) <= 1e-5, f\"The input values are not valid. Value at index {i} is {x_i}, which is different from expected value {x_i}\"\n    assert abs(float(u_i) - float(u_i)) <= 1e-5, f\"The input values are not valid. Value at index {i} is {u_i}, which is different from expected value {u_i}\"\nprint(output_str)",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n10000 JPY\n0.10000000 BTC\n\"\"\") == \"48000\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n\") == \"10000.0\\n\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n1\\n10000 JPY\\n0.10000000 BTC\\n2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\\n\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 84,
        "num_ids_4": 243
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10000000 BTC\n''') == '48000.0\\n'\n\nassert solution('''\n    2\n    10000 JPY\n    0.10",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n\") == \"48000.1\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.01000000 BTC\\n\") == \"47999.999999999999\"\nassert solution(\"1\\n10000 JPY\\n0.10000000 BTC\\n\") == \"10000\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n20000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.01000000 BTC\\n\") == \"47999.999999999999\"",
        "num_ids_2": 102,
        "num_ids_4": 213
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '48000.0'\nassert solution(input()) == '48000.1'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"The answer should be 3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nprint(\"Test case passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 2) == 3, \"Incorrect Answer\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3', \"The second car from the front of a 4-car train is the third car from the back.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\" # expected output: 3",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"3\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\" # Correct solution\nassert solution(\"5 1\") == \"1\" # Incorrect solution",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 ip cc\") == \"icpc\"\nassert solution(\"3 jon asd\") == \"onjaas\"\nassert solution(\"4 eugene lee\") == \"eneglul\"\nassert solution(\"5 a b c\") == \"acb\"\nassert solution(\"6 a b c d e f\") == \"abcdef\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 ip cc\") == \"icpc\"\nassert solution(\"3 abc\") == \"cba\"\nassert solution(\"12345\") == \"54321\"\nassert solution(\"helloworld\") == \"dlrowolleh\"",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2ip cc\") == \"icpc\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ip cc') == 'icpc'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nip cc\") == \"icpc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nip cc') == 'icpc'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ip cc\") == \"icpc\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 ip cc') == 'icpc'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"ABA\\n\") == \"Yes\\n\"\nassert solution(stdin=\"ABBB\\n\") == \"No\\n\"\nassert solution(stdin=\"ABBC\\n\") == \"No\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\\nCompany A operates Station 1 and 3, while Company B operates Station 2.There will be a bus service between Station 1 and 2, and between Station 2 and 3, so print Yes.\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAB\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\", \"Test failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"AAA\") == \"No\\n\"\nassert solution(\"ABBA\") == \"Yes\\n\"\nassert solution(\"CAB\") == \"No\\n\"\nassert solution(\"ACB\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"AAA\") == \"No\"\nassert solution(\"BBB\") == \"No\"\nassert solution(\"AAABBB\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"\nassert solution(\"ABB\") == \"No\\n\"\nassert solution(\"ABBB\") == \"Yes\\n\"\nassert solution(\"ABCB\") == \"No\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRS\") == \"2\\n\", \"The function should return 2 for the given input.\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRS\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'RRS') == '2'\nassert solution(b'RR') == '1'\nassert solution(b'RRRRRRRRRRRR') == '3'\nassert solution(b'R') == '0'\nassert solution(b'') == '0'\nassert solution(b'RRRRRRRR') == '1'\nassert solution(b'RRRRRR') == '2'\nassert solution(b'RRRR') == '1'\nassert solution(b'RRR') == '1'\nassert solution(b'RR') == '1'\nassert solution(b'R') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('RRS') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\", \"Empty string should return 0\"\nassert solution(\"RRS\") == \"2\", \"The maximum number of consecutive rainy days is 2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('4 5 6') == '6 4 5'\nassert solution('7 8 9') == '9 7 8'\nassert solution('10 11 12') == '12 10 11'\nassert solution('13 14 15') == '15 13 14'",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\nassert solution(\"7 8 9\") == \"9 8 7\"\nassert solution(\"10 11 12\") == \"12 11 10\"\nassert solution(\"13 14 15\") == \"15 14 13\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"7 8 9\") == \"9 7 8\"\nassert solution(\"10 11 12\") == \"12 10 11\"\nassert solution(\"13 14 15\") == \"15 13 14\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n\nassert solution(\"4 5 6\") == \"6 4 5\"\n\nassert solution(\"7 8 9\") == \"9 7 8\"\n\nassert solution(\"10 11 12\") == \"12 10 11\"\n\nassert solution(\"13 14 15\") == \"15 13 14\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\", \"Output should be '3 1 2', but got '{}'.\".format(solution(\"1 2 3\"))",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\\n\", \"First test case failed\"\nassert solution(\"4 5 6\") == \"6 5 4\\n\", \"Second test case failed\"\nassert solution(\"7 8 9\") == \"9 8 7\\n\", \"Third test case failed\"\nassert solution(\"10 11 12\") == \"12 11 10\\n\", \"Fourth test case failed\"\nassert solution(\"13 14 15\") == \"15 14 13\\n\", \"Fifth test case failed\"",
        "num_ids_2": 52,
        "num_ids_4": 111
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\nassert solution(\"7 8 9\") == \"9 8 7\"\nassert solution(\"10 11 12\") == \"12 11 10\"\nassert solution(\"13 14 15\") == \"15 14 13\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 4 5\"\nassert solution(\"7 8 9\") == \"9 7 8\"\nassert solution(\"10 11 12\") == \"12 10 11\"\nassert solution(\"13 14 15\") == \"15 13 14\"",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"100\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"100\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"30 100\") == \"100\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"30 100\") == \"100\\n\", \"Test 1\"\nassert solution(\"10 20\") == \"100\\n\", \"Test 2\"\nassert solution(\"12 40\") == \"200\\n\", \"Test 3\"\nassert solution(\"6 13\") == \"130\\n\", \"Test 4\"\nassert solution(\"18 250\") == \"320\\n\", \"Test 5\"",
        "num_ids_2": 47,
        "num_ids_4": 92
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 100\") == \"100\"\nprint(\"Test Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('30 100') == '100'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"30 100\") == \"100\", \"Your solution is incorrect. Please see the sample output for more details.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-++\") == \"2\", \"Test 1 Failed\"\nassert solution(\"+++++\") == \"1\", \"Test 2 Failed\"\nassert solution(\"+++++++\") == \"1\", \"Test 3 Failed\"\nassert solution(\"++++--\") == \"0\", \"Test 4 Failed\"\nassert solution(\"----+\") == \"1\", \"Test 5 Failed\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\nprint('All tests passed!')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"+-++\") == \"2\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-+++\") == \"2\"\nassert solution(\"+++\") == \"0\"\nassert solution(\"---\") == \"0\"\nassert solution(\"----\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Actual: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"+-++\") == \"2\\n\"\nassert solution(stdin=\"---\") == \"0\\n\"\nassert solution(stdin=\"-----\") == \"0\\n\"\nassert solution(stdin=\"--+++\") == \"3\\n\"\nassert solution(stdin=\"+--+++\") == \"13\\n\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei', 'Test case 1 failed'\nassert solution('2019/04/31') == 'TBD', 'Test case 2 failed'\nassert solution('2019/04/29') == 'Heisei', 'Test case 3 failed'\nassert solution('2018/04/30') == 'TBD', 'Test case 4 failed'\nassert solution('2019/03/30') == 'TBD', 'Test case 5 failed'",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/04/30\") == \"TBD\"\nassert solution(\"2021/04/30\") == \"TBD\"\nassert solution(\"2020/05/01\") == \"TBD\"\nassert solution(\"2020/05/30\") == \"TBD\"\nassert solution(\"2020/06/01\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2019/04/30) == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(1999/04/30) == \"TBD\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\\n') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337\\n') == '3'",
        "num_ids_2": 103,
        "num_ids_4": 131
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"14\"\nassert solution(stdin) == \"9\"\nassert solution(stdin) == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == 14\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == 9\nassert solution(\"3\\n1337 1337 1337\") == 3",
        "num_ids_2": 97,
        "num_ids_4": 122
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\n\nfrom typing import List",
        "num_ids_2": 99,
        "num_ids_4": 125
    },
    {
        "number": 4405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"2 3 1 2 1 3 2 1 2 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"2 1 1 2 3 2 3 3 1 1\\n\") == \"2\\n1 2 3\\n\"\nassert solution(\"1 2 1 1\\n1 2 2 3\\n\") == \"2\\n1 1 3\\n\"\nassert solution(\"1 1 1\\n\") == \"0\\n\"\nassert solution(\"1 1 1\\n1 2 2 3\\n1 3 3 3\\n\") == \"3\\n2 3 1\\n2 2 2\\n1 1\\n\"\nassert solution(\"1 1 1\\n1 2 2 3\\n1 3 3 3\\n2 3 2\\n\") == \"3\\n2 3 1\\n2 2 2\\n1 1\\n\"\nassert solution(\"1 1 1\\n1 2 2 3\\n1 3 3 3\\n3 2 3\\n4 1 3\\n5 1 2\\n6 2 1\\n7 1 1\\n8 1 1\\n9 1 1\\n10 1 1\\n\") == \"3\\n2 3 1\\n2 2 2\\n1 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 159
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, but got {solution(input_str)}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input {input()}, Output {output()}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '''\n2\n2 1\n'''\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '''\n3\n1 3 2 2 3 1 3 3\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n\") == \"1\\n2\\n\"\nassert solution(\"5 2\\n1 2\\n\") == \"1\\n2\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 137
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == solution2, \"Expected solution to be the same as solution2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, f\"Test failed. Expected: {expected_solution}, Received: {solution}\"\nprint(\"Test passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1 \"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2 \"\nassert solution(\"1 2\\n\") == \"1\\n\"\nassert solution(\"7 1\\n1 1\\n\") == \"1\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 114
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n-1\\n3\\n2'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\\n-1\\n3\\n2\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n-1\\n3\\n2\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '1\\n-1\\n3\\n2'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"1\n-1\n3\n2\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"21\", \"Expected '21', but got '{}'\".format(solution())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0\nassert solution(4) == 21\nassert solution(3) == 0\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9 9') == 21\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9 9') == 0",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 21 # add your solution here",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '21\\n'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0\\n'",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Solution {solution} does not match expected output {expected_output}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\") == \"21\\n\"\nassert solution(\"Input\\n3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\") == \"21\\n\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\") == \"0\\n\"",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0, \"No input provided\"\nassert solution(\"4 3\\n1 3 2 8 5 5 8 2 2 8 5 2\\n1 2 2 5\\n2 6 7\\n\") == 21, \"Incorrect output\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n\") == 0, \"Incorrect output\"",
        "num_ids_2": 73,
        "num_ids_4": 126
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"0\"\n\nfrom typing import List\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n2 4 6 6 6\n\"\"\"\n) == \"\"\"\n2\n1 2 3 \n1 1 2 \n\"\"\"\n\nassert solution(\n\"\"\"\n3\n2 8 10\n\"\"\"\n) == \"\"\"\n2\n2 2 1 \n2 3 2 \n\"\"\"\n\nassert solution(\n\"\"\"\n4\n1 1 1 1\n\"\"\"\n) == \"\"\"\n0\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 75,
        "num_ids_4": 112
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"Output\\n2\\n1 2 3\\n1 1 2\\n\"\n\nassert solution(\"Input\") == \"Output\\n2\\n2 2 1\\n2 3 2\\n\"\n\nassert solution(\"Input\") == \"Output\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3 2 8 10\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4 1 1 1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 99
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 6 6 6\") == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(\"3\\n2 8 10\") == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 71,
        "num_ids_4": 104
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n1 2 3\\n1 1 2\\n\"\nassert solution(input()) == \"2\\n2 2 1\\n2 3 2\\n\"\nassert solution(input()) == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3') == '2\\n2 2 1\\n2 3 2\\n'\nassert solution(stdin='4') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"1\\n1\\n0\\n1\\n1\\n1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"6\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"1\\n1\\n0\\n1\\n1\\n1\") == \"0\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 127,
        "num_ids_4": 291
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"2\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"0\"\nassert solution(\"1\\n2\\n0\\n1\\n1\\n1\") == \"1\\n1\\n0\\n1\\n0\\n0\"",
        "num_ids_2": 152,
        "num_ids_4": 192
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n2\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\\n\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\\n\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 194,
        "num_ids_4": 194
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"100010\\n6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"",
        "num_ids_2": 190,
        "num_ids_4": 190
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\\n2\\n0\\n1\\n1\\n1\"\nassert solution(\"3 1\\n011\\n1 1\\n0\") == \"1\"\nassert solution(\"2 2\\n000\\n0 0\\n0 1\\n0 1\") == \"1\"\n\nfrom typing import List",
        "num_ids_2": 112,
        "num_ids_4": 144
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    7 2\n    11 11\n    9 11\n    7 8\n    8 9\n    7 8\n    9 11\n    7 9\n    \"\"\"\n) == \"3\\n4 6 7\"\n\nassert solution(\n    \"\"\"\n    5 1\n    29 30\n    30 30\n    29 29\n    28 30\n    30 30\n    \"\"\"\n) == \"3\\n1 4 5\"\n\nassert solution(\n    \"\"\"\n    6 1\n    2 3\n    3 3\n    2 3\n    2 2\n    2 3\n    2 3\n    \"\"\"\n) == \"4\\n1 3 5 6\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(6, 1)) == \"4\\n1 3 5 6\"\nassert solution(str(5, 1)) == \"3\\n1 4 5\"\nassert solution(str(5, 2)) == \"3\\n1 3 5\"\nassert solution(str(6, 2)) == \"4\\n1 3 5 6\"\nassert solution(str(1, 1)) == \"0\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7 \\n'\n\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5 \\n'\n\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n\") == \"3\\n1 2 4 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 235
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n4 6 7 \\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 4 5 \\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n4 6 7\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 4 5\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution_part1(stdin)\nprint(\"Test Passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    4\n    5 6 15 30\n    4\n    10 6 30 15\n    3\n    3 4 6\n''') == '30\\n31\\n10'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Solution {solution(stdin)} does not match the expected output {expected_output}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"30\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\") == \"30\\n31\\n10\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == '30\\n31\\n10'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output', 'Your code is incorrect'\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 30\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == '30\\n31\\n10'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n1\\n2\\n1\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"2\n1\n2\n1\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42') == '2\\n1\\n2\\n1\\n'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"The solution is incorrect\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"\nassert solution(\"1\\n42\") == \"1\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\ndef main():\\n\\tpass\\n\\nif __name__ == '__main__':\\n\\tmain()\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\") == \"2\\n1\\n2\\n1\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 2, 3, 4) == \"YES\"\nassert solution(1, 2, 3, 6) == \"NO\"\nassert solution(5, 2, 6, 27) == \"NO\"\nassert solution(3, 3, 5, 18) == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"NO\"\nassert solution(\"3 3 5 18\") == \"YES\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES', 'Incorrect answer'\nassert solution(input()) == 'NO', 'Incorrect answer'\nassert solution(input()) == 'NO', 'Incorrect answer'\nassert solution(input()) == 'YES', 'Incorrect answer'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n\") == \"YES\\nNO\\nNO\\nYES\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} is incorrect. Expected output: '{expected_output}', Received output: '{solution(input())}'\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"NO\"\nassert solution(\"3 3 5 18\") == \"YES\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES'\nassert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n') == 'NO'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output\\nActual: {solution(stdin)}\\nExpected: {expected}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1\"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\\n\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n\"\nassert solution(\"5\\n4 3 1 5 3\\n\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \\n\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"YES\\n0\\n3 \\n4\\n1 1 2 3 \\n\"\nassert solution(\"5\\n4 3 2 1 0\\n\") == \"YES\\n4\\n3 2 1 0 \\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 94,
        "num_ids_4": 162
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4''') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1 '\nassert solution('''5\n4 3 1 5 3''') == 'YES\\n1\\n3 \\n4\\n5 4 3 1 '\nassert solution('''5\n1 1 2 1 2''') == 'NO\\n'\nassert solution('''5\n0 1 2 3 4''') == 'YES\\n0'",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\\n\"\nassert solution(\"5\\n4 3 2 1 0\") == \"YES\\n4 3 2 1 0\"",
        "num_ids_2": 86,
        "num_ids_4": 135
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1\"\nassert solution(\"5 4 3 1 5 3\") == \"YES\\n1\\n3\\n4\\n5 4 3 1\"\nassert solution(\"5 1 1 2 1 2\") == \"NO\"\nassert solution(\"5 0 1 2 3 4\") == \"YES\\n0\"\nprint(\"All test cases passed\")",
        "num_ids_2": 82,
        "num_ids_4": 125
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n7 2 7 3 3 1 4\") == \"YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \"\nassert solution(\"5\\n4 3 1 5 3\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\nassert solution(\"5\\n1 1 2 1 2\") == \"NO\"\nassert solution(\"5\\n0 1 2 3 4\") == \"YES\\n0\"",
        "num_ids_2": 86,
        "num_ids_4": 131
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7\n7 2 7 3 3 1 4\n\"\"\") == \"YES\\n2\\n3 7\\n5\\n7 4 3 2 1 \"\n\nassert solution(\"\"\"5\n4 3 1 5 3\n\"\"\") == \"YES\\n1\\n3 \\n4\\n5 4 3 1 \"\n\nassert solution(\"\"\"5\n1 1 2 1 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"5\n0 1 2 3 4\n\"\"\") == \"YES\\n0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == -1",
        "num_ids_2": 118,
        "num_ids_4": 166
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1') == '-1'",
        "num_ids_2": 116,
        "num_ids_4": 163
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == -1",
        "num_ids_2": 118,
        "num_ids_4": 166
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"18\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == 18\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\") == 8\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\") == -1\n",
        "num_ids_2": 114,
        "num_ids_4": 160
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"18\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\\nInput\\n5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\\nInput\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\\nOutput\\n18\\n-1\\n') == '18\\n'\nassert solution('Input\\n5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\\nInput\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\\nOutput\\n8\\n') == '8\\n'\nassert solution('Input\\n5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\\nOutput\\n-1\\n') == '-1\\n'",
        "num_ids_2": 286,
        "num_ids_4": 349
    },
    {
        "number": 4416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '18'\nassert solution(open('input2.txt').read()) == '8'\nassert solution(open('input3.txt').read()) == '-1'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"2\\n6\\n-1\\n7\"\nassert solution(5) == \"2\\n6\\n-1\\n7\"\nassert solution(7) == \"-1\\n7\"",
        "num_ids_2": 40,
        "num_ids_4": 53
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['2', '6', '-1', '7']\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num} failed\"\n\ntest_case_num = 1",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"2\n6\n-1\n7\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"2\\n6\\n-1\\n7\"\nassert solution(\"2\\n6\") == \"6\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"-1\"\nassert solution(\"5\\n6\") == \"6\"\nassert solution(\"3\\n1\\n5\\n2\\n6\\n7\\n8\\n9\\n10\") == \"7\"\nassert solution(\"5\\n6\\n10\") == \"6\"\nassert solution(\"3\\n1\\n5\\n2\\n6\\n7\\n8\\n9\\n10\") == \"7\"",
        "num_ids_2": 85,
        "num_ids_4": 160
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5') == '2\\n6\\n-1\\n7'",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 125
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 8 15 16 23\") == \"5\\n\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 125
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 8 15 16 23\\n\") == 5\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == 0\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == 3\n",
        "num_ids_2": 70,
        "num_ids_4": 122
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 5\nassert solution(12) == 0\nassert solution(15) == 3",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 8 15 16 23\\n\") == \"5\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\\n\") == \"0\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\\n\") == \"3\"",
        "num_ids_2": 72,
        "num_ids_4": 125
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_file()) == expected, f\"Solution should return {expected}, but returned {solution(read_file())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n8\\n15\\n16\\n23\\n42\") == \"5\\n\", \"Your code is incorrect. The output should be 5.\"\nassert solution(\"12\\n4 8 4 15 16 8 23 15 16 42 23 42\") == \"0\\n\", \"Your code is incorrect. The output should be 0.\"\nassert solution(\"15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\") == \"3\\n\", \"Your code is incorrect. The output should be 3.\"",
        "num_ids_2": 103,
        "num_ids_4": 169
    },
    {
        "number": 4418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"\nassert solution(\"6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 206,
        "num_ids_4": 206
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\\n') == '0\\n3\\n2\\n92\\n87654322\\n9150\\n'",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0\\n3\\n2\\n92\\n87654322\\n9150\\n', 'Expected output not found.'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"0\"\nassert solution(6) == \"0\"\nassert solution(7) == \"0\"\nassert solution(8) == \"0\"\nassert solution(9) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5\\n13\\n18\\n1337\\n123456789\\n100500\\n9000\\n\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n2\\n2\\n92\\n87654322\\n9150\\n\", \"The solution is not correct.\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n3\\n2\\n92\\n87654322\\n9150\\n\", input()",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed: expected {expected_output}, got {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\", \"Input and output are not matched.\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {t+1} failed.\" for t in range(int(input())):\n    x, y, n = map(int, input().split())\n    k = max(0, n - x % y)\n    print(k)",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'\nassert solution('3 4 5\\n10 1 2\\n90000000 1 1000000000\\n3 3 3') == '45\\n1000000000\\n3333333333\\n'",
        "num_ids_2": 221,
        "num_ids_4": 221
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\") == \"12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\"\n",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n5\\n12345\\n5\\n0\\n4\\n10\\n5\\n15\\n17\\n8\\n54321\\n499999993\\n10\\n5\\n187\\n2\\n0\\n999999999\\n\\nOutput\\n12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998') == '12339\\n0\\n15\\n54306\\n999999995\\n185\\n999999998\\n', \"Test 1 failed\"",
        "num_ids_2": 200,
        "num_ids_4": 200
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"\n",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output.\\ninput: {input()}, expected: {expected}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == 6\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == 8\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == 4",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Received: {solution(input())}, Expected: {expected_output}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed\"\nassert solution(input2) == output2, f\"Test 2 failed\"\nassert solution(input3) == output3, f\"Test 3 failed\"\nassert solution(input4) == output4, f\"Test 4 failed\"\nassert solution(input5) == output5, f\"Test 5 failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed for case: {input()}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"\n\ninput_data = \"\"\"\n7 2\n1 2 2 3 2 4 10\n\"\"\"\n\ninput_data = [int(x) for x in input_data.strip().split()]\n\nn, k = input_data\n\nd = [int(x) for x in input(\"Enter the numbers of candies in each box: \").split()]\n\nmax_boxes = k * n\n\nfor i in range(n):\n    if sum([d[i] + d[j] for j in range(i+1, n)]) % k!= 0:\n        max_boxes -= 1\n\nprint(max_boxes)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\\n\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\\n\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 91
    },
    {
        "number": 4421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"\n",
        "num_ids_2": 58,
        "num_ids_4": 85
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\nABC') == 'aBC'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\nABC') == 'aBC'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3 1\\nABC') == 'aBC'\nassert solution(stdin='3 2\\nXYZ') == 'xyz'\nassert solution(stdin='3 3\\n') == ''\nassert solution(stdin='3 4\\nABCD') == 'ABCD'\nassert solution(stdin='3 5\\nA') == 'a'\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"aBC\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"5 2\\nDEFGHIJKLMNOPQRSTUVWXYZ\") == \"defghijklmnopqrstuvwxyz\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"5\\nnewyork 20\\nparis 10\\nberlin 50\\nberlin 35\\nparis 60\\nnewyork 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"3\\nhannover 20\\nsanfrancisco 10\\nbeijing 50\\nbeijing 35\\nsanfrancisco 60\\nhannover 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"7\\nchicago 20\\nlosangeles 10\\nlondon 50\\nlondon 35\\nlondon 60\\nlosangeles 40\\nchicago 50\") == \"3\\n4\\n6\\n1\\n5\\n2\"\nassert solution(\"2\\nparis 20\\nsanfrancisco 10\\nbeijing 50\\nbeijing 35\\nsanfrancisco 60\\nparis 40\") == \"1\\n5\\n2\"",
        "num_ids_2": 142,
        "num_ids_4": 288
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'\nassert solution('1\\n4\\n') == '1\\n4\\n'\nassert solution('6\\n\\n\\n\\n\\n\\n') == ''",
        "num_ids_2": 97,
        "num_ids_4": 117
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\nassert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 139,
        "num_ids_4": 1027
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\kazan 50\\kazan 35\\nmoscow 60\\khabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '3\\n4\\n6\\n1\\n5\\n2\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2\\n'\nassert solution('5\\nmoscow 20\\nmoscow 30\\nmoscow 40\\nmoscow 50\\nmoscow 60\\nmoscow 70\\n') == '3\\n4\\n1\\n2\\n5\\n6\\n'\nassert solution('4\\nkhabarovsk 20\\nmoscow 10\\nmoscow 20\\n') == '3\\n4\\n6\\n1\\n'\nassert solution('4\\nmoscow 20\\n') == '3\\n4\\n6\\n'\nassert solution('4\\nmoscow 20\\nmoscow 30\\nmoscow 40\\nmoscow 50\\nmoscow 60\\nmoscow 70\\n') == '3\\n4\\n1\\n2\\n5\\n6\\n'",
        "num_ids_2": 148,
        "num_ids_4": 222
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\kazan 50\\kazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\", \"Test case 1 failed\"\nassert solution(\"3 900\") == \"No\\n\", \"Test case 2 failed\"\nassert solution(\"1 500\") == \"Yes\\n\", \"Test case 3 failed\"\nassert solution(\"5 500\") == \"No\\n\", \"Test case 4 failed\"\nassert solution(\"1 501\") == \"No\\n\", \"Test case 5 failed\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"3 500\") == \"No\"\nassert solution(\"4 900\") == \"Yes\"\nassert solution(\"5 500\") == \"No\"\nassert solution(\"6 900\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\"\nassert solution(\"10 200\") == \"No\\n\"\nassert solution(\"5 200\") == \"No\\n\"\nassert solution(\"15 200\") == \"No\\n\"\nassert solution(\"100 500\") == \"Yes\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 900\") == \"Yes\", \"Takahashi has K 500-yen coins. If these coins add up to X yen or more, print Yes; otherwise, print No.\"\nassert solution(\"4 500\") == \"No\", \"Takahashi has K 500-yen coins. If these coins add up to X yen or more, print Yes; otherwise, print No.\"\nassert solution(\"8 500\") == \"Yes\", \"Takahashi has K 500-yen coins. If these coins add up to X yen or more, print Yes; otherwise, print No.\"",
        "num_ids_2": 98,
        "num_ids_4": 147
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\\n\", \"Your solution is not correct!\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"6 1\") == \"0.0\"\nassert solution(\"5 5\") == \"1.0\"\nassert solution(\"10 10\") == \"0.0\"\nassert solution(\"1 1\") == \"0.0\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.145833333333\" # correct\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\"  # expected output: 0.145833333333\nassert solution(\"4 5\") == \"0.0\\n\"  # expected output: 0.0\nassert solution(\"6 7\") == \"0.5\\n\"  # expected output: 0.5\nassert solution(\"8 9\") == \"0.833333333333\\n\"  # expected output: 0.833333333333\nassert solution(\"10 10\") == \"1.0\\n\"  # expected output: 1.0\nassert solution(\"1 2\") == \"0.0\\n\"  # expected output: 0.0\nassert solution(\"1 3\") == \"0.333333333333\\n\"  # expected output: 0.333333333333\nassert solution(\"2 4\") == \"0.666666666667\\n\"  # expected output: 0.666666666667\nassert solution(\"3 5\") == \"0.75\\n\"  # expected output: 0.75\nassert solution(\"4 6\") == \"1.0\\n\"  # expected output: 1.0\nassert solution(\"5 7\") == \"0.875\\n\"  # expected output: 0.875\nassert solution(\"6 8\") == \"0.75\\n\"  # expected output: 0.75\nassert solution(\"7 9\") == \"0.625\\n\"  # expected output: 0.625\nassert solution(\"8 10\") == \"0.5\\n\"  # expected output: 0.5\nassert solution(\"9 10\") == \"0.375\\n\"  # expected output: 0.375\nassert solution(\"10 10\") == \"1.0\\n\"  # expected output: 1.0\n",
        "num_ids_2": 73,
        "num_ids_4": 145
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10') == '0.145833333333'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"3 10 100\") == \"0.145833333333\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"3 1000000\") == \"0.0\"\nassert solution(\"10 10\") == \"0.0\"\nassert solution(\"0 0\") == \"0.0\"",
        "num_ids_2": 56,
        "num_ids_4": 89
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.145833333333\\n\", \"Test Failed\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.966666666667\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.145833333333\"\nassert solution(\"7 10\") == \"0.145833333333\"\nassert solution(\"10 10\") == \"0.145833333333\"\nassert solution(\"1 10\") == \"0.145833333333\"",
        "num_ids_2": 52,
        "num_ids_4": 105
    },
    {
        "number": 4425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\\n\"\nassert solution(\"5 10\") == \"0.724166666667\\n\"\nassert solution(\"7 10\") == \"0.906111111111\\n\"\nassert solution(\"8 10\") == \"0.991666666667\\n\"\nassert solution(\"10 10\") == \"0.999166666667\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\", \"Test failed\"\n\nSolution:\n\nWe can solve this problem by using the modulo operator to check if the given day of the week is Sunday. If it is, we can add 7 to it and subtract 1 from it to get the day of the week of the next Sunday. If it is not, we can simply return 0, as the next Sunday will not occur today.\n\nHere is the Python code for the solution:\n\n```python\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SAT\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\", \"The function should return 1 for Saturday today, and tomorrow will be Sunday.\"\n\nassert solution(\"SUN\") == \"0\", \"The function should return 0 for Sunday today, and tomorrow will be Monday.\"\n\nassert solution(\"MON\") == \"1\", \"The function should return 1 for Monday today, and tomorrow will be Tuesday.\"\n\nassert solution(\"TUE\") == \"2\", \"The function should return 2 for Tuesday today, and tomorrow will be Wednesday.\"\n\nassert solution(\"WED\") == \"3\", \"The function should return 3 for Wednesday today, and tomorrow will be Thursday.\"\n\nassert solution(\"THU\") == \"4\", \"The function should return 4 for Thursday today, and tomorrow will be Friday.\"\n\nassert solution(\"FRI\") == \"5\", \"The function should return 5 for Friday today, and tomorrow will be Saturday.\"\n\nassert solution(\"SAT\") == \"5\", \"The function should return 5 for Saturday today, and tomorrow will be Sunday.\"",
        "num_ids_2": 57,
        "num_ids_4": 115
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SAT\") == \"1\\n\", \"Test Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\", \"Please provide the string S\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"\nprint(\"All tests passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SAT\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('SAT') == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 2 3') == 'Error: Invalid input'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"\n30\n50\n90\n170\n330\n650\n1290\n2570\n5130\n10250\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nprint(\"All test cases passed\")",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\", \\\n    \"Test Failed\"\n\nprint(\"Test Passed\")",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\", \"Incorrect output.\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\\n\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'\nassert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5\\n'\nassert solution('5\\n1 3 2 1 4\\n') == '4\\n'\nassert solution('3\\n4 1 2\\n') == '0\\n'",
        "num_ids_2": 50,
        "num_ids_4": 71
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '4'\nassert solution(input()) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\\n\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\\n\"\nassert solution(\"3\\n4 1 2\") == \"0\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"5\\n1 3 1 1 4\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\"\nassert solution(\"3\\n4 1 2\") == \"0\"",
        "num_ids_2": 18,
        "num_ids_4": 60
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 1 1 4\\n5\\n1 3 2 1 4\\n3\\n4 1 2\\n0') == '5\\n4\\n0'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5, \"The solution should return 5.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n100\\n50\\n10\\n1\\n1000000000\\n\") == \"YES\\n2 1 1000000000\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 3, 100, 100, 100, 50, 49, 49, 10, 30, 20, 1, 1000000000, 1000000000) == 'YES\\n3 2 1'\nassert solution(100, 100, 100, 50, 49, 49, 10, 30, 20, 1, 1000000000, 1000000000) == 'YES\\n100 100 100'\nassert solution(3, 2, 1, 1000000000, 1000000000, 1000000000, 1, 1000000000, 1000000000) == 'YES\\n1 1 1000000000'\nassert solution(1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000) == 'NO'\n\nfrom typing import List",
        "num_ids_2": 175,
        "num_ids_4": 349
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"YES\\n1 1 1000000000\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n3 2 1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"\nassert solution(\"5 3 3\\n1 2 1 1 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n2 2 1 1 1\\n\") == \"3\"\nassert solution(\"5 3 3\\n3 2 2 1 1\\n\") == \"2\"\nassert solution(\"5 3 3\\n4 1 1 1 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n4 1 1 1 1\\n\") == \"1\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == '4'\n\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '1'\n\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '5'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case + 1} failed.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 2 6\n    5 2 1 4 2\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    5 1 4\n    4 2 3 4 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5 3 3\n    1 2 3 1 1\n    \"\"\"\n) == \"5\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\\n\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\\n\") == \"5\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\\n\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected {expected_output}, but got {solution(input())}.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 2\\nabababa\\na b\\n') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d\\n') == '21'\nassert solution('7 1\\naaaaaaa\\nb\\n') == '0'",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaa\\nb\\n\") == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\nbbbbbbbb\\nb\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == 12\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == 21\nassert solution(\"7 1\\naaaaaaa\\nb\") == 0",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\"\nassert solution() == \"21\"\nassert solution() == \"0\"",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 2\\nabacaba\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\nf a d') == '21'\nassert solution('7 1\\naaaaaa\\nb') == '0'",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\"\nassert solution(\"4\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\") == \"2\\n-1\"\nassert solution(\"10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\"",
        "num_ids_2": 162,
        "num_ids_4": 243
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"4\\n3 2 4 1\\n\"\nassert solution(\"5\\n-1000000000 1 -1000000000 1 -1000000000\") == \"1\\n\\n\"\nassert solution(\"5\\n1 2 3 -1 -2\") == \"3\\n\\n\"",
        "num_ids_2": 156,
        "num_ids_4": 234
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\\n-1\\n6\\n-2999999997\\n\"\n",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution() == '-1'\nassert solution() == '6'\nassert solution() == '-2999999997'",
        "num_ids_2": 16,
        "num_ids_4": 41
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n-1\\n6\\n-2999999997\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 -1 -2\\n4 -1 -2 -1 -3\\n10 -2 8 3 8 -4 -15 5 -2 -3 1\\n6 1 -1000000000 1 -1000000000 1 -1000000000\") == \"2\"\nassert solution(\"1 -1000000000 1 -1000000000 1 -1000000000\") == \"6\"\nassert solution(\"-2 8 3 8 -4 -15 5 -2 -3 1\") == \"-1\"\nassert solution
        "num_ids_2": 143,
        "num_ids_4": 1027
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"-2999999997\"",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\\n6\\n1 -1000000000 1 -1000000000 1 -1000000000') == '2\\n-1\\n6\\n-2999999997'\nassert solution('1 2 -3 4 5\\n6\\n-1 -2 -3 -4 -5') == '4'\nassert solution('1 -2 -1 3\\n2\\n-1 -1') == '0'\nassert solution('1 2 3 4 5') == '5'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'",
        "num_ids_2": 154,
        "num_ids_4": 197
    },
    {
        "number": 4432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n-1\\n6\\n-2999999997'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3 5\\n2 1\\n3 2\\n3 4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"3 5\n2 1\n3 2\n3 4\"\"\"\n\nassert solution() == \"\"\"4 1\n1 2\n1 3\"\"\"\n\nassert solution() == \"\"\"3 2\n2 5\n8 5\n6 1\n2 7\n1 2\n3 4\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"\n3 5\n2 1\n3 2\n3 4\n\nOutput\n3 5\n2 1\n3 2\n3 4\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\\n1 2\\n1 3\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 108,
        "num_ids_4": 197
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"answer\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10, 5), \"The input is incorrect.\"\nassert solution(10, 6), \"The input is incorrect.\"\nassert solution(10, 8), \"The input is incorrect.\"\nassert solution(10, 9), \"The input is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3 5\\n2 1\\n3 2\\n3 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\\n\"\nassert solution(\"8 9\\n1 2\\n2 3\\n2 5\\n1 6\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"",
        "num_ids_2": 114,
        "num_ids_4": 205
    },
    {
        "number": 4433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_solution, f\"Expected solution: {expected_solution}, Received solution: {solution}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '40'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n40\\n41664916690999888\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0\\n40\\n41664916690999888'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\n\nassert solution(\"3\\n5\\n499993\") == \"0\\n40\\n41664916690999888\"\n\nassert solution(\"1\\n7\\n499993\") == \"0\\n40\\n41664916690999888\"",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n499993\\n\") == \"0\\n40\\n41664916690999888\"\nassert solution(\"2\\n2\\n3\") == \"0\\n0\\n0\"\nassert solution(\"1\\n1\") == \"0\\n0\\n0\"\nassert solution(\"1\\n5\\n499992\") == \"40\\n41664916690999888\"\nassert solution(\"1\\n1\\n1\") == \"0\\n0\\n0\"\nassert solution(\"1\\n1\\n5\\n499992\") == \"0\\n40\\n41664916690999888\"\n\nfrom typing import List",
        "num_ids_2": 68,
        "num_ids_4": 128
    },
    {
        "number": 4434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0\\n40\\n41664916690999888'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1 1 2 -1 1 1 3 1 1\\n\", \"Please implement the solution as a function.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == [1, 1, 1, 2, -1, 1, 1, 3, 1, 1]\nprint(\"All test cases passed\")",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abc') == '1\\n1\\n1\\n1\\n1'\nassert solution('ab') == '1\\n1\\n1\\n-1'\nassert solution('aa') == '1\\n1\\n1\\n1'\nassert solution('aaabbb') == '1\\n1\\n1\\n1'\nassert solution('a') == '-1'\n",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == [\"1 1 1 2 -1 1 1 3 1 1\"]",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test Case {i+1} failed. Expected: {expected_output}, Received: {solution(stdin)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n64\\n32\\n97\\n2\\n12345\\n') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n64\\n32\\n97\\n2\\n12345\\n') == 'YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('5\\n64\\n32\\n97\\n2\\n12345\\n') == 'YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('5\\n64\\n32\\n97\\n2\\n12345\\n') == 'YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('5\\n64\\n32\\n97\\n2\\n12345\\n') == 'YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823'\nassert solution('5\\n64\\n32\\n97\\n2\\n12345\\n') == 'YES\\n2 4 8 \\nNO\\nNO\\nNO\\nYES\\n3 5 823'",
        "num_ids_2": 124,
        "num_ids_4": 248
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"YES\\n2 4 8 \"\nassert solution(1) == \"YES\\n2 3 5 \"\nassert solution(1) == \"NO\"\nassert solution(1) == \"NO\"\nassert solution(1) == \"YES\\n1 2 3 \"",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n64\\n32\\n97\\n2\\n12345\") == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"NO\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n5\") == \"YES\"",
        "num_ids_2": 82,
        "num_ids_4": 107
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES\\n3 5 823\"\nprint(\"YES\")\nprint(\"2 4 8\")\nprint(\"NO\")\nprint(\"NO\")\nprint(\"NO\")\nprint(\"YES\")\nprint(\"3 5 823\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == 0, \"Expected 0, got {}\".format(solution(6))  # expected: 0\nassert solution(2) == 1, \"Expected 1, got {}\".format(solution(2))  # expected: 1\nassert solution(4) == 2, \"Expected 2, got {}\".format(solution(4))  # expected: 2\nassert solution(10) == 2, \"Expected 2, got {}\".format(solution(10))  # expected: 2\nassert solution(11) == 2, \"Expected 2, got {}\".format(solution(11))  # expected: 2",
        "num_ids_2": 58,
        "num_ids_4": 118
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nababa\") == \"0\\nababa\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\") == \"0\\nabbab\"\nassert solution(\"2\\na\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: expected {expected_output}, got {solution(stdin)}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bbbb\") == \"abba\", \"Test case 1 failed\"\nassert solution(\"ababab\") == \"ababab\", \"Test case 2 failed\"\nassert solution(\"aa\") == \"ba\", \"Test case 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 54
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\") == \"0\\nabbab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(4) == 2\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 2\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nbbbb\\n\") == \"2\\nabba\"\nassert solution(\"6\\nabbab\\n\") == \"0\\nabbab\"\nassert solution(\"2\\naa\\n\") == \"1\\nba\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"abba\"\nassert solution(\"ababab\") == \"ababab\"\nassert solution(\"aa\") == \"ba\"\nassert solution(\"aaaa\") == \"aaaa\"",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nbbbb\") == \"2\\nabba\"\nassert solution(\"6\\nabcab\") == \"0\\nabcab\"\nassert solution(\"2\\naa\") == \"1\\nba\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed: solution({input_str})!= expected_output\\nInput: {input_str}\\nOutput: {expected_output}\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([8, 2, 2, 1, 4, 2, 3, 3, 1, 3, 4, 1, 1, 4, 3, 1, 2, 1]) == 15\nassert solution([5, 2, 1, 1, 0, 2, 0, 3, 2, 0, 3]) == 9\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"Output\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\") == \"15\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '15\\n', 'The solution is not correct'\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"15\"\nassert solution(stdin) == \"9\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"\nassert solution(\"4\\n2\\n\") == \"1\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"\nassert solution(\"1\\n2\\n\") == \"2\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"\nassert solution(\"1\\n3\\n\") == \"3\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"\nassert solution(\"2\\n2\\n\") == \"2\", \"Takahashi is solving quizzes. He has easily solved all but the last one.\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\") == \"2\\n\", \"Solution is incorrect\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"4\\n2\\n\") == \"2\"\nassert solution(\"3\\n2\\n\") == \"1\"\nassert solution(\"3\\n3\\n\") == \"3\"\nassert solution(\"3\\n4\\n\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\", \"The correct choice is 2\"\nassert solution(\"4\\n2\\n\") == \"1\", \"The correct choice is 1\"\nassert solution(\"1\\n2\\n\") == \"2\", \"The correct choice is 2\"\nassert solution(\"1\\n3\\n\") == \"3\", \"The correct choice is 3\"\nassert solution(\"3\\n3\\n\") == \"3\", \"The correct choice is 3\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"3\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n\") == \"3\"\nassert solution(\"4\\n1\\n\") == \"1\"\nassert solution(\"4\\n2\\n\") == \"2\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\") == \"2\", \"Incorrect solution\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n\") == \"2\\n\", \"Expected output: 2, got: {}\".format(solution(\"3\\n1\\n\"))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == 2, \"Your solution is incorrect.\"\nprint(\"Test passed!\")\n\nHere's the code that implements the solution:\n\n```python\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n') == '2\\n'\nprint(\"Test Passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1.000000000000\\n\", \"Incorrect output\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 1.000000000000\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"5\") == \"2.000000000000\"\nassert solution(\"1000\") == \"1.000000000000\"\nassert solution(\"9999\") == \"3.000000000000\"\nassert solution(\"0\") == \"0.000000000000\"",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1.000000000000\\n\", \"The output should be 1.000000000000, but it is %s\" % solution(input())",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1.000000000000\\n\", \"Test failed.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"1.000000000000\\n\"\nassert solution(\"10\\n
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1.000000000000\\n', \"Your function is not correct. Please check the constraints and sample input/output.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"1.000000000000\\n\", \"Incorrect output\"\nassert abs(solution(3) - 1.000000000000) <= 10**-6, \"Output should be accurate to 6 decimal places\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"1.000000000000\\n\"\nassert solution(10) == \"1.000000000000\\n\"\nassert solution(5) == \"1.000000000000\\n\"\nassert solution(20) == \"1.000000000000\\n\"\nassert solution(1) == \"1.000000000000\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1.000000000000\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\") == \"1+2=3\\n\"\nassert solution(\"2\\n3\\n4\") == \"5\\n\"\nassert solution(\"3\\n4\\n5\") == \"9\\n\"\nassert solution(\"2\\n5\\n6\") == \"11\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Hello World\\n\", \"The output should be 'Hello World'\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"Hello World\\n\"\nassert solution(\"2\\nA\\nB\\n\") == \"A+B\\n\"\nassert solution(\"3\\nA\\nB\\n\") == \"A+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\") == \"Hello World\\n\"\nassert solution(stdin=\"2\\nA\\nB\") == \"A+B\\n\"\nassert solution(stdin=\"3\\nC\\nD\\nE\") == \"C+D+E\\n\"\nassert solution(stdin=\"4\\n1\\n2\\n3\") == \"1+2+3\\n\"\nassert solution(stdin=\"5\\n4\\n5\\n6\") == \"4+5+6\\n\"\nassert solution(stdin=\"6\\n7\\n8\\n9\\nA\") == \"7+8+9+10+A\\n\"\nassert solution(stdin=\"7\\n10\\n11\\n12\\nB\") == \"10+11+12+13+B\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 89
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Hello World\\n\", \"Expected output: 'Hello World\\n', but got: '{}'\".format(solution(stdin))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Hello World\"\n\nassert solution(\"2\") == \"3\"\n\nassert solution(\"2\\nA\\nB\") == \"6\"\n\nassert solution(\"2\\nA\\nB\") == \"7\"\n\nassert solution(\"2\\nA\\nC\") == \"7\"",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\\nA\\nB\") == \"A+B\"\nassert solution(\"3\\nA\\nB\") == \"Error: Invalid input.\"\nassert solution(\"4\\nA\\nB\") == \"Error: Invalid input.\"\nassert solution(\"5\\nA\\nB\") == \"Error: Invalid input.\"",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Hello World\"\n\nassert solution(\"2\\nA\\nB\") == \"A+B\"\n\nassert solution(\"2\\n1\\nA\\nB\") == \"A+B\"\n\nassert solution(\"3\\nA\\nB\\n2\") == \"A+B\"\n\nassert solution(\"1\\nA\\nB\\n2\") == \"Hello World\"",
        "num_ids_2": 27,
        "num_ids_4": 65
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter your choice: \")) == \"Hello World\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == 'Hello World\\n'\nassert solution('2') == 'A+B\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"3333\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 1\") == \"11\"\nassert solution(\"2 2\") == \"22\"\nassert solution(\"3 3\") == \"33\"\nassert solution(\"4 4\") == \"44\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 1\") == \"11\"\nassert solution(\"1 9\") == \"91\"\nassert solution(\"9 1\") == \"91\"\nassert solution(\"9 9\") == \"991\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"2 3\") == \"23\"\nassert solution(\"6 9\") == \"699\"\nassert solution(\"1 9\") == \"91\"\nassert solution(\"7 6\") == \"76\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3333\", \"The expected output is 3333, but got: \" + solution(\"4 3\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"5 6\") == \"6666\"\nassert solution(\"7 8\") == \"8888\"\nassert solution(\"1 9\") == \"9999\"\nassert solution(\"1 10\") == \"10000\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3') == '3333'\nassert solution('2 4') == '4444'\nassert solution('5 6') == '6666'\nassert solution('7 8') == '8888'\nassert solution('9 0') == '0000'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"3333\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3333', \"Output should be 3333\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\", \"The solution should return 'b' for 'a'.\"\nassert solution(\"c\") == \"z\", \"The solution should return 'z' for 'c'.\"\nassert solution(\"z\") == \"y\", \"The solution should return 'y' for 'z'.\"\nassert solution(\"A\") == \"B\", \"The solution should return 'B' for 'A'.\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('a') == 'b', 'Invalid output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"c\") == \"b\", \"Incorrect Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"C\") == \"b\"\nprint(\"a is followed by b.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"c\") == \"z\"\nassert solution(\"Z\") == \"a\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('C') == 'b', 'The solution should return \"b\".'\nassert solution('a') == 'b', 'The solution should return \"b\".'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"c\") == \"b\"\nassert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"\nassert solution(\"A\") == \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('c') == 'b'\nassert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('A') == 'a'\nassert solution('Z') == 'a'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Solution should return 'atcoder'.\"\nassert solution(\"Python is awesome\") == \"is awesome awesome\", \"Solution should return 'is awesome awesome'.\"\nassert solution(\"Hello\") == \"Hello\", \"Solution should return 'Hello'.\"\nassert solution(\" \") == \" \", \"Solution should return''.\"\nassert solution(\"abc\") == \"abc\", \"Solution should return 'abc'.\"\n",
        "num_ids_2": 46,
        "num_ids_4": 79
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n\nSolution:\n\n```python\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Solution should return 'atcoder'.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Testcase 1\"\nassert solution(\"abc\") == \"abc\", \"Testcase 2\"\nassert solution(\"leetcode\") == \"leetcode\", \"Testcase 3\"\nassert solution(\"aabbcc\") == \"aabbcc\", \"Testcase 4\"\nassert solution(\"hello\") == \"hello\", \"Testcase 5\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('oder atc') == 'atcoder'\nprint('All tests passed!')",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('hello world') == 'worldhello'\nassert solution('cat dog') == 'dogcat'\nassert solution('abcd') == 'abcd'\nassert solution('a') == 'a'",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5\\n1 5 7 8 2\\n\\nOutput\\n0\\n\\nInput\\n6\\n5 1 2 4 6 3\\n\\nOutput\\n0\\n\\nInput\\n2\\n1000000 1000000\\n\\nOutput\\n1000000\") == \"0\\n\", \"Your solution is incorrect.\"\nassert solution(\"Input\\n5\\n1 5 7 8 2\\n\\nOutput\\n0\\n\\nInput\\n6\\n5 1 2 4 6 3\\n\\nOutput\\n0\\n\\nInput\\n2\\n1000000 1000000\\n\\nOutput\\n1000000\") == \"0\\n\", \"Your solution is incorrect.\"\nassert solution(\"Input\\n5\\n1 5 7 8 2\\n\\nOutput\\n0\\n\\nInput\\n6\\n5 1 2 4 6 3\\n\\nOutput\\n0\\n\\nInput\\n2\\n1000000 1000000\\n\\nOutput\\n1000000\") == \"0\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 216,
        "num_ids_4": 324
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 5 7 8 2\\n6\\n5 1 2 4 6 3\\n2\\n1000000 1000000') == 0\nassert solution('6\\n5 1 2 4 6 3\\n2\\n1000000 1000000') == 0\nassert solution('2\\n1000000 1000000') == 1000000",
        "num_ids_2": 98,
        "num_ids_4": 130
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"1000000\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\", \"Please provide a valid input\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0\n\nassert solution() == 0\n\nassert solution() == 1000000\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 27
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"\nfor stdin, expected in [(\"5\\n1 5 7 8 2\", \"0\\n\"), (\"6\\n5 1 2 4 6 3\", \"0\\n\"), (\"2\\n1000000 1000000\", \"1000000\\n\")]:\n    assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\", \"Expected '0', but got '{}'\".format(solution())",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 0, \"The correct value should be 0\"\nassert solution(6) == 0, \"The correct value should be 0\"\nassert solution(2) == 1000000, \"The correct value should be 1000000\"",
        "num_ids_2": 38,
        "num_ids_4": 69
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"\n",
        "num_ids_2": 51,
        "num_ids_4": 82
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"\nassert solution(\"10 3 12 4 15 9 16 10\") == \"20\"",
        "num_ids_2": 51,
        "num_ids_4": 112
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"\n",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but you provided {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\\n\"\nassert solution(\"1 1 100 99\\n100\") == \"1\\n\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\") == \"6\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\ninput_data = list(map(int, input().split()))\nn = input_data[0]\na = input_data[1]\nb = input_data[2]\nk = input_data[3]",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2 3 3\\n7 10 50 12 1 8\\n') == '5'\nassert solution('1 1 100 99\\n100\\n') == '1'\nassert solution('7 4 2 1\\n1 3 5 4 2 7 6\\n') == '6'",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\\n\") == \"5\"\nassert solution(\"1 1 100 99\\n100\\n\") == \"1\"\nassert solution(\"7 4 2 1\\n1 3 5 4 2 7 6\\n\") == \"6\"",
        "num_ids_2": 60,
        "num_ids_4": 93
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3\\n3 2 0 7 10 14'\n\nassert solution('''\n4 2\n0 1 2 3\n''') == '0\\n0 1 2 3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0'\nassert solution('''\n7 3\n3 2 0 7 10 12\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n3 2 0 7 10 14\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\\n3 2 0 7 10 14 \"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\\n3 2 0 7 10 14\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\nassert solution() == 3\nassert solution() == 0\nassert solution() == 0",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == 3\nassert solution(\"4 2\\n0 1 2 3\") == 0\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\\n\") == \"3\\n3 2 0 7 10 14\"\nassert solution(\"4 2\\n0 1 2 3\\n\") == \"0\\n0 1 2 3\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3\\n3 2 0 7 10 14\\n0\\n0 1 2 3'\nassert solution(stdin) == '0\\n0 1 2 3'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n3 2 0 6 10 12\") == \"3\"\nassert solution(\"4 2\\n0 1 2 3\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == 8\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == 20",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\") == \"20\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''5 3\n4 2 1 3 2\n3 5\n4 2\n2 5''') == '20'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n\") == \"8\"\nassert solution(\"5 3\\n4 2 1 3 2\\n3 5\\n4 2\\n2 5\\n\") == \"20\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\"\nassert solution(\"1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"NO\"",
        "num_ids_2": 226,
        "num_ids_4": 339
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"  # Correct solution",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Expected {expected}, received {solution}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\" for stdin, output in [\n    ('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000', 'YES'),\n    ('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000', 'NO'),\n    ('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000', 'YES'),\n    ('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000', 'NO'),\n    ('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000', 'YES'),\n]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\\n\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\\n\"",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == solution, \"Solution should not be equal to itself.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\n\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"Input\\n7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"",
        "num_ids_2": 213,
        "num_ids_4": 213
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'\nprint('All test cases passed!')",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == 3, \"The output should be 3.\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == 9, \"The output should be 9.\"\nassert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == 3, \"The output should be 3.\"",
        "num_ids_2": 223,
        "num_ids_4": 317
    },
    {
        "number": 4450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"",
        "num_ids_2": 207,
        "num_ids_4": 207
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1 \\n'\nassert solution(b'6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1 \\n'\nassert solution(b'10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 \\n'\n",
        "num_ids_2": 87,
        "num_ids_4": 169
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3 1\\n1 1 1 1 1\"\nassert solution(open(\"example_input.txt\", \"r\")) == \"7 2\\n2 2 1 1 2 1\"\nassert solution(open(\"input2.txt\", \"r\")) == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"",
        "num_ids_2": 64,
        "num_ids_4": 108
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Error: Please provide the input in the first line of the input.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\\n6\\n1 5 12 13 2 15\\n\\n10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"3 1\\n1 1 1 1 1\\n\\n7 2\\n2 2 1 1 2 1\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"",
        "num_ids_2": 196,
        "num_ids_4": 196
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for the following input: {input()}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 1\\n1 1 1 1 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'",
        "num_ids_2": 83,
        "num_ids_4": 163
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5009\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(\"7\") == \"1\\n9876\\n1\\n10000\\n1\"\nassert solution(\"10000\") == \"1\\n10000\\n1\\n10\"",
        "num_ids_2": 91,
        "num_ids_4": 119
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(test_cases, expected_outputs)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Case Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n', 'The solution is incorrect.'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5009) == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'\nassert solution(7) == '2\\n7 6 9000\\n1\\n1'\nassert solution(10000) == '2\\n10000\\n1\\n10'\nassert solution(10) == '1\\n10'",
        "num_ids_2": 88,
        "num_ids_4": 131
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(stdin) == \"3\\n5000 9 70000\\n1\\n70000\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(stdin) == \"4\\n5000 9 70000 800000\\n1\\n70000\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"\nassert solution(stdin) == \"5\\n5000 9 70000 800000 900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 128,
        "num_ids_4": 1027
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5009\\n7\\n9876\\n10000\\n10\\n\") == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed\"\nfor i in range(t):\n    n = int(input())\n    k = int(input())\n    result = solution(str(n))\n    print(result)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"Your solution is {solution}, while we expected {expected_solution}.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()}) returned {solution(input())}, but expected {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 136,
        "num_ids_4": 136
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed!\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''1 1 1 1 1\n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n\nfrom typing import List\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output: 1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n1 \n1 \n1 \n1 \n1 \n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Test case {test_case} has incorrect output. Expected: {expected}, Received: {solution(stdin=input())}\"\n\ntest_case = 1\nn = int(input())\np = list(map(int, input().split()))\np.sort()\n\np_set = set(p)\nassert len(p_set) == n, \"The size of the set should be equal to n\"\n\nday = 1\n\nbook_returned = 0\nfor p_i in p:\n    book_returned += day\n    day += 1\n\nprint(book_returned)\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '2'\nassert solution(5) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1\") == \"3\\n2\\n1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"output\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == output\nprint(\"Test passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"You cannot sell all the goods at the same price.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == expected, f\"Test failed. Expected {expected}, got {solution(stdin=None)}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '2'\nassert solution('1 2 3 4 5') == '3'\nassert solution('3\\n1 2 2\\n4\\n1 1 1 1') == '3'\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 67
    },
    {
        "number": 4454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"3\n2\n1\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\\n10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\\n\") == \"0 0 1 2 \\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0 0 1 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '''\n0 0 1 2\n'''\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '''\n5 4 0 5 3 3 9 0 2 5\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Output: {solution(input())}, Expected: {output()}\"\n\nn, k = map(int, input().split())\nprogrammers = list(map(int, input().split()))\n\nquarrels = []\nfor i in range(k):\n    x, y = map(int, input().split())\n    quarrels.append((x, y))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '''\n0 0 1 2\n'''\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '''\n5 4 0 5 3 3 9 0 2 5\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5') == '5 4 0 5 3 3 9 0 2 5\\n'",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n\\n10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'",
        "num_ids_2": 171,
        "num_ids_4": 171
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\") == \"0 0 1 2\\n\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\\n\"\n\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"abb\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabb\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n1 3 2\\n1 2 3\") == \"YES\\nab\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\\nabb\\ndef\\nabc\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abc') == 'YES\\nabb'\nassert solution('abcd') == 'YES\\ndef'\nassert solution('abcdefghi') == 'NO'",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution(input()))\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabb\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\") == \"YES\\nded\"\nassert solution(\"3 2\\n1 2 3\\n2 3 1\") == \"NO\"",
        "num_ids_2": 85,
        "num_ids_4": 111
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nabb\\ndef\"\nassert solution(\"10 3\\n1 2 3\\n1 3 4\\n1 4 3\\n1 5 4\\n1 6 5\\n1 7 6\\n1 8 7\\n1 9 8\\n1 10 9\") == \"YES\\nabcde\\nabcd\\nabcdf\\nabcdi\\nabcjd\\nabcdg\\nabcdh\\nabcdm\\nabcno\\nabcp\\nabcdq\\nabcdr\\nabcds\\nabcdt\\nabcdu\\nabcdv\\nabcdw\\nabcdx\\nabcdy\\nabcdz\"",
        "num_ids_2": 184,
        "num_ids_4": 184
    },
    {
        "number": 4456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 2 3\\n1 3 2\") == \"YES\\nab\"\nassert solution(\"2 3\\n3 1\\n2 1\") == \"NO\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 43\nassert solution(4) == 64\nassert solution(6) == 69\nassert solution(2) == 3",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '64'\nassert solution('6\\n5 4 5 4 4 5') == '69'\nassert solution('2\\n1 4') == '3'",
        "num_ids_2": 45,
        "num_ids_4": 84
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"43\\n1 3 2\\n64\\n2 1 4 3\\n69\\n6 1 3 5 2 4\"\nassert solution() == \"3\\n2 1\"\nassert solution() == \"64\\n2 1 4 3\\n69\\n6 1 3 5 2 4\"\nassert solution() == \"69\\n6 1 3 5 2 4\"\nassert solution() == \"64\\n2 1 4 3\\n69\\n6 1 3 5 2 4\"\nassert solution() == \"69\\n6 1 3 5 2 4\"",
        "num_ids_2": 59,
        "num_ids_4": 116
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n20 10 20\\n4\\n10 10 10 10\\n6\\n5 4 5 4 4 5\\n2\\n1 4\\n3\\n2 1') == '43\\n1 3 2'\nassert solution('4\\n10 10 10 10\\n6\\n5 4 5 4 4 5\\n2\\n1 4\\n3\\n2 1') == '64\\n2 1 4 3 '\nassert solution('6\\n5 4 5 4 4 5\\n2 1 3 5 2 4\\n4\\n1 3 5 2 4 5\\n2 1') == '69\\n6 1 3 5 2 4 '\nassert solution('2\\n1 4') == '3\\n2 1'",
        "num_ids_2": 141,
        "num_ids_4": 232
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 10 20\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10\") == \"64\\n2 1 4 3\"\nassert solution(\"6\\n5 4 5 4 4 5\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\"2\\n1 4\") == \"3\\n2 1\"",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=f\"\"\"\n    3\n    20 10 20\n\"\"\") == \"\"\"\n    43\n1 3 2\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n    4\n    10 10 10 10\n\"\"\") == \"\"\"\n    64\n2 1 4 3\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n    6\n    5 4 5 4 4 5\n\"\"\") == \"\"\"\n    69\n6 1 3 5 2 4\n\"\"\"\n\nassert solution(stdin=f\"\"\"\n    2\n    1 4\n\"\"\") == \"\"\"\n    3\n2 1\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 43\nassert solution(4) == 64\nassert solution(6) == 69\nassert solution(2) == 3",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"1\\n2 4\") == \"2\\n\"\nassert solution(\"3\\n1 2\") == \"2\\n\"\nassert solution(\"2\\n1 3\") == \"2\\n\"\nassert solution(\"4\\n3 1\") == \"2\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Test case 1 failed.\"\nassert solution(\"5\\n4 2 5 1 3\\n\") == \"3\\n\", \"Test case 2 failed.\"\nassert solution(\"5\\n4 2 5 1 3\\n4 2 5 1 3\") == \"3\\n\", \"Test case 3 failed.\"\nassert solution(\"5\\n4 2 5 1 3\\n4 2 5 1 3\\n\") == \"3\\n\", \"Test case 4 failed.\"\nassert solution(\"5\\n4 2 5 1 3\\n4 2 5 1 3\\n4 2 5 1 3\\n\") == \"3\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 62,
        "num_ids_4": 146
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 5 1 3\") == \"3\", \"Test Failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"3\\n1 4 2 5\") == \"3\\n\"\nassert solution(\"5\\n4 2 5 1 3\\n1 3 2 4\") == \"3\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"Test 1\"\nassert solution(\"5\\n3 5 4 2 1\") == \"3\\n\", \"Test 2\"\nassert solution(\"5\\n4 1 2 3 5\") == \"0\\n\", \"Test 3\"\nassert solution(\"5\\n2 5 1 4 3\") == \"2\\n\", \"Test 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\", \"Test 5\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 5 1 3\") == \"3\\n\", \"Test failed\"\nassert solution(\"5\") == \"1\\n\", \"Test failed\"\nassert solution(\"\") == \"0\\n\", \"Test failed\"\nassert solution(\"1 2 3 4\") == \"0\\n\", \"Test failed\"\nassert solution(\"5 4 3 2 1\") == \"3\\n\", \"Test failed\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\nassert solution(\"5\\n4 2 5 1 4\") == \"4\\n\"\nassert solution(\"5\\n4 2 5 1 5\") == \"5\\n\"\nassert solution(\"5\\n4 2 5 1 1\") == \"1\\n\"\nassert solution(\"5\\n4 2 5 1 3\") == \"3\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Please provide valid input.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4 2 5 1 3\\n\"\n    \"3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"5\\n\"\n    \"4 3 2 1\\n\"\n    \"4\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"5\\n\"\n) == \"3\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\\n\", \"The output is not correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n3 3 3 3\\n\") == \"1\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"3\\n2 1 3\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"4\\n3 3 3 3 3\") == \"1\"\nassert solution(\"4\\n3 3 3 3 3 3\") == \"2\"\nassert solution(\"4\\n3 3 3 3 3 3 3\") == \"2\"\nassert solution(\"4\\n3 3 3 3 3 3 3 3\") == \"3\"\n\nsolution(\"4\\n3 3 3 3 3 3 3 3\")",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"1\"\nassert solution(\"4\\na_1 a_2... a_N\\na_2 a_1... a_N\\na_3 a_4... a_N\") == \"1\"\nassert solution(\"4\\na_1 a_2... a_N\\na_2 a_1... a_N\\na_3 a_4... a_N\\na_4 a_3... a_N\") == \"1\"\nassert solution(\"4\\na_1 a_2... a_N\\na_2 a_1... a_N\\na_3 a_4... a_N\\na_4 a_3... a_N\\na_5 a_6... a_N\") == \"2\"\nassert solution(\"4\\na_1 a_2... a_N\\na_2 a_1... a_N\\na_3 a_4... a_N\\na_4 a_3... a_N\\na_5 a_6... a_N\\na_6 a_5... a_N\") == \"2\"",
        "num_ids_2": 64,
        "num_ids_4": 183
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\", \"Output: {}\\n\".format(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\"  # expected output: 1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\\n\"\nassert solution(\"5\\n2 2 3 2 5\") == \"2\\n\"\nassert solution(\"1\\n1\") == \"0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 59
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n3 3 3 3\\n\") == \"1\\n\"\nassert solution(stdin=\"4\\n2 4 1 4 2\\n\") == \"3\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"3\\n3 3 3\") == \"1\"\nassert solution(\"2\\n2 2 2\") == \"0\"\nassert solution(\"1\\n1 1 1\") == \"0\"\nassert solution(\"5\\n5 5 5\") == \"0\"\nassert solution(\"7\\n7 7 7\") == \"0\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"Invalid output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"Input is not correct\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Solution should print 1\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\", \"Solution should print 1\"\nassert solution(\"0 1 2 3 4\") == \"1\\n\", \"Solution should print 1\"\nassert solution(\"0 2 1 3 4\") == \"1\\n\", \"Solution should print 1\"\nassert solution(\"0 2 3 1 4\") == \"1\\n\", \"Solution should print 1\"\nassert solution(\"0 2 3 4 1\") == \"1\\n\", \"Solution should print 1\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"\nassert solution(\"0 2 3 4 6\") == \"2\\n\"\nassert solution(\"0 2 3 4 5 0\") == \"1\\n\"\nassert solution(\"0 2 3 4 5 1\") == \"2\\n\"\nassert solution(\"0 2 3 4 5 2\") == \"3\\n\"\n\nassert solution(\"10 10 10 10 10\") == \"10\\n\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 6\") == \"2\\n\"\nassert solution(\"1 2 3 4 5 0\") == \"1\\n\"\nassert solution(\"1 2 3 4 5 1\") == \"2\\n\"\nassert solution(\"1 2 3 4 5 2\") == \"3\\n\"\n\nassert solution(\"1 2 3 4 5 10\") == \"1\\n\"\nassert solution(\"1 2 3 4 6 10\") == \"2\\n\"\nassert solution(\"1 2 3 4 5 0 10\") == \"1\\n\"\nassert solution(\"1 2 3 4 5 1 10\") == \"2\\n\"\nassert solution(\"1 2 3 4 5 2 10\") == \"3\\n\"\n\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 10\") == \"1\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 11\") == \"2\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 12\") == \"3\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 13\") == \"4\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 14\") == \"5\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 15\") == \"6\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 16\") == \"7\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 17\") == \"8\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 18\") == \"9\\n\"\nassert solution(\"1 2 3 4 5 1 2 3 4 5 6 7 8 9 19\") == \"10\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\", \"The solution should be 1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\"\nassert solution(\"0 1 2 3 4\") == \"1\\n\"\nassert solution(\"5 4 3 2 1\") == \"1\\n\"\nassert solution(\"6 7 8 9 10\") == \"10\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"Your code is incorrect. Please check the code.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\\n\", \"The output should be '1'\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"0\\n\"  # Minimum possible value of S_{max} - S_{min} is 0.",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Output is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\\n\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"0\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Yes'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"4\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"5\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"6\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"7\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"8\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"9\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"10\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"11\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"12\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"13\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"14\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"15\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"16\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"17\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"18\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"19\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"20\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"21\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"22\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"23\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"24\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"25\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"26\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"27\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"28\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"29\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"30\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"31\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"32\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"33\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"34\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"35\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"36\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"37\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"38\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"39\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"40\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"41\\n1 10 100\\n\") == \"Yes\\n\"\nassert solution(\"42\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"43\\n1 10 100\\n\") == \"No\\n\"\nassert solution(\"44\\n1",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\na_1 a_2... a_N\\n\") == \"Yes\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\\n\"\nassert solution(\"1\\n1\") == \"No\\n\"\nassert solution(\"2\\n1 2\") == \"Yes\\n\"\nassert solution(\"3\\n1 2 3\") == \"No\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"No\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"Yes\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 10 100\\n\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 10 100\\n') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"5\\n1 10 100 1000 10000\") == \"Yes\"\nassert solution(\"10\\n
        "num_ids_2": 51,
        "num_ids_4": 1027
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na_1 a_2... a_N\\n1 10 100\\n\") == \"Yes\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\nassert solution(\"4\\n1 10 100\") == \"Yes\"\nassert solution(\"5\\n1 10 100\") == \"Yes\"\nassert solution(\"6\\n1 10 100\") == \"No\"\nassert solution(\"7\\n1 10 100\") == \"No\"\nassert solution(\"8\\n1 10 100\") == \"No\"\nassert solution(\"9\\n1 10 100\") == \"No\"\nassert solution(\"10\\n1 10 100\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"yx\\naxy\") == \"Yes\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"yx\\naxy\") == \"Yes\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"abc\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"yza\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('1 10 20') == 'YES'\nassert solution('7 5 2') == 'NO'\nassert solution('10 10 10') == 'NO'\nassert solution('10 10 5') == 'YES'\nassert solution('10 20 10') == 'NO'",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\", \"The given input is incorrect.\"\nassert solution(\"5 10 1\") == \"NO\", \"The given input is incorrect.\"\nassert solution(\"5 10 15\") == \"YES\", \"The given input is incorrect.\"",
        "num_ids_2": 43,
        "num_ids_4": 66
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"9 5 1\") == \"YES\"\nassert solution(\"6 7 1\") == \"YES\"\nassert solution(\"4 6 1\") == \"YES\"\nassert solution(\"8 10 1\") == \"YES\"\nassert solution(\"12 2 1\") == \"NO\"\nassert solution(\"15 3 2\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"25 5 10\") == \"YES\"\nassert solution(\"7 10 5\") == \"YES\"\nassert solution(\"25 10 5\") == \"NO\"\nassert solution(\"25 10 35\") == \"NO\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 2\") == \"1\\n\", \"The area of this yard excluding the roads should be 1 square yard.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\", \"The area of this yard excluding the roads should be 1.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"Output should be '1'\\n\"\nassert solution(\"1 3\") == \"2\\n\", \"Output should be '2'\\n\"\nassert solution(\"5 6\") == \"18\\n\", \"Output should be '18'\\n\"\nassert solution(\"10 10\") == \"500\\n\", \"Output should be '500'\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\", \"The area of this yard excluding the roads is not 1 square yard.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2 2') == '1\\n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 2') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\\n\", \"Test 1\"\nassert solution(\"3 4\") == \"16\\n\", \"Test 2\"\nassert solution(\"5 6\") == \"1728\\n\", \"Test 3\"\nassert solution(\"7 8\") == \"2880\\n\", \"Test 4\"\nassert solution(\"9 10\") == \"46304\\n\", \"Test 5\"",
        "num_ids_2": 39,
        "num_ids_4": 83
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"4 5 2\") == \"2\"\nassert solution(\"13 5 1\") == \"2\"\nassert solution(\"10 3 1\") == \"3\"\nassert solution(\"20 5 1\") == \"2\"\nassert solution(\"10 5 1\") == \"3\"\nassert solution(\"10 10 1\") == \"1\"\nassert solution(\"15 10 1\") == \"2\"\nassert solution(\"10 5 1\") == \"2\"\nassert solution(\"12 10 1\") == \"2\"\nassert solution(\"15 5 1\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13 3 1') == '3\\n'\nassert solution('10 3 2') == '2\\n'\nassert solution('15 2 1') == '2\\n'\nassert solution('13 3 2') == '2\\n'\nassert solution('13 3 2') == '2\\n'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"10 1 1\") == \"2\"\nassert solution(\"20 1 1\") == \"1\"\nassert solution(\"15 10 1\") == \"3\"\nassert solution(\"15 10 2\") == \"2\"\nassert solution(\"15 10 3\") == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='13 3 1') == '3'\nassert solution(stdin='5 4 2') == '2'\nassert solution(stdin='11 6 3') == '4'",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 3 1\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n\"\"\") == \"2\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\na 2 0\\nb 3 1\\nc 1 3\\nd 4 2\\ne 0 4\\nf 5 5\") == 2\nassert solution(\"2\\na 1\\nb 3\\nc 5\") == 1\nassert solution(\"1\\na 1\\nb 3\\nc 5\") == 1\nassert solution(\"5\\na 2\\nb 3\\nc 4\") == 0\n",
        "num_ids_2": 66,
        "num_ids_4": 108
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output for input [2 0, 3 1, 1 3, 4 2, 0 4, 5 5]\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\\n\"\n\nsolution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\")",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'\nassert solution(open('input.txt', 'r').read()) == '2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nprint(\"All test cases passed successfully!\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\\n3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n2 4\\n2 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n4 2\\n4 3\\n4 4\\n4 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5') == '2'",
        "num_ids_2": 115,
        "num_ids_4": 235
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\na_1 b_1\\na_2 b_2\\na_3 b_3\\nc_1 d_1\\nc_2 d_2\\nc_3 d_3\\nd_1 e_1\\ne_2 e_2\\ne_3 e_3\\nf_1 f_1\\nf_2 f_2\\nf_3 f_3\\ng_1 g_1\\ng_2 g_2\\ng_3 g_3\\nh_1 h_1\\nh_2 h_2\\nh_3 h_3\\ni_1 i_1\\ni_2 i_2\\ni_3 i_3\\nj_1 j_1\\nj_2 j_2\\nj_3 j_3\\n\") == \"2\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\\n101 102\\n103 104\\n105 106\\n107 108\\n109 110\\n111 112\\n113 114\\n115 116\\n117 118\\n119 120\\n121 122\\n123 124\\n125 126\\n127 128\\n129 130\\n131 132\\n133 134\\n135 136\\n137 138\\n139 140\\n141 142\\n143 144\\n145 146\\n147 148\\n149 150\\n151 152\\n153 154\\n155 156\\n157 158\\n159 160\\n161 162\\n163 164\\n165 166\\n167 168\\n169 170\\n171 172\\n173 174\\n175 176\\n177 178\\n179 180\\n181 182\\n183 184\\n185 186\\n187 188\\n189 190\\n191 192\\n193 194\\n195 196\\n197 198\\n199 200\\n201 202\\n203 204\\n205 206\\n207 208\\n209 210\\n211",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nassert solution(\"1 2\\n3 4\\n\") == \"6\"\nassert solution(\"2 3\\n5 6\\n\") == \"7\"\nassert solution(\"10 4\\n7 8\\n\") == \"11\"\nassert solution(\"2 10\\n1 2\\n3 4\\n\") == \"7\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 3') == '7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n0 3\\n\") == \"7\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '7'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"7\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"1 3\\n0 2\") == \"3\"\nassert solution(\"2 2\\n0 1\") == \"5\"\nassert solution(\"3 3\\n0 1\") == \"6\"\nassert solution(\"4 4\\n0 1\") == \"7\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\") == \"\"\"\n1\n1\n2\n\"\"\"\n\nassert solution(\"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"\"\"\n0\n2\n1\n\"\"\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n\"\"\") == \"\"\"\n1\n2\n3\n1\n2\n3\n\"\"\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n\"\"\") == \"\"\"\n0\n2\n1\n\"\"\"\n\nassert solution(\"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\") == \"\"\"\n0\n2\n1\n\"\"\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n\"\"\") == \"\"\"\n1\n2\n3\n1\n2\n3\n\"\"\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n\"\"\") == \"\"\"\n0\n2\n1\n\"\"\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n\"\"\") == \"\"\"\n1\n2\n3\n1\n2\n3\n\"\"\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\"\"\") == \"1\\n1\\n2\\n\"\n\nassert solution(\"\"\"10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\"\"\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1\\n1\\n2\\n'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1\\n'\n\nassert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1\\n1\\n2\\n'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0\\n2\\n1\\n'",
        "num_ids_2": 153,
        "num_ids_4": 306
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n2\\n1\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\nassert solution(stdin) == \"0\\n1\\n2\\n\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\\n\"\nassert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\") == \"1\\n1\\n2\\n\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\") == \"0\\n2\\n1\\n\"",
        "num_ids_2": 149,
        "num_ids_4": 298
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test {test_num} failed\"\nfor test_num, (n, expected) in enumerate(tests):\n    test_case = (n, expected)\n    print(f\"Test {test_num+1}:\")\n    print(f\"\\tInput: {test_case}\")\n    result = solution(test_case)\n    print(f\"\\tOutput: {result}\")\n    assert result == expected, f\"Test {test_num+1} failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0, \"0\"\nassert solution(2) == 1, \"1\"\nassert solution(3) == 2, \"2\"\nassert solution(4) == 2, \"2\"\nassert solution(5) == 3, \"3\"\nassert solution(6) == 4, \"4\"\nassert solution(7) == 5, \"5\"\nassert solution(8) == 6, \"6\"\nassert solution(9) == 6, \"6\"\nassert solution(10) == 7, \"7\"\nassert solution(11) == 7, \"7\"\nassert solution(12) == 8, \"8\"\nassert solution(13) == 8, \"8\"\nassert solution(14) == 9, \"9\"\nassert solution(15) == 9, \"9\"\nassert solution(16) == 10, \"10\"\nassert solution(17) == 10, \"10\"\nassert solution(18) == 11, \"11\"\nassert solution(19) == 11, \"11\"\nassert solution(20) == 11, \"11\"\nassert solution(21) == 12, \"12\"\nassert solution(22) == 12, \"12\"\nassert solution(23) == 13, \"13\"\nassert solution(24) == 14, \"14\"\nassert solution(25) == 14, \"14\"\nassert solution(26) == 15, \"15\"\nassert solution(27) == 16, \"16\"\nassert solution(28) == 16, \"16\"\nassert solution(29) == 17, \"17\"\nassert solution(30) == 18, \"18\"\nassert solution(31) == 18, \"18\"\nassert solution(32) == 19, \"19\"\nassert solution(33) == 19, \"19\"\nassert solution(34) == 20, \"20\"\nassert solution(35) == 21, \"21\"\nassert solution(36) == 21, \"21\"\nassert solution(37) == 22, \"22\"\nassert solution(38) == 22, \"22\"\nassert solution(39) == 23, \"23\"\nassert solution(40) == 23, \"23\"\nassert solution(41) == 24, \"24\"\nassert solution(42) == 24, \"24\"\nassert solution(43) == 25, \"25\"\nassert solution(44) == 25, \"25\"\nassert solution(45) == 25, \"25\"\nassert solution(46) == 26, \"26\"\nassert solution(47) == 27, \"27\"\nassert solution(48) == 27, \"27\"\nassert solution(49) == 28, \"28\"\nassert solution(50) == 29, \"29\"\nassert solution(51) == 30, \"30\"\nassert solution(52) == 30, \"30\"\nassert solution(53) == 30, \"30\"\nassert solution(54) == 30, \"30\"\nassert solution(55) == 31, \"31\"\nassert solution(56) == 31, \"31\"\nassert solution(57) == 31, \"31\"\nassert solution(58) == 32, \"32\"\nassert solution(59) == 32, \"32\"\nassert solution(60) == 33, \"33\"\nassert solution(61) == 33, \"33\"\nassert solution(62) == 34, \"34\"\nassert solution(63) == 34, \"34\"\nassert solution(64) == 35, \"35\"\nassert solution(65) == 35, \"35\"\nassert solution(66) == 36, \"36\"\nassert solution(67) == 3",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == '0'\nassert solution(14) == '4'\nassert solution(27) == '6'\nassert solution(1000000000000000000) == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 61
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0\"  # Replace n with 3 and check if it is equal to 1\nassert solution(27) == \"6\"  # Replace n with 27 and check if it is equal to 27\nassert solution(1000000000000000000) == \"6\"  # Replace n with 10^18 and check if it is equal to 10^18",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0, \"Expected 0, got {}\".format(solution(1)) # 0\nassert solution(2) == 1, \"Expected 1, got {}\".format(solution(2)) # 1\nassert solution(5) == 2, \"Expected 2, got {}\".format(solution(5)) # 2\nassert solution(1000000000000000000) == 72, \"Expected 72, got {}\".format(solution(10000000000000000000)) # 72",
        "num_ids_2": 52,
        "num_ids_4": 144
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # correct\nassert solution(20) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # correct\nassert solution(30) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # correct\nassert solution(14) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # correct\nassert solution(27) == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # correct\nassert solution(1000000000000000000) == \"-1\" # correct",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # Example 1\nassert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # Example 2\nassert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # Example 3\nassert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # Example 4\nassert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # Example 5\nassert solution() == \"0\\n4\\n6\\n6\\n-1\\n6\\n72\" # Example 6",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 0\nassert solution(25) == 4\nassert solution(30) == 6\nassert solution(14) == -1\nassert solution(27) == 6\nassert solution(1000000000000000000) == -1",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\\n6\\n72\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Please provide the correct implementation\"\nassert solution() == 4, \"Please provide the correct implementation\"\nassert solution() == 6, \"Please provide the correct implementation\"\nassert solution() == 6, \"Please provide the correct implementation\"\nassert solution() == -1, \"Please provide the correct implementation\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'NO'",
        "num_ids_2": 100,
        "num_ids_4": 200
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test case {t+1} failed\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nNO\\nYES\\nYES\", \"The solution is incorrect.\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'YES\\nNO\\nYES\\nYES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'YES\\nNO\\nYES\\nYES'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'YES\\nNO\\nYES\\nYES'",
        "num_ids_2": 122,
        "num_ids_4": 183
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'YES\\nNO\\nYES\\nYES\\n'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100\\n') == 'YES\\nNO\\nYES\\nYES'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\nNO\\nYES\\nYES'\nprint('PASSED')",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == 4\nassert solution(\"5\\nzcabd\\ndbacz\") == 0",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\\n\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\ndbacz') == '0'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\ndbacz\\n\") == \"0\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: '{expected_output}', got: '{solution(stdin)}'.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"YOUR CODE HERE\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'\nassert solution('6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999') == '8\\n198\\n-17\\n2999999997\\n0\\n1'",
        "num_ids_2": 215,
        "num_ids_4": 430
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\\n\"",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n8\\n198\\n-17\\n2999999997\\n0\\n1\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"8\\n198\\n-17\\n2999999997\\n0\\n1\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\") == \"8\\n198\\n-17\\n2999999997\\n0\\n1\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == '1\\n'\nassert solution('2') == '1\\n'\nassert solution('6') == '3\\n'\nassert solution('13') == '9\\n'\nassert solution('14') == '13\\n'\nassert solution('3620') == '27\\n'\nassert solution('10000') == '6561\\n'\nassert solution('1000000000000000000') == '1350851717672992089\\n'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Expected output: {output}\\nActual output: {solution(stdin=input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"\nassert solution(\"10\\n100\\n1000\\n10000\\n100000\\n1000000\\n10000000\\n100000000\\n1000000000\\n10000000000\\n100000000000\\n1000000000000\\n10000000000000\\n100000000000000\\n1000000000000000\\n10000000000000000\\n100000000000000000\\n1000000000000000000\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"",
        "num_ids_2": 397,
        "num_ids_4": 397
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\nassert solution(\"7\") == \"6\"\nassert solution(\"8\") == \"8\"\nassert solution(\"9\") == \"9\"\nassert solution(\"10\") == \"11\"\nassert solution(\"11\") == \"11\"\nassert solution(\"12\") == \"12\"\nassert solution(\"13\") == \"13\"\nassert solution(\"14\") == \"13\"\nassert solution(\"15\") == \"15\"\nassert solution(\"16\") == \"15\"\nassert solution(\"17\") == \"17\"\nassert solution(\"18\") == \"18\"\nassert solution(\"19\") == \"19\"\nassert solution(\"20\") == \"20\"\nassert solution(\"21\") == \"21\"\nassert solution(\"22\") == \"22\"\nassert solution(\"23\") == \"23\"\nassert solution(\"24\") == \"23\"\nassert solution(\"25\") == \"25\"\nassert solution(\"26\") == \"25\"\nassert solution(\"27\") == \"27\"\nassert solution(\"28\") == \"27\"\nassert solution(\"29\") == \"29\"\nassert solution(\"30\") == \"29\"\nassert solution(\"31\") == \"30\"\nassert solution(\"32\") == \"31\"\nassert solution(\"33\") == \"31\"\nassert solution(\"34\") == \"33\"\nassert solution(\"35\") == \"33\"\nassert solution(\"36\") == \"34\"\nassert solution(\"37\") == \"34\"\nassert solution(\"38\") == \"35\"\nassert solution(\"39\") == \"35\"\nassert solution(\"40\") == \"36\"\nassert solution(\"41\") == \"36\"\nassert solution(\"42\") == \"37\"\nassert solution(\"43\") == \"37\"\nassert solution(\"44\") == \"38\"\nassert solution(\"45\") == \"38\"\nassert solution(\"46\") == \"39\"\nassert solution(\"47\") == \"39\"\nassert solution(\"48\") == \"40\"\nassert solution(\"49\") == \"40\"\nassert solution(\"50\") == \"41\"\nassert solution(\"51\") == \"41\"\nassert solution(\"52\") == \"42\"\nassert solution(\"53\") == \"42\"\nassert solution(\"54\") == \"43\"\nassert solution(\"55\") == \"43\"\nassert solution(\"56\") == \"44\"\nassert solution(\"57\") == \"44\"\nassert solution(\"58\") == \"45\"\nassert solution(\"59\") == \"45\"\nassert solution(\"60\") == \"46\"\nassert solution(\"61\") == \"46\"\nassert solution(\"62\") == \"47\"\nassert solution(\"63\") == \"47\"\nassert solution(\"64\") == \"48\"\nassert solution(\"65\") == \"48\"\nassert solution(\"66\") == \"49\"\nassert solution(\"67\") == \"49\"\nassert solution(\"68\") == \"50\"\nassert solution(\"69\") == \"50\"\nassert solution(\"70\") == \"51\"\nassert solution(\"71\") == \"51\"\nassert solution(\"72\") == \"52\"\nassert solution(\"73\") == \"52\"\nassert solution(\"74\") == \"53\"\nassert solution(\"75\") == \"53\"\nassert solution(\"76\") == \"54\"\nassert solution(\"77\") == \"54\"\nassert solution(\"78\") == \"55\"\nassert solution(\"79\") == \"55\"\nassert solution(\"80\") == \"56\"\nassert solution(\"81\") == \"56\"\nassert solution(\"82\") == \"57\"\nassert solution(\"83\") == \"57\"\nassert solution(\"84\") == \"58\"\nassert solution(\"85\") == \"58\"\nassert solution(\"86\") == \"59\"\nassert solution(\"87\") == \"59\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n\"\nprint(solution(b\"8\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\\n\"))",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()} and expected output {expected}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n100000000000000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n100000000000000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n10000000000000000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n100000000000000000000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"\nassert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n10000000000000000000000000000000000000000\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089\"",
        "num_ids_2": 218,
        "num_ids_4": 452
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 8 8 7 2\") == \"177177\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"10 11 2 1 5\") == \"55\"\nassert solution(\"10 11 9 1 10\") == \"999999999\"\nassert solution(\"12343 43 4543 39 123212\") == \"99999999900000000\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"999999999\"\nfor i in range(1, 11):\n    for j in range(1, 11):\n        assert solution(str(i) + \" \" + str(j)) == str(i * j)\n",
        "num_ids_2": 68,
        "num_ids_4": 118
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\", \"The solution is incorrect.\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\nassert solution(\"2\\n1 1\\n2 3\\n5 7\\n8 10\\n\") == \"3\\n2\"\nassert solution(\"3\\n2 1\\n3 3\\n6 9\\n10 12\\n\") == \"18\\n9\"\nassert solution(\"4\\n5 3\\n1 2\\n4 6\\n8 12\\n\") == \"12\"\nassert solution(\"5\\n4 2\\n1 1\\n4 6\\n8 12\\n\") == \"18\"\nassert solution(\"6\\n5 3\\n1 2\\n4 6\\n8 12\\n\") == \"24\"\nassert solution(\"7\\n4 2\\n1 1\\n4 6\\n8 12\\n\") == \"30\"\nassert solution(\"8\\n4 2\\n1 1\\n4 6\\n8 12\\n\") == \"36\"\nassert solution(\"9\\n4 2\\n1 1\\n4 6\\n8 12\\n\") == \"42\"\nassert solution(\"10\\n4 2\\n1 1\\n4 6\\n8 12\\n\") == \"48\"",
        "num_ids_2": 243,
        "num_ids_4": 315
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} incorrect\" for t in range(int(stdin.strip()))\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n10\\n8\\n5\\n3\\n12\\n8\\n8\\n7\\n2\\n12343\\n43\\n4543\\n39\\n123212\\n1000000000\\n1000000000\\n1\\n1\\n1000000000\\n1000000000\\n10\\n11\\n2\\n1\\n5\\n10\\n11\\n9\\n1\\n1000000000\\n1000000000\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\"\nassert solution(\"10\\n11\\n2\\n1\\n5\\n10\\n11\\n9\\n1\\n1000000000\\n1000000000\\n\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\\n\"",
        "num_ids_2": 350,
        "num_ids_4": 350
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(output)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\n\nassert solution(\"10 11 2 1 5\\n10 11 9 1 10\") == \"55\\n10\"",
        "num_ids_2": 214,
        "num_ids_4": 214
    },
    {
        "number": 4475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\n\nassert solution(\"10\\n11 2 1 5\\n10 11 9 1 10\\n10 11 2 1 1\\n10 11 2 1 2\\n10 11 2 1 5\\n10 11 2 1 10\\n10 11 2 1 50\\n10 11 2 1 100\\n10 11 2 1 500\\n10 11 2 1 1000\\n10 11 2 1 5000\\n10 11 2 1 10000\\n10 11 2 1 50000\\n10 11 2 1 100000\\n10 11 2 1 500000\\n10 11 2 1 1000000\\n10 11 2 1 5000000\\n10 11 2 1 10000000\\n10 11 2 1 50000000\\n10 11 2 1 100000000\\n10 11 2 1 500000000\\n10 11 2 1 1000000000\\n10 11 2 1 5000000000\\n10 11 2 1 10000000000\") == \"70\\n77\\n177177\\n99999999900000000\\n999999999\\n55\\n10\"\n\nassert solution(\"1\\n2 2 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\",
        "num_ids_2": 650,
        "num_ids_4": 1025
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, got: {solution(input())}\"\n\nt = int(input())\nfor i in range(t):\n    a, b = map(int, input().split())\n    moves = 0\n    if a > 1:\n        moves += 1\n        a -= 1\n    if b > 1:\n        moves += 1\n        b -= 1\n    if a % 2 == 0:\n        if b % 2 == 0:\n            moves += 2\n    elif b % 2 == 0:\n        moves += 1\n    print(moves)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"1\\n0\\n2\\n2\\n1\"\nassert solution(stdin=input()) == \"0\\n0\\n2\\n2\\n1\"\nassert solution(stdin=input()) == \"2\\n2\\n2\\n2\\n1\"\nassert solution(stdin=input()) == \"2\\n2\\n2\\n2\\n1\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n0\\n2\\n2\\n1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed\" for i, (a, b, output) in enumerate(zip(stdin.split(), stdin.split(), stdout.split()))",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n10 10\\n2 4\\n7 4\\n9 3\") == \"1\\n0\\n2\\n2\\n1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2 4\\n7 4\\n9 3\") == \"2\\n2\\n1\"\nassert solution(\"10 10\\n2 3\\n4 5\\n6 7\") == \"1\\n2\\n2\\n1\"",
        "num_ids_2": 56,
        "num_ids_4": 122
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '1\\n0\\n2\\n2\\n1'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n0\\n2\\n2\\n1\"\nassert solution(stdin) == \"1\\n0\\n2\\n2\\n1\"\nassert solution(stdin) == \"1\\n0\\n2\\n2\\n1\"\nassert solution(stdin) == \"1\\n0\\n2\\n2\\n1\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {index + 1} failed.\" for index, (a, b, expected) in enumerate(tests)\nprint(f\"Test cases passed: {index + 1}/{len(tests)}\")",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 13\nassert solution(5) == 90\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n22\\n9999\\n1\\n777') == '13\\n90\\n1\\n66'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"13\\n90\\n1\\n66\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '13\\n90\\n1\\n66\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == 13, \"Expected 13, but got {}\".format(solution(4))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"90\"\nassert solution(4) == \"13\"\nassert solution(1) == \"1\"\nassert solution(36) == \"90\"\nassert solution(1000) == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000 9999 1 777\") == \"13\\n90\"\nassert solution(\"1 11 111 1111\") == \"13\\n90\"\nassert solution(\"1 1 11 111\") == \"13\\n90\"\nassert solution(\"1 1 1 111\") == \"13\\n90\"\nassert solution(\"1 1 1 11\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n90\"\nassert solution(\"1 1 1 1\") == \"13\\n9",
        "num_ids_2": 57,
        "num_ids_4": 104
    },
    {
        "number": 4477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\\n90\\n1\\n66\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected\nprint(\"YES\" if solution(input) == expected else \"NO\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\\nNO\\nNO\\nYES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n2 6\\n1 2\\nYES\\n2 2\\n4 1\\nNO\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 167
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Test failed: \\nInput: {input}\\nOutput: {solution(input)}\\nExpected Output: {expected_output}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n2 6\\n1 2\\nNO\\nYES\\n2 2\\n4 1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\\n2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"4\\n6\\n2 2 2 2 2 2\\n5\\n2 2 2 2 2\\n3\\n2 2 2\\n5\\n2 2 2 2 2\\n\") == \"YES\\n2 2\\n4 1\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 174
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4, 2, 3]) == \"5\"\nassert solution([3, -1, 0, 2]) == \"6\"\nassert solution([2, -3, -1, 5, -4]) == \"13\"",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"[4,2,3]\") == \"5\"\nassert solution(\"[3,-1,0,2]\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\") == \"13\"",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(example1) == \"5\", \"Test Example 1 failed\"\nassert solution(example2) == \"6\", \"Test Example 2 failed\"\nassert solution(example3) == \"13\", \"Test Example 3 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4,2,3], 1) == \"5\"\nassert solution([3,-1,0,2], 3) == \"6\"\nassert solution([2,-3,-1,5,-4], 2) == \"13\"",
        "num_ids_2": 36,
        "num_ids_4": 58
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"[4,2,3]\") == \"5\"\nassert solution(\"[3,-1,0,2]\") == \"6\"\nassert solution(\"[2,-3,-1,5,-4]\") == \"13\"",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([\"4\", \"2\", \"3\"], 1) == 5\nassert solution([\"3\", \"-1\", \"0\", \"2\"], 3) == 6\nassert solution([\"2\", \"-3\", \"-1\", \"5\", \"-4\"], 2) == 13",
        "num_ids_2": 39,
        "num_ids_4": 64
    },
    {
        "number": 4479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\n",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(0) == True\nassert solution(2) == True\nassert solution(1) == True\nassert solution([-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n\nfor i in range(len(A)):\n    assert A[i] >= -10**4 and A[i] <= 10**4",
        "num_ids_2": 16,
        "num_ids_4": 46
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"",
        "num_ids_2": 80,
        "num_ids_4": 117
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == \"true\"\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == \"false\"\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == \"true\"",
        "num_ids_2": 80,
        "num_ids_4": 117
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([0, 2, 1, -6, 6, -7, 9, 1, 2, 0, 1]) == True\nassert solution([0, 2, 1, -6, 6, 7, 9, -1, 2, 0, 1]) == False\nassert solution([3, 3, 6, 5, -2, 2, 5, 1, -9, 4]) == True",
        "num_ids_2": 76,
        "num_ids_4": 111
    },
    {
        "number": 4480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"beet\\nvet\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Actual output: {solution(input())}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\\nvet\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['beet','vet']\nassert solution() == ['beet','vet', 'beat', 'bed', 'bet', 'beet']",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\n\") == \"beet\\nvet\\nbet\\nbet\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet\\nvet\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\") == \"beet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\") == \"vet\"\n\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\") == \"beet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbet\\nbet\") == \"vet\"",
        "num_ids_2": 68,
        "num_ids_4": 139
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbet\\nbet\\nbet\\n\") == \"beet\\nvet\\n\"\nassert solution(\"3\\nabc\\nxyz\\n\") == \"abc\\nxyz\\n\"\nassert solution(\"6\\nabc\\nxyz\\nab\\n\") == \"abc\\nab\\nxyz\\n\"\nassert solution(\"1\\nb\\n\") == \"b\\n\"\nassert solution(\"5\\nabc\\nxyz\\nab\\nc\\n\") == \"abc\\nab\\nc\\nxyz\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 99
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"beet\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\nbeat\\nvet\\nbet\\nbet\\nbet\\nvet\\n') == 'beet\\nvet\\n'\nprint('All test cases passed')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\\nTransforming the both into 6s will cost (4-6)^2+(8-6)^2=8 dollars, which is the minimum.\"\nassert solution(\"1\\n1\") == \"1\\n\\nTransforming only one integer will cost nothing.\"\nassert solution(\"3\\n1 2 3\") == \"10\\n\\nTransforming the integers into 2s will cost (1-2)^2+(1-3)^2+(2-3)^2=10 dollars, which is the minimum.\"\nassert solution(\"2\\n3 4\") == \"14\\n\\nTransforming the integers into 4s will cost (3-4)^2+(3-4)^2+(4-4)^2=14 dollars, which is the minimum.\"",
        "num_ids_2": 75,
        "num_ids_4": 193
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\", \"Invalid Input\"\nassert solution(\"1\\n1\") == \"1\\n\", \"Invalid Input\"\nassert solution(\"2\\n1 2 3\") == \"6\\n\", \"Invalid Input\"\nassert solution(\"1\\n1 1\") == \"1\\n\", \"Invalid Input\"\nassert solution(\"2\\n1 2 1 2 1 2 1\") == \"12\\n\", \"Invalid Input\"",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nassert solution(\"3\\n2 4 6\") == \"12\"\nassert solution(\"4\\n4 4 4 4 4\") == \"20\"\nassert solution(\"5\\n1 2 3 4 5\") == \"20\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"100\"",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\", \"Test Case 2 failed\"\nassert solution(\"3\\n3 5 7\") == \"12\\n\", \"Test Case 3 failed\"\nassert solution(\"4\\n1 2 3 4\") == \"0\\n\", \"Test Case 4 failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"40\\n\", \"Test Case 5 failed\"",
        "num_ids_2": 51,
        "num_ids_4": 110
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\nTransforming the both into 6s will cost (4-6)^2+(8-6)^2=8 dollars, which is the minimum.\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 8\\n\") == \"8\\n\"\nassert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n\") == \"8\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"18\\n\"\n\nfor _ in range(100):\n    a_1, a_2, *a_n = map(int, input().split())\n    n = len(a_n)\n    total_cost = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            cost = (a_n[i] - a_n[j]) ** 2\n            total_cost += cost\n    print(total_cost)",
        "num_ids_2": 36,
        "num_ids_4": 88
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\\n4 8\\n\") == \"8\"\nassert solution(\"4\\n5 6 7\\n\") == \"18\"\nassert solution(\"1\\n1 1\\n\") == \"0\"\nassert solution(\"2\\n4 8\\n\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 62
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 8\") == \"8\\n\"\nassert solution(\"3\\n3 2 1\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '8', \"Invalid input\"\nprint(solution(input()))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234\\n150\\n100\\n\") == \"84\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '84', 'The solution is not correct.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '84', 'Your solution is incorrect.'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234\\n150\\n100\\n\") == \"84\\n\", \"Expected output: 84\"\nassert solution(\"1234\\n150\\n\") == \"84\\n\", \"Expected output: 84\"\nassert solution(\"1234\\n150\\n\") == \"84\\n\", \"Expected output: 84\"",
        "num_ids_2": 67,
        "num_ids_4": 98
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\\n\"\nassert solution(\"1000\\n1000\\n1000\") == \"0\\n\"\nassert solution(\"0\\n500\\n1000\") == \"500\\n\"\nassert solution(\"1000\\n1000\\n1000\") == \"0\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 105
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"84\"\nassert solution(\"100\") == \"84\"\nassert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"84\"\nassert solution(\"100\") == \"84\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n\") == \"8\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"8\\n\", \"Test case 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"8\\n\"\nassert solution(\"3 3\") == \"12\\n\"\nassert solution(\"4 4\") == \"24\\n\"\nassert solution(\"5 5\") == \"48\\n\"\nassert solution(\"6 6\") == \"96\\n\"\nassert solution(\"7 7\") == \"192\\n\"\nassert solution(\"8 8\") == \"4032\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"8\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"4 4\") == \"7\"\nassert solution(\"5 4\") == \"8\"\nassert solution(\"6 4\") == \"9\"\nassert solution(\"7 4\") == \"10\"\nassert solution(\"8 4\") == \"11\"\nassert solution(\"9 4\") == \"12\"\nassert solution(\"10 4\") == \"13\"\nassert solution(\"11 4\") == \"14\"\nassert solution(\"12 4\") == \"15\"\nassert solution(\"13 4\") == \"16\"\nassert solution(\"14 4\") == \"17\"\nassert solution(\"15 4\") == \"18\"\nassert solution(\"16 4\") == \"19\"\nassert solution(\"17 4\") == \"20\"\nassert solution(\"18 4\") == \"21\"\nassert solution(\"19 4\") == \"22\"\nassert solution(\"20 4\") == \"23\"\nassert solution(\"21 4\") == \"24\"\nassert solution(\"22 4\") == \"25\"\nassert solution(\"23 4\") == \"26\"\nassert solution(\"24 4\") == \"27\"\nassert solution(\"25 4\") == \"28\"\nassert solution(\"26 4\") == \"29\"\nassert solution(\"27 4\") == \"30\"\nassert solution(\"28 4\") == \"31\"\nassert solution(\"29 4\") == \"32\"\nassert solution(\"30 4\") == \"33\"\nassert solution(\"31 4\") == \"34\"\nassert solution(\"32 4\") == \"35\"\nassert solution(\"33 4\") == \"36\"\nassert solution(\"34 4\") == \"37\"\nassert solution(\"35 4\") == \"38\"\nassert solution(\"36 4\") == \"39\"\nassert solution(\"37 4\") == \"40\"\nassert solution(\"38 4\") == \"41\"\nassert solution(\"39 4\") == \"42\"\nassert solution(\"40 4\") == \"43\"\nassert solution(\"41 4\") == \"44\"\nassert solution(\"42 4\") == \"45\"\nassert solution(\"43 4\") == \"46\"\nassert solution(\"44 4\") == \"47\"\nassert solution(\"45 4\") == \"48\"\nassert solution(\"46 4\") == \"49\"\nassert solution(\"47 4\") == \"50\"\nassert solution(\"48 4\") == \"51\"\nassert solution(\"49 4\") == \"52\"\nassert solution(\"50 4\") == \"53\"\nassert solution(\"51 4\") == \"54\"\nassert solution(\"52 4\") == \"55\"\nassert solution(\"53 4\") == \"56\"\nassert solution(\"54 4\") == \"57\"\nassert solution(\"55 4\") == \"58\"\nassert solution(\"56 4\") == \"59\"\nassert solution(\"57 4\") == \"60\"\nassert solution(\"58 4\") == \"61\"\nassert solution(\"59 4\") == \"62\"\nassert solution(\"60 4\") == \"63\"\nassert solution(\"61 4\") == \"64\"\nassert solution(\"62 4\") == \"65\"\nassert solution(\"63 4\") == \"66\"\nassert solution(\"64 4\") == \"67\"\nassert solution(\"65 4\") == \"68\"\nassert solution(\"66 4\") == \"69\"\nassert solution(\"67 4\") == \"70\"\nassert solution(\"68 4\") == \"71\"\nassert solution(\"69 4\") == \"72\"\nassert solution(\"70 4\") == \"73\"\nassert solution(\"71 4\") == \"74\"\nassert solution(\"72 4\") == \"75\"\nassert solution(\"73 4\") ==",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"8\", \"The output is not correct\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 3\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n2 3\\n1 3\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 1\\n2 2\\n3 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\\n2 3\\n3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\\n3 2\\n2 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\\n3 2\\n1 2\") == \"IMPOSSIBLE\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 3\\n2 3\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"POSSIBLE\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3 2\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\n') == 'POSSIBLE\\n'\nassert solution(stdin='3 2\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\n') == 'IMPOSSIBLE\\n'\nassert solution(stdin='1 1\\na_1 b_1\\n') == 'POSSIBLE\\n'\nassert solution(stdin='1 1\\na_1 b_1\\n') == 'IMPOSSIBLE\\n'\nassert solution(stdin='3 3\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9\\na_10 b_10\\n') == 'POSSIBLE\\n'\nassert solution(stdin='3 3\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9\\na_10 b_10\\n') == 'IMPOSSIBLE\\n'",
        "num_ids_2": 103,
        "num_ids_4": 157
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 1\\n\") == \"IMPOSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n1 3\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n4 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n1 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n1 3\\n1 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n2 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n1 3\\n2 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n1 4\\n1 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n1 3\\n2 4\\n2 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 4\\n1 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n1 4\\n2 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n1 5\\n2 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n1 4\\n3 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n2 4\\n3 5\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n1 5\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n2 5\\n3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3 2\\n1 2\\n2 3\\n3 5\\n3 4\\n\") == \"POSSIBLE\"",
        "num_ids_2": 52,
        "num_ids_4": 109
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\na_1 b_1\\na_2 b_2\\na_3 b_3\\na_4 b_4\\na_5 b_5\\na_6 b_6\\na_7 b_7\\na_8 b_8\\na_9 b_9\\na_10 b_10\\na_11 b_11\\na_12 b_12\\na_13 b_13\\na_14 b_14\\na_15 b_15\\na_16 b_16\\na_17 b_17\\na_18 b_18\\na_19 b_19\\na_20 b_20\\na_21 b_21\\na_22 b_22\\na_23 b_23\\na_24 b_24\\na_25 b_25\\na_26 b_26\\na_27 b_27\\na_28 b_28\\na_29 b_29\\na_30 b_30\\na_31 b_31\\na_32 b_32\\na_33 b_33\\na_34 b_34\\na_35 b_35\\na_36 b_36\\na_37 b_37\\na_38 b_38\\na_39 b_39\\na_40 b_40\\na_41 b_41\\na_42 b_42\\na_43 b_43\\na_44 b_44\\na_45 b_45\\na_46 b_46\\na_47 b_47\\na_48 b_48\\na_49 b_49\\na_50 b_50\\na_51 b_51\\na_52 b_52\\na_53 b_53\\na_54 b_54\\na_55 b_55\\na_56 b_56\\na_57 b_57\\na_58 b_58\\na_59 b_59\\na_60 b_60\\na_61 b_61\\na_62 b_62\\na_63 b_63\\na_64 b_64\\na_65 b_65\\na_66 b_66\\na_67 b_67\\na_68 b_68\\na_69 b_69\\na_70 b_70\\na_71 b_71\\na_72 b_72\\na_73 b_73\\na_74 b_74\\na_75 b_75\\na_76 b_76\\na_77 b_77\\na_78 b_78\\na_79 b_79\\na_80 b_80\\na_81 b_81\\na_82 b_82\\na_83 b_83\\na_84 b_84\\na_85 b_85\\na_86 b_86\\na_87 b_87\\na_88 b_88\\na_89 b_89\\na_90 b_90\\na_91 b_91\\na_92 b_92\\na_93 b_93\\na_94 b_94\\na_95 b_95\\na_96 b_96\\na_97 b_97\\na_98 b_98\\na_99 b_99\\na_100 b_100\\na_101 b_101\\na_102 b_102\\na_103 b_103\\na_104 b_104\\na_105 b_105\\na_106 b_106\\na_107 b_107\\na_108 b_108\\na_109 b_109\\na_110 b_110\\na_111 b_111\\na_112 b_112\\na_1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"POSSIBLE\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"hello\") == \"loh\"\nassert solution(\"\") == \"\"\nassert solution(\"hello world\") == \"lohw\"\nassert solution(\"abc\") == \"abc\"",
        "num_ids_2": 23,
        "num_ids_4": 41
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'acdr', \"The output should be 'acdr'.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Error: Incorrect output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test failed\"\nassert solution(\"abcc\") == \"abdc\", \"Test failed\"\nassert solution(\"hello\") == \"olleh\", \"Test failed\"\nassert solution(\"world\") == \"wrdld\", \"Test failed\"\nassert solution(\"\") == \"\", \"Test failed\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\", \"Test failed.\"\nassert solution(\"abc\") == \"abc\", \"Test failed.\"\nassert solution(\"hello\") == \"hll\", \"Test failed.\"\nassert solution(\"a\") == \"a\", \"Test failed.\"\nassert solution(\"xyz\") == \"\", \"Test failed.\"",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Your solution is incorrect\"\nassert solution(\"abac\") == \"NO\", \"Your solution is incorrect\"\nassert solution(\"cdabcd\") == \"YES\", \"Your solution is incorrect\"\nassert solution(\"racecar\") == \"NO\", \"Your solution is incorrect\"\nassert solution(\"hello\") == \"NO\", \"Your solution is incorrect\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\", \"Your code is incorrect\"\nassert solution(\"banana\") == \"NO\", \"Your code is incorrect\"\nassert solution(\"abc\") == \"YES\", \"Your code is incorrect\"\nassert solution(\"abcd\") == \"NO\", \"Your code is incorrect\"\nassert solution(\"abcdef\") == \"YES\", \"Your code is incorrect\"\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"eggplant banana\") == \"NO\"\nassert solution(\"cat dog\") == \"YES\"\nassert solution(\"cat\") == \"NO\"\nassert solution(\"not a chain\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\"\nassert solution(\"10\\n30\\n\") == \"LESS\"\nassert solution(\"0\\n0\\n\") == \"EQUAL\"\nassert solution(\"0\\n100\\n\") == \"LESS\"\nassert solution
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"GREATER\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('36\\n24\\n') == 'GREATER'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"36\\n24\") == \"GREATER\", \"Your solution is not correct. Please check the constraints and sample input.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\\n\"\nassert solution(\"36\\n24\\n\") == \"GREATER\\n\"\nassert solution(\"36\\n\") == \"LESS\\n\"\nassert solution(\"\") == \"EQUAL\\n\"\nassert solution(\"36\\n24\\n36\\n24\") == \"EQUAL\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 63
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(36) == \"GREATER\"\nassert solution(24) == \"LESS\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"GREATER\", \"Test case failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"36 24\") == \"GREATER\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"36\\n24\\n\") == \"GREATER\", \"Incorrect output\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\napple\\noffice\\n1\\ngrape\\n\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\napple\\no orange\\napple\\n1\\ngrape\\n\") == \"2\\n\"\nassert solution(\"4\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"2\\n\"\nassert solution(\"1\\nb\\n\") == \"1\\n\"\nassert solution(\"1\\nb\\nb\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n\\n\") == \"1\\n\"\nassert solution(\"1\\n\\nb\\n\") == \"2\\n\"\nassert solution(\"1\\n\\nb\\nb\\n\") == \"2\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\n\") == \"3\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\n\") == \"4\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\n\") == \"5\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"6\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"7\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"8\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"9\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"10\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"10\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"10\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"10\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\") == \"10\\n\"\nassert solution(\"1\\n\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\",
        "num_ids_2": 94,
        "num_ids_4": 128
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3\\napple\\norange\\napple\\n1\\ngrape\\n') == '2'\nassert solution(stdin='5\\napple\\norange\\nbananas\\n3\\nbanana\\norange\\n') == '4'\nassert solution(stdin='5\\napple\\norange\\nbananas\\n2\\nbanana\\nbanana\\norange\\n') == '3'\nassert solution(stdin='5\\napple\\norange\\nbananas\\n3\\nbanana\\norange\\n4\\nbanana\\nbanana\\norange\\n') == '2'\n",
        "num_ids_2": 64,
        "num_ids_4": 150
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"4\\nbanana\\nbanana\\nbanana\\n\") == \"1\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"4\\nbanana\\nbanana\\nbanana\\n\") == \"1\"\nassert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nassert solution(\"4\\nbanana\\nbanana\\nbanana\\n\") == \"1\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n1\\ngrape\\n\") == \"2\"\nprint(\"All test cases passed\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\napple\\nother\\napple\\n1\\ngrape\\n') == '2\\n'\nassert solution('3\\na\\nb\\nc\\nd\\ne\\n') == '3\\n'\nassert solution('3\\na\\nb\\nc\\nd\\ne\\n') == '3\\n'\nassert solution('3\\napple\\nother\\napple\\n1\\ngrape\\n') == '2\\n'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'T'\nassert solution('G') == 'C'\nassert solution('T') == 'T'\nassert solution('B') == 'Error: Invalid input'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"T\"\nassert solution(\"G\") == \"G\"\nassert solution(\"T\") == \"T\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\", \"Test Case 1\"\nassert solution(\"C\") == \"G\", \"Test Case 2\"\nassert solution(\"G\") == \"T\", \"Test Case 3\"\nassert solution(\"T\") == \"A\", \"Test Case 4\"\nassert solution(\"K\") == \"T\", \"Test Case 5\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\", \"The solution should return T for the given input.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"C\"\nassert solution(\"G\") == \"G\"\nassert solution(\"T\") == \"T\"\nassert solution(\"a\") == \"T\"\nassert solution(\"b\") == \"T\"\nassert solution(\"c\") == \"C\"\nassert solution(\"d\") == \"G\"\nassert solution(\"e\") == \"T\"\nassert solution(\"f\") == \"G\"\nassert solution(\"g\") == \"C\"\nassert solution(\"h\") == \"A\"\nassert solution(\"i\") == \"C\"\nassert solution(\"j\") == \"G\"\nassert solution(\"k\") == \"T\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('A') == 'T', \"Your code is incorrect. Expected 'T', but got '{}' instead.\".format(solution('A'))\nassert solution('c') == 'G', \"Your code is incorrect. Expected 'G', but got '{}' instead.\".format(solution('c'))\nassert solution('G') == 'A', \"Your code is incorrect. Expected 'A', but got '{}' instead.\".format(solution('G'))\nassert solution('t') == 'T', \"Your code is incorrect. Expected 'T', but got '{}' instead.\".format(solution('t'))\nassert solution('C') == 'G', \"Your code is incorrect. Expected 'G', but got '{}' instead.\".format(solution('C'))\nassert solution('a') == 'T', \"Your code is incorrect. Expected 'T', but got '{}' instead.\".format(solution('a'))\nassert solution('c') == 'G', \"Your code is incorrect. Expected 'G', but got '{}' instead.\".format(solution('c'))\nassert solution('G') == 'A', \"Your code is incorrect. Expected 'A', but got '{}' instead.\".format(solution('G'))\nassert solution('t') == 'T', \"Your code is incorrect. Expected 'T', but got '{}' instead.\".format(solution('t'))",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\nassert solution(\"X\") == \"X\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"T\"\nassert solution(\"B\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"T\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\", \"The correct output should be T\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\", \"Test failed.\"\nassert solution(\"C\") == \"G\", \"Test failed.\"\nassert solution(\"G\") == \"G\", \"Test failed.\"\nassert solution(\"T\") == \"T\", \"Test failed.\"\nassert solution(\"X\") == \"X\", \"Test failed.\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14\\n'\nassert solution('5\\n1 2 2 2 1\\n3 2 2 4 1') == '14\\n'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"14\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '14\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"14\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n2 2 2') == '1\\n'\nassert solution('3 4\\n1 2 3') == '2\\n'\nassert solution('2 1 1 1 1') == '0\\n'\nassert solution('1 1 1 1 1') == '1\\n'\nassert solution('3 2\\n1 2 3 4 5') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\", \"The correct answer is: 1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"5 5\\n1 1 1 1 1\") == \"2\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"3 3\\n1 2 3\") == \"1\\n\"\nassert solution(\"3 3\\n5 10 20\") == \"1\\n\"\nassert solution(\"4 3\\n2 2 2\") == \"0\\n\"\nassert solution(\"5 3\\n2 2 2\") == \"2\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\\n\"\nassert solution(\"5 2\\n1 2 2 2\\n1 3 3\\n\") == \"3\\n\"\nassert solution(\"10 3\\n2 2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"3 1\\n2 2\\n\") == \"1\\n\"\nassert solution(\"100 1000\\n1\\n\") == \"2\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 104
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"5 10\\n10 20 30 40 50\") == \"10\\n\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 73
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\\n\"\nassert solution(\"3 3\\n5 5 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\") == \"3\\n\"\nassert solution(\"3 3\\n1 2 4\") == \"4\\n\"\nassert solution(\"3 3\\n1 2 5\") == \"5\\n\"\nassert solution(\"3 3\\n2 2 2\") == \"1\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 2\\n5 1\\n\") == \"2\\n\"\nassert solution(\"6 3\\n3 1 2 4\\n\") == \"3\\n\"\nassert solution(\"7 4\\n4 3 2 5 1\\n\") == \"4\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"1 0 0\\n2 1 1\\n3 0 0\\n\") == \"No\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes', \"Takahashi is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"1 0 0\\n0 1 1\\n1 0 1\\n\") == \"No\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"No\"\nassert solution(\"1 1 1\\n0 1 1\\n1 1 1\\n\") == \"Yes\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"Your code is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"3 2 2\\n2 2 1\\n2 2 3\") == \"No\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"3 3 3\\n4 4 4\\n5 5 5\\n\") == \"No\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\\n\"\nassert solution(\"1 0 1\\n2 1 2\\n3 2 1\") == \"No\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes\\n', f'Your solution is incorrect. The output should be Yes, but it is {solution(input())}.'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"Invalid solution for ABC\"\nassert solution(\"ARC\") == \"ABC\", \"Invalid solution for ARC\"\n\nprint(\"Tests Passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\", \"The correct answer is ARC\"\nassert solution(\"ARC\") == \"ABC\", \"The correct answer is ABC\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\n\nprint(\"Test Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ARC\") == \"ARC\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"ARC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"AB\") == \"ABC\"\nassert solution(\"ABCDE\") == \"ARC\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\", \"Test Case 1 Failed\"\n\nassert solution(\"1 10 2\") == \"3\\n\", \"Test Case 2 Failed\"\n\nassert solution(\"5 10 3\") == \"2\\n\", \"Test Case 3 Failed\"\n\nassert solution(\"0 10 3\") == \"1\\n\", \"Test Case 4 Failed\"\n\nassert solution(\"2 10 3\") == \"2\\n\", \"Test Case 5 Failed\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"3\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nassert solution(\"100 1000 10000\") == \"1\\n\"\nassert solution(\"-4 -2 -1\") == \"3\\n\"\nassert solution(\"1000 10000 100000\") == \"1\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 85
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 8 2\") == \"3\", \"Test 1\"\nassert solution(\"1 2 3\") == \"1\", \"Test 2\"\nassert solution(\"2 3 4\") == \"2\", \"Test 3\"\nassert solution(\"5 6 7\") == \"0\", \"Test 4\"\nassert solution(\"8 9 10\") == \"0\", \"Test 5\"\n\nprint(\"All test cases pass.\")",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 8 2\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8 2\") == \"3\\n\"\nassert solution(\"2 4 2\") == \"2\\n\"\nassert solution(\"10 10 1\") == \"1\\n\"\nassert solution(\"1 10 3\") == \"1\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4 8 2\") == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test Case 1 failed.\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test Case 2 failed.\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test Case 3 failed.\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test Case 4 failed.\"\nassert solution(\"26\") == \"Christmas\", \"Test Case 5 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"Christmas\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(25) == 'Christmas\\n', \"Test failed for input D = 25.\"\nassert solution(24) == 'Christmas Eve\\n', \"Test failed for input D = 24.\"\nassert solution(23) == 'Christmas Eve Eve\\n', \"Test failed for input D = 23.\"\nassert solution(22) == 'Christmas Eve Eve Eve\\n', \"Test failed for input D = 22.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 52,
        "num_ids_4": 112
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Expected output: Christmas\"\nassert solution(\"24\") == \"Christmas Eve\", \"Expected output: Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Expected output: Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Expected output: Christmas Eve Eve Eve\"\nassert solution(\"21\") == \"Christmas\", \"Expected output: Christmas\"",
        "num_ids_2": 42,
        "num_ids_4": 100
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Christmas\", \"Test Case 1 failed.\"\nassert solution(input()) == \"Christmas Eve\", \"Test Case 2 failed.\"\nassert solution(input()) == \"Christmas Eve Eve\", \"Test Case 3 failed.\"\nassert solution(input()) == \"Christmas Eve Eve Eve\", \"Test Case 4 failed.\"\nassert solution(input()) == \"Christmas\", \"Test Case 5 failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test failed\" # Should print \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test failed\" # Should print \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test failed\" # Should print \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test failed\" # Should print \"Christmas Eve Eve Eve\"",
        "num_ids_2": 50,
        "num_ids_4": 116
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"26\") == \"Christmas\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(25) == \"Christmas\"\nassert solution(24) == \"Christmas Eve\"\nassert solution(23) == \"Christmas Eve Eve\"\nassert solution(22) == \"Christmas Eve Eve Eve\"\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"25\") == \"Christmas\", \"Test failed\"\nassert solution(\"24\") == \"Christmas Eve\", \"Test failed\"\nassert solution(\"23\") == \"Christmas Eve Eve\", \"Test failed\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\", \"Test failed\"\nassert solution(\"21\") == \"Christmas Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"20\") == \"Christmas Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"19\") == \"Christmas Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"18\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"17\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"16\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"15\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"14\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"13\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"12\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"11\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"10\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"9\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"8\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"7\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"6\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"5\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"4\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"3\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"2\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve\", \"Test failed\"\nassert solution(\"1\") == \"Christmas Eve Eve Eve Eve Eve Eve Eve E",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"4\\n\", \"Test Failed: Can't divide 7 by 2.\"\nprint(\"Test Passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == '4', 'Test case 1 failed'\nassert solution(15) == '4', 'Test case 2 failed'\nassert solution(10) == '4', 'Test case 3 failed'\nassert solution(6) == '6', 'Test case 4 failed'\nassert solution(8) == '4', 'Test case 5 failed'\nassert solution(3) == '3', 'Test case 6 failed'",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == \"4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"100\") == \"100\"\nassert solution(\"10\") == \"0\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"7\") == \"4\\n4 can be divided by 2 twice, which is the most number of times among 1, 2,..., 7.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == 4",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\", \"Your solution is incorrect.\"\nassert solution(\"6 3 8 10\") == \"No\", \"Your solution is incorrect.\"\nassert solution(\"1 1 1 1\") == \"Yes\", \"Your solution is incorrect.\"\nassert solution(\"2 2 2 2\") == \"No\", \"Your solution is incorrect.\"\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution(stdin) == 'Yes'\nassert solution(stdin) == 'No'\nassert solution(stdin) == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"10 5 20 2\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"2 4 6 3\") == \"No\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\\n\"\nassert solution(\"5 4 6 1\") == \"No\\n\"\nassert solution(\"2 3 4 5\") == \"No\\n\"\nassert solution(\"1 2 3 4\") == \"No\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"Your code is incorrect. Please check the constraints and sample input/output.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"The initial letters of atcoder, beginner and contest are a, b and c. Uppercase and concatenate them to obtain ABC.\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(\"All test cases pass\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"100 50 10\") == \"No\\n\"\nassert solution(\"100 100 1000\") == \"No\\n\"\nassert solution(\"500 500 500\") == \"No\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 86
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"30 50 70\") == \"No\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"60 100 100\") == \"No\\n\"\nassert solution(\"100 200 100\") == \"No\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\n\"\nassert solution(\"100 50 120\") == \"No\\n\"\nassert solution(\"100 50 50\") == \"Yes\\n\"\nassert solution(\"50 100 50\") == \"No\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\\nHe has 50 + 100 = 150 yen, so he can buy the 120-yen toy.\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\", \"The function should return the expected output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"5\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 8) == 5",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"4 7\\n3 4 5 6\") == \"6\\n\"\nassert solution(\"4 8\\n1 2 3 4\") == \"7\\n\"\nassert solution(\"4 8\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\"\nassert solution(\"4 8\\n1 2 3 4 5 6 7 8\") == \"6\\n\"\nassert solution(\"4 8\\n1 2 3 4 5 6 7\") == \"2\\n\"\nassert solution(\"4 8\\n1 2 3 4 5 6\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 103
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"4 10\\n1 2 3\") == \"3\\n\"\nassert solution(\"5 8\\n7 9 10 11\") == \"5\\n\"\nassert solution(\"5 10\\n1 2 3 4\") == \"5\\n\"\nassert solution(\"6 12\\n1 2 3 4 5\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 94
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\\n\"\nassert solution(\"4 6\\n2 3\") == \"1\\n\"\nassert solution(\"4 7\\n3 2 3 4\") == \"2\\n\"\nassert solution(\"4 9\\n4 5 3 2\") == \"3\\n\"\nassert solution(\"5 8\\n7 6 5 4\") == \"4\\n\"\nprint(\"All test cases passed\")",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\\n\", \"Test case 1 failed\"\nassert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\\n\", \"Test case 2 failed\"\nassert solution(\"1 2 3 4 5\") == \"5 4 3 2 1\\n\", \"Test case 3 failed\"\nassert solution(\"1 2 3 4 5 6\") == \"6 5 4 3 2 1\\n\", \"Test case 4 failed\"\nassert solution(\"1 2 3 4 5 6 7\") == \"7 6 5 4 3 2 1\\n\", \"Test case 5 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 66,
        "num_ids_4": 140
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4 2 1 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4 2 1 3\"\nprint(\"All tests passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 2 1 3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na_1 a_2... a_n\") == \"4 2 1 3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nprint(\"All test cases passed\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4 2 1 3\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4 2 1 3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No\", \"Input should not be empty.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nassert solution(\"10 5\\n4 5 6\") == \"No\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 5\\n4 5 6\") == \"No\"\nassert solution(\"5 1\\n4 5 6\") == \"No\"\nassert solution(\"10 10\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('10 3\\n3 4') == 'No'\nassert solution('10 5\\n4 5') == 'No'\nassert solution('10 5\\n4 5') == 'No'",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"10 3\\n4 5 6\") == \"Yes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\\n\"\nassert solution(\"15 4\\n10 20 15\\n25 50\") == \"No\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abcdabcd\") == \"12\"\nassert solution(\"abcabcabc\") == \"4\"\nassert solution(\"aaaaaaa\") == \"4\"\nassert solution(\"aaa\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Test case 1 failed.\"\nassert solution(\"abaababaa\") == \"6\", \"Test case 2 failed.\"\nassert solution(\"abaababa\") == \"6\", \"Test case 3 failed.\"\nassert solution(\"abaabab\") == \"6\", \"Test case 4 failed.\"\nassert solution(\"abaaba\") == \"6\", \"Test case 5 failed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"ababababa\") == \"1\"\nassert solution(\"abababab\") == \"1\"\nassert solution(\"ababababb\") == \"2\"\nassert solution(\"ababababc\") == \"2\"\nassert solution(\"abababaca\") == \"2\"\nassert solution(\"abababaca\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Test case 1 failed\"\nassert solution(\"ababababa\") == \"0\", \"Test case 2 failed\"\nassert solution(\"abababab\") == \"0\", \"Test case 3 failed\"\nassert solution(\"ababababaa\") == \"6\", \"Test case 4 failed\"\nassert solution(\"xyzxy\") == \"2\", \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"aabbccddeeff\") == \"2\"\nassert solution(\"abcdef\") == \"0\"\nassert solution(\"babad\") == \"1\"\nassert solution(\"cbbd\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcdefg\") == \"6\"\nassert solution(\"ab\") == \"0\"\nassert solution(\"aaaaaaa\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Input is invalid.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\n\nsolution(\"abaababaa\")\nsolution(\"abaababa\")\nsolution(\"abaabab\")\nsolution(\"abaaba\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == \"6\", \"Incorrect solution\"\nassert solution(\"abaababaa\") == \"4\", \"Incorrect solution\"\nassert solution(\"abaababa\") == \"2\", \"Incorrect solution\"\nassert solution(\"abaabab\") == \"1\", \"Incorrect solution\"\nassert solution(\"abaaba\") == \"0\", \"Incorrect solution\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes', \"Test 1 failed: No\"\nassert solution('abc') == 'No', \"Test 2 failed: Yes\"\nassert solution('a') == 'No', \"Test 3 failed: Yes\"\nassert solution('abb') == 'No', \"Test 4 failed: Yes\"\nassert solution('') == 'No', \"Test 5 failed: Yes\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bac\") == \"Yes\\nabc\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"acb\") == \"No\"\nassert solution(\"abcabc\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"abcd\") == \"Yes\"\nassert solution(\"abcde\") == \"No\"\nassert solution(\"abcdfg\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"acb\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('bac') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abac') == 'Yes'\nassert solution('cbac') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('cba') == 'No'\nassert solution('abcde') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\\n\"\nassert solution(\"cba\") == \"No\\n\"\nassert solution(\"abc\") == \"No\\n\"\nassert solution(\"acb\") == \"Yes\\n\"\nassert solution(\"xyz\") == \"Yes\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case not passed.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\\n') == '646\\n'\nassert solution('1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\\n') == '757402647\\n'\n\nassert solution('2\\n1 3\\n4 2\\n\\n') == '20\\n'\n\nassert solution('') == ''",
        "num_ids_2": 135,
        "num_ids_4": 168
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"Input\\n5\\n1 8 7 2 4\\n9 7 2 9 3\\n1 1000000\\n2 1 3\\n4 2\\n\\nOutput\\n646\\n757402647\\n20\") == 646\nassert solution(stdin=\"Input\\n1\\n1000000\\n1000000\\n\\nOutput\\n757402647\") == 757402647\nassert solution(stdin=\"Input\\n2\\n1 3\\n4 2\\n\\nOutput\\n20\") == 20",
        "num_ids_2": 142,
        "num_ids_4": 176
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 20\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"",
        "num_ids_2": 74,
        "num_ids_4": 97
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"757402647\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 646, \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 646, \"Incorrect output\"\nassert solution() == 757402647, \"Incorrect output\"\nassert solution() == 20, \"Incorrect output\"",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\\n\") == \"757402647\"\nassert solution(\"2\\n1 3\\n4 2\\n\") == \"20\"\n",
        "num_ids_2": 74,
        "num_ids_4": 97
    },
    {
        "number": 4506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\\n\\n1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\") == \"646\\n\"\nassert solution(\"1\\n1000000\\n1000000\\n\\n2\\n1 3\\n4 2\\n\") == \"757402647\\n\"",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\n\", \"The solution is incorrect\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\\n') == '7'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n') == '17'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4\\n') == '17'\n",
        "num_ids_2": 107,
        "num_ids_4": 140
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"17\", \"The correct answer is 17\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\"",
        "num_ids_2": 103,
        "num_ids_4": 129
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Input:\\n{input()}\\nExpected Output:\\n{expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string) == output_string, f\"Test cases failed for solution({input_string})\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\\n\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\\n\") == \"17\\n\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 144
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\", \"The given tree is not connected and cannot be added.\"\nassert solution() == \"0\", \"The given tree is a DAG and cannot be added.\"\nassert solution() == \"1\", \"The given tree is a cycle and cannot be added.\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([7, \"1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\"]) == 2\nassert solution([7, \"1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\"]) == 0\nassert solution([7, \"1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\"]) == 1",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'\nassert solution(open('input2.txt', 'r').read()) == '0\\n'\nassert solution(open('input3.txt', 'r').read()) == '1\\n'",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"0\"\nassert solution(\"\"\"7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"[Input]\\n7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\\n\"\nassert solution(\"[Input]\\n7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\\n\"\nassert solution(\"[Input]\\n7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"1\\n\"",
        "num_ids_2": 94,
        "num_ids_4": 141
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '0'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n3 7') == '1'\n",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution( \"\"\"\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"2\"\n\nassert solution( \"\"\"\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"0\"\n\nassert solution( \"\"\"\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3,7) == '10'\nassert solution(4,12) == '15'\nassert solution(2,1000000000) == '1999999999'\nassert solution(7,97) == '113'\nassert solution(1000000000,1000000000) == '1000000001'\nassert solution(2,1) == '10'",
        "num_ids_2": 27,
        "num_ids_4": 72
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nprint(\"Correct!\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1') == '10\\n15\\n1999999999\\n113\\n1000000001\\n1'\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case failed: expected '{expected}', got '{solution(input())}'\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {i + 1} failed.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Output should be '{expected}', but got '{solution(input())}'\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 7) == \"10\"\nassert solution(4, 12) == \"15\"\nassert solution(2, 1000000000) == \"1999999999\"\nassert solution(7, 97) == \"113\"\nassert solution(1000000000, 1000000000) == \"1000000001\"\nassert solution(2, 1) == \"1\"\nassert solution(2, 1) == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\") == \"10\\n15\\n1999999999\\n113\\n1000000001\\n1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 2 1 3 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"5 1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"100 10\\n1 2 3 4 5 6 7 8 9\\n\") == \"10\\n5 9 8 7 6 5 4 3 2 1\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 163
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 126
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected: {expected_output}, Received: {solution}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1 \\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2 \\n'\nassert solution('1 3\\n4\\n') == '2\\n1 3 4 \\n'\nassert solution('7 3\\n1 2 3 4\\n') == '2\\n2 3 1 \\n'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n') == '5\\n1 2 3 4 5 6 7 8 9 10 \\n'\nassert solution('10 7\\n1 2 3 4 5 6 7\\n') == '4\\n1 2 3 4 5 6 7 \\n'\nassert solution('1 1 1\\n2 2 2\\n') == '2\\n1 1 1 \\n'",
        "num_ids_2": 81,
        "num_ids_4": 139
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\"\nassert solution(\"1 2\\n2\\n3\\n4\\n5\\n6\\n\") == \"3\"\nassert solution(\"3 5\\n4 1 2 3 4\\n5 6 7 8 9\\n\") == \"1\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\"\nassert solution(\"10 4\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\"\nassert solution(\"5 4\\n1 2 3 4\\n5 6 7 8\\n\") == \"3\"\nassert solution(\"1 5\\n2 3 4 5\\n3 4 5 6\\n\") == \"2\"\nassert solution(\"5 3\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"4\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 3\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\nassert solution(\"3 2\\n1 2 3 4 5\\n2 3 4 5 6\\n\") == \"1\"\n",
        "num_ids_2": 65,
        "num_ids_4": 130
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 2 3 2 1 3 2\\n\") == \"2\\n2 1\\n\"\nassert solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\\n1 3 2\\n\"\nassert solution(\"8 1\\n1 1 1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 1\\n2 3\\n\") == \"1\\n2\\n\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"1000000 1000000\\n\") == \"1000000\\n1000000\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 133
    },
    {
        "number": 4510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2\\n') == '2\\n2 1\\n'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3\\n1 3 2\\n'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"263\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}', Actual output: '{solution(input())}'\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\" for input, output in zip(stdin_data, stdout_data)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Input: {input_string}, Output: {output_string}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == '263'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '263'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"263\", \"Your solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"263\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"263\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"263\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n\nsolution = \"\"\"\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output\nassert solution(input) == output\nassert solution(input) == output\nassert solution(input) == output\nassert solution(input) == output",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 3\nassert solution('dfcbbcfeeedbaea') == 5",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"3\\n1\\n2\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\\n2\\n5\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"3\", \"wrong output\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\", \"wrong output\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == 3\nassert solution(\"dfcbbcfeeedbaea\") == 5\nassert solution(\"hello world\") == 1\nassert solution(\"abcdabcd\") == 0\nassert solution(\"\") == 0",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'",
        "num_ids_2": 204,
        "num_ids_4": 204
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\nassert solution('1\\n265432196\\n789653421\\n432796855\\n123456789\\n567891234\\n896543210\\n987654321\\n765432198') == '265432196\\n789653421\\n432796855\\n123456789\\n567891234\\n896543210\\n987654321\\n765432198\\n'\nassert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n123456789\\n567891234\\n896543210\\n987654321\\n765432198\\n') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n123456789\\n567891234\\n896543210\\n987654321\\n765432198\\n'",
        "num_ids_2": 392,
        "num_ids_4": 711
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '154873296'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n38",
        "num_ids_2": 404,
        "num_ids_4": 808
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"2\\n123456789\\n987654321\\n765432109\\n432109876\\n210987654\\n965432108\\n842109654\\n610987421\\n387654321\\n154321098\\n721096543\\n496543210\\n261098742\\n836543210\\n509876543\\n276543210\\n843210965\\n518765432\\n287654321\\n854321096\\n529876543\\n298765432\\n865432109\\n532109876\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n543210987\\n299876543\\n876543210\\n5",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([154873296, 386592714, 729641835, 863725149, 975314628, 412968357, 631457982, 598236471, 247189563]) == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n615473296\\n386592714\\n729641835\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\\n615473296\\n386592714\\n729641835\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\\n615473296\\n386592714\\n729641835\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\\n615473296\\n386592714\\n729641835\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\nassert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n615473296\\n386592714\\n729641835\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\\n615473296\\n386592714\\n729",
        "num_ids_2": 800,
        "num_ids_4": 1027
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 202,
        "num_ids_4": 202
    },
    {
        "number": 4513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} is incorrect. Expected output: {output_str}, got: {solution(input_str)}\" for i, (input_str, output_str) in enumerate(zip(input_strings, output_strings))\n\ninput_strings = [\n    \"154873296\",\n    \"386592714\",\n    \"729641835\",\n    \"863725149\",\n    \"975314628\",\n    \"412968357\",\n    \"631457982\",\n    \"598236471\",\n    \"247189563\",\n]\noutput_strings = [\n    \"154873396\",\n    \"336592714\",\n    \"729645835\",\n    \"863725145\",\n    \"979314628\",\n    \"412958357\",\n    \"631457992\",\n    \"998236471\",\n    \"247789563\",\n]\n\nsolution = \"154873396\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['3', '6', '8', '-1', '9', '4']",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n6\\n8\\n-1\\n9\\n4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '''3\n6\n8\n-1\n9\n4'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 1, 1, 3, 5, 3, 5, 7]) == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution([3, 1, 1, 5, 3, 4, 7, 3, 1, 8, 1, 9]) == '6\\n8\\n-1\\n9\\n4'\nassert solution([1, 5]) == '-1'",
        "num_ids_2": 103,
        "num_ids_4": 116
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == [\"3\",\"6\",\"8\",\"-1\",\"9\",\"4\"]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == 3\nassert solution(3, 2) == 6\nassert solution(3, 3) == 8\nassert solution(3, 4) == -1\nassert solution(3, 5) == 9\nassert solution(3, 6) == 4",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n6\\n8\\n-1\\n9\\n4\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'YES'\nassert solution(2) == 'YES'\nassert solution(3) == 'NO'\nassert solution(4) == 'NO'\nassert solution(5) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.read()) == expected_output, f\"Test case {test_case} failed\" for test_case, expected_output in zip(range(1, t+1), [\"YES\", \"YES\", \"NO\", \"NO\", \"YES\"])",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nNO\\nYES\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3') == 'YES\\nYES\\nNO\\nNO\\nYES'\n\nsolution('5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3')",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\n\nassert solution(\"1\\n1 1 1 1\") == \"NO\"\n\nassert solution(\"1\\n1 1 1 0\") == \"YES\"\n\nassert solution(\"10\\n10 10 10 10\") == \"YES\"\n\nassert solution(\"1\\n1 1 1 10\") == \"NO\"\n\nassert solution(\"1\\n1 1 0 10\") == \"YES\"\n\nassert solution(\"1\\n1 0 1 10\") == \"NO\"",
        "num_ids_2": 112,
        "num_ids_4": 155
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3') == 'YES\\nYES\\nNO\\nNO\\nYES'\nassert solution('1\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3') == 'YES\\nNO\\nNO\\nNO\\nYES'\nassert solution('3\\n3 3 3 100000000\\n100 100 100 100000000\\n10000000000 20000000000 30000000000') == 'YES\\nYES\\nNO\\nNO\\nYES'",
        "num_ids_2": 160,
        "num_ids_4": 259
    },
    {
        "number": 4515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2 8\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"100 101 102 105\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"3 2 1 100000000\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"10 20 15 14\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"101 101 101 3\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 64,
        "num_ids_4": 132
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"3 4 6 5 \"\n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\"\"\") == \"9 8 12 6 8 \"\n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\"\"\") == \"3 3 \"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '''\n3 4 6 5\n'''\n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '''\n9 8 12 6 8\n'''\n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '''\n3 3\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3 3 3 3 3 3 3 3 3\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 123
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 4 6 5\"\nassert solution() == \"9 8 12 6 8\"\nassert solution() == \"3 3\"",
        "num_ids_2": 31,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\\n\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\\n\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 107
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5\\n'\n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8\\n'\n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3\\n'\n\nassert solution('''\n1 2 3 4\n2 1 3 4\n3 1 2 4\n4 1 2 3\n5 1 2 3 4\n6 1 2 3 4 5\n7 1 2 3 4 5 6\n8 1 2 3 4 5 6 7\n9 1 2 3 4 5 6 7 8\n10 1 2 3 4 5 6 7 8 9\n''') == '3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 63,
        "num_ids_4": 101
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case} failed: {solution(stdin)}!= {expected}\" for test_case, expected in zip(range(1, 101), [True, True, True, False, False, False, False, False, False, False])\n\nfor _ in range(5):\n    u_i, v_i, *k_i = map(int, input().split())\n    assert 1 <= u_i <= n, f\"Invalid vertex u_i: {u_i}\"\n    assert 1 <= v_i <= n, f\"Invalid vertex v_i: {v_i}\"\n    for j in range(k_i[0]):\n        assert 1 <= v_i[j] <= n, f\"Invalid vertex v_i[j]: {v_i[j]}\"\n    assert 1 <= sum(k_i) <= 2 * 10**5, f\"Invalid k_i sum: {sum(k_i)}\"\n\n    if solution(stdin):\n        print(\"YES\")\n    else:\n        print(\"NO\")",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n', 'The solution is incorrect.'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example_input) == expected_output, f\"Expected output: {expected_output}, got: {solution(example_input)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''YES\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n2 3\n3 4\nYES\n1 2\n1 3\n1 4'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\", \"Test case 1\"\n\nassert solution(stdin) == \"YES\\n1 2\\n1 3\\n1 4\", \"Test case 2\"\n\nassert solution(stdin) == \"NO\", \"Test case 3\"\n\nassert solution(stdin) == \"YES\\n1 3\\n3 4\", \"Test case 4\"\n\nassert solution(stdin) == \"NO\", \"Test case 5\"\n\nassert solution(stdin) == \"YES\\n1 2\\n1 4\\n1 3\", \"Test case 6\"\n\nassert solution(stdin) == \"NO\", \"Test case 7\"\n\nassert solution(stdin) == \"YES\\n1 2\\n1 3\\n1 4\", \"Test case 8\"\n\nassert solution(stdin) == \"NO\", \"Test case 9\"\n\nassert solution(stdin) == \"YES\\n1 2\\n1 3\\n1 4\", \"Test case 10\"",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2, 2, 1, 3) == \"YES\"\nassert solution(3, 1, 1, 1, 1) == \"YES\"\nassert solution(4, 1, 1000, 101, 1000) == \"YES\"\nassert solution(1, 2, 3, 4) == \"NO\"",
        "num_ids_2": 44,
        "num_ids_4": 93
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 5, 1, 2, 2, 1, 3) == \"YES\\n1 3\\n3 5\\n5 4\"\nassert solution(4, 5, 1, 2, 2, 1, 3) == \"YES\\n1 2\\n2 3\\n3 4\"\nassert solution(4, 5, 1, 2, 1000, 101, 1000) == \"YES\\n1 2\\n1 3\\n1 4\"\nassert solution(4, 5, 1, 1, 1, 1, 1) == \"NO\"\nassert solution(4, 5, 1, 2, 1, 1, 2) == \"YES\\n1 2\"\nassert solution(4, 5, 1, 2, 2, 1, 1) == \"YES\\n1 3\"\nassert solution(4, 5, 1, 2, 2, 1, 3) == \"YES\\n1 3\"\nassert solution(4, 5, 1, 2, 1, 1, 1) == \"YES\\n1 2\"\nassert solution(4, 5, 1, 1, 1, 1, 2) == \"YES\\n1 3\"\nassert solution(4, 5, 1, 2, 2, 1, 4) == \"YES\\n1 3\"\nassert solution(4, 5, 1, 2, 2, 1, 5) == \"NO\"",
        "num_ids_2": 86,
        "num_ids_4": 165
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n\") == \"NO\"\n",
        "num_ids_2": 175,
        "num_ids_4": 175
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\", \"Solution does not work correctly\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\na_1\\na_2\\na_3\\na_4\\n\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is not correct. Expected '{expected}', got '{solution(stdin)}'.\"\nfor i in range(t):\n    n = int(stdin.readline())\n    a = list(map(int, stdin.readline().split()))\n    \n    expected = \"NO\"\n    if n < 2:\n        expected = \"YES\"\n    \n    for _ in range(n - 1):\n        x, y = map(int, stdin.readline().split())\n        if a[x]!= a[y]:\n            expected = \"NO\"\n            break\n    \n    for i in range(n - 1):\n        road_conditions = [a[i], a[(i + 1) % n]]\n        reachable = True\n        for j in range(n):\n            if j == x or j == y or j == (i + 1) % n:\n                continue\n            if a[j]!= a[i] and a[j]!= road_conditions[j % 2]:\n                reachable = False\n                break\n        if reachable:\n            expected = \"YES\"\n            break\n    \n    print(expected)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"01011110\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"0101111000010101111111\"\nassert solution(\"2\\n1 2\\n3 4\\n\") == \"00000000\"\nassert solution(\"3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n\") == \"0101111000010101111111\"\nassert solution(\"2\\n1 2\\n3 4\\n\") == \"00000000\"",
        "num_ids_2": 106,
        "num_ids_4": 212
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\") == \"010111100101111001101111\\n\"\nassert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\") == \"010111100101111001101111\\n010111100101111001101111\\n010111100101111001101111\"\nassert solution(\"8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\") == \"010111100101111001101111\\n010111100101111001101111\\n010111100101111001101111\"",
        "num_ids_2": 217,
        "num_ids_4": 358
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n') == '0101111000111110'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"01011110\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin, output)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11011010\") == \"01111010\"\nassert solution(\"7 9\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\nassert solution(\"7 11\") == \"0111100\"\nassert solution(\"1111100\") == \"0111100\"\n",
        "num_ids_2": 42,
        "num_ids_4": 83
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: Expected output {expected_output}, got {solution(input())}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100010101010100110110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\underline{10}11010 \\rightarrow \\underline{10}111010 \\rightarrow 0111\\underline{10}10 \\rightarrow 011\\underline{10}110 \\rightarrow 01\\underline{10}1110 \\rightarrow 01011110') == '01011110'\nassert solution('11011010') == '01111110'\nassert solution('1111100') == '01111110'\nassert solution('1111100') == '01111110'\nassert solution('7 9') == '01111110'\nassert solution('7 11') == '01111110'",
        "num_ids_2": 122,
        "num_ids_4": 168
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\"",
        "num_ids_2": 102,
        "num_ids_4": 146
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\"",
        "num_ids_2": 102,
        "num_ids_4": 146
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3\\n1 4 7 \\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\") == \"3\\n1 2 4 \\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\\n3\\n1 2 4\\n\\n4\\n1 3 5 6\"\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\\n3\\n1 3 5 6\"\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\"",
        "num_ids_2": 152,
        "num_ids_4": 203
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == # Your code here",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n') == '3\\n1 4 7\\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n') == '3\\n1 2 4\\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 120,
        "num_ids_4": 175
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == output()",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\\n') == '3\\n1 4 7\\n'\nassert solution('5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\\n\\n') == '3\\n1 2 4\\n'\nassert solution('6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\\n\\n') == '4\\n1 3 5 6\\n'",
        "num_ids_2": 124,
        "num_ids_4": 181
    },
    {
        "number": 4520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\") == \"3\\n1 4 7\\n\"\n\nassert solution(\"5 1\\n29 30\\n30 30\\n29 29\\n28 30\\n30 30\") == \"3\\n1 2 4\\n\"\n\nassert solution(\"6 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3\") == \"4\\n1 3 5 6\\n\"",
        "num_ids_2": 116,
        "num_ids_4": 169
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"3\\n\"\nassert solution(\"1 3 -2\") == \"-3\\n\"\nassert solution(\"2 1 4 3 5\") == \"19\\n\"\nassert solution(\"2 1 0\") == \"0\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 3 2\n-100 2 3\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\"\"\"\n5\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"\"\"\n19\n\"\"\"\n\nassert solution(\"\"\"\n2\n2 1\n-3 0\n\"\"\") == \"\"\"\n0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"The given solution is {solution(input())}, but it should be {expected}.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(5) == 19\nassert solution(2) == 0",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 3 2\\n-100 2 3') == '3\\n'\nassert solution('5\\n2 1 4 3 5\\n2 2 2 3 4') == '19\\n'\nassert solution('2\\n2 1\\n-3 0') == '0\\n'",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\", \"Test case failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 2\\n-100 2 3\") == \"3\"\nassert solution(\"5\\n2 1 4 3 5\\n2 2 2 3 4\") == \"19\"\nassert solution(\"2\\n2 1\\n-3 0\") == \"0\"",
        "num_ids_2": 60,
        "num_ids_4": 81
    },
    {
        "number": 4521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 2\\n-100 2 3') == '3\\n'\nassert solution('5\\n2 1 4 3 5\\n2 2 2 3 4') == '19\\n'\nassert solution('2\\n2 1\\n-3 0') == '0\\n'",
        "num_ids_2": 64,
        "num_ids_4": 87
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\\n\"\nassert solution(\"1 2\\n1 2\\n\") == \"0 0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n\") == \"1 3 3\\n\"",
        "num_ids_2": 101,
        "num_ids_4": 142
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([7,5]<|im_sep|>",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\"\nassert solution(\"1 2\\n1 2\") == \"0 0\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\") == \"1 3 3\"",
        "num_ids_2": 95,
        "num_ids_4": 132
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\\n\"\nassert solution(\"1 2\\n1 2\") == \"0 0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\") == \"1 3 3\\n\"\n",
        "num_ids_2": 99,
        "num_ids_4": 138
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Output: {expected_output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"21 7 15 21 3\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\\n\"\nassert solution(\"1 2\\n1 2\") == \"0 0\\n\"\nassert solution(\"3 3\\n1 2 1\\n2 3 2\\n1 3 2\") == \"1 3 3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 138
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 148,
        "num_ids_4": 296
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\", \"Invalid input\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"YES\\nNO\") == \"YES\"\nassert solution(\"NO\\nNO\") == \"NO\"",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"YES\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"NO\") == \"NO\\nNO\\nNO\\nNO\\nYES\"\nassert solution(\"YES\\nNO\") == \"NO\\nNO\\nNO\\nNO\\nYES\"",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution(\"5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100\") == \"YES\\nYES\\nNO\\nNO\\nYES\"",
        "num_ids_2": 148,
        "num_ids_4": 222
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == [\"YES\", \"YES\", \"NO\", \"NO\", \"YES\"]",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\" for i, (input_, expected_output) in enumerate(tests)",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for input: {input_string}\"\nfor input_string, expected_output in test_cases:\n    assert solution(input_string) == expected_output, f\"Test failed for input: {input_string}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\nassert solution(\"4 6\\n1001\\n101011\\n\") == \"10\"\nassert solution(\"4 7\\n1001\\n1010111\\n\") == \"9\"\nassert solution(\"4 8\\n1001\\n10101111\\n\") == \"8\"\nassert solution(\"4 9\\n1001\\n101011111\\n\") == \"7\"\nassert solution(\"4 10\\n1001\\n1010111111\\n\") == \"6\"\nassert solution(\"4 11\\n1001\\n10101111111\\n\") == \"5\"\nassert solution(\"4 12\\n1001\\n101011111111\\n\") == \"4\"\nassert solution(\"4 13\\n1001\\n1010111111111\\n\") == \"3\"\nassert solution(\"4 14\\n1001\\n10101111111111\\n\") == \"2\"\nassert solution(\"4 15\\n1001\\n101011111111111\\n\") == \"1\"\nassert solution(\"4 16\\n1001\\n1010111111111111\\n\") == \"0\"\nassert solution(\"4 17\\n1001\\n10101111111111111\\n\") == \"0\"\nassert solution(\"4 18\\n1001\\n101011111111111111\\n\") == \"0\"\nassert solution(\"4 19\\n1001\\n10101111111111111111\\n\") == \"0\"\nassert solution(\"4 20\\n1001\\n101011111111111111111\\n\") == \"0\"\nassert solution(\"4 21\\n1001\\n1010111111111111111111\\n\") == \"0\"\nassert solution(\"4 22\\n1001\\n10101111111111111111111\\n\") == \"0\"\nassert solution(\"4 23\\n1001\\n101011111111111111111111\\n\") == \"0\"\nassert solution(\"4 24\\n1001\\n1010111111111111111111111\\n\") == \"0\"\nassert solution(\"4 25\\n1001\\n10101111111111111111111111\\n\") == \"0\"\nassert solution(\"4 26\\n1001\\n101011111111111111111111111\\n\") == \"0\"\nassert solution(\"4 27\\n1001\\n101011111111111111111111111\\n\") == \"0\"\nassert solution(\"4 28\\n1001\\n101011111111111111111111111111\\n\") == \"0\"\nassert solution(\"4 29\\n1001\\n10101111111111111111111111111",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\", \"The given solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1010\\n1101\\n\") == \"12\\n\"\nassert solution(\"4 5\\n1001\\n10101\\n\") == \"11\\n\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 'YES'\nassert solution(4) == 'YES'\nassert solution(6) == 'YES'\nassert solution(10) == 'YES'\nassert solution(12) == 'YES'\nassert solution(15) == 'YES'\nassert solution(20) == 'YES'\nassert solution(24) == 'YES'\nassert solution(30) == 'YES'\nassert solution(34) == 'YES'\nassert solution(40) == 'YES'\nassert solution(44) == 'YES'\nassert solution(50) == 'YES'\nassert solution(54) == 'YES'\nassert solution(60) == 'YES'\nassert solution(64) == 'YES'\nassert solution(70) == 'YES'\nassert solution(74) == 'YES'\nassert solution(80) == 'YES'\nassert solution(84) == 'YES'\nassert solution(90) == 'YES'\nassert solution(94) == 'YES'\nassert solution(100) == 'YES'\nassert solution(104) == 'YES'\nassert solution(110) == 'YES'\nassert solution(114) == 'YES'\nassert solution(120) == 'YES'\nassert solution(124) == 'YES'\nassert solution(130) == 'YES'\nassert solution(134) == 'YES'\nassert solution(140) == 'YES'\nassert solution(144) == 'YES'\nassert solution(150) == 'YES'\nassert solution(154) == 'YES'\nassert solution(160) == 'YES'\nassert solution(164) == 'YES'\nassert solution(170) == 'YES'\nassert solution(174) == 'YES'\nassert solution(180) == 'YES'\nassert solution(184) == 'YES'\nassert solution(190) == 'YES'\nassert solution(194) == 'YES'\nassert solution(200) == 'YES'\nassert solution(204) == 'YES'\nassert solution(210) == 'YES'\nassert solution(214) == 'YES'\nassert solution(220) == 'YES'\nassert solution(224) == 'YES'\nassert solution(230) == 'YES'\nassert solution(234) == 'YES'\nassert solution(240) == 'YES'\nassert solution(244) == 'YES'\nassert solution(250) == 'YES'\nassert solution(254) == 'YES'\nassert solution(260) == 'YES'\nassert solution(264) == 'YES'\nassert solution(270) == 'YES'\nassert solution(274) == 'YES'\nassert solution(280) == 'YES'\nassert solution(284) == 'YES'\nassert solution(290) == 'YES'\nassert solution(294) == 'YES'\nassert solution(300) == 'YES'\nassert solution(304) == 'YES'\nassert solution(310) == 'YES'\nassert solution(314) == 'YES'\nassert solution(320) == 'YES'\nassert solution(324) == 'YES'\nassert solution(330) == 'YES'\nassert solution(334) == 'YES'\nassert solution(340) == 'YES'\nassert solution(344) == 'YES'\nassert solution(350) == 'YES'\nassert solution(354) == 'YES'\nassert solution(360) == 'YES'\nassert solution(364) == 'YES'\nassert solution(370) == 'YES'\nassert solution(374) == 'YES'\nassert solution(380) == 'YES'\nassert solution(384) == 'YES'\nassert solution(390) == 'YES'\nassert solution(394) == 'YES'\nassert solution(400) == 'YES'\nassert solution(404) == 'YES'\nassert solution(410) == 'YES'\nassert solution(414) == 'YES'\nassert solution(420) == 'YES'\nassert solution(424)",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 'YES'\nassert solution(8) == 'NO'\nassert solution(10) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"YES\"\n\nassert solution() == \"NO\"\n\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(10) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"YES\\n\" + \"2 4 1 5\"\nassert solution(5) == \"YES\\n\" + \"2 4 6 8 1 3 5 11\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n6\\n8\\n10\\n\") == \"YES\\nYES\\n2 4 1 5\\nYES\\nYES\\n2 4 6 8 1 3 5 11\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 'YES\\nNO'\nassert solution(8) == 'YES\\nYES\\nYES'\nassert solution(9) == 'YES\\nYES\\nNO'",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\nYES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO\"\nprint(\"YES\")\nprint(\"YES\")\nprint(\"2 4 1 5\")\nprint(\"NO\")\nprint(\"YES\")\nprint(\"2 4 6 8 1 3 5 11\")\nprint(\"NO\")\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\", \"5\\n1\\n0\\n4\\n0\"),\n    (\"5\\n10\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\", \"5\\n0\\n0\\n4\\n0\"),\n    (\"5\\n10\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2 3\\n5\\n1 1 1 1 1\", \"5\\n0\\n4\\n0\\n4\"),\n    (\"5\\n10\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2 3 4\\n5\\n1 1 1 1 1\", \"5\\n0\\n0\\n0\\n4\"),\n    (\"5\\n10\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2 3 4 5\\n5\\n1 1 1 1 1\", \"5\\n0\\n0\\n0\\n0\\n4\"),\n]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed: Expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1') == '5\\n1\\n0\\n4\\n0'\nassert solution('5\\n10\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1') == '5\\n0\\n0'",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '''5\n1\n0\n4\n0'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '5\\n1\\n0\\n4\\n0\\n', \"Test 1\"\n\nassert solution('1\\n2\\n3\\n4\\n5') == '1\\n2\\n3\\n4\\n5\\n', \"Test 2\"\n\nassert solution('8\\n7 6 5 4 3 2 1') == '8\\n7 6 5 4 3 2 1\\n0\\n4\\n0\\n1\\n0\\n', \"Test 3\"",
        "num_ids_2": 116,
        "num_ids_4": 178
    },
    {
        "number": 4526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\") == \"5\\n1\\n0\\n4\\n0\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test case {i + 1} failed\"\nfor i, (stdin, output) in enumerate(zip(input.split('\\n'), output.split('\\n'))):\n    assert solution(stdin) == output, f\"Test case {i + 1} failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test case failed for solution: {solution(stdin)}\"\nfor i, input in enumerate(stdin.strip().split('\\n')):\n    assert solution(input) == output[i], f\"Test case failed for solution: {solution(input)}\"\nfor i, (input1, input2) in enumerate(zip(stdin.strip().split('\\n'), stdin.strip().split('\\n')[1:])):\n    assert solution(input1) == output[i], f\"Test case failed for solution: {solution(input1)}\"\n    assert solution(input2) == output[i + len(stdin.strip().split('\\n'))], f\"Test case failed for solution: {solution(input2)}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"output\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n4\\n2\\n7'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\") == \"3\\n4\\n2\\n7\"\nassert solution(\"1\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n8\\n9 10\") == \"3\\n4\\n2\\n7\"\nassert solution(\"1\\n3\\n1 3\\n2 4\\n2 3\\n4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"3\\n4\\n2\\n6\"\nassert solution(\"1\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\\n1 3\\n2 4\\n2 3\\n7\\n1 10\\n2 8\\n2 5\\n3 4\\n4 4\\n6 8\\n7 7\\n8\\n9 10\\n11 12\") == \"3\\n4\\n2\\n6\"\nassert solution(\"1\\n5\\n1 5\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"3\\n4\\n2\\n6\"\nassert solution(\"1\\n5\\n1 5\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 7",
        "num_ids_2": 263,
        "num_ids_4": 469
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case} failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4') == 3\nassert solution('6') == 2\nassert solution('8') == 7",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3') == '3\\n4\\n2\\n7'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string='5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '5\\n60\\n1439\\n1180\\n1'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([23, 55, 23, 0, 0, 0, 4, 20, 23, 59]) == 1439\nassert solution([0, 1, 4, 20, 23, 59]) == 1180",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n\") == \"5\\n60\\n1439\\n1180\\n1\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5\\n60\\n1439\\n1180\\n1'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59') == 5\nassert solution('1\\n1 1') == 1\nassert solution('0\\n0 0') == 0\nassert solution('10\\n0 0') == 10\nassert solution('0\\n12') == 12",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output of the solution for the given test case is not as expected. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} has incorrect output: {solution(input())}!= {expected_output}\" for i, (h, m) in enumerate([23, 55, 23, 0, 0, 1, 4, 20, 23, 59]) for expected_output in [5, 60, 1439, 1180, 1]",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR') == '1 2\\n1 4\\n3 4\\n-1'\nassert solution('6\\nLLRR\\nRRUD\\nURDL\\nDDLU\\nRLUD\\nLLDR') == '2 1\\n1 3\\n3 2\\n-1'\nassert solution('7\\nRLUD\\nURDL\\nDRRU\\nDRDU\\nURDR\\nLRDR\\nDDLU') == '3 2\\n1 3\\n3 2\\n-1'\nassert solution('8\\nDDLU\\nLLRU\\nLLRD\\nLURD\\nRDRU\\nDRUR\\nURDL\\nULDR\\nLDLU\\nUDDU\\nULDR') == '2 1\\n1 3\\n3 2\\n-1'\nassert solution('9\\nRRUU\\nRRUR\\nRRDR\\nURUR\\nDRUR\\nURDR\\nDRDU\\nDRDU\\nDRDU\\nRRUR') == '2 2\\n1 2\\n2 2\\n-1'\nassert solution('10\\nRRUR\\nURUR\\nURDR\\nDRUR\\nURDR\\nDRDU\\nDRDU\\nDRDU\\nRRUR') == '3 2\\n1 2\\n2 2\\n-1'\nassert solution('11\\nURUR\\nURDR\\nURDR\\nDRDU\\nDRDU\\nDRDU\\nRRUR\\nRRUR\\nRRUR') == '4 1\\n1 1\\n1 1\\n-1'\nassert solution('12\\nUUUU\\nURUR\\nURDR\\nURDR\\nDRDU\\nDRDU\\nRRUR\\nRRUR\\nRRUR') == '4 2\\n1 2\\n2 2\\n-1'",
        "num_ids_2": 106,
        "num_ids_4": 234
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\n3\\nLRUDU\\n1\\nLLDDU\\n2\\nRRDDU\") == \"1 1\\n1 3\\n3 3\\n-1\"\nassert solution(\"10\\n10\\n
        "num_ids_2": 106,
        "num_ids_4": 1027
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 2\\n1 4\\n3 4\\n-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed. Expected: {expected}, Received: {solution(input())}\"\nfor i in range(t):\n    n, t = map(int, input().split())\n    s = input()\n    l, r = map(int, input().split())\n    expected = -1\n    solution = solution(input())\n    if solution == -1:\n        print(\"0\", \"0\")\n    else:\n        expected = (l+r)//2\n        print(expected, expected)\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"5\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n5\\nURDUU\\n4\\nDLDRR\") == \"1 4\\n3 4\\n-1\"\nassert solution(\"3\\nRUUD\\n3\\nLDUR\\n2\\nRUUR\\n3\\nRUDR\\n2\\nDRRU\\n1\\nDRDU\") == \"1 4\\n3 4\\n-1\"\nassert solution(\"1\\nRUDR\\n2\\nDRDU\\n2\\nDRRU\\n3\\nRUDR\\n1\\nDRDU\") == \"1 4\\n3 4\\n-1\"\nassert solution(\"1\\nDRDU\\n2\\nRUDR\\n3\\nDRRU\\n1\\nRUDR\") == \"1 4\\n3 4\\n-1\"\nassert solution(\"5\\nDRRU\\n4\\nURDUU\\n5\\nURDUU\\n2\\nLDUR\\n2\\nRUUR\\n3\\nRUDR\\n3\\nRUDR\\n1\\nDRDU\") == \"1 4\\n3 4\\n-1\"\nassert solution(\"5\\nDRDU\\n2\\nRUUR\\n3\\nRUDR\\n1\\nRUDR\\n2\\nRUUR\\n3\\nRUDR\\n3\\nRUDR\\n3\\nRUDR\\n3\\nRUDR\\n3\\nRUDR\\n3\\nRUDR\\n2\\nRUUR\\n1\\nDRDU\") == \"1 4\\n3 4\\n-1\"",
        "num_ids_2": 113,
        "num_ids_4": 226
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLURD\\n4\\nLRUD\\n5\\nRRUDU\\n5\\nLLDDR\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n6\\nURDU\\n5\\nLLDUD\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n6\\nURDU\\n5\\nLLDUD\\n7\\nDRDU\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n6\\nURDU\\n5\\nLLDUD\\n7\\nDRDU\\n8\\nURDU\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n6\\nURDU\\n5\\nLLDUD\\n7\\nDRDU\\n8\\nURDU\\n9\\nDRDU\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n6\\nURDU\\n5\\nLLDUD\\n7\\nDRDU\\n8\\nURDU\\n9\\nDRDU\\n10\\nUDDU\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"\nassert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n6\\nURDU\\n5\\nLLDUD\\n7\\nDRDU\\n8\\nURDU\\n9\\nDRDU\\n10\\nUDDU\\n11\\nDDDU\\n\") == \"1 2\\n1 4\\n3 4\\n-1\"",
        "num_ids_2": 114,
        "num_ids_4": 245
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\nfor test_case in range(int(input())):\n    n, *s = map(int, input().split())\n    s = ''.join(s)\n    l, r = map(int, input().split())\n    res = solution(str(n) +'' + s)\n    print(res)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\") == \"1 2\\n1 4\\n3 4\\n-1\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '3'\nassert solution(5) == '1'\nassert solution(6) == '0'\nassert solution(7) == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'\n\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'\n\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'\n\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3\\n1\\n0\\n2'",
        "num_ids_2": 138,
        "num_ids_4": 276
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"4\\n3\\n4 3\\n4 2\\n4 4\\n4\\n3 3\\n1\\n1\\n1 1\\n1\\n3\\n2\") == \"1\\n0\\n2\"\n\nimport sys\nimport math",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n\") == \"3\\n1\\n0\\n2\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 3 4 5\\n1 3 1 5 5\\n\") == \"1\\n1\\n\"\n\nfrom typing import List",
        "num_ids_2": 85,
        "num_ids_4": 149
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n1\\n0\\n2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\\n1\\n0\\n2\"\nassert solution(\"1\\n1\\n4\\n1 1 1 3\") == \"0\\n1\\n2\"\nassert solution(\"5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"0\\n1\\n2\"\nassert solution(\"3\\n1\\n4\\n1 1 1 3\") == \"1\\n0\\n2\"\nassert solution(\"1000000\\n\") == \"0\\n0\\n0\"\nassert solution(\"1000001\\n\") == \"0\\n0\\n0\"\nassert solution(\"1000010\\n\") == \"0\\n1\\n1\"\nassert solution(\"1000011\\n\") == \"0\\n1\\n1\"\nassert solution(\"1000100\\n\") == \"1\\n1\\n0\"\nassert solution(\"1000101\\n\") == \"1\\n1\\n0\"\nassert solution(\"1000110\\n\") == \"1\\n1\\n0\"\nassert solution(\"1000111\\n\") == \"1\\n1\\n0\"\nassert solution(\"1001000\\n\") == \"1\\n0\\n1\"\nassert solution(\"1001001\\n\") == \"1\\n0\\n1\"\nassert solution(\"1001010\\n\") == \"1\\n0\\n1\"\nassert solution(\"1001011\\n\") == \"1\\n0\\n1\"\nassert solution(\"1001100\\n\") == \"1\\n0\\n0\"\nassert solution(\"1001101\\n\") == \"1\\n0\\n0\"\nassert solution(\"1001110\\n\") == \"1\\n0\\n0\"\nassert solution(\"1001111\\n\") == \"1\\n0\\n0\"\nassert solution(\"1010000\\n\") == \"2\\n0\\n0\"\nassert solution(\"1010001\\n\") == \"2\\n0\\n0\"\nassert solution(\"1010010\\n\") == \"2\\n0\\n0\"\nassert solution(\"1010011\\n\") == \"2\\n0\\n0\"\nassert solution(\"1010100\\n\") == \"2\\n0\\n1\"\nassert solution(\"1010101\\n\") == \"2\\n0\\n1\"\nassert solution(\"1010110\\n\") == \"2\\n0\\n1\"\nassert solution(\"1010111\\n\") == \"2\\n0\\n1\"\nassert solution(\"1011000\\n\") == \"2\\n1\\n0\"\nassert solution(\"1011001\\n\") == \"2\\n1\\n0\"\nassert solution(\"1011010\\n\") == \"2\\n1\\n0\"\nassert solution(\"1011011\\n\") == \"2\\n1\\n0\"\nassert solution(\"1011100\\n\") == \"2\\n1\\n1\"\nassert solution(\"1011101\\n\") == \"2\\n1\\n1\"\nassert solution(\"1011110\\n\") == \"2\\n1\\n1\"\nassert solution(\"1011111\\n\") == \"2\\n1\\n1\"\n",
        "num_ids_2": 100,
        "num_ids_4": 176
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 7, 4, 2, 4, 1, 4, 3, 4, 5, 2, 1, 5, 4, 3, 1, 1, 1, 3) == 3\nassert solution(1, 1, 1, 3) == 0\nassert solution(4, 1, 1, 1, 3) == 2\n",
        "num_ids_2": 81,
        "num_ids_4": 102
    },
    {
        "number": 4530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n\") == \"121\\n\"\nassert solution(\"1\\n1337\\n\") == \"0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Error: {input()} is not equal to {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n') == '121'\n\nassert solution('1\\n1337\\n') == '0'\n\nassert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '121'\n\nassert solution('1\\n2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n') == '0'",
        "num_ids_2": 524,
        "num_ids_4": 636
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution ==  # Enter your solution here\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\") == \"121\"\nassert solution(\"1\\n1337\") == \"0\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0'  # expected output: 0\nassert solution() == '121'  # expected output: 121",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"The given solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Expected output: 0, but got: {}.\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\\n10 6\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\\n10 25\\n24 24 24 24 24 24 24 24 24 24\\n8 8\\n1 2 3 4 5 6 7 8\\n\") == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 156,
        "num_ids_4": 156
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"6\\n18\\n0\\n227\\n8\"\nassert solution(10) == \"6\\n18\\n0\\n227\\n8\"\nassert solution(8) == \"6\\n18\\n0\\n227\\n8\"\nassert solution(20) == \"6\\n18\\n0\\n227\\n8\"\nassert solution(5) == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 51,
        "num_ids_4": 102
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test Case {case} failed\" for case in range(1, t + 1)\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n18\\n0\\n227\\n8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5]) == \"6\"\nassert solution([4, 3]) == \"6\"\nassert solution([1, 2, 1, 3]) == \"1\"\nassert solution([10, 6]) == \"18\"\nassert solution([8, 7, 1, 8, 3, 7, 5, 10, 8, 9]) == \"227\"\nassert solution([5, 10]) == \"0\"\nassert solution([20, 100, 50, 20, 100500]) == \"227\"\nassert solution([10, 25]) == \"8\"\nassert solution([24, 24, 24, 24, 24, 24, 24, 24, 24, 24]) == \"0\"\nassert solution([8, 8]) == \"0\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 57
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Error: {expected_output}!= {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(410) == \"6\"\nassert solution(810) == \"18\"\nassert solution(10) == \"0\"\nassert solution(227) == \"227\"\nassert solution(8) == \"0\"\nassert solution(24) == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2\nassert solution([1, 2], [1, 2]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 60
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3], [1, 1]) == 1\nassert solution([1, 2], [1, 2, 3]) == 2",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3],[1,1]) == 1\nassert solution([1,2],[1,2,3]) == 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"5\") == [1,5,10,5,1]\nassert solution(\"10\") == [1,10,21,11,5,1]\nassert solution(\"33\") == [1,33,113,331,133,41,16,40,13,20,5,1]\nassert solution(\"100\") == [1,100,403,1020,3010,900,200,600,100,300,100]\nassert solution(\"1000\") == [1,1000,2347,8432,29200,62600,191000,486000,1140000,2730000,5840000,13700000,35700000,80000000,171000000,300000000,530000000,890000000,1400000000,2200000000,3100000000,4100000000,5200000000,6400000000,7700000000,9000000000,10400000000,11800000000,13200000000,14600000000,16000000000,17400000000,18800000000,20200000000,21600000000,23000000000,24400000000,25800000000,27200000000,28600000000,30000000000,31400000000,32800000000,34200000000,35600000000,37000000000,38400000000,39800000000,41200000000,42600000000,44000000000,45400000000,46800000000,48200000000,49600000000,51000000000,52400000000,53800000000,55200000000,56600000000,58000000000,59400000000,60800000000,62200000000,63600000000,65000000000,66400000000,67800000000,69200000000,70600000000,72000000000,73400000000,74800000000,76200000000,77600000000,79000000000,80400000000,81800000000,83200000000,",
        "num_ids_2": 35,
        "num_ids_4": 104
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == [1, 3, 3, 1]\nassert solution(5) == [1, 5, 10, 5, 1]\nassert solution(10) == [1, 10, 45, 10, 5, 10]\nassert solution(33) == [1, 1, 2, 5, 10, 20, 10, 5, 1]\nassert solution(34) == [1, 1, 2, 5, 10, 20, 10, 5, 1, 21, 8, 20, 10, 5, 1]",
        "num_ids_2": 42,
        "num_ids_4": 110
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"[1,3,3,1]\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == [1, 3, 3, 1]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == [1, 3, 3, 1]\nassert solution('10') == [1, 10, 35, 35, 10, 1]\nassert solution('1000') == [1, 1000, 3500, 3500, 1000, 1]\nassert solution('2') == [1, 2, 1]\nassert solution('4') == [1, 4, 6, 4, 1]\nassert solution('100') == [1, 100, 403, 670, 100, 1]",
        "num_ids_2": 49,
        "num_ids_4": 105
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == [1, 3, 3, 1]\n\nHere, we are implementing the solution using only O(k) extra space. We are not using any extra space beyond the base case where k is equal to 0 or 1. We are simply returning the required row of the Pascal's triangle.",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\") == [1]\nassert solution(\"12\") == [1, 2]\nassert solution(\"123\") == [1, 2, 3]\nassert solution(\"1234567890\") == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
        "num_ids_2": 16,
        "num_ids_4": 48
    },
    {
        "number": 4534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [1, 3, 3, 1]\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 85,
        "num_ids_4": 127
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 84,
        "num_ids_4": 126
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"000000000000000000000000000001011\") == 3\nassert solution(\"000000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31",
        "num_ids_2": 82,
        "num_ids_4": 123
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('00000000000000000000000000001011') == '3', 'Test 1 failed'\nassert solution('0000000000000000000000000010000000') == '1', 'Test 2 failed'\nassert solution('1111111111111111111111111111101') == '31', 'Test 3 failed'",
        "num_ids_2": 96,
        "num_ids_4": 143
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('000000000000000000000000000001011') == 3\nassert solution('00000000000000000000000000001000000') == 1\nassert solution('11111111111111111111111111111101') == 31",
        "num_ids_2": 84,
        "num_ids_4": 125
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 82,
        "num_ids_4": 124
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 85,
        "num_ids_4": 127
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"000000000000000000000000000001011\") == \"3\", \"Your solution is incorrect.\"\nassert solution(\"00000000000000000000000010000000\") == \"1\", \"Your solution is incorrect.\"\nassert solution(\"11111111111111111111111111111101\") == \"31\", \"Your solution is incorrect.\"",
        "num_ids_2": 95,
        "num_ids_4": 143
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'0000000000000000000000000000001011') == 3\nassert solution(b'0000000000000000000000000000001000000') == 1\nassert solution(b'11111111111111111111111111111101') == 31\n",
        "num_ids_2": 91,
        "num_ids_4": 134
    },
    {
        "number": 4535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"0000000000000000000000010000000\") == \"1\"\nassert solution(\"11111111111111111111111111111101\") == \"31\"",
        "num_ids_2": 81,
        "num_ids_4": 123
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == [1,2,3]\nassert solution(\"4321\") == [4,3,2,1]",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"[1,2,4]\"\nassert solution(\"4321\") == \"[4,3,2,2]\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(['1', '2', '3']) == ['1', '2', '4']\nassert solution(['4', '3', '2', '1']) == ['4', '3', '2', '2']",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"[1,2,3]\") == [1, 2, 4]\nassert solution(\"[4,3,2,1]\") == [4, 3, 2, 2]\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123\") == [\"1\", \"2\", \"3\"]\nassert solution(\"4321\") == [\"4\", \"3\", \"2\", \"1\"]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123\") == [1,2,3]\nassert solution(\"4321\") == [4,3,2,1]",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\n\nHere, we first test if the function returns the expected output for the first example. Then, we test it for the second example. \n\nThe first example is because the digits are stored in reverse order, which means that the first element is at the head, and the last element is at the end. Therefore, the first element should be 1, the second element should be 2, and so on. So, the function should return [1, 2, 4].\n\nThe second example is a similar situation, but the digits are stored in the correct order, so the function should return [4, 3, 2, 2].",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4\\n', \"Output is incorrect\"\nprint(\"All tests passed!\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"4\\n\"\nassert solution(\"5 3\") == \"9\\n\"\nassert solution(\"2 1\") == \"2\\n\"\nassert solution(\"4 5\") == \"12\\n\"\nassert solution(\"8 9\") == \"18\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"4\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4', 'Expected output: \"4\" got: \"{}\"'.format(solution('3 1'))\nassert solution('5 0') == '0', 'Expected output: \"0\" got: \"{}\"'.format(solution('5 0'))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Please provide input in the format A B and output in the format of largest value.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1) == \"4\"\nassert solution(10, 10) == \"300\"\nassert solution(2, 2) == \"4\"\nassert solution(3, 4) == \"12\"\nassert solution(3, 3) == \"9\"",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"0 0\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\\n\"\nassert solution(\"10 10\") == \"400\\n\"\nassert solution(\"1 100\") == \"100\\n\"\nassert solution(\"0 -5\") == \"5\\n\"\nassert solution(\"100 0\") == \"100\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\n\nassert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All tests passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n\") == \"3\\n\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nprint(\"All test cases pass\")\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\", \"Sample Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\nassert solution(\"6 10\\n2 3\\n7 6\\n4 5\\n8 9\") == \"2\"\nassert solution(\"10 10\\n1000 1000\") == \"10\"\nassert solution(\"3 5\\n4 4\\n6 6\") == \"0\"\nassert solution(\"1 2\\n0 0\") == \"0\"\nassert solution(\"1000 0\") == \"0\"\nassert solution(\"1 2\\n-3 4\\n5 6\") == \"0\"\nassert solution(\"1 2\\n-3 4\\n5 6\\n7 8\\n9 10\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 114
    },
    {
        "number": 4538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\", \"Incorrect output: \" + solution(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12) == 'Yes'\nassert solution(15) == 'No'\nassert solution(9876543210) == 'Yes'\nassert solution(1234567890) == 'No'\nassert solution(1000000000) == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 60
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes', 'Test failed'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('13') == 'No'\nassert solution('24') == 'No'\nassert solution('55') == 'Yes'\nassert solution('123456789') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(12) == \"Yes\", \"N is a Harshad number\"\nprint(\"Yes\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\\n\", \"Test case 1 failed.\"\nassert solution(\"13\") == \"No\\n\", \"Test case 2 failed.\"\nassert solution(\"10\") == \"Yes\\n\", \"Test case 3 failed.\"\nassert solution(\"24\") == \"No\\n\", \"Test case 4 failed.\"\nassert solution(\"100\") == \"No\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"12\\n8\\n10\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 -1\") == \"12\\n8\\n10\"\nassert solution(\"4\\n1 2 3 4\") == \"6\\n6\\n6\"\nassert solution(\"5\\n10 50 20 80 50\") == \"160\\n120\\n140\"\nassert solution(\"6\\n10 10 10 10 10\") == \"120\\n80\\n100\"",
        "num_ids_2": 50,
        "num_ids_4": 125
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '12\\n8\\n10\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '12\\n8\\n10' # expected output\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12\\n8\\n10\\n\", \"Test Failed\"\nassert solution(\"3\\n3 5 -1\\n\") == \"12\\n8\\n10\\n\", \"Test Failed\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\\n\", \"Test Failed\"\nassert solution(\"3\\n4 5\\n\") == \"0\\n\", \"Test Failed\"\nassert solution(\"3\\n4 5 6\\n\") == \"0\\n\", \"Test Failed\"\nassert solution(\"3\\n3\\n3\\n\") == \"0\\n\", \"Test Failed\"",
        "num_ids_2": 55,
        "num_ids_4": 102
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input(), sample_output())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\\n8\\n10\\n\"\n\nsolution = '''\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'consonant'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('f') == 'consonant'\nassert solution('g') == 'consonant'\nassert solution('h') == 'consonant'\nassert solution('i') == 'vowel'\nassert solution('j') == 'vowel'\nassert solution('k') == 'vowel'\nassert solution('l') == 'vowel'\nassert solution('m') == 'vowel'\nassert solution('n') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('p') == 'vowel'\nassert solution('q') == 'vowel'\nassert solution('r') == 'vowel'\nassert solution('s') == 'vowel'\nassert solution('t') == 'vowel'\nassert solution('u') == 'vowel'\nassert solution('v') == 'vowel'\nassert solution('w') == 'consonant'\nassert solution('x') == 'consonant'\nassert solution('y') == 'consonant'\nassert solution('z') == 'consonant'",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel', 'Function should return vowel'\nassert solution('b') == 'consonant', 'Function should return consonant'\nassert solution('c') == 'consonant', 'Function should return consonant'\nassert solution('d') == 'consonant', 'Function should return consonant'\nassert solution('e') == 'vowel', 'Function should return vowel'\nassert solution('f') == 'consonant', 'Function should return consonant'\nassert solution('g') == 'consonant', 'Function should return consonant'",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"consonant\"\nassert solution(\"d\") == \"vowel\"\nassert solution(\"e\") == \"consonant\"\nassert solution(\"f\") == \"consonant\"\nassert solution(\"g\") == \"vowel\"\nassert solution(\"h\") == \"consonant\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"j\") == \"consonant\"\nassert solution(\"k\") == \"vowel\"\nassert solution(\"l\") == \"consonant\"\nassert solution(\"m\") == \"vowel\"\nassert solution(\"n\") == \"consonant\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"p\") == \"consonant\"\nassert solution(\"q\") == \"vowel\"\nassert solution(\"r\") == \"consonant\"\nassert solution(\"s\") == \"vowel\"\nassert solution(\"t\") == \"consonant\"\nassert solution(\"u\") == \"vowel\"\nassert solution(\"v\") == \"consonant\"\nassert solution(\"w\") == \"vowel\"\nassert solution(\"x\") == \"consonant\"\nassert solution(\"y\") == \"vowel\"\nassert solution(\"z\") == \"consonant\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\", \"The solution should return vowel\"\nassert solution(\"b\") == \"consonant\", \"The solution should return consonant\"\nassert solution(\"c\") == \"consonant\", \"The solution should return consonant\"\nassert solution(\"d\") == \"consonant\", \"The solution should return consonant\"\nassert solution(\"e\") == \"vowel\", \"The solution should return vowel\"\nassert solution(\"f\") == \"consonant\", \"The solution should return consonant\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel', 'The solution should return vowel'\nassert solution('b') == 'consonant', 'The solution should return consonant'\nassert solution('c') == 'consonant', 'The solution should return consonant'\nassert solution('d') == 'consonant', 'The solution should return consonant'\nassert solution('e') == 'vowel', 'The solution should return vowel'\nassert solution('f') == 'consonant', 'The solution should return consonant'\nassert solution('g') == 'consonant', 'The solution should return consonant'\nassert solution('h') == 'vowel', 'The solution should return vowel'\nassert solution('i') == 'vowel', 'The solution should return vowel'\nassert solution('j') == 'vowel', 'The solution should return vowel'\nassert solution('k') == 'vowel', 'The solution should return vowel'\nassert solution('l') == 'consonant', 'The solution should return consonant'\nassert solution('m') == 'vowel', 'The solution should return vowel'\nassert solution('n') == 'consonant', 'The solution should return consonant'\nassert solution('o') == 'vowel', 'The solution should return vowel'\nassert solution('p') == 'consonant', 'The solution should return consonant'\nassert solution('q') == 'vowel', 'The solution should return vowel'\nassert solution('r') == 'vowel', 'The solution should return vowel'\nassert solution('s') == 'consonant', 'The solution should return consonant'\nassert solution('t') == 'consonant', 'The solution should return consonant'\nassert solution('u') == 'vowel', 'The solution should return vowel'\nassert solution('v') == 'consonant', 'The solution should return consonant'\nassert solution('w') == 'consonant', 'The solution should return consonant'\nassert solution('x') == 'consonant', 'The solution should return consonant'\nassert solution('y') == 'consonant', 'The solution should return consonant'\nassert solution('z') == 'vowel', 'The solution should return vowel'",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\", \"Test case 1: a is a vowel\"\nassert solution(\"b\") == \"consonant\", \"Test case 2: b is a consonant\"\nassert solution(\"c\") == \"consonant\", \"Test case 3: c is a consonant\"\nassert solution(\"d\") == \"consonant\", \"Test case 4: d is a consonant\"\nassert solution(\"e\") == \"vowel\", \"Test case 5: e is a vowel\"",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'vowel'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\nassert solution('f') == 'consonant'\nassert solution('g') == 'consonant'\nassert solution('h') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('j') == 'consonant'\nassert solution('k') == 'vowel'\nassert solution('l') == 'vowel'\nassert solution('m') == 'vowel'\nassert solution('n') == 'consonant'\nassert solution('o') == 'vowel'\nassert solution('p') == 'vowel'\nassert solution('q') == 'consonant'\nassert solution('r') == 'vowel'\nassert solution('s') == 'consonant'\nassert solution('t') == 'vowel'\nassert solution('u') == 'vowel'\nassert solution('v') == 'consonant'\nassert solution('w') == 'consonant'\nassert solution('x') == 'vowel'\nassert solution('y') == 'consonant'\nassert solution('z') == 'consonant'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\", \"The function should return vowel.\"\nassert solution(\"b\") == \"consonant\", \"The function should return consonant.\"\nassert solution(\"c\") == \"consonant\", \"The function should return consonant.\"\nassert solution(\"d\") == \"consonant\", \"The function should return consonant.\"\nassert solution(\"e\") == \"vowel\", \"The function should return vowel.\"",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\", \"Test 1 failed. Expected 'vowel', got '{}'\".format(solution(\"a\"))\n\nassert solution(\"e\") == \"consonant\", \"Test 2 failed. Expected 'consonant', got '{}'\".format(solution(\"e\"))\n\nassert solution(\"i\") == \"consonant\", \"Test 3 failed. Expected 'consonant', got '{}'\".format(solution(\"i\"))\n\nassert solution(\"o\") == \"consonant\", \"Test 4 failed. Expected 'consonant', got '{}'\".format(solution(\"o\"))\n\nassert solution(\"u\") == \"consonant\", \"Test 5 failed. Expected 'consonant', got '{}'\".format(solution(\"u\"))",
        "num_ids_2": 64,
        "num_ids_4": 130
    },
    {
        "number": 4541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"consonant\"\nassert solution(\"d\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"f\") == \"vowel\"\nassert solution(\"g\") == \"vowel\"\nassert solution(\"h\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"j\") == \"vowel\"\nassert solution(\"k\") == \"vowel\"\nassert solution(\"l\") == \"vowel\"\nassert solution(\"m\") == \"vowel\"\nassert solution(\"n\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"p\") == \"vowel\"\nassert solution(\"q\") == \"vowel\"\nassert solution(\"r\") == \"vowel\"\nassert solution(\"s\") == \"vowel\"\nassert solution(\"t\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\nassert solution(\"v\") == \"vowel\"\nassert solution(\"w\") == \"vowel\"\nassert solution(\"x\") == \"vowel\"\nassert solution(\"y\") == \"vowel\"\nassert solution(\"z\") == \"vowel\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\", \"Test Case 1 failed.\"\nassert solution(\"BBWWW\") == \"2\\n\", \"Test Case 2 failed.\"\nassert solution(\"BBWWL\") == \"2\\n\", \"Test Case 3 failed.\"\nassert solution(\"BWWLW\") == \"2\\n\", \"Test Case 4 failed.\"\nassert solution(\"BWWLR\") == \"3\\n\", \"Test Case 5 failed.\"\nprint(\"All test cases passed.\")\n",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input.txt').read()) == '1\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('BBBWW') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\\n\", \"The solution should be 1.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBWWWW\") == \"1\"\nassert solution(\"BBWWWB\") == \"2\"\nassert solution(\"BBWWWW\") == \"1\"\nassert solution(\"BBBWW\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"3 6\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"21 1\") == \"No\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"100 5\") == \"No\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 5\") == \"No\"\nassert solution(\"3 5\") == \"No\"\nassert solution(\"0 0\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 21') == 'Yes', \"Your implementation for testing the correctness of solution is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"4 5\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"0 0\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 21') == 'Yes', 'The solution is incorrect.'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 21\") == \"Yes\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\", \"The code is not correct. Please check if the constraints are satisfied and provide the input and output examples.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"Input should be a valid integer sequence.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\na_1 a_2.. a_N\\n3 1 4 1 5 9 2\\n\") == \"4\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\", \"Test case not provided.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"5 1 2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"5 1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 112
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\", \"Your solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"4\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"2\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\\n\", \"Test case 1\"\nassert solution(\"7\\n2 2 3 2 6 9 2\") == \"4\\n\", \"Test case 2\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\\n\", \"Test case 3\"\nassert solution(\"7\\n5 5 5 5 5 5 5\") == \"0\\n\", \"Test case 4\"\nassert solution(\"7\\n1000000000\") == \"1\\n\", \"Test case 5\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", \"Please input the correct value for N and A\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\\n\"\nassert solution(\"1\\n5\\n\") == \"2\\n\"\nassert solution(\"5\\n1\\n\") == \"5\\n\"\nassert solution(\"10\\n10\\n\") == \"0\\n\"\nassert solution(\"7\\n9\\n\") == \"4\\n\"\nassert solution(\"5\\n6\\n\") == \"0\\n\"\nassert solution(\"100\\n100\\n\") == \"0\\n\"\nassert solution(\"10000\\n10000\\n\") == \"0\\n\"\nassert solution(\"1000000000\\n1000000000\\n\") == \"0\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4\\n') == '5\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5', \"Invalid input\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\", \"Test case 1\"\nassert solution(\"5\\n5\\n\") == \"5\", \"Test case 2\"\nassert solution(\"3\\n5\\n\") == \"5\", \"Test case 3\"\nassert solution(\"4\\n5\\n\") == \"5\", \"Test case 4\"\nassert solution(\"3\\n3\\n\") == \"10\", \"Test case 5\"\nassert solution(\"10\\n10\\n\") == \"10\", \"Test case 6\"\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\") == \"5\\n\"\nassert solution(\"5\\n5\") == \"5\\n\"\nassert solution(\"2\\n2\") == \"0\\n\"\nassert solution(\"2\\n1\") == \"1\\n\"\nassert solution(\"10\\n10\") == \"10\\n\"\nassert solution(\"100\\n100\") == \"100\\n\"\nassert solution(\"200\\n100\") == \"50\\n\"\nassert solution(\"10\\n200\") == \"10\\n\"\nassert solution(\"10\\n500\") == \"10\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '5', 'Your solution is incorrect. The output is incorrect. Please try again.'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6\") == \"YES\", \"Sample Input should output YES.\"\nassert solution(\"3 4 6\") == \"NO\", \"Sample Input should output NO.\"\nassert solution(\"1 4 6\") == \"YES\", \"Sample Input should output YES.\"\nassert solution(\"5 4 6\") == \"NO\", \"Sample Input should output NO.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n\nassert solution(\"3 6 9\") == \"YES\"\n\nassert solution(\"1 2 3\") == \"NO\"\n\nassert solution(\"4 3 2\") == \"NO\"\n\nassert solution(\"5 4 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4 6') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(29) == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(29) == 'Yes', \"The one's digit of 29 is 9\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"30\") == \"No\"\nassert solution(\"40\") == \"No\"\nassert solution(\"50\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"29\") == \"Yes\\n\"\nassert solution(\"30\") == \"No\\n\"\nassert solution(\"99\") == \"Yes\\n\"\nassert solution(\"100\") == \"No\\n\"\nassert solution(\"19\") == \"Yes\\n\"\nassert solution(\"20\") == \"No\\n\"\nassert solution(\"3\") == \"Yes\\n\"\nassert solution(\"4\") == \"No\\n\"\nassert solution(\"10\") == \"Yes\\n\"\nassert solution(\"11\") == \"No\\n\"\nassert solution(\"0\") == \"No\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"Yes\", \"Test Case 1\"\nassert solution(\"30\") == \"No\", \"Test Case 2\"\nassert solution(\"99\") == \"Yes\", \"Test Case 3\"\nassert solution(\"100\") == \"No\", \"Test Case 4\"\nassert solution(\"98\") == \"No\", \"Test Case 5\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"29\") == \"Yes\" # Sample Input\nassert solution(\"30\") == \"No\" # Sample Input",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"29\") == \"Yes\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 81
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\\n\"\nassert solution(\"5 3 3\\n1 2 5\") == \"2\\n\"\nassert solution(\"5 3 3\\n1 2 6\") == \"2\\n\"\nassert solution(\"5 3 3\\n1 2 7\") == \"3\\n\"\nassert solution(\"5 3 3\\n1 2 8\") == \"3\\n\"\nassert solution(\"5 3 3\\n1 2 9\") == \"4\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test Failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n2 1 4\") == \"2\"\nassert solution(\"5 3 3\\n3 2 4\") == \"3\"\nassert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 1\") == \"1\"\nassert solution(\"5 3 3\\n4 4 1\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"\nassert solution(\"1 2\\n....\\n\") == \"No\"\nassert solution(\"1 1\\n...\\n\") == \"No\"\nassert solution(\"1 3\\n....\\n\") == \"No\"\nassert solution(\"2 1\\n....\\n\") == \"No\"\nassert solution(\"2 2\\n....\\n\") == \"No\"\nassert solution(\"2 3\\n....\\n\") == \"No\"\nassert solution(\"3 1\\n....\\n\") == \"No\"\nassert solution(\"3 2\\n....\\n\") == \"No\"\nassert solution(\"3 3\\n....\\n\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n.#.\\n.#.\\n\") == \"Yes\\n\"\nassert solution(\"1 1\\n11\\n11\\n\") == \"No\\n\"\nassert solution(\"2 2\\n11\\n11\\n11\\n11\\n\") == \"No\\n\"\nassert solution(\"3 3\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n11\\n\") == \"Yes\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 166
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 3\n.#.\n.#.\n.#.''') == 'No'\n\nassert solution('''3 3\n.#.\n#.##\n.#.''') == 'Yes'\n\nassert solution('''3 3\n.#.\n.#.\n..##\n''') == 'Yes'\n\nassert solution('''3 3\n.#.\n.#.\n.####\n''') == 'Yes'\n\nassert solution('''3 3\n.#.\n..#\n..##\n''') == 'No'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#.\\n\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"Yes\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"No\"\n\nassert solution(\n    \"\"\"\n    3 3\n    #.#\n    #.#\n    #.#\n    \"\"\"\n) == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 50 20\") == \"No\"\nassert solution(\"5 5 5\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes', 'Test Failed'\nprint('All tests passed!')",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 5 5\") == \"No\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"4 5 6\") == \"No\"\nassert solution(\"10 30 20 30 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 ",
        "num_ids_2": 31,
        "num_ids_4": 1027
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\", \"Test case 1 failed\"\nassert solution() == \"No\", \"Test case 2 failed\"\n\nassert solution() == \"Yes\", \"Test case 3 failed\"\nassert solution() == \"No\", \"Test case 4 failed\"\n\nassert solution() == \"Yes\", \"Test case 5 failed\"\nassert solution() == \"No\", \"Test case 6 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"20 10 30\") == \"No\"\nassert solution(\"10 5 20\") == \"Yes\"\nassert solution(\"5 10 20\") == \"No\"\nassert solution(\"10 10 10\") == \"Yes\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"100 100 100\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\" # correct output\nassert solution(\"10 30 15\") == \"No\" # incorrect output",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left\\n', \"The output should be 'Left', but it is '{}'\".format(solution('3 8 7 1'))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"2 5 3 1\") == \"Left\"\nassert solution(\"1 3 5 7\") == \"Right\"\nassert solution(\"1 2 3 4\") == \"Balanced\"\nassert solution(\"1 2 1 2\") == \"Balanced\"\nassert solution(\"5 3 4 2\") == \"Left\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\", \"Test failed\" # Test case 1\nassert solution(\"4 8 7 1\") == \"Left\", \"Test failed\" # Test case 2\nassert solution(\"1 8 7 1\") == \"Left\", \"Test failed\" # Test case 3\nassert solution(\"1 8 7 2\") == \"Balanced\", \"Test failed\" # Test case 4\nassert solution(\"1 7 7 2\") == \"Balanced\", \"Test failed\" # Test case 5",
        "num_ids_2": 50,
        "num_ids_4": 101
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 8 7 1\") == \"Left\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3 8 7 1) == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"1 1 1 1\") == \"Left\"\nassert solution(\"4 3 2 1\") == \"Balanced\"\nassert solution(\"2 3 4 5\") == \"Right\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n8\\n\\n') == '8\\n'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\") == \"8\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n8\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n8\\n\\n\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 158,
        "num_ids_4": 1027
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n3 0 0 0 0 0 0\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n5\\n5 0 0 0 0 0 0\\n5 4 5 6 7 8 9 -2 -3 4 -2\\n\\n10\\n10 0 0 0 0 0 0\\n10 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'",
        "num_ids_2": 188,
        "num_ids_4": 188
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"8\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n3 0\\n\\n\") == \"8\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"5\\n0 0 0 0 0 1\\n0 0 0 0 0 1\\n1 1\\n1 1\\n\") == \"1\"",
        "num_ids_2": 116,
        "num_ids_4": 212
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n3\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"8\"\n",
        "num_ids_2": 149,
        "num_ids_4": 149
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\") == \"8\"\nassert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\") == \"1\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"8\"\nassert solution(\"2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"3\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"4\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"5\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"6\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"7\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"8\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"9\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"10\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"11\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"12\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"13\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"14\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"15\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\\n\\n\\n\\n8\") == \"6\"\nassert solution(\"16\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3",
        "num_ids_2": 130,
        "num_ids_4": 260
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"1 2\\n1234\") == \"No\"\nassert solution(\"1 3\\n12345\") == \"No\"\nassert solution(\"1 4\\n123456\") == \"No\"\nassert solution(\"1 5\\n1234567\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 79
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"3 4\\n456-8901\") == \"No\"\nassert solution(\"3 4\\n269-66500\") == \"No\"\nassert solution(\"3 4\\n269-6651\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"\nassert solution(\"1 2\\n123-4567\\n\") == \"No\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n', 'Your code is incorrect'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\", \"The first rectangle should be moved to the left by a distance of 1.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nprint(\"All test cases passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 6') == '1\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\", \"Output should be 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"1\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=r\"3 2 6\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Invalid input\"\nassert solution(\"2 8 10\") == \"2\\n8\\n10\\n\", \"Invalid input\"\nassert solution(\"1 2 3\") == \"1\\n2\\n3\\n\", \"Invalid input\"\nassert solution(\"2 1 4\") == \"2\\n4\\n1\\n\", \"Invalid input\"\nassert solution(\"10 1 5\") == \"10\\n5\\n1\\n\", \"Invalid input\"",
        "num_ids_2": 57,
        "num_ids_4": 109
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test case 1 failed\"\nassert solution(\"5 10 3\") == \"3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\", \"Test case 2 failed\"\nassert solution(\"1 5 3\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\", \"Test case 3 failed\"\n\nassert solution(\"20 25 3\") == \"20\\n22\\n24\\n26\\n28\\n30\\n32\\n34\\n36\\n38\\n40\\n42\\n44\\n46\\n48\\n50\\n52\\n54\\n56\\n58\\n60\\n62\\n64\\n66\\n68\\n70\\n72\\n74\\n76\\n78\\n80\\n82\\n84\\n86\\n88\\n90\\n92\\n94\\n96\\n98\\n100\\n\", \"Test case 4 failed\"\n\nassert solution(\"10 20 25\") == \"10\\n18\\n26\\n34\\n42\\n50\\n58\\n66\\n74\\n82\\n90\\n98\\n106\\n114\\n122\\n130\\n138\\n146\\n154\\n162\\n170\\n178\\n186\\n194\\n202\\n210\\n218\\n226\\n234\\n242\\n250\\n258\\n266\\n274\\n282\\n290\\n298\\n306\\n314\\n322\\n330\\n338\\n346\\n354\\n362\\n370\\n378\\n386\\n394\\n402\\n410\\n418\\n426\\n434\\n442\\n450\\n458\\n466\\n474\\n482\\n490\\n498\\n506\\n514\\n522\\n530\\n538\\n546\\n554\\n",
        "num_ids_2": 78,
        "num_ids_4": 677
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"The output is not correct\"\nprint(\"All test cases passed\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\"\nassert solution(\"2 8 3\") == \"2\\n4\\n7\\n8\\n\"\nassert solution(\"3 8 4\") == \"4\\n7\\n8\\n\"\nassert solution(\"3 9 1\") == \"3\\n4\\n7\\n8\\n9\\n1\\n\"\nassert solution(\"3 8 6\") == \"3\\n4\\n7\\n8\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 103
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test case 1 should return 3, 4, 7, 8, but it returned {}\".format(solution(\"3 8 2\"))\nassert solution(\"1 10 3\") == \"3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\", \"Test case 2 should return 3, 4, 5, 6, 7, 8, 9, 10, but it returned {}\".format(solution(\"1 10 3\"))\nassert solution(\"5 10 4\") == \"4\\n7\\n8\\n9\\n10\\n\", \"Test case 3 should return 4, 7, 8, 9, 10, but it returned {}\".format(solution(\"5 10 4\"))\nassert solution(\"10 15 100\") == \"1\\n5\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100\\n\", \"Test case 4 should return 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, but it returned {}\".format(solution(\"10 15 100\"))",
        "num_ids_2": 144,
        "num_ids_4": 420
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"Test Case 1\"\nassert solution(\"1 10 3\") == \"1\\n2\\n3\\n\", \"Test Case 2\"\nassert solution(\"10 10 1\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\", \"Test Case 3\"\nassert solution(\"5 5 3\") == \"3\\n4\\n5\\n\", \"Test Case 4\"\nassert solution(\"2 10 5\") == \"2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\", \"Test Case 5\"",
        "num_ids_2": 60,
        "num_ids_4": 140
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nprint(\"All test cases passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\\n\", \"The given output is incorrect.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Test Failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AtCoder s Contest') == 'ABC', \"The solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AtCoder s Contest') == 'ABC', \"Test failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"ABC\") == \"ABC\"\nassert solution(\"ABC Beginner\") == \"ABC\"\nassert solution(\"ABC Beginner Contest\") == \"ABC\"\nassert solution(\"ABC 123\") == \"ABC\"\nassert solution(\"ABC 123 456\") == \"ABC\"\nassert solution(\"ABC 123 456 789\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0\") == \"ABC\"\nassert solution(\"ABC 123 456 789 012\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 012\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 012\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123 456\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123 456 789\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123 456 789 0\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123 456 789 012\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123 456 789 0123\") == \"ABC\"\nassert solution(\"ABC 123 456 789 0123 456 789 0123 456 789 0123 456 789 0123 456\") == \"ABC\"\nassert solution(\"ABC 123 456 789 01",
        "num_ids_2": 29,
        "num_ids_4": 51
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\\n\", \"Test Case 1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('5 3 2') == 'NO'\nassert solution('6 1 3') == 'NO'\nassert solution('3 10 1') == 'YES'\nassert solution('3 5 7') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 4\") == \"YES\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"2 2 1\") == \"NO\"\nassert solution(\"3 4 2\") == \"YES\"\nassert solution(\"3 6 2\") == \"NO\"\nassert solution(\"3 5 2\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\nprint('YES')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"3 2 5\") == \"NO\"\nassert solution(\"1 3 2\") == \"YES\"\nassert solution(\"1 4 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"\nassert solution(\"50 30\") == \"18\\n30 out of the initial 50 grams of sand will be consumed, resulting in 18 grams.\"\nassert solution(\"100 1000000000\") == \"1000000000\\n1000000000 out of the initial 1000000000 grams of sand will be consumed, resulting in 1000000000 grams.\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\\n1000000000 out of the initial 10000000000 grams of sand will be consumed, resulting in 10000000000 grams.\"\nassert solution(\"10000000000000000000 1000000000000000000\") == \"10000000000000000000\\n10000000000000000000 out of the initial 100000000000000000000 grams of sand will be consumed, resulting in 100000000000000000000 grams.\"",
        "num_ids_2": 86,
        "num_ids_4": 261
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\\n\"\nassert solution(\"25 3\") == \"0\\nThe initial quantity of sand is 25.\\n\"\nassert solution(\"25 3\") == \"0\\nThe initial quantity of sand is 25.\\n\"\nassert solution(\"25 3\") == \"0\\nThe initial quantity of sand is 25.\\n\"\nassert solution(\"25 3\") == \"0\\nThe initial quantity of sand is 25.\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 127
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 17\") == \"83\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 17\") == \"83\\n17 out of the initial 100 grams of sand will be consumed, resulting in 83 grams.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"83\", \"The output does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 17') == '83', \"Incorrect output for sample input\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\",
        "num_ids_2": 133,
        "num_ids_4": 1027
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\\n\") == \"1000000000000000000\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\\n\") == \"-1\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\\n\") == \"1000000000000000000\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\\n\") == \"-1\"",
        "num_ids_2": 88,
        "num_ids_4": 198
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"5\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"6\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"1000000000000000000\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 232
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1000000000 1000000000\\n\") == \"1000000000000000000\\n\"\nassert solution(\"2\\n1000000001 1000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000001\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000001\\n\") == \"-1\\n\"\nassert solution(\"2\\n1000000000 1000000000\\n\") == \"-1\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 166
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1000000000 1000000000\\n') == '1000000000000000000\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('2\\n9999999999 9999999999\\n') == '-1\\n'\nassert solution('1\\n1000000001\\n') == '1000000000\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n1000000000\\n') == '-1\\n'\nassert solution('1\\n100000000",
        "num_ids_2": 81,
        "num_ids_4": 153
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1000000000000000000\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1000000000\\n1000000000\\n') == '1000000000000000000'\nassert solution('3\\n1000000000\\n1000000000\\n1000000000\\n') == '-1'\nassert solution('4\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n') == '10000000000000000000'\nassert solution('5\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n') == '-1'",
        "num_ids_2": 102,
        "num_ids_4": 253
    },
    {
        "number": 4559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"2\\n1000000001 1000000000\") == \"-1\"\nassert solution(\"3\\n1000000000 1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"3\\n1000000001 1000000000 1000000000\") == \"-1\"\nassert solution(\"4\\n1000000000 1000000000 1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"4\\n1000000001 1000000000 1000000000 1000000000\") == \"-1\"\n",
        "num_ids_2": 84,
        "num_ids_4": 190
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"\nassert solution(\"100\\n1000\\n\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\"\nassert solution(\"1999\\n300\\n\") == \"No\"\nassert solution(\"1000\\n1\\n\") == \"No\"\nassert solution(\"1000\\n2\\n\") == \"No\"\nassert solution(\"1000\\n3\\n\") == \"No\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2018\\n218\\n\") == \"Yes\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'2018\\n218\\n') == 'Yes\\n'\nassert solution(b'2019\\n219\\n') == 'No\\n'\nassert solution(b'2000\\n2000\\n') == 'Yes\\n'\nassert solution(b'2000\\n2000\\n') == 'No\\n'\nassert solution(b'1\\n1\\n') == 'Yes\\n'\nassert solution(b'2001\\n2000\\n') == 'No\\n'\nassert solution(b'10000\\n10000\\n') == 'Yes\\n'\nassert solution(b'10000\\n10000\\n') == 'No\\n'",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2018\\n218\") == \"Yes\"\nassert solution(\"10000\\n5000\") == \"Yes\"\nassert solution(\"10000\\n5001\") == \"No\"\nassert solution(\"10000\\n0\") == \"No\"\nassert solution(\"10000\\n10000\") == \"No\"",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2018\\n218') == 'Yes'\nprint('All tests passed!')",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 6\") == \"safe\\n\"\nassert solution(\"1 3 6\") == \"safe\\n\"\nassert solution(\"2 3 6\") == \"safe\\n\"\nassert solution(\"4 3 5\") == \"dangerous\\n\"\nassert solution(\"2 3 5\") == \"safe\\n\"\nassert solution(\"5 3 5\") == \"safe\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 3, 6) =='safe'\nassert solution(1, 1, 1) =='safe'\nassert solution(1, 2, 2) =='safe'\nassert solution(1, 3, 4) =='safe'\nassert solution(1, 1, 2) =='safe'\nassert solution(1, 1, 3) =='safe'\nassert solution(1, 2, 4) =='safe'\nassert solution(1, 3, 5) =='safe'\nassert solution(1, 4, 6) =='safe'\nassert solution(2, 2, 2) =='safe'\nassert solution(2, 3, 3) =='safe'\nassert solution(2, 1, 3) =='safe'\nassert solution(2, 1, 4) =='safe'\nassert solution(2, 2, 5) =='safe'\nassert solution(3, 3, 5) =='safe'\nassert solution(4, 4, 6) =='safe'\nassert solution(4, 2, 5) =='safe'\nassert solution(4, 3, 4) =='safe'\nassert solution(4, 4, 5) =='safe'\nassert solution(5, 5, 6) =='safe'\nassert solution(5, 3, 4) =='safe'\nassert solution(5, 4, 3) =='safe'\nassert solution(5, 5, 4) =='safe'\nassert solution(6, 6, 7) =='safe'\nassert solution(6, 4, 4) =='safe'\nassert solution(6, 5, 3) =='safe'\nassert solution(6, 6, 4) =='safe'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('1 3 6') =='safe'\nassert solution('2 3 6') == 'dangerous'\nassert solution('3 3 6') =='safe'\nassert solution('4 3 5') =='safe'\nassert solution('1 2 6') =='safe'\nassert solution('2 2 6') == 'dangerous'\nassert solution('3 2 6') =='safe'\nassert solution('4 2 5') =='safe'\nassert solution('1 1 6') =='safe'\nassert solution('2 1 6') == 'dangerous'\nassert solution('3 1 6') =='safe'\nassert solution('4 1 5') =='safe'\nassert solution('1 1 7') =='safe'\nassert solution('2 1 7') == 'dangerous'\nassert solution('3 1 7') =='safe'\nassert solution('4 1 6') =='safe'\nassert solution('1 1 7') =='safe'\nassert solution('2 1 7') =='safe'\nassert solution('3 1 7') =='safe'\nassert solution('4 1 6') =='safe'\nassert solution('1 1 6') =='safe'\nassert solution('2 1 6') =='safe'\nassert solution('3 1 6') =='safe'\nassert solution('4 1 5') =='safe'\nassert solution('1 1 5') =='safe'\nassert solution('2 1 5') =='safe'\nassert solution('3 1 5') =='safe'\nassert solution('4 1 4') =='safe'\nassert solution('1 1 4') =='safe'\nassert solution('2 1 4') =='safe'\nassert solution('3 1 4') =='safe'\nassert solution('4 1 3') =='safe'\nassert solution('1 1 3') =='safe'\nassert solution('2 1 3') =='safe'\nassert solution('3 1 3') =='safe'\nassert solution('4 1 2') =='safe'\nassert solution('1 1 2') =='safe'\nassert solution('2 1 2') =='safe'\nassert solution('3 1 2') =='safe'\nassert solution('4 1 1') =='safe'\nassert solution('1 1 1') =='safe'\nassert solution('2 1 1') =='safe'\nassert solution('3 1 1') =='safe'\nassert solution('4 1 0') =='safe'\nassert solution('1 1 0') =='safe'\nassert solution('2 1 0') =='safe'\nassert solution('3 1 0') =='safe'\nassert solution('4 0 6') =='safe'\nassert solution('1 0 6') =='safe'\nassert solution('2 0 6') =='safe'\nassert solution('3 0 6') =='safe'\nassert solution('4 0 5') =='safe'\nassert solution('1 0 5') =='safe'\nassert solution('2 0 5') =='safe'\nassert solution('3 0 5') =='safe'\nassert solution('4 0 4') =='safe'\nassert solution('1 0 4') =='safe'\nassert solution('2 0 4') =='safe'\nassert solution('3 0 4') =='safe'\nassert solution('4 0 3') =='safe'\nassert solution('1 0 3') =='safe'\nassert solution('2 0 3') =='safe'\nassert solution('3 0 3') =='safe'\nassert solution('4 0 2') =='safe'\nassert solution('1 0 2') =='safe'\nassert solution('2 0 2') =='safe'\nassert solution('3 0 2') =='safe'\nassert solution('4 0 1') =='safe'\nassert solution('1 0 1') =='safe'\nassert solution('2 0 1') =='safe'\nassert solution('3 0 1') =='safe'\nassert solution('4 0 0') =='safe'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 6\") == \"safe\", \"The output should be safe.\"\nassert solution(\"5 6 7\") == \"safe\", \"The output should be safe.\"\nassert solution(\"4 10 7\") == \"safe\", \"The output should be safe.\"\nassert solution(\"4 10 6\") == \"safe\", \"The output should be safe.\"\nassert solution(\"4 3 11\") == \"dangerous\", \"The output should be dangerous.\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 6\") == \"safe\", \"Incorrect solution\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3 6') =='safe'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 6\") == \"safe\", \"The output is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 3 6\") == \"safe\"\nassert solution(\"2 5 7\") == \"dangerous\"\nassert solution(\"3 2 6\") == \"safe\"\nassert solution(\"4 5 8\") == \"safe\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"1 3 6\") == \"dangerous\"\nassert solution(\"2 3 6\") == \"dangerous\"\nassert solution(\"4 2 5\") == \"safe\"\nassert solution(\"1 2 5\") == \"safe\"\nassert solution(\"2 2 5\") == \"safe\"\n\nprint(\"All test cases pass!\")",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == '9', '10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"9\"\nassert solution(12) == \"16\"\nassert solution(20) == \"36\"\nassert solution(30) == \"36\"\nassert solution(40) == \"49\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n\") == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"4\"\nassert solution(\"100\") == \"100\"\nassert solution(\"5000\") == \"5000\"\nassert solution(\"10000\") == \"10000\"\nassert solution(\"10001\") == \"10000\"",
        "num_ids_2": 21,
        "num_ids_4": 51
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"144\"\nassert solution(\"16\") == \"160\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\\n10 is not square, but 9 = 3 \u00d7 3 is. Thus, we print 9.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\nassert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"10\\n\"\nassert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"10\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\\n\"\nassert solution(\"3\\n2 3\\n1 1\\n3 2\\n3 4\\n\") == \"10\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"10\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n\") == \"10\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 5\\n\") == \"10\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 5\\n2 3\\n2 2\\n\") == \"10\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 5\\n2 3\\n2 2\\n1 5\\n\") == \"10\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 150
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\\n\") == \"10\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n4 4\\n\") == \"30\\n\"\nassert solution(\"6\\n6 6\\n4 4\\n3 3\\n2 2\\n\") == \"60\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 95
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 10",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('4\\n2 3\\n1 1\\n3 2\\n') == '12'\nassert solution('5\\n2 3\\n1 1\\n3 2\\n') == '15'\nassert solution('100000\\n2 3\\n1 1\\n3 2\\n') == '100000'\nassert solution('2 3\\n1 1\\n3 2\\n4 5\\n6 7\\n8 9\\n') == '210'\n",
        "num_ids_2": 56,
        "num_ids_4": 121
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"10\\n3 4\\n2 2\\n1 1\") == \"24\"\n",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"10\\n\", \"Incorrect output.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3\\n1 1\\n3 2\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"copyright\") == \"no\"\nassert solution(\"Hello\") == \"yes\"\nassert solution(\"\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"Hello, World!\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"unicorporate\") == \"yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"Hello\") == \"no\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"hello\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"hello\") == \"no\"\nassert solution(\"\") == \"no\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"no\"\nassert solution(\"aeiouAEIOU\") == \"yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"notcopyrightable\") == \"no\"\nassert solution(\"copyrightable\") == \"no\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"Hello world\") == \"yes\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"\nassert solution(\"Copyrightable\") == \"no\"\nassert solution(\"This is a sample input\") == \"yes\"\nassert solution(\"This is also a sample input\") == \"no\"\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\n\nassert solution(\"hello\") == \"no\"\n\nassert solution(\"example\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"no\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\nassert solution(\"2\\nWEWW\") == \"1\\n\"\nassert solution(\"3\\nWWWW\") == \"1\\n\"\nassert solution(\"4\\nWE\") == \"1\\n\"\nassert solution(\"5\\nWE\") == \"2\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"5\\nWEWWW\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nWEEWW\\n\") == \"1\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nweeww\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"5 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 5\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 5\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"5 6\\n1 2\\n2 3\\n1 4\") == \"1\\n2\\n2\\n2\"\nassert solution(\"3 7\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n2\\n2\"\nassert solution(\"2 8\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n2\\n2\"",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n5 6\\n3 4\\n5 6\") == \"2\\n2\\n1\\n1\\n4\\n6\\n4\\n6\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\n2\n2\n1\n1\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 1\") == \"0\\n0\\n2\\n2\"\nassert solution(\"4 2\\n1 1\\n2 2\\n3 3\") == \"2\\n2\\n3\\n3\"\n",
        "num_ids_2": 77,
        "num_ids_4": 149
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1\\n'\nassert solution('1 2\\n2 3\\n1 4\\n') == '2\\n2\\n1\\n1\\n'\nassert solution('1 2\\n2 3\\n1 4\\n5 6\\n') == '1\\n1\\n'\nassert solution('1 2\\n2 3\\n1 4\\n1 5\\n') == '2\\n2\\n'\nassert solution('1 2\\n2 3\\n1 4\\n2 5\\n') == '2\\n2\\n'\nassert solution('1 2\\n2 3\\n1 4\\n3 5\\n') == '2\\n2\\n'\nassert solution('1 2\\n2 3\\n1 4\\n4 5\\n') == '2\\n2\\n'",
        "num_ids_2": 73,
        "num_ids_4": 141
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\"\nassert solution(\"5 4\\n1 2\\n3 4\\n2 3\\n4 5\") == \"2\\n3\\n1\\n2\"\nassert solution(\"2 5\\n1 2\\n3 4\\n2 3\\n4 5\") == \"2\\n3\\n1\\n2\"",
        "num_ids_2": 77,
        "num_ids_4": 118
    },
    {
        "number": 4566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\\n2\\n1\\n1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 25, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n5\\n15\\n10\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n10\\n5\") == \"25\"\nassert solution(\"3\\n5\\n10\\n15\\n5\\n",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"3\\n5\\n10\\n15\\n\") == \"30\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"25\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\", \"Test failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"5\\n10\\n\\n\") == \"0\\n\"\nassert solution(\"10\\n10\\n10\\n\") == \"30\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\\n\"\nassert solution(\"5\\n10\\n\\n\") == \"30\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 93
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('4\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('5\\n5\\n10\\n15\\n') == '25\\n'\nassert solution('6\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('7\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('8\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('9\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('10\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('11\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('12\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('13\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('14\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('15\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('16\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('17\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('18\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('19\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('20\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('21\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('22\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('23\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('24\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('25\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('26\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('27\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('28\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('29\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('30\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('31\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('32\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('33\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('34\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('35\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('36\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('37\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('38\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('39\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('40\\n5\\n10\\n15\\n') == '30\\n'\nassert solution('41\\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n10\\n15\\n\") == \"25\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"5\\n10\\n15\\n\") == \"30\\n\"\nassert solution(\"5\\n10\\n15\\n15\\n\") == \"30\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 90
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\naabbca') == '2', \"The function should return 2.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"4\\nabcabc\") == \"1\"\nassert solution(\"6\\nabcd\") == \"3\"\nassert solution(\"5\\nabcabc\") == \"1\"\nassert solution(\"4\\nabcd\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"6\\nabc\") == \"3\"\nassert solution(\"6\\nabcd\") == \"0\"\nassert solution(\"6\\n\") == \"0\"\nassert solution(\"6\\nabcdefg\") == \"0\"\nassert solution(\"6\\nabcdefghijklmnopqrstuvwxyz\") == \"0\"\nassert solution(\"6\\n\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\nassert solution(\"7\\nabcde\") == \"3\"\nassert solution(\"8\\nabcdefg\") == \"4\"\nassert solution(\"9\\nxyzabc\") == \"5\"\nassert solution(\"10\\n\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\naabbca\\n') == '2'\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\", \"Test 1 failed.\"\nassert solution(\"7\\naacbbba\") == \"1\\n\", \"Test 2 failed.\"\nassert solution(\"8\\naaaabba\") == \"0\\n\", \"Test 3 failed.\"\nassert solution(\"9\\nabababa\") == \"1\\n\", \"Test 4 failed.\"\nassert solution(\"10\\nabababab\") == \"3\\n\", \"Test 5 failed.\"\n\nsolution(stdin)",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabbca\\n\") == \"2\"\nassert solution(\"5\\nabcde\\n\") == \"3\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabbca\") == \"2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Cloudy\"\nassert solution(\"Rainy\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\nassert solution(\"Rainy\") == \"Sunny\"\nassert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Rainy\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"8 20 120\") == \"240\"\nassert solution(\"10 100 50\") == \"250\"\nassert solution(\"12 100 50\") == \"300\"\nassert solution(\"15 100 50\") == \"400\"\nassert solution(\"17 100 50\") == \"500\"\nassert solution(\"20 100 50\") == \"600\"\nassert solution(\"25 100 50\") == \"750\"\nassert solution(\"30 100 50\") == \"1000\"\nassert solution(\"50 100 50\") == \"1500\"\nassert solution(\"75 100 50\") == \"2000\"\nassert solution(\"100 100 50\") == \"3000\"\nassert solution(\"125 100 50\") == \"4500\"\nassert solution(\"150 100 50\") == \"6000\"\nassert solution(\"200 100 50\") == \"8000\"\nassert solution(\"250 100 50\") == \"11000\"\nassert solution(\"300 100 50\") == \"14000\"\nassert solution(\"500 100 50\") == \"20000\"\nassert solution(\"750 100 50\") == \"28000\"\nassert solution(\"1000 100 50\") == \"40000\"\nassert solution(\"1250 100 50\") == \"55000\"\nassert solution(\"1500 100 50\") == \"70000\"\nassert solution(\"2000 100 50\") == \"90000\"\nassert solution(\"2500 100 50\") == \"120000\"\nassert solution(\"3000 100 50\") == \"160000\"\nassert solution(\"5000 100 50\") == \"230000\"\nassert solution(\"7500 100 50\") == \"310000\"\nassert solution(\"10000 100 50\") == \"450000\"\nassert solution(\"12500 100 50\") == \"600000\"\nassert solution(\"15000 100 50\") == \"750000\"\nassert solution(\"20000 100 50\") == \"1000000\"\nassert solution(\"25000 100 50\") == \"1400000\"\nassert solution(\"30000 100 50\") == \"1900000\"\nassert solution(\"50000 100 50\") == \"2500000\"\nassert solution(\"75000 100 50\") == \"3500000\"\nassert solution(\"100000 100 50\") == \"5000000\"\nassert solution(\"125000 100 50\") == \"7000000\"\nassert solution(\"150000 100 50\") == \"9000000\"\nassert solution(\"200000 100 50\") == \"12000000\"\nassert solution(\"250000 100 50\") == \"16000000\"\nassert solution(\"300000 100 50\") == \"22000000\"\nassert solution(\"500000 100 50\") == \"30000000\"\nassert solution(\"750000 100 50",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '119'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\\n\", \"Solution not passing\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 17 120') == '119'\nprint(\"All tests passed.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '119', \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"8 14 15\") == \"169\"\nassert solution(\"2 50 500\") == \"500\"\nassert solution(\"5 1000 10000\") == \"20000\"\nassert solution(\"5 100 1000\") == \"10000\"",
        "num_ids_2": 37,
        "num_ids_4": 81
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"119\"\nprint(\"Test passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"Incorrect output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"119\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"119\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 2\") == \"576\"\nassert solution(\"1 3\") == \"576\"\nassert solution(\"1 4\") == \"640\"\nassert solution(\"1 5\") == \"1120\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3800\\n', \"Solution should return the expected output.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='1 1') == '3800'\nprint(solution(stdin='1 1'))  # Output: '3800'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n') == '3800\\n'\nassert solution('1 2\\n') == '2400\\n'\nassert solution('1 5\\n') == '6400\\n'\nassert solution('2 5\\n') == '10000\\n'\nassert solution('3 5\\n') == '14000\\n'",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3800\nassert solution() == 3",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3800\", \"The expected value of the total execution time of the code is 3800, but the code returned %s\" % solution(stdin)",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n\") == \"3800\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"3800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '3800'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\", \"Invalid output\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nprint(\"All tests passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"abc\") is None",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('abc') is None",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\", \"The string atcoderregularcontest contains a, but does not contain b.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''\n4\n3\n3\n4\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"2 4 3 2\\n\") == \"3\\n4\\n3\\n2\\n\"\nassert solution(\"2 4 3 4\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"4 2 4 3\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"6 4 5 3\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"2 4 4 4\") == \"4\\n3\\n3\\n4\\n\"\nassert solution(\"2 4 4 3 5\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\\n3\\n3\\n3\"\nassert solution(5) == \"4\\n3\\n4\\n3\"\nassert solution(7) == \"4\\n3\\n4\\n3\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\"\nassert solution(\"1 2 3 4\") == \"1\\n2\\n3\\n4\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4 3\") == \"4\\n3\\n3\\n4\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''4\n3\n3\n4'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 4 4 3\\n') == '4\\n3\\n3\\n4\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {output()}\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == 0\nassert solution(\"N\") == 0\nassert solution(\"6\") == 0\nassert solution(\"1 1\") == 0\nassert solution(\"6 3\") == 0\nassert solution(\"4 4\") == 0\nassert solution(\"4 1\") == 0\nassert solution(\"4 2\") == 0\nassert solution(\"4 3\") == 0\nassert solution(\"1 1 2 3 1 2 3\") == 0\nassert solution(\"4 1 2 3 2 1 4 3 4 1\") == 0\nassert solution(\"1 1 2 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == 2\nassert solution(\"4 1 2 3 2 1 4 3 4 1\") == 2",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\nassert solution(\"10\\n10 10 10 10 10 10\") == \"100000000000\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5\\n3 4 5 6 7\") == \"0\"\nassert solution(\"5\\n3 4 5 7 8\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 6 7\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 6 8\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 6 9\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 7 8\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 7 9\") == \"0\"\nassert solution(\"6\\n1 2 3 4 5 8 9\") == \"0\"\nassert solution(\"6\\n1 2 3 4 6 7 8\") == \"0\"\nassert solution(\"6\\n1 2 3 4 6 7 9\") == \"0\"\nassert solution(\"6\\n1 2 3 4 6 8 9\") == \"0\"\nassert solution(\"6\\n1 2 3 5 6 7 8\") == \"0\"\nassert solution(\"6\\n1 2 3 5 6 7 9\") == \"0\"\nassert solution(\"6\\n1 2 3 5 6 8 9\") == \"0\"\nassert solution(\"6\\n1 2 4 5 6 7 8\") == \"0\"\nassert solution(\"6\\n1 2 4 5 6 7 9\") == \"0\"\nassert solution(\"6\\n1 2 4 5 6 8 9\") == \"0\"\nassert solution(\"6\\n1 3 4 5 6 7 8\") == \"0\"\nassert solution(\"6\\n1 3 4 5 6 7 9\") == \"0\"\nassert solution(\"6\\n1 3 4 5 6 8 9\") == \"0\"\nassert solution(\"6\\n2 4 5 6 7 8 9\") == \"0\"\nassert solution(\"6\\n2 4 5 6 7 8 10\") == \"0\"\nassert solution(\"6\\n2 4 5 6 7 9 10\") == \"0\"\nassert solution(\"6\\n2 4 5 6 8 9 10\") == \"0\"\nassert solution(\"6\\n3 4 5 6 7 8 9\") == \"0\"\nassert solution(\"6\\n3 4 5 6 7 8 10\") == \"0\"\nassert solution(\"6\\n3 4 5 6 7 9 10\") == \"0\"\nassert solution(\"6\\n3 4 5 6 8 9 10\") == \"0\"\nassert solution(\"6\\n4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"6\\n4 5 6 7 8 10 11\") == \"0\"\nassert solution(\"6\\n4 5 6 7 9 10 11\") == \"0\"\nassert solution(\"6\\n4 5 6 8 9 10 11\") == \"0\"\nassert solution(\"6\\n5 6 7 8 9 10 11\") == \"0\"\nassert solution(\"6\\n5 6 7 8 10 11 12\") == \"0\"\nassert solution(\"6\\n5 6 7 9 10 11 12\") == \"0\"\nassert solution(\"6\\n5 6 8 9 10 11 12\")",
        "num_ids_2": 64,
        "num_ids_4": 115
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\\n\") == \"2\\n1 rectangle can be formed.\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n1 \\times 2 rectangle can be formed.\"\nprint(0) # max area can be calculated with fewer than four sticks\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2 4 2 1\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 30,
        "num_ids_4": 38
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\\n1 rectangle can be formed.\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"10\\n6 1 4 2 5 3 2 1 3\") == \"18\\n4 square sticks can be formed.\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 97
    },
    {
        "number": 4574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"3\\n7 3\\n2\\n5\\n10\") == \"18\\n\"\nassert solution(\"3\\n7 2\\n2\\n5\\n10\") == \"10\\n\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"10\\n\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"10\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\nassert solution(\"4\\n2 1\\n2 2\\n3 3\\n1 1\\n1 1\\n1 1\") == \"5\"\nassert solution(\"5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"10\"",
        "num_ids_2": 65,
        "num_ids_4": 126
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\", \"Expected output: 8, received: {}\".format(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"8\\n\"\nassert solution(\"10\\n2\\n5\\n1\") == \"1\\n\"\nassert solution(\"2\\n5\\n10\\n1\") == \"3\\n\"\nassert solution(\"10\\n100\\n100\") == \"100\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 96
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2\\n'\nassert solution('1\\n1\\n1\\n50') == '2\\n'\nassert solution('3\\n1\\n2\\n100') == '1\\n2\\n'\nassert solution('1\\n1\\n1\\n200') == '2\\n'\nassert solution('1\\n1\\n1\\n500') == '4\\n'",
        "num_ids_2": 45,
        "num_ids_4": 94
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nassert solution(\"5\\n1\\n3\\n10\\n\") == \"3\"\nassert solution(\"8\\n4\\n6\\n12\\n\") == \"11\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n', \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n50\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n2\\n150\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n500\\n\") == \"0\\n\"\nassert solution(\"2\\n2\\n2\\n1500\\n\") == \"1\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 99
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n5\") == \"2\\n\"\nassert solution(\"3\\n2\\n1\\n4\") == \"4\\n\"\nassert solution(\"2\\n1\\n2\\n3\") == \"6\\n\"\nassert solution(\"3\\n4\\n2\\n1\") == \"8\\n\"\nassert solution(\"5\\n1\\n6\\n2\") == \"15\\n\"\nassert solution(\"1\\n2\\n3\\n4\") == \"10\\n\"\nassert solution(\"4\\n3\\n2\\n1\") == \"12\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n2\\n100\\n\") == \"2\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\\n\"\nassert solution(\"5\\n3\\n5\") == \"0\\n2\\n\"\nassert solution(\"4\\n5\\n6\") == \"1\\n\"\nassert solution(\"20\\n20\\n20\") == \"1\\n\"\nassert solution(\"15\\n20\\n20\") == \"0\\n\"\nassert solution(\"5\\n5\\n10\") == \"0\\n0\\n1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 83
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 4 2') == 'No'\nassert solution('2 4 1') == 'Yes'\nassert solution('1 5 3') == 'No'\nassert solution('1 3 4') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\", \"The condition is not satisfied\"\nassert solution(\"5 2 1\") == \"Yes\", \"The condition is not satisfied\"\nassert solution(\"1 5 3\") == \"No\", \"The condition is satisfied\"\nassert solution(\"-5 2 3\") == \"No\", \"The condition is satisfied\"",
        "num_ids_2": 42,
        "num_ids_4": 82
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\") == \"Yes\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"2 4 5\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 2 3') == 'Yes'\nassert solution('2 3 1') == 'No'\nassert solution('5 10 5') == 'Yes'\nassert solution('10 5 10') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"5 3 7\") == \"No\"\nassert solution(\"10 15 8\") == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\", \"The given input is incorrect.\"\nassert solution(\"2 3 1\") == \"No\", \"The given input is incorrect.\"\nassert solution(\"1 2 3\") == \"No\", \"The given input is incorrect.\"\nassert solution(\"3 2 1\") == \"No\", \"The given input is incorrect.\"\nassert solution(\"1 3 4\") == \"No\", \"The given input is incorrect.\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\\n\"\nassert solution(\"1 1000\\n120\\n100\\n140\\n\") == \"10\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n200\\n\") == \"18\\n\"\nassert solution(\"1 1000\\n120\\n100\\n140\\n200\\n\") == \"18\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n100\\n\") == \"18\\n\"\nassert solution(\"1 1000\\n120\\n100\\n140\\n100\\n\") == \"18\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n50\\n\") == \"2\\n\"\nassert solution(\"1 1000\\n120\\n100\\n140\\n50\\n\") == \"2\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n1000\\n\") == \"2\\n\"\nassert solution(\"1 1000\\n120\\n100\\n140\\n1000\\n\") == \"2\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 149
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '9', \"Incorrect output\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, but got {solution(input_str)}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"2 2\\n2\\n3\\n4\\n5\") == \"2\"\nassert solution(\"1 10\\n5\\n10\\n15\\n20\") == \"3\"\nassert solution(\"1 10\\n5\\n10\\n15\\n20\") == \"3\"",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nassert solution(\"5 2000\\n1000\\n500\\n500\\n\") == \"5\"\nassert solution(\"1 2000\\n1000\\n1000\\n1000\\n\") == \"2\"\nassert solution(\"3 1000\\n1000\\n1000\\n1000\\n\") == \"6\"\nassert solution(\"1 1000\\n1000\\n1000\\n1000\\n\") == \"1\"\nassert solution(\"1 1000\\n500\\n500\\n500\\n\") == \"2\"\nassert solution(\"3 1000\\n500\\n500\\n500\\n\") == \"1\"\nassert solution(\"1 1000\\n2000\\n2000\\n2000\\n\") == \"3\"\nassert solution(\"3 1000\\n2000\\n2000\\n2000\\n\") == \"2\"\nassert solution(\"1 1000\\n3000\\n3000\\n3000\\n\") == \"4\"\nassert solution(\"3 1000\\n3000\\n3000\\n3000\\n\") == \"3\"\nassert solution(\"1 1000\\n4000\\n4000\\n4000\\n\") == \"5\"\nassert solution(\"3 1000\\n4000\\n4000\\n4000\\n\") == \"4\"\nassert solution(\"1 1000\\n5000\\n5000\\n5000\\n\") == \"6\"\nassert solution(\"3 1000\\n5000\\n5000\\n5000\\n\") == \"5\"\nassert solution(\"1 1000\\n6000\\n6000\\n6000\\n\") == \"7\"\nassert solution(\"3 1000\\n6000\\n6000\\n6000\\n\") == \"6\"\nassert solution(\"1 1000\\n7000\\n7000\\n7000\\n\") == \"8\"\nassert solution(\"3 1000\\n7000\\n7000\\n7000\\n\") == \"7\"\nassert solution(\"1 1000\\n8000\\n8000\\n8000\\n\") == \"9\"\nassert solution(\"3 1000\\n8000\\n8000\\n8000\\n\") == \"8\"\nassert solution(\"1 1000\\n9000\\n9000\\n9000\\n\") == \"10\"\nassert solution(\"3 1000\\n9000\\n9000\\n9000\\n\") == \"9\"\n",
        "num_ids_2": 65,
        "num_ids_4": 135
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\\n\"\nassert solution(\"3 1000\\n120\\n100\\n140\\n120\") == \"12\\n\"\nassert solution(\"2 1000\\n100\\n140\") == \"12\\n\"\nassert solution(\"5 1000\\n100\\n140\") == \"10\\n\"\n",
        "num_ids_2": 70,
        "num_ids_4": 126
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\\n\") == \"9\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\napple\\norange\\napple\\n') == '2'\nassert solution('5\\napple\\norange\\nbanana\\nspear\\n') == '3'\nassert solution('1\\napple\\n') == '1'\nassert solution('3\\napple\\nbanana\\norange\\n') == '0'\nassert solution('6\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana",
        "num_ids_2": 46,
        "num_ids_4": 83
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\napple\\no\\napple\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\napple\\no\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\no\\napple\\n\") == \"2\\n\"\nassert solution(\"3\\napple\\no\\napple\\napple\\n\") == \"2\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\napple\\no\\napple\\n') == '2\\n'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\napple\\nother\\napple\\n\") == \"2\\n\"\nprint(\"You got two kinds of items: apple and orange.\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\napple\\norange\\napple\\n\") == \"2\\n\"\n\nN = int(stdin.readline())\nS = stdin.readline().strip()\n\ncount = 0\nfor s in S:\n    if s in kind_dict:\n        count += 1\n\nprint(count)",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\noorange\\napple\") == \"2\\n\"\nassert solution(\"3\\nbanana\\nyam\\norange\") == \"2\\n\"\nassert solution(\"3\\na\\nb\\nc\\nd\\ne\\nf\") == \"4\\n\"\nassert solution(\"3\\napple\\nbanana\\nc\\nd\\ne\\nf\") == \"2\\n\"\nassert solution(\"3\\ns\\nx\\ny\\nz\\nw\") == \"0\\n\"\n",
        "num_ids_2": 43,
        "num_ids_4": 94
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"\nassert solution(\"4\\n1600 2000 2400 2800\") == \"2 2\\n\"\nassert solution(\"4\\n3200 2100 2500 3100\") == \"2 2\\n\"\nassert solution(\"4\\n10000 4000 8000 12000\") == \"2 2\\n\"\nassert solution(\"4\\n1000 2000 3000 4000\") == \"2 2\\n\"\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 2\\n\", \"The minimum possible number of different colors of the users, and the maximum possible number of different colors, should be 2, but the output is '{}'\".format(solution(stdin))",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2 2\", \"Your solution is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2 2\\n', \"Expected output: '2 2'\\n, but got: '{}'\".format(solution(stdin))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\\n\"\n\nThe code works as expected. It takes the number of users N, and for each user's rating a_i, it finds the minimum and maximum possible colors.\n\nLet's fix the code to make it work.",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 2\\n\", \"The output is not correct.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('oxo') == '900'\nassert solution('oxy') == '0'\nassert solution('xyz') == '0'\nassert solution('xox') == '0'\nassert solution('oxx') == '900'",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\", \"Solution should print the price of the bowl of ramen corresponding to 'oxo'.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('oxo') == '900'\nassert solution('xoo') == '900'\nassert solution('oxx') == '1000'\nassert solution('xoo') == '1000'\nassert solution('xox') == '1000'\nassert solution('xoox') == '2000'",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"oxo\") == \"900\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\"\nprint(\"All tests passed!\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\" # Test Case 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('oxo') == '900' # Expected output: 900",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\", \"Incorrect Output\"\nassert solution(\"H H\") == \"H\", \"Incorrect Output\"\nassert solution(\"H H\") == \"H\", \"Incorrect Output\"\nassert solution(\"H H\") == \"H\", \"Incorrect Output\"\nassert solution(\"H H\") == \"H\", \"Incorrect Output\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H', \"The expected output is H, but the actual output is not H.\"\nassert solution('H H') == 'H', \"The expected output is H, but the actual output is not H.\"\nassert solution('H H') == 'H', \"The expected output is H, but the actual output is not H.\"\nassert solution('H H') == 'H', \"The expected output is H, but the actual output is not H.\"\nassert solution('H H') == 'H', \"The expected output is H, but the actual output is not H.\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('H H D') == 'H'\nassert solution('D H') == 'D'\nassert solution('D H D') == 'D'\nassert solution('D D') == 'D'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"\nassert solution(\"H H\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"H D D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D H D\") == \"D\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"D D D\") == \"D\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H H\\n\") == \"H\\n\", \"Expected output: H\\n, got: {}.\".format(solution(\"H H\\n\"))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\", \"Solution should return H\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H H\\nH H\") == \"H\"\nassert solution(\"H H\\nD H\") == \"D\"\nassert solution(\"D H\\nH H\") == \"D\"\nassert solution(\"D H\\nD H\") == \"H\"\nassert solution(\"H D\\nH D\") == \"H\"\nassert solution(\"H D\\nD H\") == \"D\"\nassert solution(\"D D\\nD D\") == \"D\"\nassert solution(\"D D\\nH H\") == \"H\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The given input is not valid.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"Test failed\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The solution should be 1+2+2+2=7\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The solution should be correct.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\\n\", \"The correct solution is: 1+2+2+2=7\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\", \"The solution is incorrect.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n2\\n0\\n0\\n0\"\nprint(solution(stdin))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2\\n2\\n0\\n0\\n0\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 1\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1\\n\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2 1 1 1\\n\") == \"0\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 68,
        "num_ids_4": 144
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"1\\n1\\n1\\n1\") == \"0\\n0\\n0\\n0\"\nassert solution(\"2\\n3 3 3\\n2 2 2 2\") == \"0\\n0\\n0\\n0\"\nassert solution(\"3\\n2 2 2 2\\n1 1 1 1\\n2 2 2 2\") == \"0\\n0\\n0\\n0\"\nassert solution(\"4\\n1 2 3 4 5 6\\n1 1 1 1 1 1\\n2 2 2 2 2 2\\n3 3 3 3 3 3\") == \"0\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 59,
        "num_ids_4": 140
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 1 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 1\\n\") == \"1\\n1\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 1 2\\n\") == \"1\\n1\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 1 2 1\\n\") == \"1\\n1\\n0\\n0\\n0\"",
        "num_ids_2": 68,
        "num_ids_4": 132
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"3\\n1 2\\n4 5\\n6 7\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"6\\n1 1 2 1 2 3\\n4 4 4 4 4 5\\n6 6 6 6 6 7\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"10\\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10\\n11 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15 15 15 16 16 16 16 17 17 17 17 18 18 18 18 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 28 28 28 28 29 29 29 29 30 30 30 30 31 31 31 31 32 32 32 32 33 33 33 33 34 34 34 34 35 35 35 35 36 36 36 36 37 37 37 37 38 38 38 38 39 39 39 39 40 40 40 40 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46 47 47 47 47 48 48 48 48 49 49 49 49 50 50 50 50 51 51 51 51 52 52 52 52 53 53 53 53 54 54 54 54 55 55 55 55 56 56 56 56 57 57 57 57 58 58 58 58 59 59 59 59 60 60 60 60 61 61 61 61 62 62 62 62 63 63 63 63 64 64 64 64 65 65 65 65 66 66 66 66 67 67 67 67 68 68 68 68 69 69 69 69 70 70 70 70 71 71 71 71 72 72 72 72 73 73 73 73 74 74 74 74 75 75 75 75 76 76 76 76 77 77 77 77 78 78 78 78 79 79 ",
        "num_ids_2": 53,
        "num_ids_4": 151
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"\\n5\\nA_2\\nA_3\\nA_4\\nA_5\\n\") == \"2\\n2\\n0\\n0\\n0\\n\"\nprint(\"All assertions passed.\")",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == '2\\n2\\n0\\n0\\n0\\n'\nassert solution(10) == '2\\n1\\n1\\n0\\n0\\n0\\n'\nassert solution(20) == '2\\n2\\n2\\n1\\n0\\n0\\n0\\n'\nassert solution(30) == '2\\n2\\n2\\n2\\n1\\n0\\n0\\n0\\n'\nassert solution(40) == '2\\n2\\n2\\n2\\n2\\n1\\n0\\n0\\n'\nassert solution(50) == '2\\n2\\n2\\n2\\n2\\n2\\n1\\n0\\n'",
        "num_ids_2": 52,
        "num_ids_4": 117
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"3\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"6\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"6\\n\") == \"3\\n\"\nassert solution(stdin=\"10\\n\") == \"4\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1118\") == \"Yes\"\nprint(\"N is good, since it contains three consecutive 1.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1118\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"123456\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1119\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"1235\") == \"No\"\nassert solution(\"1236\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1118\") == \"Yes\\n\"\nassert solution(\"11111\") == \"No\\n\"\nassert solution(\"91234\") == \"No\\n\"\nassert solution(\"1234567890\") == \"Yes\\n\"\nassert solution(\"1\") == \"No\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 68
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1119\") == \"No\"\nassert solution(\"1120\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"1235\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\" # This is incorrect because there is a space missing in the first altar.\nsolution(\"2\\n1 5\\n2 4\\n3 6\\n\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6\\n') == '3\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2\\n1 5\\n2 4\\n3 6\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6') == '3\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\\n\", \"The number of different altars can be built is incorrect.\"\nassert solution(\"4\\n5 4\\n3 2\\n1 1\") == \"4\\n\", \"The number of different altars can be built is incorrect.\"\nassert solution(\"6\\n5 10\\n4 6\\n2 3\") == \"6\\n\", \"The number of different altars can be built is incorrect.\"",
        "num_ids_2": 80,
        "num_ids_4": 121
    },
    {
        "number": 4587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A B') == '<\\n10 < 11.\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"C C\") == \"<\"\nassert solution(\"D D\") == \">\"\nassert solution(\"E E\") == \"=\"\nassert solution(\"F F\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('A B') == '<'\nassert solution('a b') == '<'\nassert solution('c B') == '<'\nassert solution('D E') == '<'\nassert solution('F F') == '<'\nassert solution('a A') == '='",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A B\") == \"<\\n\"\nassert solution(\"C D\") == \">\\n\"\nassert solution(\"A C\") == \"=\\n\"\nassert solution(\"F G\") == \"=\\n\"\nassert solution(\"B D\") == \">\\n\"\nassert solution(\"E F\") == \"<\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"B A\") == \"<\"\nassert solution(\"B C\") == \"=\"\nassert solution(\"A C\") == \">\"\nassert solution(\"A D\") == \"<\"\nassert solution(\"A E\") == \"=\"\nassert solution(\"A F\") == \">\"\nassert solution(\"A G\") == \"<\"\nassert solution(\"A H\") == \"=\"\nassert solution(\"B C\") == \"=\"\nassert solution(\"B D\") == \"<\"\nassert solution(\"B E\") == \"=\"\nassert solution(\"B F\") == \">\"\nassert solution(\"B G\") == \"<\"\nassert solution(\"B H\") == \"=\"\nassert solution(\"C D\") == \"<\"\nassert solution(\"C E\") == \"=\"\nassert solution(\"C F\") == \">\"\nassert solution(\"C G\") == \"<\"\nassert solution(\"C H\") == \"=\"\nassert solution(\"D E\") == \"<\"\nassert solution(\"D F\") == \">\"\nassert solution(\"D G\") == \"<\"\nassert solution(\"D H\") == \"=\"\nassert solution(\"E F\") == \"<\"\nassert solution(\"E G\") == \"=\"\nassert solution(\"E H\") == \">\"\nassert solution(\"F G\") == \"<\"\nassert solution(\"F H\") == \"=\"\nassert solution(\"G H\") == \">\"",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\nassert solution('C F') == '<'\nassert solution('D E') == '<'\nassert solution('F G') == '<'\nassert solution('H I') == '<'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\", \"The solution should be '<10 < 11.'>\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A B\") == \">\"\nassert solution(\"C D\") == \"<\"\nassert solution(\"E F\") == \"=\"\nassert solution(\"G H\") == \"=\"\nassert solution(\"I J\") == \"=\"",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\\n10 < 11.\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\\n1#2#1\\n11211\"\n\nassert solution(\"4 6\\n....\\n..#.\\n....\\n\") == \"2211\\n2#11\\n2211\\n\"\n\nassert solution(\"3 5\\n.....\\n..##.\\n.....\\n\") == \"12311\\n1#3#1\\n12311\"\n\nassert solution(\"5 7\\n....\\n...##\\n....\\n\") == \"3333\\n3#3#3\\n3333\\n\"\n\nassert solution(\"6 8\\n....\\n....#\\n....\\n\") == \"4444\\n4#4#4\\n4444\\n\"\n\nassert solution(\"7 9\\n....\\n....#\\n...##\\n\") == \"5555\\n5#5#5\\n5555\\n6666\"\n\nassert solution(\"8 10\\n....\\n....#\\n...##\\n.##..\\n\") == \"6666\\n6#6#6\\n6666\\n7777\\n7#7#7\"\n\nassert solution(\"9 11\\n....\\n....#\\n...##\\n.##..\\n..##.\\n\") == \"7777\\n7#7#7\\n7777\\n8888\\n8#8#8\"\n\nassert solution(\"10 12\\n....\\n....#\\n...##\\n.##..\\n..##.\\n..###\\n\") == \"8888\\n8#8#8\\n8888\\n9999\\n9#9#9\"",
        "num_ids_2": 83,
        "num_ids_4": 167
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n.....\n.#.#.\n.....\n''') == '''\n11211\n1#2#1\n11211\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n.....\\n.#.#.\\n.....') == '11211\\n1#2#1\\n11211'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"11211\"\nassert solution() == \"1#2#1\"\nassert solution() == \"11211\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 5) == \"11211\\n1#2#1\\n11211\"\n\nfrom collections import defaultdict",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '11211\\n1#2#1\\n11211\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\") == \"11211\\n1#2#1\\n11211\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 5\n.....\n.#.#.\n.....\n\"\"\") == \"\"\"\n11211\n1#2#1\n11211\n\"\"\"\n\nassert solution(\"\"\"\n4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"Output is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 4 240\n    60 90 120\n    80 150 80 150\n    \"\"\"\n) == \"3\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"5 6 30\\n40 50 20\\n60 70 80\") == \"2\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3\\n' # expected output: 3\nprint(\"All test cases pass\")\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nprint(\"You can read three books.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n\") == \"0\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n\") == \"3\"\nassert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n10 20 30 40 50\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\") == \"0\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"5\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n60 90 120 150\") == \"5\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n60 90 120 150\\n60 90 120 150\") == \"5\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n60 90 120 150\\n60 90 120 150\\n60 90 120 150\") == \"5\"",
        "num_ids_2": 71,
        "num_ids_4": 173
    },
    {
        "number": 4590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"1 2 3\") == \"Invalid input\"\nassert solution(\"3 4 240\\n10 10 10\\n20 20 20\") == \"3\"\nassert solution(\"3 4 240\\n10 10 10\\n10 10 10\") == \"3\"\nassert solution(\"3 4 240\\n10 10 10\\n10 10 10\\n50 50 50\") == \"1\"",
        "num_ids_2": 57,
        "num_ids_4": 129
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\", \"Your code is wrong.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"0 0\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\\n\", \"Test 1 failed\"\nassert solution(\"1500 1800 1600 1 3\") == \"6600\\n\", \"Test 2 failed\"\nassert solution(\"1500 2000 1600 3 4\") == \"7200\\n\", \"Test 3 failed\"\nassert solution(\"1500 2000 1600 3 5\") == \"7800\\n\", \"Test 4 failed\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\\n\", \"Test 5 failed\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"3000 3000 3000 2 2\") == \"6600\"\nassert solution(\"2500 2000 2000 1 2\") == \"5000\"\nassert solution(\"2500 2000 1600 3 4\") == \"7700\"\nassert solution(\"2000 2000 2000 1 2\") == \"5000\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"2000 1600 3 2 1500\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2 1000\") == \"10000\"\nassert solution(\"2000 1600 3 2 1500 1000\") == \"10000\"",
        "num_ids_2": 60,
        "num_ids_4": 132
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"5000 2000 1000 3 2\") == \"10000\"\nassert solution(\"2000 3000 1000 3 2\") == \"10000\"\nassert solution(\"10000 10000 2000 3 2\") == \"10000\"\nassert solution(\"15000 20000 30000 4 3\") == \"23200\"",
        "num_ids_2": 61,
        "num_ids_4": 125
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 4, \"Invalid output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 4\nassert solution(5) == 3\nassert solution(8) == 1\nassert solution(11) == 5\nassert solution(13) == 3",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 4, \"Test Failed: The output is not as expected.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nprint(\"All tests passed\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '4', \"Incorrect Output\"\nassert solution(1000000000) == '942308862642292621210966958776890667219293481946516748971776546850421492300183651737295305043917530724326948988029322956058641645221884589659056444558815722980249166825676974998543153877439033961387187469791447666962079459359240922439176694259067159128087571072448970170715457918993613773996492237786969754430600304608828538789293906243818372261932854878617244917732837439949040544170470416585131136828030311994526358285101495527972919893427392059832571965862627985549624060393478521455837446355604122629056945479560986072436180328865361921073822253946861553969033654958468605598431003443803892212313887662279464459923292268927948094568868444485310272672042064186232858937819895733789329189908104174614246319940659928144386709908760786107740971952857162649605241405019819996399538503361736770351668184156362536862160746550528451220077731567383742166267589374346406597494184749554304959583821076737005425186530201012083548709203924525835103467181747431273218231233547719536920615826122934114080922",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Test failed\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 4, \"Invalid input\"\nprint(solution(3))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\", \"Test case 1 failed.\"\n\nassert solution() == \"6\\n\", \"Test case 2 failed.\"\n\nassert solution() == \"6\\n\", \"Test case 3 failed.\"\n\nassert solution() == \"12\\n\", \"Test case 4 failed.\"\n\nassert solution() == \"14\\n\", \"Test case 5 failed.\"\n\nassert solution() == \"6\\n\", \"Test case 6 failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"4\"\nassert solution(\"6\\n\") == \"6\"\nassert solution(\"12\\n\") == \"18\"\nassert solution(\"20\\n\") == \"28\"\nassert solution(\"28\\n\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4\nassert solution(4) == 4\nassert solution(5) == 6\nassert solution(6) == 6\nassert solution(7) == 12\nassert solution(8) == 12\nassert solution(9) == 18\nassert solution(10) == 18\nassert solution(11) == 24\nassert solution(12) == 24\nassert solution(13) == 30\nassert solution(14) == 30\nassert solution(15) == 36\nassert solution(16) == 36\nassert solution(17) == 42\nassert solution(18) == 42\nassert solution(19) == 48\nassert solution(20) == 48\nassert solution(21) == 54\nassert solution(22) == 54\nassert solution(23) == 60\nassert solution(24) == 60\nassert solution(25) == 66\nassert solution(26) == 66\nassert solution(27) == 72\nassert solution(28) == 72\nassert solution(29) == 78\nassert solution(30) == 78\nassert solution(31) == 84\nassert solution(32) == 84\nassert solution(33) == 90\nassert solution(34) == 90\nassert solution(35) == 96\nassert solution(36) == 96\nassert solution(37) == 102\nassert solution(38) == 102\nassert solution(39) == 108\nassert solution(40) == 108\nassert solution(41) == 114\nassert solution(42) == 114\nassert solution(43) == 120\nassert solution(44) == 120\nassert solution(45) == 126\nassert solution(46) == 126\nassert solution(47) == 132\nassert solution(48) == 132\nassert solution(49) == 138\nassert solution(50) == 138\nassert solution(51) == 144\nassert solution(52) == 144\nassert solution(53) == 150\nassert solution(54) == 150\nassert solution(55) == 156\nassert solution(56) == 156\nassert solution(57) == 162\nassert solution(58) == 162\nassert solution(59) == 168\nassert solution(60) == 168\nassert solution(61) == 174\nassert solution(62) == 174\nassert solution(63) == 180\nassert solution(64) == 180\nassert solution(65) == 186\nassert solution(66) == 186\nassert solution(67) == 192\nassert solution(68) == 192\nassert solution(69) == 198\nassert solution(70) == 198\nassert solution(71) == 204\nassert solution(72) == 204\nassert solution(73) == 210\nassert solution(74) == 210\nassert solution(75) == 216\nassert solution(76) == 216\nassert solution(77) == 222\nassert solution(78) == 222\nassert solution(79) == 228\nassert solution(80) == 228\nassert solution(81) == 234\nassert solution(82) == 234\nassert solution(83) == 240\nassert solution(84) == 240\nassert solution(85) == 246\nassert solution(86) == 246\nassert solution(87) == 252\nassert solution(88) == 252\nassert solution(89) == 258\nassert solution(90) == 258\nassert solution(91) == 264\nassert solution(",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"9\", \"Expected: 9, Actual: {}\".format(solution(10))\nassert solution(1) == \"1\", \"Expected: 1, Actual: {}\".format(solution(1))\nassert solution(100) == \"100\", \"Expected: 100, Actual: {}\".format(solution(100))\nassert solution(1000) == \"1000\", \"Expected: 1000, Actual: {}\".format(solution(1000))\nassert solution(0) == \"0\", \"Expected: 0, Actual: {}\".format(solution(0))",
        "num_ids_2": 52,
        "num_ids_4": 122
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"9\\n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '9', 'Your solution is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\", \"Invalid input\"\nprint(\"9\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '9', 'The correct output is 9'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"16\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\\n\") == \"3\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n\") == \"4\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"4\\n10\\n8\\n6\\n4\") == \"2\\n\"\nassert solution(\"4\\n10\\n6\\n8\\n4\") == \"1\\n\"\nassert solution(\"4\\n10\\n4\\n8\\n6\") == \"1\\n\"\nassert solution(\"4\\n10\\n6\\n4\\n8\") == \"1\\n\"\nassert solution(\"4\\n10\\n8\\n6\\n4\\n6\") == \"1\\n\"\nassert solution(\"4\\n10\\n4\\n8\\n6\\n4\\n4\") == \"2\\n\"\nassert solution(\"4\\n10\\n8\\n6\\n4\\n8\\n6\\n4\\n4\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"3\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n10\\n8\\n8\\n6\") == \"5\"\nassert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n10\\n10\\n10\\n10\") == \"1\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\\n\"\nassert solution(\"5\\n10\\n10\\n10\\n10\") == \"5\\n\"\nassert solution(\"6\\n8\\n8\\n8\\n8\") == \"4\\n\"\nassert solution(\"7\\n10\\n10\\n10\\n10\") == \"6\\n\"\nassert solution(\"8\\n10\\n10\\n10\\n10\") == \"7\\n\"\nassert solution(\"9\\n10\\n10\\n10\\n10\") == \"8\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 105
    },
    {
        "number": 4594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All Tests Passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"Test passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\", \"The length of the string Snuke can construct is incorrect.\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == 5",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5', 'Test case failed'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"4\\n8 12 40\") == \"1\\n\", \"Test 2 failed\"\nassert solution(\"5\\n8 12 40\") == \"0\\n\", \"Test 3 failed\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Test case 1 failed.\"\n\nassert solution(\"4\\n1 2 3 4\") == \"1\\n\", \"Test case 2 failed.\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"2\\n\", \"Test case 3 failed.\"\n\nassert solution(\"1\\n9\\n7\\n5\\n3\\n1\") == \"0\\n\", \"Test case 4 failed.\"\n\nassert solution(\"5\\n2\\n5\\n4\\n10\") == \"0\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 56,
        "num_ids_4": 129
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"4\\n2 4 6 8 10\") == \"3\"\nassert solution(\"5\\n2 4 6 8 10 12\") == \"2\"\nassert solution(\"6\\n2 4 6 8 10 12 14\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 94
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\\n\", \"Expected output: 2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n8 12 40') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n8 12 40\\n\") == \"2\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n8 12 40') == '2\\n'\nassert solution('4\\n9 11 30') == '3\\n'\nassert solution('1\\n') == '0\\n'\nassert solution('3\\n2 3 10') == '2\\n'\nassert solution('5\\n1 2 3 4 5') == '5\\n'\nassert solution('5\\n6 5 4 3 2') == '3\\n'",
        "num_ids_2": 42,
        "num_ids_4": 76
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\nprint(\"Test Passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"6\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\", \"Test Failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"\n\nassert solution(\"10\\n
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '6\\n'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == '6\\n', \"The answer is 1+2+3=6.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\", \"The answer is 1+2+3=6\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\", \"Please fix the code\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\\n\", \"The answer is 1+2+3=6.\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"6\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6\\n', \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\\n\", \"Test failed\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"12\"\nassert solution(\"1\") == \"6\"\nassert solution(\"10\") == \"32\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 4 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 1 4 2 5\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"2\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2 3 4\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4 5 6\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5 6 7\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6 7 8\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7 8 9\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"2\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"2\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\") == \"2\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"2\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"2\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"2\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"2\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"2\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"2\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"2\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"2\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"2\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 ",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\na_1 a_2 a_3... a_N\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"3 1\") == \"2\\n\", \"Incorrect output\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"The function should return 2, but it returned: \" + solution(input())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1\") == \"2\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\"\nassert solution(\"3\\n1 3\\n\") == \"0\"\nassert solution(\"4\\n2 5 3\\n\") == \"4\"\nassert solution(\"5\\n5 2 3\\n\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 1\\n\") == \"2\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2', 'Incorrect output'\nassert solution(input()) == '2', 'Incorrect output'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2 2'\nassert solution(input()) == '3 3'\nassert solution(input()) == '4 4'\nassert solution(input()) == '5 5'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"3 1\\n1 AC\\n2 WA\\n2 AC\") == \"0 0\"\nassert solution(\"1 1\\n1 WA\\n1 WA\") == \"2 0\"\nassert solution(\"1 1\\n1 AC\\n1 AC\") == \"2 0\"\nassert solution(\"1 1\\n2 AC\\n2 AC\\n2 AC\") == \"4 0\"",
        "num_ids_2": 60,
        "num_ids_4": 104
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n1 WA\\n2 AC\") == \"2 4\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n1 WA\\n2 AC\\n1 WA\\n2 AC\") == \"2 6\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n1 WA\\n2 AC\\n1 WA\\n2 AC\\n1 WA\\n2 AC\") == \"2 8\"",
        "num_ids_2": 76,
        "num_ids_4": 184
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"5 10\\n1 AC\\n1 WA\\n1 WA\\n2 AC\\n2 WA\\n3 AC\\n3 WA\\n4 AC\\n4 WA\\n5 AC\\n5 WA\") == \"5 0\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n3 WA\\n3 AC\\n3 WA\\n3 AC') == '3 3'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n\nIn the given code, we first read the input format from the standard input. Then, we define a function `solution` that takes the input format as input and returns the output format as output.\n\nThe function takes the standard input format as input, and then splits it into two parts: `N M` and `p_1 S_1`. \n\nNext, we read `N` and `M` from the input format and split them into `n` and `m`. \n\nFinally, we loop through the first `n` problems and split the problem number and the verdict into `p` and `s`. \n\nWe then check if the problem number and verdict are valid. If the problem number is out of range or the verdict is not AC or WA, we return an error message. \n\nIf the problem number and verdict are valid, we split the problem number and the verdict into `p` and `s`. \n\nNext, we loop through the remaining `m` problems and check if their problem number is valid. If the problem number is out of range, we return an error message. \n\nIf the problem number is valid, we split the problem number and the verdict into `p` and `s`. \n\nIf the problem number is valid and the verdict is valid, we increment the count of Takahashi's correct answers and penalties based on the verdict. If the verdict is AC, we add 1 to the count. If the verdict is WA, we add the number of WAs received before receiving an AC for the first time on that problem to the count.\n\nFinally, we return the count of Takahashi's correct answers and penalties as output.",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n4 1 5') == '5\\n'\nassert solution('1 3\\n2 4 5') == '4\\n'\nassert solution('3 2\\n4 5 6') == '2\\n'\nassert solution('2 1\\n3 4 5') == '4\\n'\nassert solution('4 2\\n3 5 6') == '4\\n'\nassert solution('2 3\\n4 5 6') == '2\\n'\nassert solution('4 4\\n5 6 7') == '4\\n'\nassert solution('5 5\\n6 7 8') == '2\\n'\nassert solution('6 6\\n7 8 9') == '2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n4 1 5') == '5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\\n\", \"Test case 1\"\nassert solution(\"10 5\\n1 2 3 4 5\") == \"1\\n\", \"Test case 2\"\nassert solution(\"10 5\\n1 1 2 2 3 3\") == \"3\\n\", \"Test case 3\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9\") == \"2\\n\", \"Test case 4\"\nassert solution(\"10 5\\n1 1 2 3 4 5 6 7 8 9\") == \"3\\n\", \"Test case 5\"",
        "num_ids_2": 59,
        "num_ids_4": 133
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n4 1 5\") == \"5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n\", \"Expected output is 5, but got: \" + solution(input())",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n') == '4\\n'\nassert solution('2\\n10\\n3\\n') == '5\\n'\nassert solution('1\\n10\\n1\\n') == '10\\n'\nassert solution('3\\n10\\n2\\n') == '6\\n'\nassert solution('1\\n10\\n1\\n') == '10\\n'\nprint('All test cases pass')",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nprint(\"All assertions pass.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n5\\n4\\n\") == \"2\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n1 2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n2 3\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n2 3 4\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n1 1 2 2 2 1 2 2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n1 1 1 1 1 1 1 1\\n\") == \"4\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Please provide the input to solve the problem\"\n\nimport math",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"3\\n10\\n2\\n\") == \"6\\n\"\nassert solution(\"4\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"5\\n10\\n2\\n\") == \"6\\n\"\nassert solution(\"6\\n10\\n2\\n\") == \"8\\n\"\nassert solution(\"7\\n10\\n2\\n\") == \"10\\n\"\nassert solution(\"8\\n10\\n2\\n\") == \"8\\n\"\nassert solution(\"9\\n10\\n2\\n\") == \"10\\n\"\nassert solution(\"10\\n10\\n2\\n\") == \"10\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\", \"The minimum possible total distance covered by robots is not 4.\"\nassert solution(\"1\\n10\\n3\\n\") == \"16\\n\", \"The minimum possible total distance covered by robots is not 16.\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\"\nassert solution(\"2\\n10\\n2\\n\") == \"16\"\nassert solution(\"3\\n10\\n2\\n\") == \"0\"\nassert solution(\"1\\n10\\n0\\n\") == \"0\"\nassert solution(\"1\\n10\\n100\\n\") == \"100\"",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"5\\n10\\n2\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n3\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n10\\n3\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n4\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n4\\n\") == \"4\\n\"\nassert solution(\"5\\n10\\n4\\n\") == \"4\\n\"\nassert solution(\"1\\n10\\n5\\n\") == \"4\\n\"\nassert solution(\"2\\n10\\n5\\n\") == \"4\\n\"\nassert solution(\"5\\n10\\n5\\n\") == \"4\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '520'\nprint(520)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"\nassert solution(\"\") == \"0\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"900\\n500\\n800\\n600\") == \"1200\"\nassert solution(\"1000\\n1000\\n1000\\n1000\") == \"10000\"\nassert solution
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520\\n'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"520\"\nassert solution(input()) == \"520\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4', \"The given input is incorrect\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 4 4 0 2\\n\") == \"4\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='5\\n2 4 4 0 2\\n') == '4'\nprint('All test cases passed')",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n\") == \"0\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n1 3 2 4 5\") == \"4\"\nassert solution(\"5\\n5 1 1 2 4\") == \"0\"\nassert solution(\"5\\n5 1 1 3 4\") == \"0\"\nassert solution(\"5\\n5 1 1 4 3\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 75
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n2 4 0 4 2\") == \"4\\n\"\nassert solution(\"5\\n2 0 4 2 4\") == \"4\\n\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n2 4 4 0 2\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"5\\n2 4 4 0 3\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 5\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 6\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 7\") == \"0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"0\\n\"\n",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"100 1 10\") == \"195\"\nassert solution(\"10 10 20\") == \"40\"\nassert solution(\"1000000 1 1000000\") == \"1998857\"\nassert solution(\"10000000 1 10000000\") == \"3999998\"",
        "num_ids_2": 35,
        "num_ids_4": 85
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n\nassert solution(\"10 1 2\") == \"30\"\n\nassert solution(\"10 25 5\") == \"55\"\n\nassert solution(\"10 9 2\") == \"30\"\n\nassert solution(\"10 30 5\") == \"84\"",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 2 5\") == \"84\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"The sum of the integers between 1 and N (inclusive), whose sum of digits written in base 10 is between A and B (inclusive) should be 84.\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"\"\"\n20 2 5\n\"\"\") == b\"84\\n\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\", \"Test failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\"\n\nassert solution(\"100 2 25\") == \"64\"\n\nassert solution(\"10 2 25\") == \"0\"\n\nassert solution(\"20 5 30\") == \"10\"\n\nassert solution(\"100 25 45\") == \"100\"\n\nassert solution(\"50 15 30\") == \"15\"\n\nassert solution(\"100 30 50\") == \"150\"\n\nassert solution(\"100 40 60\") == \"210\"",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\\n\"\nassert solution(\"10 2 10\") == \"500\\n\"\nassert solution(\"100 3 1\") == \"100\\n\"\nassert solution(\"1000 5 9\") == \"5000\\n\"\nassert solution(\"10000 7 1\") == \"10000\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 2 5\") == \"84\", \"The solution should return the expected output.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC100\", \"Incorrect solution\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'ABC100', \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\") == \"ABC100\", \"The 100th round of ABC is ABC100.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ABC100\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"101\") == \"ABC101\"\nassert solution(\"102\") == \"ABC102\"\nassert solution(\"103\") == \"ABC103\"\nassert solution(\"104\") == \"ABC104\"\nassert solution(\"105\") == \"ABC105\"\nassert solution(\"106\") == \"ABC106\"\nassert solution(\"107\") == \"ABC107\"\nassert solution(\"108\") == \"ABC108\"\nassert solution(\"109\") == \"ABC109\"\nassert solution(\"110\") == \"ABC110\"\nassert solution(\"111\") == \"ABC111\"\nassert solution(\"112\") == \"ABC112\"\nassert solution(\"113\") == \"ABC113\"\nassert solution(\"114\") == \"ABC114\"\nassert solution(\"115\") == \"ABC115\"\nassert solution(\"116\") == \"ABC116\"\nassert solution(\"117\") == \"ABC117\"\nassert solution(\"118\") == \"ABC118\"\nassert solution(\"119\") == \"ABC119\"\nassert solution(\"120\") == \"ABC120\"\nassert solution(\"121\") == \"ABC121\"\nassert solution(\"122\") == \"ABC122\"\nassert solution(\"123\") == \"ABC123\"\nassert solution(\"124\") == \"ABC124\"\nassert solution(\"125\") == \"ABC125\"\nassert solution(\"126\") == \"ABC126\"\nassert solution(\"127\") == \"ABC127\"\nassert solution(\"128\") == \"ABC128\"\nassert solution(\"129\") == \"ABC129\"\nassert solution(\"130\") == \"ABC130\"\nassert solution(\"131\") == \"ABC131\"\nassert solution(\"132\") == \"ABC132\"\nassert solution(\"133\") == \"ABC133\"\nassert solution(\"134\") == \"ABC134\"\nassert solution(\"135\") == \"ABC135\"\nassert solution(\"136\") == \"ABC136\"\nassert solution(\"137\") == \"ABC137\"\nassert solution(\"138\") == \"ABC138\"\nassert solution(\"139\") == \"ABC139\"\nassert solution(\"140\") == \"ABC140\"\nassert solution(\"141\") == \"ABC141\"\nassert solution(\"142\") == \"ABC142\"\nassert solution(\"143\") == \"ABC143\"\nassert solution(\"144\") == \"ABC144\"\nassert solution(\"145\") == \"ABC145\"\nassert solution(\"146\") == \"ABC146\"\nassert solution(\"147\") == \"ABC147\"\nassert solution(\"148\") == \"ABC148\"\nassert solution(\"149\") == \"ABC149\"\nassert solution(\"150\") == \"ABC150\"\nassert solution(\"151\") == \"ABC151\"\nassert solution(\"152\") == \"ABC152\"\nassert solution(\"153\") == \"ABC153\"\nassert solution(\"154\") == \"ABC154\"\nassert solution(\"155\") == \"ABC155\"\nassert solution(\"156\") == \"ABC156\"\nassert solution(\"157\") == \"ABC157\"\nassert solution(\"158\") == \"ABC158\"\nassert solution(\"159\") == \"ABC159\"\nassert solution(\"160\") == \"ABC160\"\nassert solution(\"161\") == \"ABC161\"\nassert solution(\"162\") == \"ABC162\"\nassert solution(\"163\") == \"ABC163\"\nassert solution(\"164\") == \"ABC164\"\nassert solution(\"165\") == \"ABC165\"\nassert solution(\"166\") == \"ABC166\"\nassert solution(\"167\") == \"ABC167\"\nassert solution(\"168",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ABC100\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"ABC100\", \"The 100th round of ABC is ABC100.\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ABC100\", \"Your solution is incorrect!\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\") == \"ABC100\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == 5, \"5 5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '5\\n', \"Please enter a valid input.\"\n\na, b = map(int, input().split())\n\ncount = 0\n\nfor i in range(1, a+1):\n    for j in range(1, b+1):\n        if i == j:\n            count += 1\n\nprint(count)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\", \"Incorrect output.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"5\\n\", \"Output must be 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"12 1\") == \"0\"\nassert solution(\"12 31\") == \"13\"\nassert solution(\"2018 1 1\") == \"0\"\nassert solution(\"2018 13 1\") == \"25\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"5\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == 5, \"Test Failed\"\nassert solution(\"6 5\") == 0, \"Test Failed\"\nassert solution(\"7 5\") == 3, \"Test Failed\"\nassert solution(\"8 5\") == 0, \"Test Failed\"\nassert solution(\"9 5\") == 0, \"Test Failed\"\nassert solution(\"10 5\") == 1, \"Test Failed\"\nassert solution(\"11 5\") == 0, \"Test Failed\"\nassert solution(\"12 5\") == 0, \"Test Failed\"\nassert solution(\"13 5\") == 1, \"Test Failed\"\nassert solution(\"14 5\") == 2, \"Test Failed\"\nassert solution(\"15 5\") == 0, \"Test Failed\"\nassert solution(\"16 5\") == 0, \"Test Failed\"\nassert solution(\"17 5\") == 0, \"Test Failed\"\nassert solution(\"18 5\") == 0, \"Test Failed\"\nassert solution(\"19 5\") == 0, \"Test Failed\"\nassert solution(\"20 5\") == 0, \"Test Failed\"\nassert solution(\"21 5\") == 1, \"Test Failed\"\nassert solution(\"22 5\") == 2, \"Test Failed\"\nassert solution(\"23 5\") == 3, \"Test Failed\"\nassert solution(\"24 5\") == 4, \"Test Failed\"\nassert solution(\"25 5\") == 0, \"Test Failed\"\nassert solution(\"26 5\") == 5, \"Test Failed\"\nassert solution(\"27 5\") == 0, \"Test Failed\"\nassert solution(\"28 5\") == 0, \"Test Failed\"\nassert solution(\"29 5\") == 0, \"Test Failed\"\nassert solution(\"30 5\") == 0, \"Test Failed\"\nassert solution(\"31 5\") == 0, \"Test Failed\"\nassert solution(\"32 5\") == 1, \"Test Failed\"\nassert solution(\"33 5\") == 2, \"Test Failed\"\nassert solution(\"34 5\") == 3, \"Test Failed\"\nassert solution(\"35 5\") == 4, \"Test Failed\"\nassert solution(\"36 5\") == 5, \"Test Failed\"\nassert solution(\"37 5\") == 0, \"Test Failed\"\nassert solution(\"38 5\") == 0, \"Test Failed\"\nassert solution(\"39 5\") == 0, \"Test Failed\"\nassert solution(\"40 5\") == 0, \"Test Failed\"\nassert solution(\"41 5\") == 0, \"Test Failed\"\nassert solution(\"42 5\") == 0, \"Test Failed\"\nassert solution(\"43 5\") == 0, \"Test Failed\"\nassert solution(\"44 5\") == 0, \"Test Failed\"\nassert solution(\"45 5\") == 0, \"Test Failed\"\nassert solution(\"46 5\") == 0, \"Test Failed\"\nassert solution(\"47 5\") == 0, \"Test Failed\"\nassert solution(\"48 5\") == 0, \"Test Failed\"\nassert solution(\"49 5\") == 0, \"Test Failed\"\nassert solution(\"50 5\") == 0, \"Test Failed\"\nassert solution(\"51 5\") == 1, \"Test Failed\"\nassert solution(\"52 5\") == 2, \"Test Failed\"\nassert solution(\"53 5\") == 3, \"Test Failed\"\nassert solution(\"54 5\") == 4, \"Test Failed\"\nassert solution(\"55 5\") == 5, \"Test Failed\"\nassert solution(\"56 5\") == 0, \"Test Failed\"\nassert solution(\"57 5\") == 0, \"Test Failed\"\nassert solution(\"58 5\") == 0, \"Test Failed\"\nassert solution(\"59 5\") == 0, \"Test Failed\"\nassert solution(\"60 5\") == 0, \"Test Failed\"\nassert solution(\"61 5\") == 0, \"Test Failed\"\nassert solution(\"62 5\") == 0, \"Test Failed\"\nassert solution(\"63 5\") == 0, \"Test Failed\"\nassert solution(\"64 5\") == 1, \"Test Failed\"\nassert solution(\"65 5\") == 2",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\nprint(\"Correct!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"2\"\nassert solution(stdin=\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(stdin=\"3\\n3\\n2\\n1\\n\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n\") == \"-1\"\nassert solution(\"5\\n2\\n1\\n1\\n2\\n\") == \"2\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == \"-1\"",
        "num_ids_2": 45,
        "num_ids_4": 90
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\na_1\\na_2\\na_3\\na_4\") == \"2\"\nassert solution(\"3\\na_5\\na_6\\na_7\\na_8\") == \"-1\"\nassert solution(\"3\\na_1\\na_2\\na_3\\na_4\\na_5\\na_6\\na_7\\na_8\") == \"2\"",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n3\n1\n2\n\"\"\") == \"\"\"2\n\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Test case 1 failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\na_1\\na_2\\na_3\\n\") == 2\nassert solution(\"3\\na_1\\na_2\\na_3\\n\") == -1",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\na_1\\na_2\\na_3\\n\") == -1\nassert solution(\"3\\na_1\\na_2\\na_3\\n\") == 2",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\na_1\\na_2\\na_3\\na_4\\na_5\\n\") == \"2\"\nassert solution(\"2\\na_1\\na_2\\na_3\\na_4\\n\") == \"-1\"\nassert solution(\"3\\na_1\\na_2\\na_3\\na_4\\na_5\\n\") == \"2\"\n",
        "num_ids_2": 60,
        "num_ids_4": 92
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == -1, \"Sample Input is not correct\"\nassert solution(\"3\\n3\\n1\\n2\\n\") == 2, \"Sample Input is not correct\"\nassert solution(\"5\\n5\\n1\\n2\\n\") == -1, \"Sample Input is not correct\"\nprint(solution())  # Output: 2",
        "num_ids_2": 43,
        "num_ids_4": 71
    },
    {
        "number": 4608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\na_1\\na_2\\na_3\\na_4\\n\") == \"2\\n\"\nassert solution(\"3\\na_1\\na_2\\na_3\\na_4\\na_5\\n\") == \"-1\\n\"\nassert solution(\"3\\na_1\\na_2\\na_3\\na_4\\n\") == \"-1\\n\"\nassert solution(\"3\\na_1\\na_2\\na_3\\na_4\\n\") == \"-1\\n\"\nassert solution(\"3\\na_1\\na_2\\na_3\\na_4\\n\") == \"2\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 124
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"2\"\nassert solution(\"3\\n2\\n4\\n5\\n1\") == \"0\"\nassert solution(\"1\\n3\\n5\\n7\\n9\") == \"0\"\nassert solution(\"1000000000\") == \"0\"\nassert solution(\"1000000000\\n1000000000\") == \"0\"\nassert solution(\"1000000001\") == \"0\"\nassert solution(\"1000000000\\n1000000001\") == \"1\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\", \"The output should be 1.\"\nassert solution(\"10\\n1\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\") == \"11\\n\", \"The output should be 11.\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\"\nassert solution(\"1\\n3\\n5\\n7\\n\") == \"0\"\nassert solution(\"5\\n2\\n1\\n7\\n\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"4\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6\\n2\\n6\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n12345\\n9876543210\\n\") == \"5\\n\", \"Test case 2 failed\"\nassert solution(\"10\\n123456789\\n0123456789\\n\") == \"10\\n\", \"Test case 3 failed\"",
        "num_ids_2": 68,
        "num_ids_4": 114
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"10\\n50\\n50\\n50\\n50\\n\") == \"1\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n\") == \"2\\n\"\nassert solution(\"1\\n10\\n\") == \"1\\n\"\nassert solution(\"1\\n1000000000\\n\") == \"1\\n\"\nassert solution(\"10\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n\") == \"1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 98
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"N: \")) == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"2\\n\"\nassert solution(\"5\\n\\n\\n\\n\\n\\n\") == \"10\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 68
    },
    {
        "number": 4609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n2\\n6\\n\") == \"1\\n\", \"Testcase 1 failed\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"0\\n\", \"Testcase 2 failed\"\nassert solution(\"1\\n\") == \"1\\n\", \"Testcase 3 failed\"\nassert solution(\"\") == \"1\\n\", \"Testcase 4 failed\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"0\\n\", \"Testcase 5 failed\"",
        "num_ids_2": 66,
        "num_ids_4": 104
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"4 3\\n1 1 2 2 5\\n\") == \"3\\n\"\nassert solution(\"3 1\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"5 1\\n1 1 2 2 5\\n\") == \"1\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 2 2 1 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 1 1 5\") == \"2\\n\"\nassert solution(\"5 2\\n2 2 2 2 5\") == \"2\\n\"\nassert solution(\"5 2\\n1 2 1 1 5\") == \"2\\n\"\nassert solution(\"5 2\\n1 1 1 1 1\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"6 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 4\\n1 1 2 2 5 6 7\") == \"1\"\nassert solution(\"4 4\\n1 1 2 2 5 6 7 8\") == \"1\"\nassert solution(\"3 2\\n1 1 2 2 5 6 7 8 9\") == \"1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"4 3\\n3 2 4 5\") == \"3\\n\"\nassert solution(\"3 2\\n5 4 6 7\") == \"2\\n\"\nassert solution(\"2 1\\n7 8 9 10\") == \"2\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n3 3 3 3 3\") == \"1\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6\\n\") == \"2\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 69
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"6 2\\n2 1 3 4 5\\n6 2\\n5 3 7 9 12\") == \"2\"\nassert solution(\"6 3\\n2 1 3 4 5\\n6 2\\n5 3 7 9 12\") == \"1\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 63,
        "num_ids_4": 103
    },
    {
        "number": 4610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 4\") == \"1\\n\"\nassert solution(\"5 2\\n1 1 2 2 1\") == \"0\\n\"\nassert solution(\"5 2\\n1 1 2 2 6\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1\\n') == 'Yes'\nassert solution('4\\n1 1\\n2 2\\n3 3\\n') == 'No'\nassert solution('1\\n0 1\\n0 0\\n') == 'Yes'\nassert solution('5\\n0 0\\n1 1\\n2 2\\n3 3\\n') == 'No'\n",
        "num_ids_2": 53,
        "num_ids_4": 107
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\\n\"\nassert solution(\"3\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"No\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('3\\n1 2 3\\n4 5 6') == 'Yes'\nassert solution('1\\n10 10 10') == 'No'",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"No\"\n\nfrom typing import List",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"3\\n1 1 2\\n6 1 1\\n\") == \"No\\n\"\nassert solution(\"1\\n1 1 2\\n6 1 1\\n\") == \"Yes\\n\"\nassert solution(\"1\\n1 1 2\\n6 2 1\\n\") == \"No\\n\"\nassert solution(\"1\\n1 1 2\\n6 1 2\\n\") == \"Yes\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\\n\"\nassert solution(stdin) == \"No\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Yes\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\nassert solution('4\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('4\\n2 1 2\\n5 1 2') == 'No'\nassert solution('4\\n3 1 2\\n6 2 1') == 'No'\nassert solution('4\\n3 1 2\\n6 1 2') == 'No'\nassert solution('4\\n3 1 2\\n6 1 2') == 'Yes'\nassert solution('4\\n2 1 2\\n5 1 2') == 'Yes'\nprint(\"All test cases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 82
    },
    {
        "number": 4611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"3\\n3 2 3\\n3 3 4\") == \"No\"\nassert solution(\"5\\n1 2 3\\n2 4 5\\n3 6 7\") == \"Yes\"",
        "num_ids_2": 48,
        "num_ids_4": 79
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2\\n', \"Your function should return the expected output.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\", \"The average of 1 and 3 is 2.0, and it will be rounded up to the nearest integer, 2.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\nprint(\"All tests passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\", \"Output should be 2, but is \" + solution(\"1 3\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\", \"Test failed.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"4 6\") == \"5\"\nassert solution(\"7 8\") == \"9\"\nassert solution(\"9 10\") == \"10\"\nassert solution(\"11 12\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\\n\", \"The function should return '2'\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"10 30\") == \"40\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2.5 2.5\") == \"2.5\"\nassert solution(\"10 -10\") == \"10\"",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n7 1\") == \"4\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n') == '4\\n'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n1 2\\n3 2\\n4 3\\n5 3\\n6 4\\n') == '4\\n'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n1 2\\n3 2\\n4 3\\n5 3\\n6 4\\n2 5\\n3 1\\n4 5\\n') == '4\\n'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n1 2\\n3 2\\n4 3\\n5 3\\n6 4\\n1 2\\n3 5\\n4 2\\n') == '4\\n'\nassert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n5 6\\n6 7\\n1 2\\n3 2\\n4 3\\n5 3\\n6 4\\n2 5\\n3 1\\n4 5\\n1 2\\n') == '4\\n'",
        "num_ids_2": 122,
        "num_ids_4": 294
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\\n\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4\\n', \"Expected output: 4\\nGot: \" + solution(stdin)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"5 5 5\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '7', \"Test failed\"\nprint(\"Test passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '7', 'Expected \"7\", but got \"{}\"'.format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The output should be 7\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Testcase 1 failed\"\nassert solution(\"2 3 6\") == \"9\", \"Testcase 2 failed\"\nassert solution(\"5 2 7\") == \"8\", \"Testcase 3 failed\"\nassert solution(\"1 3 2\") == \"4\", \"Testcase 4 failed\"\nassert solution(\"5 6 5\") == \"3\", \"Testcase 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"The solution should return 7 as it is the same case as the statement.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('3 5 7') == '5'\nassert solution('2 3 5') == '1'\nassert solution('1 2 3') == '4'\nassert solution('4 5 6') == '2'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5, 7, 5) == 7\nassert solution(1, 2, 3) == 2\nassert solution(2, 3, 4) == 1\nassert solution(5, 7, 1) == 7\nassert solution(1, 2, 5) == 3\nassert solution(5, 7, 6) == 7\nassert solution(1, 2, 4) == 2",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"110 10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"10 10 10 10 10 10\") == \"0 0\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\", \"Test 1 Failed\"\nassert solution(\"1 100 100 100 0 0\") == \"0 0\", \"Test 2 Failed\"\nassert solution(\"1 100 100 100 0 100\") == \"100 0\", \"Test 3 Failed\"\nassert solution(\"1 100 100 100 0 0\") == \"0 0\", \"Test 4 Failed\"\nassert solution(\"1 100 100 100 0 100\") == \"100 0\", \"Test 5 Failed\"\n",
        "num_ids_2": 70,
        "num_ids_4": 142
    },
    {
        "number": 4615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"5 7 8 9 10\") == \"0 0\"\nassert solution(\"4 5 6 7 8\") == \"120 0\"\nassert solution(\"1 1 1 1 1\") == \"0 0\"",
        "num_ids_2": 51,
        "num_ids_4": 93
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\", \"Test failed for 'internationalization'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello world') == 'hll wrld'\nassert solution('abc') == 'abc'\nassert solution('') == ''\nassert solution('12345678901234567890') == '12345678901234567890'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\\n\"\nassert solution(\"top\") == \"NO\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\nbottom\\n\") == \"NO\\n\"\nassert solution(\"pot\\ntop\\nright\\n\") == \"YES\\n\"\nassert solution(\"pot\\ntop\\nleft\\n\") == \"NO\\n\"\nassert solution(\"pot\\nleft\\ntop\\n\") == \"NO\\n\"\nassert solution(\"pot\\nleft\\nbottom\\n\") == \"YES\\n\"\nassert solution(\"pot\\nleft\\nright\\n\") == \"YES\\n\"\nassert solution(\"pot\\nleft\\nleft\\n\") == \"NO\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pot\\ntop\") == \"YES\"\nassert solution(\"top\\npot\") == \"YES\"\nassert solution(\"pot\\ntop\\npot\") == \"YES\"\nassert solution(\"pots\") == \"NO\"\nassert solution(\"topp\") == \"NO\"\nassert solution(\"top\\n\") == \"NO\"\nassert solution(\"top\\npot\\n\") == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"pot\\ntop\\n\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pot\\ntop\\n\") == \"YES\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abab\") == \"b\"\nassert solution(\"aaa\") == \"a\"\nassert solution(\"acbd\") == \"a\"\nassert solution(\"aabbccd\") == \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abcabc\") == \"ab\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"abcdefg\") == \"ab\"\nassert solution(\"abcdefg1234567890\") == \"abcdefg1234567890\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"abab\") == \"ba\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"abaa\") == \"ab\"\nassert solution(\"aa\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"aaab\") == \"aa\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"ababc\") == \"b\"\nassert solution(\"abac\") == \"a\"\nassert solution(\"ababcabc\") == \"abc\"\nassert solution(\"ababcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"abc\"\nassert solution(\"ababcabcabcabcabcabcabcabcabcabcabcabcabcabcabc",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"b\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aba\\n4') == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aba', 4) == 'b'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abab\") == \"ab\"\nassert solution(\"ababc\") == \"ababc\"\nassert solution(\"ababcdef\") == \"ababc\"\nassert solution(\"ababcde\") == \"ababc\"\nassert solution(\"ababcdfg\") == \"ababc\"\nassert solution(\"ababcdf\") == \"ababc\"\nassert solution(\"ababcdefg\") == \"ababc\"\nassert solution(\"ababcdfg\") == \"ababc\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"ababc\") == \"aba\"\nassert solution(\"ac\") == \"z\"\nassert solution(\"aba\") == \"aba\"\n\ns = input()\nK = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"ababc\") == \"ab\"\nassert solution(\"aaaabbbccd\") == \"aaa\"\nassert solution(\"abac\") == \"c\"\nassert solution(\"abc\") == \"c\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    5 4 2\n    2 1 1\n    3 3 4\n    \"\"\").strip() == '9', \"The solution is not correct.\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input_data)}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\\n\") == \"9\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"\nassert solution(\"5\\n10 1\") == \"5\\n5\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    6 5 1\n    1 10 1\n    \"\"\"\n) == \"\"\"\n12\n11\n0\n\"\"\"\nassert solution(\n    \"\"\"\n    4\n    10 10 10\n    1 10 1\n    2 2 1\n    \"\"\"\n) == \"\"\"\n0\n1\n2\n\"\"\"\nassert solution(\n    \"\"\"\n    1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"\"\"\n0\n1\n2\n\"\"\"\nassert solution(\n    \"\"\"\n    3\n    10 10 10\n    1 10 1\n    2 2 1\n    \"\"\"\n) == \"\"\"\n0\n1\n2\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\\n11\\n0\\n\"\nassert solution(\"4\\n10 5 1\\n2 3 4\\n5 5 1\") == \"11\\n12\\n0\\n\"\nassert solution(\"5\\n20 10 2\\n3 5 4\\n6 7 8\\n9 9 2\") == \"17\\n25\\n0\\n\"\nassert solution(\"6\\n15 10 1\\n4 8 2\\n9 11 3\\n12 14 5\\n15 15 1\") == \"17\\n25\\n0\\n\"\nassert solution(\"7\\n20 20 1\\n4 6 3\\n7 9 5\\n10 12 7\\n13 15 11\\n16 18 9\\n19 20 8\\n20 20 1\\n\") == \"20\\n20\\n0\\n\"\nassert solution(\"8\\n30 25 1\\n5 10 2\\n9 14 3\\n13 18 4\\n17 22 5\\n21 25 6\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 25 1\\n25 2",
        "num_ids_2": 77,
        "num_ids_4": 189
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1\\n') == '12\\n11\\n0\\n'\nassert solution('3\\n2 3 1\\n1 10 1\\n') == '3\\n3\\n0\\n'\nassert solution('3\\n1 2 1\\n1 10 1\\n') == '12\\n11\\n0\\n'\nassert solution('3\\n3 4 1\\n1 10 1\\n') == '3\\n2\\n0\\n'",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\\n11\\n0\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\\n11\\n0\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"***.\\n***.\\n***.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"****.\\n****.\\n****.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*****.\\n*****.\\n*****.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"******.\\n******.\\n******.\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"***\\n**.\\n*.*\\n*.*\\n***\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*****\\n*****\\n*****\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n*.\\n..*\\n..*\\n\") == \"*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n*.\\n..*\\n..*\\n*.\\n\") == \"*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n*.\\n..*\\n..*\\n*.\\n..*\\n..*\\n..*\\n..*\\n..*\\n..*\\n..*\\n..*\\n..*\\n..*\\n..*\\n\") == \"*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****\\n*****",
        "num_ids_2": 77,
        "num_ids_4": 1027
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"**.\\n***.\\n****.\\n*******.\"\nassert solution(\"1 2\\n*.\\n.*\\n\") == \"**.\\n*.*\\n.*.\\n\"\nassert solution(\"2 3\\n..\\n..\\n\") == \"**.\\n**.\\n**.\\n\"\nassert solution(\"2 5\\n....\\n....\\n\") == \"**.\\n**.\\n**.\\n**.\\n\"\nassert solution(\"1 5\\n....\\n....\\n\") == \"**.\\n**.\\n**.\\n**.\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 111
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\\n\") == \".*\\n*.\\n*.\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\\n\\n\") == \".\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\\n\\n\\n\") == \".*\\n*.\\n*.\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 122
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"3 3\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"4 3\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"5 3\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"6 3\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"3 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"4 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"5 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"6 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"7 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"8 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \".*\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n.*\\n.*\\n\") == \".*\\n*.\\n.*\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"\nassert solution(\"2 2\\n*.\\n.*\\n\") == \"*.\\n*.\\n.*\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\".\".join(input().split())) == \".*\\n.*\\n.*\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1\\n4\\n5\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"5\\n2 1 3\") == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 1 4 5\\n\") == \"YES\"\nassert solution(\"3 5 7\\n\") == \"NO\"\nassert solution(\"6 10 3\\n\") == \"YES\"\nassert solution(\"1 2 3 4 5\\n\") == \"NO\"\nassert solution(\"1 1 1\\n\") == \"YES\"",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6 1 4 5\") == \"YES\\n\"\nassert solution(\"3 1 2 5 6\") == \"NO\\n\"\nassert solution(\"2 2 2 2 2\") == \"YES\\n\"\nassert solution(\"3 3 3 3 3\") == \"NO\\n\"\nassert solution(\"2 3 5 7 9\") == \"YES\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NO\\n\"\nassert solution(\"5\\n2 6 1 2 5\") == \"YES\\n\"\nassert solution(\"5\\n1 2 3 4 6\") == \"NO\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"6\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"4\\n2 6 1 4 5\") == \"NO\"\nassert solution(\"3\\n2 6 1 4 5\") == \"NO\"\nassert solution(\"5\\n2 6 1 4 6\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\nprint(\"YES\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES\\n', \"Test 1 failed\"\n\nassert solution('5\\n1 2 3 4 5') == 'NO\\n', \"Test 2 failed\"\n\nassert solution('5\\n1 2 3 4') == 'NO\\n', \"Test 3 failed\"\n\nassert solution('5\\n1 2 3') == 'YES\\n', \"Test 4 failed\"\n\nassert solution('5\\n1 2') == 'NO\\n', \"Test 5 failed\"\n\nassert solution('5\\n') == 'NO\\n', \"Test 6 failed\"\n\nassert solution('') == 'NO\\n', \"Test 7 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 110
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\\n3\\n4\\n1\\n2\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"2\"\nassert solution(8) == \"3\"\nassert solution(3) == \"4\"\nassert solution(6) == \"1\"\nassert solution(12) == \"2\"\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"2\\n3\\n4\\n1\\n2\"\nassert solution(8) == \"2\\n3\\n4\\n1\\n2\"\nassert solution(3) == \"4\\n3\\n1\\n2\"\nassert solution(6) == \"2\\n3\\n4\\n1\"\nassert solution(12) == \"2\\n3\\n4\\n1\"",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(f\"Test case {i + 1}: {result}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=solution.input) == solution.output, \"Expected: {}\\nReceived: {}\".format(solution.output, solution(stdin=solution.input))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n3\\n4\\n1\\n2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"6\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"1 2 2 1 2 1 1 2\") == \"1\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\\n\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\\n\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\\n\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\\n\"\nassert solution(\"5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n\") == \"2\\n3\\n4\\n1\\n2\\n\"",
        "num_ids_2": 212,
        "num_ids_4": 424
    },
    {
        "number": 4623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2') == '2\\n3\\n4\\n1\\n2'",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n1\\n5\\n77\\n\" #Expected Output\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n5\\n77\"\nassert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} failed.\\nExpected output: {output_str}\\nActual output: {solution(input_str)}\"\nfor i in range(t):\n    n, x = map(int, input().split())\n    assert solution(f\"{n} {x}\") == f\"{n // x + 1}\", f\"Test case {i+1} failed.\\nExpected output: {n // x + 1}\\nActual output: {solution(f\"{n} {x}\")}\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"5\"\n\nassert solution(stdin) == \"77\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n1\\n5\\n77\", \"The output is incorrect.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n1\\n5\\n77'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"7 3\\n1 5\\n22 5\\n987 13\") == \"3\\n1\\n5\\n77\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0', \\\n    \"Test case 1 failed\"\n\nassert solution(stdin) == '1 3 10 5 4 1 2 3 5 10 5 9 4', \\\n    \"Test case 2 failed\"\n\nassert solution(stdin) == '1 3 10 5 4 1 2 3 5 10 5 9 4', \\\n    \"Test case 3 failed\"\n\nassert solution(stdin) == '2 8 3 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2', \\\n    \"Test case 4 failed\"\n\nassert solution(stdin) == '2 8 3 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2', \\\n    \"Test case 5 failed\"",
        "num_ids_2": 98,
        "num_ids_4": 198
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"24\"\nassert solution(\"codeforces\") == \"23\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"26\"\n\nsolution(\"abca\")  # Input 1\nsolution(\"codeforces\")  # Input 2\nsolution(\"qwertyuioplkjhgfdsazxcvbnm\")  # Input 3",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4 2 2 ",
        "num_ids_2": 142,
        "num_ids_4": 284
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"codeforces\") == \"9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"qwertyuioplkjhgfdsazxcvbnm\") == \"12 3 5 7 11 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13\"",
        "num_ids_2": 122,
        "num_ids_4": 220
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"abca\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\n4 2\\nabca\\n1 3\\n10 5\\ncodeforces\\n2 8 3 2 9\\n26 10\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4\") == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'",
        "num_ids_2": 252,
        "num_ids_4": 252
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect: {solution(input())}!= {output}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\n\nsolution(open('input.txt', 'r'))",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3,3,4,10,20,30,5,5,5,2,4,3,1,1000000000,1000000000,3,2,5,3,2,6) == \"0\\n36\"\nassert solution(8) == \"0\\n0\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0\\n0\\n0\\n0\\n36\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8) == '0\\n36'\nassert solution(11) == '2\\n0'\nassert solution(12) == '0\\n0'\nassert solution(13) == '0\\n0'\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_case.txt', 'r')) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\") == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Input: {input()}, Expected Output: {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 4) == 0, \"Testcase 1\"\nassert solution(10, 20, 30) == 36, \"Testcase 2\"\nassert solution(5, 5, 5) == 0, \"Testcase 3\"\nassert solution(2, 4, 3) == 0, \"Testcase 4\"\nassert solution(1, 1000000000, 1000000000) == 0, \"Testcase 5\"\nassert solution(1, 1000000000, 999999999) == 0, \"Testcase 6\"\nassert solution(3, 2, 5) == 0, \"Testcase 7\"\nassert solution(3, 2, 6) == 2, \"Testcase 8\"",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 1\"\n\nassert solution(open(\"test_input1.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 2\"\n\nassert solution(open(\"test_input2.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 3\"\n\nassert solution(open(\"test_input3.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 4\"\n\nassert solution(open(\"test_input4.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 5\"\n\nassert solution(open(\"test_input5.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 6\"\n\nassert solution(open(\"test_input6.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 7\"\n\nassert solution(open(\"test_input7.txt\").read()) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\\n\", \"Test case 8\"",
        "num_ids_2": 133,
        "num_ids_4": 267
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"NO\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"NO\"",
        "num_ids_2": 206,
        "num_ids_4": 412
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([11, 14, 16, 12]) == \"YES\"\nassert solution([1, 8, 4, 1, 1, 1, 1, 4, 1, 2, 5, 6, 12, 13, 6, 1, 6, 3, 10, 5, 8]) == \"YES\"\nassert solution([1, 12, 3, 10, 5, 8]) == \"NO\"",
        "num_ids_2": 96,
        "num_ids_4": 123
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"NO\"",
        "num_ids_2": 206,
        "num_ids_4": 206
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\"\nassert solution(\"1\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\\n1\\n11\") == \"NO\"",
        "num_ids_2": 213,
        "num_ids_4": 213
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES', 'Incorrect output'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7, 4, 11, 14, 16, 12, 2, 1, 8, 4, 1, 1, 1, 1, 4, 1, 2, 5, 6, 2, 12, 13, 6, 1, 6, 3, 10, 5, 8, 6, 1, 12, 3, 10, 5, 8) == 'YES'\nassert solution(7, 4, 11, 14, 16, 12, 2, 12, 13) == 'NO'\nassert solution(7, 4, 11, 14, 16, 12, 2, 1, 8, 4, 1, 1, 1, 1, 4, 1, 2, 5, 6, 2, 12, 13, 6, 1, 6, 3, 10, 5, 8, 6, 1, 12, 3, 10, 5, 8) == 'YES'\nassert solution(7, 4, 11, 14, 16, 12, 2, 12, 13) == 'YES'\nassert solution(7, 4, 11, 14, 16, 12, 2, 1, 8, 4, 1, 1, 1, 1, 4, 1, 2, 5, 6, 2, 12, 13, 6, 1, 6, 3, 10, 5, 8, 6, 1, 12, 3, 10, 5, 8) == 'YES'",
        "num_ids_2": 164,
        "num_ids_4": 328
    },
    {
        "number": 4627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\"\nassert solution(\"7\\n4\\n11 14 16 12\\n2\\n1 8\\n4\\n1 1 1 1\\n4\\n1 2 5 6\\n2\\n12 13\\n6\\n1 6 3 10 5 8\\n6\\n1 12 3 10 5 8\") == \"YES\\nNO\"",
        "num_ids_2": 227,
        "num_ids_4": 333
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"22\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Test case failed for input: {input_string}, expected output: {expected_output}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 5 2\n    1 2 5\n    2 3 7\n    2 4 4\n    4 5 2\n    4 6 8\n    1 6\n    5 3\n    5 3\n    5 3\n    5 3\n    \"\"\"\n) == \"22\"\n\nassert solution(\n    \"\"\"\n    5 5 4\n    1 2 5\n    2 3 4\n    1 4 3\n    4 3 7\n    3 5 2\n    1 5\n    1 3\n    3 3\n    1 5\n    1 3\n    3 3\n    1 5\n    1 3\n    \"\"\"\n) == \"13\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"22\"\nassert solution() == \"13\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\\n5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"22\"\nassert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n1 3\\n3 3\\n1 5\\n\") == \"13\"",
        "num_ids_2": 198,
        "num_ids_4": 198
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('6') == '1'\nassert solution('13') == '3'\nassert solution('14') == '9'\nassert solution('3620') == '3'\nassert solution('10000') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, but got: {solution(stdin)}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for function solution. Expected output: '{expected}', received output: '{solution(stdin)}'.\"\nprint(\"All tests passed.\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7\\n1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '1\\n3\\n9\\n13\\n27\\n6561\\n19683'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"Output\\n\", \"\\n\".join(map(str, output))\nassert len(output) == 5, \"\\n\".join(map(str, output))",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\nfor _ in range(q):\n    n = int(stdin.readline().strip())\n    ans = [0] * n\n    for _ in range(n):\n        a = int(stdin.readline().strip())\n        for b in range(2, a+1):\n            for c in range(2, b+1):\n                for d in range(2, c+1):\n                    for e in range(2, d+1):\n                        for f in range(2, e+1):\n                            for g in range(2, f+1):\n                                for h in range(2, g+1):\n                                    if a == b == c == d == e == f == g == h:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == c == d == e == f:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == c == d == e:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == c == d == f:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == c == d:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == c == e:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == c:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == d:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b == e:\n                                        ans[a] = 1\n                                        break\n                                    elif a == b:\n                                        ans[a] = 1\n                                        break\n                                    elif a == c:\n                                        ans[a] = 1\n                                        break\n                                    elif a == d:\n                                        ans[a] = 1\n                                        break\n                                    elif a == e:\n                                        ans[a] = 1\n                                        break\n                                    elif a:\n                                        ans[a] = 1\n                                        break\n    print(*ans)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"1\\n3\\n9\\n13\\n27\\n6561\\n19683\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 1 1 1 1 \\n3 3 3 \\n2 3 3 2 1 3 \\n1 \\n2 2 2 2 \\n4 4 4 1 4\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\"1\\n3\\n2\\n1\\n2\\n4\\n3\\n1\\n\"]\nassert solution() == [\"1\\n1\\n1\\n1\\n1\\n\"]",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    6\n    5\n    1 2 3 4 5\n    3\n    2 3 1\n    6\n    4 6 2 1 5 3\n    1\n    1\n    4\n    3 4 1 2\n    5\n    5 1 2 4 3\n    \"\"\") == \"\"\"\n    1 1 1 1 1\n    3 3 3 \n    2 3 3 2 1 3 \n    1 \n    2 2 2 2 \n    4 4 4 1 4\n    \"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output\\n1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for solution: {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'TODO'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"8\\n-1 2 6 4 0 3\"\nassert solution(stdin) == \"7\\n5 -2 4 -1 2\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3 \\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8\\n-1 2 6 4 0 3\\n'\n\nassert solution('''\n3 5\n0 3 1\n''') == '7\\n5 -2 4 -1 2\\n'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n-1 2 6 4 0 3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test case {case+1} failed: {solution(stdin)!= expected}\"\ncase += 1",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"8\n-1 2 6 4 0 3 \"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 6\\n1 5\\n\") == \"8\\n-1 2 6 4 0 3\\n\"\nassert solution(\"3 5\\n0 3 1\\n\") == \"7\\n5 -2 4 -1 2\\n\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input {input_data} and expected output {expected_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\\n\"\nassert solution(\"4\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRRRRUUU\\nNO\\nYES\\nRUUURRRRUU\\n\"",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nassert solution(\"3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"",
        "num_ids_2": 158,
        "num_ids_4": 158
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'\n\nfrom typing import List",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3') == 'YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3\\n1 2\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\n\nfor i in range(1, t+1):\n    n = int(stdin.readline())\n    packages = []\n    for _ in range(n):\n        x, y = map(int, stdin.readline().split())\n        packages.append((x, y))\n\n    path = []\n    current_x, current_y = 0, 0\n    for i in range(n):\n        path.append('U')\n        if i == n-1:\n            path[-1] = 'R'\n        else:\n            path.append('R')\n            current_x += 1\n        if current_x == 1000 or current_y == 1000:\n            break\n\n    shortest_path = ''\n    for i in range(n-1, -1, -1):\n        shortest_path += path[i]\n        if i == 0:\n            shortest_path += 'U'\n        else:\n            shortest_path += 'R'\n\n    if path == shortest_path:\n        print(\"YES\")\n        print(shortest_path)\n    else:\n        print(\"NO\")",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\\nRUUURRRRUU\\nNO\\nYES\\nRRRRUUU\"\nprint(\"YES\")\nprint(\"RUUURRRRUU\")\nprint(\"NO\")\nprint(\"YES\")\nprint(\"RRRRUUU\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\") == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '8\\n0\\n500\\n2128012501878\\n899999999999999999\\n'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == '8\\n0\\n500\\n2128012501878\\n899999999999999999'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Your code is incorrect. \\nExpected: {expected}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n') == '8\\n0\\n500\\n2128012501878\\n899999999999999999'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test {t+1} failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\\n0\\n500\\n2128012501878\\n899999999999999999\", \"Test case 1 failed\"\nassert solution(stdin) == \"0\\n0\\n0\\n0\", \"Test case 2 failed\"\nassert solution(stdin) == \"500\\n2128012501878\\n899999999999999999\", \"Test case 3 failed\"\nassert solution(stdin) == \"2128012501878\\n899999999999999999\", \"Test case 4 failed\"\nassert solution(stdin) == \"899999999999999999\", \"Test case 5 failed\"",
        "num_ids_2": 86,
        "num_ids_4": 189
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 10\") == \"8\"\nassert solution(\"500 4\") == \"0\"\nassert solution(\"217871987498122 10\") == \"0\"\nassert solution(\"100000000000000001 1\") == \"0\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '8\\n0\\n500\\n2128012501878\\n899999999999999999'\n\nfrom typing import List",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n0\\n2\\n4\\n1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n0\\n2\\n4\\n1\\n\"\nassert solution(stdin) == \"2\\n0\\n2\\n4\\n1\\n\"\nassert solution(stdin) == \"0\\n2\\n4\\n1\\n2\\n\"\nassert solution(stdin) == \"4\\n0\\n2\\n4\\n1\\n\"\nassert solution(stdin) == \"1\\n2\\n4\\n1\\n0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Solution is incorrect.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"4\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 1, 0, 1, 1]) == \"2\"\nassert solution([0, 0, 1, 0, 1, 0, 1]) == \"0\"\nassert solution([1, 1, 0]) == \"2\"\nassert solution([0, 0, 0, 1, 1]) == \"4\"\nassert solution([1, 1, 0, 1, 1]) == \"1\"",
        "num_ids_2": 50,
        "num_ids_4": 88
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\\n0\\n2\\n4\\n1\"",
        "num_ids_2": 188,
        "num_ids_4": 376
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2\\n0\\n2\\n4\\n1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output.\"\nprint(\"Test passed!\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '0'\nassert solution(stdin) == '2'\nassert solution(stdin) == '4'\nassert solution(stdin) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"cbaabc\"\nassert solution() == \"bababa\"\nassert solution() == \"baabab\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\\n4 4\\n6 2\") == \"cbcacab\\nabcd\\nbaabab\"\nassert solution(\"7 4\\n4 6\\n6 2\") == \"aabcab\\nbabaab\"\nassert solution(\"7 4\\n4 5\\n6 2\") == \"aacbac\\nbabbaa\"\nassert solution(\"7 4\\n4 5\\n6 3\") == \"aacbac\\nbabbaa\"\nassert solution(\"7 4\\n4 6\\n6 3\") == \"aabcab\\nbabaab\"\nassert solution(\"7 4\\n4 6\\n6 3\") == \"aabcab\\nbabaab\"\nassert solution(\"7 4\\n4 6\\n6 4\") == \"aabcab\\nbabaab\"",
        "num_ids_2": 59,
        "num_ids_4": 113
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"cbcacab\"\nassert solution(4) == \"abcd\"\nassert solution(6) == \"baabab\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\\n\") == \"cbcacab\\nabcd\\nbaabab\"\nassert solution(\"1\\n7 3\\n\") == \"cbcabba\"\nassert solution(\"2\\n7 3\\n\") == \"ccbbaaa\"\nassert solution(\"3\\n7 3\\n\") == \"cbcabba\"\nassert solution(\"3\\n7 3\\n\") == \"ccbbaaa\"\nassert solution(\"3\\n7 3\\n\") == \"cbcabba\"",
        "num_ids_2": 55,
        "num_ids_4": 93
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Your solution is wrong. Please check the expected output and constraints.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == [\"cbcacab\", \"abcd\", \"baabab\"]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {case+1} failed.\\nExpected: {output()}\\nGot: {solution(input())}\"\nfor case in range(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    moves = int(input())\n    \n    a = sorted(a)\n    a.append(n)\n    \n    for i in range(1, moves+1):\n        if a[i] <= a[i-1]:\n            break\n    else:\n        alice_sweets = a[-1]\n        bob_sweets = n - a[-1]\n        break\n    \n    a[i-1] += alice_sweets\n    a.pop()\n    a[i-1] += bob_sweets\n    print(i, alice_sweets, bob_sweets)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input_data)}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n', \"Test 1 Failed\")\n\nassert solution(open('input.txt', 'r')) == '1000\\n', \"Test 2 Failed\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 146,
        "num_ids_4": 146
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"6\\n27\\n39\\n11\\n17\\n\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\\n1 2 3 4 5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\\n1 2 2 1\\n4 4 5 4\\n\") == \"6\\n27\\n39\\n11\\n17\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 148,
        "num_ids_4": 148
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nprint(\"Test case passed\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n27\\n39\\n11\\n17\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"The output {output_string} does not match the expected output {output_string}\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, Received output: {solution(input)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"The function should return '{output()}', but returns '{solution(input())}'.\"\n\nn, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nt = [a[0]]\nfor i in range(1, n):\n    t.append(t[i-1] + a[i])\n\nt.append(c + sum(b))\n\nprint(t)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == expected\nprint(expected)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n\") == []\nassert solution(\"1\\n2\\n\") == []\nassert solution(\"1\\n10\\n2\\n1\\n\") == [0]\nassert solution(\"1\\n10\\n2\\n1\\n\") == [0, 7, 13, 18, 24, 35, 36, 37, 40, 45]",
        "num_ids_2": 16,
        "num_ids_4": 51
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\") == \"0 7 13 18 24 35 36 37 40 45\\n\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\\n1 2 3 4 4 1 2 1 3\") == \"0 2 4 7 8 11 13 14 16 17\\n\"",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0, \"Empty input\"\n\nn = int(stdin.readline().strip())\nc = int(stdin.readline().strip())\n\na = list(map(int, stdin.readline().strip().split()))\nb = list(map(int, stdin.readline().strip().split()))\n\nt = []\n\nfor i in range(n):\n    t.append(a[i] + b[i])\n\nprint(\" \".join(map(str, t)))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == []",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0, \"Write the correct function solution to the problem.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'aabba'\nassert solution(open('sample_input.txt', 'r')) == 'aaabbb'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"aaabb\"\nassert solution() == \"aabab\"\nassert solution() == \"baaba\"\nassert solution() == \"bbaaa\"\nassert solution() == \"abb\"\nassert solution() == \"bab\"\nassert solution() == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\n\"\nassert solution(\"10\\n50 10\") == \"aaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\naaabb\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"aaabb\"\nassert solution(input()) == \"aabab\"\nassert solution(input()) == \"baaba\"\nassert solution(input()) == \"bbaaa\"\nassert solution(input()) == \"abb\"\nassert solution(input()) == \"bab\"\nassert solution(input()) == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\naba\\naba\\naaaaabaaaaabaaaaaaaa\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\\naaaaabaaaaabaaaaaaaa\\nbab\\nabb\\naaab\\nabab\\naaaabaaaaabaaa\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution is {solution(input())} but should be {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == \"aaabb\"\nassert solution(3, 2) == \"aabab\"\nassert solution(3, 8) == \"abaaa\"\nassert solution(3, 10) == \"bbaaa\"\nassert solution(3, 100) == \"aaaaabaaaaabaaaaaaaa\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"aaabb\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\nError: The output is incorrect.\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\") == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n    4\n    7 1\n    1 5 2 3 1 5 4\n    1 3 6 7 2 5 4\n    1 1\n    1000000000\n    1000000000\n    5 10\n    10 7 5 15 8\n    20 199 192 219 1904\n\"\"\") == \"6\\n1\\n5\\n10\"\n\nassert solution(r\"\"\"\n    4\n    7 1\n    1 5 2 3 1 5 4\n    1 3 6 7 2 5 4\n    1 1\n    1000000000\n    1000000000\n    5 10\n    10 7 5 15 8\n    20 199 192 219 1904\n\"\"\") == \"6\\n1\\n5\\n10\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 20 40 30 50 40 60\n\"\"\") == \"2\\n1\"\n\nassert solution(r\"\"\"\n    1\n    1 2\n    10 2 3 4 5 6 7 8 9 10\n    20 10 20 30 ",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\\n\"",
        "num_ids_2": 189,
        "num_ids_4": 189
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\\n\") == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n1\\n5\\n10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 7 5 15 8\") == \"1\"\nassert solution(\"20 199 192 219 1904\") == \"5\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"12 13 6 17 1 14 7 9 19 3\") == \"6\"",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\nassert solution() == \"1\"\nassert solution() == \"5\"\nassert solution() == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n1\\n5\\n10\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('0\\n0\\n0\\n0\\n') == '0\\n0\\n0\\n0\\n'",
        "num_ids_2": 93,
        "num_ids_4": 125
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\\n0\\n0\\n0\"\nassert solution(\"3 2\\n0\\n1\\n2\\n3\") == \"0\\n0\\n1\\n2\"\nassert solution(\"2 1\\n0\\n1\\n2\\n3\\n4\") == \"0\\n1\\n2\\n2\\n1\\n1\\n1\\n1\\n0\"\nassert solution(\"1 2\\n0\\n1\\n2\\n3\\n4\\n5\") == \"0\\n1\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\"\nassert solution(\"0 1\\n0\\n1\\n2\\n3\\n4\\n5\\n6\") == \"0\\n1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\"\nassert solution(\"3 4\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"0\\n1\\n2\\n2\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\",
        "num_ids_2": 85,
        "num_ids_4": 169
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 186
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"5 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 128
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 178
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '''\n1 49 \n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'''\n5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n'''\n) == r'''\n1 49\n20 40 30 50 10\n26 32 20 38 44 50\n8 23 18 13 3\n1 10 13 4 19 22 25 16 7\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\\n\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\nassert solution(\"4\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"\nassert solution(\"3\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"\nassert solution(\"2\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"\nassert solution(\"1\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"\nassert solution(\"8\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"\nassert solution(\"9\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\"",
        "num_ids_2": 180,
        "num_ids_4": 278
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Output: {output}, Error: {solution(stdin)}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Case #\" + str(test_case_id) + \" - \" + \"Failed\"\nprint(\"Test Case #\" + str(test_case_id) + \" - \" + \"Passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('2 1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8') == '1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8'\nassert solution('2 1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10') == '1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10'\nassert solution('2 1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11') == '1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11'\nassert solution('2 1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12') == '1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12'\nassert solution('2 1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13') == '1 1\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13'\nprint(\"All test cases passed\")",
        "num_ids_2": 198,
        "num_ids_4": 420
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '1 2 3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"4 1 5 7 3 8\") == \"1 3 5 7 8 4\"\nassert solution(\"2 1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 1 1 1 1\") == \"1 1 1 1 1\"\nassert solution(\"5 6 7 8 9 10\") == \"10 9 8 7 6 5\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 1 2') == '1 2 3', \"Your solution is incorrect.\"\n\nassert solution('5 1 3 2 4') == '1 2 3 4 5', \"Your solution is incorrect.\"\n\nassert solution('3 1 4 5 2') == '1 2 3 4 5', \"Your solution is incorrect.\"",
        "num_ids_2": 58,
        "num_ids_4": 90
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 2 3', \"Test case 1 failed\"\nassert solution() == '3 2 1', \"Test case 2 failed\"\nassert solution() == '1 3 2', \"Test case 3 failed\"\nassert solution() == '2 3 1', \"Test case 4 failed\"\nassert solution() == '3 1 2', \"Test case 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 2 3', \"The function should return '1 2 3', but it returned '{}'.\".format(solution())",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '1 2 3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3', \"The output should be 1 2 3\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}\\nExpected output: {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\", \"The output should be '1 2 3', but it is: \" + solution(\"3 3 1 2\")\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"1 2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\\n5 2 3\") == \"NO\"",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\\nNO\\nYES\\nNO\\nNO\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2\n    2 3\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n    \"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n    5\n    2\n    2 3\n    4\n    2 2 8 8\n    3\n    3 3 3\n    4\n    5 5 5 5\n    4\n    1 1 1 1\n    \"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2 3 4 5 6 7 8 9 10\n    2 3 4 5 6 7 8 9 10\n    3 4 5 6 7 8 9 10\n    4 5 6 7 8 9 10\n    5 6 7 8 9 10\n    6 7 8 9 10\n    7 8 9 10\n    8 9 10\n    9 10\n    \"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2 3 4 5 6 7 8 9 10\n    2 3 4 5 6 7 8 9 10\n    3 4 5 6 7 8 9 10\n    4 5 6 7 8 9 10\n    5 6 7 8 9 10\n    6 7 8 9 10\n    7 8 9 10\n    8 9 10\n    9 10\n    \"\"\"\n) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"NO\"\nassert solution(2) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"YES\"\nassert solution(stdin: str) == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"\nassert solution(\"5\\n2 3 4 5 6\\n7\\n8 9 10 11 12\\n13\\n14 15 16 17 18\\n19\\n20 21 22 23 24\\n\") == \"YES\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n10\\n11 12 13 14 15 16 17 18 19\\n20\\n21 22 23 24 25 26 27 28 29\\n30\\n31 32 33 34 35 36 37 38 39\\n40\\n41 42 43 44 45 46 47 48 49\\n50\\n51 52 53 54 55 56 57 58 59\\n60\\n61 62 63 64 65 66 67 68 69\\n70\\n71 72 73 74 75 76 77 78 79\\n80\\n81 82 83 84 85 86 87 88 89\\n90\\n91 92 93 94 95 96 97 98 99\\n100\\n101 102 103 104 105 106 107 108 109\\n110\\n111 112 113 114 115 116 117 118 119\\n120\\n121 122 123 124 125 126 127 128 129\\n130\\n131 132 133 134 135 136 137 138 139\\n140\\n141 142 143 144 145 146 147 148 149\\n150\\n151 152 153 154 155 156 157 158 159\\n160\\n161 162 163 164 165 166 167 168 169\\n170\\n171 172 173 174 175 176 177 178 179\\n180\\n181 182 183 184 185 186 187 188 189\\n190\\n191 192 193 194 195 196 197 198 199\\n200\\n201 202 203 204 205 206 207 208 209\\n210\\n211 212 213 214 215 216 217 218 219\\n220\\n221 222 223 224 225 226 227 228 229\\n230\\n231 232 233 234 235 ",
        "num_ids_2": 141,
        "num_ids_4": 1027
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\") == \"YES\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n2\\n4\\n6\\n7\\n13\\n\") == \"9 6 10 8 4 7 3 1 5 2 \"\nprint(\"All test cases passed!\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {tc+1} failed: {solution(input())} expected {expected_output}\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"9 6 10 8 4 7 3 1 5 2 \"\nassert solution(\"2\") == \"3 1 4 2 \"\nassert solution(\"3\") == \"5 3 6 2 4 1 \"\nassert solution(\"6\") == \"5 1 3 6 2 4 7 \"\nassert solution(\"13\") == \"13 9 7 11 8 4 1 3 5 2 6 10 12\"\nassert solution(\"100\") == \"-1\"",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == '-1'\nassert solution(10) == '9 6 10 8 4 7 3 1 5 2 '\nassert solution(2) == '1 2 3 4 5'\nassert solution(4) == '4 5 6 7 8 9'\nassert solution(6) == '6 7 8 9 10 11'\nassert solution(7) == '7 8 9 10 11 12'\nassert solution(13) == '1 2 3 4 5 6 7 8 9 10 11 12 13'\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"9 6 10 8 4 7 3 1 5 2 \n-1\n3 1 4 2 \n5 3 6 2 4 1 \n5 1 3 6 2 4 7 \n13 9 7 11 8 4 1 3 5 2 6 10 12\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == '9 6 10 8 4 7 3 1 5 2 '\nassert solution(2) == '-1'\nassert solution(1) == '3 1 4 2 '\nassert solution(10) == '9 6 10 8 4 7 3 1 5 2 '",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == \"2\\n1\\n-1\\n0\"\nassert solution(stdin=open(\"input.txt\", \"r\")) == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\nassert solution() == 1\nassert solution() == -1",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\\n\"\nassert solution(\"4\\n3\\n2 7 6\\n4\\n2 18\\n1\\n9\\n5\\n3 2 6\\n6\\n1 0 3\\n\") == \"2\\n1\\n-1\\n0\\n\"\nassert solution(\"4\\n3\\n2 7 6\\n3\\n3 1\\n1\\n9\\n5\\n3 2 6\\n6\\n1 0 3\\n\") == \"1\\n-1\\n0\\n\"",
        "num_ids_2": 138,
        "num_ids_4": 203
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    3 2 7 6\n    3\n    3 2 6\n    1\n    7\n    7\n    4 9 2 1 18 3 0\n    ''') == '2'\n\nassert solution('''\n    4\n    4 2 7 6\n    3\n    3 2 6\n    1\n    7\n    7\n    4 9 2 1 18 3 0\n    ''') == '1'\n\nassert solution('''\n    3\n    3 2 7 6\n    3\n    3 2 6\n    1\n    7\n    7\n    4 9 2 1 18 3 0\n    ''') == '-1'\n\nassert solution('''\n    3\n    3 2 7 6\n    3\n    3 2 6\n    1\n    7\n    7\n    4 9 2 1 18 3 0\n    ''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2\\n1\\n-1\\n0'\nprint(solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0'))",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\\n1\\n-1\\n0\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Input: {stdin}, Output: {output}\\nSolution: {solution(stdin=input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\") == \"2 2 2 2 2 1 1 0 2 \\n\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1 \\n\"",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Your code does not pass the test case.\" for input, output in zip(stdin.split(), stdout.split())",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\") == \"0 -1 1 -1\"\n",
        "num_ids_2": 125,
        "num_ids_4": 125
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\") == \"2 2 2 2 2 1 1 0 2\\n\"\n\nassert solution(r\"\"\"\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\"\"\") == \"0 -1 1 -1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\"\n",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"10\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"-1\"\nassert solution(\"1000000\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"2\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"1000000000\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"-1\"",
        "num_ids_2": 149,
        "num_ids_4": 285
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nprint(\"All tests passed\")",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '0\\n-1\\n2\\n-1\\n-1\\n12\\n36'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 0\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 1\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 2\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 3\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 4\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 5\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 6\"\nassert solution(stdin) == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\\n\", \"Test case 7\"",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(15116544) == 0\nassert solution(1) == 0\nassert solution(2) == 2\nassert solution(3) == -1\nassert solution(12) == 36\nassert solution(12345) == 12\nassert solution(15116544) == 0\nassert solution(387420489) == -1",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=stdin) == expected_output, f\"Test Case {i+1} - expected output: {expected_output}, actual output: {solution(stdin)}\"\nfor i in range(t):\n    n = int(stdin.readline())\n    if solution(stdin.readline()) == '-1':\n        print('0')\n    elif solution(stdin.readline()) == '-1':\n        print('0')\n    else:\n        print(solution(stdin.readline()))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nassert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\\n\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489\") == \"0\\n-1\\n2\\n-1\\n-1\\n12\\n36\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Expected {expected_output}, got {solution(input_data)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BGGGG\") == \"0\"\nassert solution(\"RBRGR\") == \"3\"\nassert solution(\"BBBRR\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BGGGG\", 2) == \"GRRR\"\nassert solution(\"RBRGR\", 3) == \"RRRRR\"\nassert solution(\"BBBRR\", 5) == \"RRRGG\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"R\") == \"R\"\nassert solution(\"GR\") == \"GR\"\nassert solution(\"RB\") == \"RB\"\nassert solution(\"BB\") == \"BB\"\nassert solution(\"BR\") == \"BR\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3, 5, 2, 5, 3, 5, 5]) == 1\nassert solution([3, 5, 2, 5, 3, 5, 5]) == 0\nassert solution([3, 5, 2, 5, 3, 5, 5]) == 3",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BGGGG\") == \"RBRGR\"\nassert solution(\"5 2\") == \"BBGGG\"\nassert solution(\"5 3\") == \"RBBRR\"\nassert solution(\"5 5\") == \"BBRRB\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBRRRR\") == 1\nassert solution(\"10 4\\nRRRRRR\\nRRRRRR\\nRRRRRR\\nRRRRRR\") == 0\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"1\"\nassert solution(\"5 3\\nRBRGR\") == \"0\"\nassert solution(\"5 5\\nBBBRR\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3') == '1\\n0\\n3'\nassert solution('5 2\\nBGGGG') == '1\\n0\\n3'\nassert solution('5 3\\nRBRGR') == '1\\n0\\n3'\nassert solution('5 5\\nBBBRR') == '1\\n0\\n3'",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RBRGR\") == \"RBRGR\"\nassert solution(\"BBBRR\") == \"BBBRR\"\nassert solution(\"RGGGG\") == \"RGRRGG\"\nassert solution(\"GGGGBBBB\") == \"GGGBBBRRRRRGGG\"\nassert solution(\"GGGGBBBBRRRRRGGG\") == \"GGGBBBRRRRRGGG\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '3'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"3\\n1\\n1\") == \"1\"\nassert solution(\"10\\n5\\n2 3 1 4 5\") == \"7\"\nassert solution(\"1\\n10\") == \"1\"\nassert solution(\"2\\n1\") == \"2\"",
        "num_ids_2": 58,
        "num_ids_4": 97
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n8\\n1 1 1 1 1 2 2 1\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n8\\n1 1 1 1 1 2 2 1\\n9\\n2 2 2 2 2 2 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n8\\n1 1 1 1 1 2 2 1\\n9\\n2 2 2 2 2 2 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n8\\n1 1 1 1 1 2 2 1\\n9\\n2 2 2 2 2 2 2 2\\n10\\n3 3 3 3 3 3 3 3\") == \"3\\n3\"",
        "num_ids_2": 110,
        "num_ids_4": 280
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\\n3\"\nassert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 1 1 1 2 2\\n7\\n1 1 ",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"3\"\nassert solution(\"1\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 84
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1 1 2 2') == '3\\n'\nassert solution('1 1 1 1 1 2 2 2') == '3\\n'\nassert solution('1 1 1 1 1 2 2 3') == '3\\n'\nassert solution('2 1 3 3') == '3\\n'",
        "num_ids_2": 50,
        "num_ids_4": 94
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3\\n3'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3\\n3\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"3\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Test failed for function solution\\nInput: {input}\\nExpected output: {expected_output}\\nOutput: {solution(input)}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'your_solution_here'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2\"\nassert solution(\"4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"1\\n1\\n4\\n4 3 2 1\") == \"1 4 3 2\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"4\\n4 3 2 1\\n4\\n1 2 4 3\\n1\\n1\\n1\\n1\") == \"1 2 3 4\"\nassert solution(\"1\\n2\\n4\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 126,
        "num_ids_4": 179
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n\\ntest_case_1 = [5, 4, 1, 3, 2]\\n\\n# Test case 1\\nassert solution(test_case_1) == '1 5 2 4 3'\\n\\ntest_case_2 = [1, 2, 4, 3]\\n\\n# Test case 2\\nassert solution(test_case_2) == '1 2 3 4'\\n\\n# Test case 3\\nassert solution(test_case_1) == solution(test_case_2)\\n\\n# Test case 4\\nassert solution(test_case_1)!= solution(test_case_3)\\n\\n# Test case 5\\nassert solution(test_case_1)!= solution(test_case_4)\\n\\n# Test case 6\\nassert solution(test_case_1)!= solution(test_case_5)\"",
        "num_ids_2": 240,
        "num_ids_4": 240
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\"\"\"\n) == \"\"\"\n1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n\"\"\"\n\nassert solution(\n\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"\"\"\n10\n9 8 7 6 5 4 3 2 1 \n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n4\n1 2 3 4 5\n\"\"\"\n) == \"\"\"\n1 2 3 4 5 \n\"\"\"\n\nassert solution(\n\"\"\"\n10\n7 8 9 10 1 2 3 4 5 6\n\"\"\"\n) == \"\"\"\n10\n9 8 7 6 5 4 3 2 1 \n\"\"\"\n\nassert solution(\n\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"\"\"\n10\n9 8 7 6 5 4 3 2 1 \n\"\"\"\n\nassert solution(\n\"\"\"\n10\n2 1 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"\"\"\n10\n9 8 7 6 5 4 3 2 1 \n\"\"\"\n\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n4\n1 2 3 4 5\n\"\"\"\n) == \"\"\"\n1 2 3 4 5 \n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\") == \"1 5 2 4 3\\n1 2 3 4\\n1\\n1 4 3 2\"\nassert solution(\"4\\n1 2 4 3\\n1\\n1\") == \"1 2 3 4\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3 \\n1 2 3 4 \\n1 \\n1 4 3 2\"\nassert solution(\"1\\n2\\n4\\n3\") == \"1 2 3 4\"\nassert solution(\"1\\n2\\n4\\n3\\n4\\n3\\n2\\n1\\n4\\n1\") == \"1 2 3 4 1\"\nassert solution(\"1\\n2\\n4\\n3\\n4\\n3\\n2\\n1\\n4\\n1\\n3\\n1\\n4\\n2\") == \"1 2 3 4 1 4 3 2\"",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1} failed: Expected: {expected}, Received: {solution(input())}\" for i, (input_, expected) in enumerate(test_cases)",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: expected '{expected}', got '{solution(input())}'\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'YES\\YES\\NO\\YES\\YES'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == 'YES'  # Example 1\nassert solution(\"\") == 'YES'  # Example 2\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == 'YES'  # Example 3\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == 'YES'  # Example 4\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n",
        "num_ids_2": 28,
        "num_ids_4": 836
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(1) == \"YES\"\nassert solution(3) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(3) == \"YES\"\nassert solution(1) == \"NO\"\nassert solution(5) == \"YES\"\nassert solution(3) == \"NO\"\nassert solution(1) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Output should be '{output}', but got '{solution(stdin)}'.\"\nfor i in range(q):\n    assert input().split() == expected_output[i], f\"Test case {i+1} should be '{expected_output[i]}', but got '{input().split()}'.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\"\nassert solution(input()) == \"YES\" or solution(input()) == \"NO\"\nassert solution(input()) == \"YES\" or solution(input()) == \"NO\"\nassert solution(input()) == \"YES\" or solution(input()) == \"NO\"\nassert solution(input()) == \"YES\" or solution(input()) == \"NO\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\\nYES\\nNO\\nYES\\nYES\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 128,
        "num_ids_4": 256
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5\\n18\\n10\\n6\\n75015'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"5\"\nassert solution(solution(solution)) == \"18\"\nassert solution(solution(solution(solution))) == \"10\"\nassert solution(solution(solution(solution(solution))))) == \"6\"\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5\\n18\\n10\\n6\\n75015\\n'\nprint('All test cases passed.')",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution.test_cases[0]) == solution.expected[0]\nassert solution(solution.test_cases[1]) == solution.expected[1]\nassert solution(solution.test_cases[2]) == solution.expected[2]\nassert solution(solution.test_cases[3]) == solution.expected[3]\nassert solution(solution.test_cases[4]) == solution.expected[4]\n\nclass TestSolution:\n    def __init__(self):\n        self.test_cases = [\n            [5, 2],\n            [19, 4],\n            [12, 7],\n            [6, 2],\n            [100000, 50010]\n        ]\n        self.expected = [\n            5,\n            18,\n            10,\n            6,\n            75015\n        ]",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n18\\n10\\n6\\n75015\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: Expected output '{expected_output}', got '{solution(input())}'.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\"",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 1\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 2\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 3\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 4\"\nassert solution(\"5\\n5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\\n\", \"Test 5\"\n",
        "num_ids_2": 142,
        "num_ids_4": 284
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n\"",
        "num_ids_2": 209,
        "num_ids_4": 209
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n\"\nassert solution(\"100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n100 4\\n10",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} has an incorrect output: {solution(stdin)}\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\nassert solution() == 'YES\\n2 2 2 2 2 2 2 2\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'",
        "num_ids_2": 318,
        "num_ids_4": 318
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, \"The output does not match the expected output.\" for input, output in zip(stdin.split('\\n'), expected_output.split('\\n')):\n    solution(input) == output",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\"\n\nn, k = map(int, input().split())",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} has an incorrect output: expected {expected_output}, got {solution(input())}.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nprint(\"YES\")\nprint(a1, a2, a3, a4, a5)\nprint(\"YES\")\nprint(a1, a2, a3, a4, a5)",
        "num_ids_2": 162,
        "num_ids_4": 162
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\n",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\n",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"55\n150000000000000000\n51\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nfor stdin, expected in [\n    (\n        \"4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\",\n        \"4\\n55\\n150000000000000000\\n51\",\n    ),\n    (\n        \"5\\n1 5 6\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000 10000000000000000 10000000000000000\\n23 34 45\",\n        \"5\\n55\\n150000000000000000\\n51\",\n    ),\n]:\n    assert solution(stdin) == expected",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"55\\n150000000000000000\\n51\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == \"4\\n55\\n150000000000000000\\n51\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\") == \"4\\n55\\n150000000000000000\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 3, 4]) == 4\nassert solution([1, 10, 100]) == 15000000000000000\nassert solution([10000000000000000, 10000000000000000, 10000000000000000]) == 15000000000000000",
        "num_ids_2": 49,
        "num_ids_4": 128
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n55\\n150000000000000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n55\\n150000000000000000\\n51\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r\"\"\"\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\") == \"4\\n55\\n150000000000000000\"\nassert solution(stdin=r\"\"\"\n1\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\") == \"1\\n56\\n46\"\nassert solution(stdin=r\"\"\"\n2\n1 10 100\n100000000000000000 100000000000000000\n23 34 45\n\"\"\") == \"2\\n56\\n46\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''\n55\n150000000000000000\n51\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\ababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6\\n3\\nabcbac\\n3\\naaa\\n7\\n1000\\nabczgyo\\n5\\n4\\ababa\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\"\nassert solution(\"1\\n2\\n3\\n\") == \"0\"\nassert solution(\"5\\n6\\n7\\n8\\n9\\n\") == \"0\"\nassert solution(\"1000\\n999\\n888\\n777\\n666\\n555\\n444\\n333\\n222\\n111\\n\") == \"1000\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\" == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n7",
        "num_ids_2": 120,
        "num_ids_4": 209
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\\n6\\n3\\n5\\n4\\n15\\n10\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\abczgyo\\n5 4\\ababa\\n20 10\\aaebdbabdbbddaadaadc\\n20 5\\ecbedececacbcbccbdec\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"\nassert solution(\"6\\n6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"",
        "num_ids_2": 208,
        "num_ids_4": 208
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\\n3\\na\\nb\\nc\\nc\\n5\\na\\nabba\\n20\\n10\\naaebdbabdbbddaadaadc\\n20\\n5\\necbedececacbcbccbdec\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == 'Output\\n6\\n3\\n5\\n4\\n15\\n10\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'NO'  # Insert your solution here\nprint('YES')  # Insert the output here",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'YES\\n1 3 5\\nNO\\nNO'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1\") == \"YES\\n1 1 1 1 1\"\nassert solution(\"2 2 2 2 2\") == \"YES\\n2 2 2 2 2\"\nassert solution(\"3 3 3 3 3\") == \"YES\\n3 3 3 3 3\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"5 3\") == \"NO\"\nassert solution(\"5 4\") == \"YES\\n1 2 3 4 5\"\nassert solution(\"6 2\") == \"YES\\n1 2 8 4 10 2\"",
        "num_ids_2": 58,
        "num_ids_4": 105
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n\") == \"YES\\n1 3 5\\nNO\\nNO\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test case failed: {input} -> {output}\" for input, output in [\n    ([3, 5, 7], [\"YES\", \"1 3 5\", \"NO\", \"NO\"]),\n    ([1, 2, 8, 4, 10, 2], [\"YES\", \"1 2 8 4 10 2\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\", \"NO\", \"NO\"]),\n    ([1, 2, 3, 4, 5], [\"YES\", \"1 2 3 4 5\",",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n1 3 5\\nNO\\nNO'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"YES\\n1 3 5\"\nassert solution(2) == \"NO\"\nassert solution(3) == \"YES\\n[1, 2, 3], [4, 5]\"\nassert solution(4) == \"YES\\n[1, 2, 3], [4, 5], [1, 2, 3, 4], [5]\"\nassert solution(5) == \"YES\\n[1, 2, 3, 4], [5], [1, 2, 3, 4, 5]\"\nassert solution(6) == \"YES\\n[1, 2, 3, 4, 5], [1, 2], [3, 4, 5], [1, 2, 3], [4, 5], [1, 2, 3, 4], [5]\"\nassert solution(7) == \"NO\"\nassert solution(8) == \"YES\\n[1, 2, 3, 4, 5], [1, 2, 3], [4, 5], [1, 2, 3, 4], [5], [1, 2, 3, 4, 5]\"\nassert solution(9) == \"YES\\n[1, 2, 3, 4, 5], [1, 2, 3], [4, 5], [1, 2, 3, 4], [5], [1, 2, 3, 4, 5]\"",
        "num_ids_2": 27,
        "num_ids_4": 94
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101001010000010100101000000\") == \"964176192\"\nassert solution(\"1111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('00000010100101000001111010011100') == 964176192, \"Expected output: 964176192, but got: {}\".format(solution('00000010100101000001111010011100'))\nassert solution('1111111111111111111111111111101') == 3221225471, \"Expected output: 3221225471, but got: {}\".format(solution('11111111111111111111111111111101'))",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"Example 1\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\", \"Example 2\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(00000010100101000001111010011100) == 964176192\nassert solution(1111111111111111111111111111101) == 3221225471",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"11111111111111111111111111111101\") == \"3221225471\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == [\n     [1],\n    [1, 1],\n   [1, 2, 1],\n  [1, 3, 3, 1],\n [1, 4, 6, 4, 1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == [\n    [1],\n    [1, 1],\n    [1, 2, 1],\n    [1, 3, 3, 1],\n    [1, 4, 6, 4, 1]\n], \"Output is incorrect\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == [\n    [1],\n    [1, 1],\n    [1, 2, 1],\n    [1, 3, 3, 1],\n    [1, 4, 6, 4, 1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == [\n     [1],\n    [1, 1],\n   [1, 2, 1],\n  [1, 3, 3, 1],\n [1, 4, 6, 4, 1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == [\n     [1],\n    [1, 1],\n   [1, 2, 1],\n  [1, 3, 3, 1],\n [1, 4, 6, 4, 1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == [[1]]\nassert solution(10) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == [\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == [\"example@example.com\", \"www.example.com\", \"www.example.org\", \"www.example.net\", \"user1_example.com\", \"user2_example.com\", \"user3_example.com\"]",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n\ninput = \"\"\"\n5\nuser1@example.com\nuser2@example.com.uk\nuser3@example.com-uk\nuser4@example.com_uk\nuser5@example.com.uk\n\"\"\"\noutput = \"\"\"\n['user4@example.com', 'user5@example.com']\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nhello@example.com\\njohn-doe@example.com\\njohn_doe@example.com\\n123@example.com\\n\") == [\"john-doe@example.com\", \"hello@example.com\"]\nassert solution(\"3\\n\") == []\nassert solution(\"10\\n\") == []",
        "num_ids_2": 69,
        "num_ids_4": 80
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [\"example.com\", \"example.org\", \"example.co.uk\"]\nassert solution() == []\nassert solution() == [\"test@example.com\", \"test@example.org\", \"test@example.co.uk\"]\nassert solution() == [\"@example.com\", \"@example.org\", \"@example.co.uk\"]\nassert solution() == [\"examplecom\", \"exampleorg\", \"exampleco.uk\"]\nassert solution() == [\"testcom\", \"testorg\", \"testco.uk\"]\nassert solution() == [\"example.com\", \"test.com\"]\nassert solution() == [\"test.com\", \"example.com\"]",
        "num_ids_2": 28,
        "num_ids_4": 79
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nemail@websitename.com\\njohn.doe@example.com\\n\") == [\"email@websitename.com\", \"john.doe@example.com\"]\nassert solution(\"2\\nemail@example.co.uk\\njohn.doe@example.com\\n\") == [\"email@example.co.uk\", \"john.doe@example.com\"]\nassert solution(\"3\\nemail@example.co.uk\\njohn.doe@example.com\\n\") == [\"email@example.co.uk\", \"john.doe@example.com\"]\nassert solution(\"4\\nemail@example.co.uk\\njohn.doe@example.com\\n\") == [\"email@example.co.uk\", \"john.doe@example.com\"]\nassert solution(\"5\\nemail@example.co.uk\\njohn.doe@example.com\\n\") == [\"email@example.co.uk\", \"john.doe@example.com\"]",
        "num_ids_2": 90,
        "num_ids_4": 180
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [\n    \"john.doe@example.com\",\n    \"jane.doe@example.com\",\n    \"doe.com\",\n    \"example.com\",\n]\n\nassert solution(5) == [\n    \"john.doe@example.com\",\n    \"jane.doe@example.com\",\n    \"doe.com\",\n    \"example.com\",\n    \"jim.doe@example.net\",\n]\n\nassert solution(4) == [\n    \"john.doe@example.com\",\n    \"jane.doe@example.com\",\n    \"doe.com\",\n]\n\nassert solution(1) == []",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nexample@example.com\\nuser_name@website.extension\\nvalid_email@example.com\\nvalid_email@example.com\\n\") == \"valid_email@example.com\\nvalid_email@example.com\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nemail@example.com\\njohn.doe@example.com\\n\\n\\nfred@example.net\\n\") == [\"email@example.com\", \"john.doe@example.com\", \"fred@example.net\"]\nassert solution(\"1\\nemail@example.com\\njohn.doe@example.com\\n\\n\\nfred@example.net\\n\\n\") == [\"email@example.com\", \"john.doe@example.com\", \"fred@example.net\"]",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution( \"\"\"\n3\nexample@website.com\nexample2@website.com\nexample3@website.com\n\"\"\") == [\"example@website.com\", \"example2@website.com\", \"example3@website.com\"]\n\nassert solution( \"\"\"\n2\nexample@website.com\nexample2@website.com\n\"\"\") == []\n\nassert solution( \"\"\"\n3\nhello-world@website.com\nexample@website.com\nexample2@website.com\n\"\"\") == [\"example@website.com\", \"hello-world@website.com\"]",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\njohn.doe@example.com\\njohn.doe@example.com\\nsmith.john@example.com\\njohn.doe@example.com\\n\") == [\"john.doe@example.com\", \"smith.john@example.com\"]\nassert solution(\"3\\nsimon.doe@example.com\\njohn.doe@example.com\\nsmith.john@example.com\\njohn.doe@example.com\\n\") == [\"smith.john@example.com\", \"john.doe@example.com\"]\nassert solution(\"3\\njohn.doe@example.com\\nsimon.doe@example.com\\njohn.doe@example.com\\nsmith.john@example.com\\n\") == [\"smith.john@example.com\", \"john.doe@example.com\"]\nassert solution(\"2\\njohn.doe@example.com\\njohn.doe@example.com\\n\") == []\nassert solution(\"0\\n\") == []",
        "num_ids_2": 126,
        "num_ids_4": 217
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2') == ['0', '1', '4', '9', '16']\nassert solution('5') == ['0', '1', '8', '27', '64']\nassert solution('10') == ['0', '1', '16', '67', '216', '843', '3628', '14409', '67284', '262144']",
        "num_ids_2": 47,
        "num_ids_4": 107
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [0, 1, 4, 9, 16]\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"N\") == [\"1\", \"8\", \"27\", \"96\", \"362\", \"1024\", \"32768\", \"1048576\", \"33554432\", \"1102322560\", \"34359738368\"]",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == [1, 8, 27, 64, 125]\nassert solution(10) == [1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == ['0', '1', '8', '27', '120']",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(['N']) == \"Error: Please enter a valid integer N.\\n\"\nassert solution(['-1']) == \"Error: Please enter a valid integer N.\\n\"\nassert solution(['10']) == \"[4, 16, 8, 27, 14, 49, 36, 100]\\n\"\nassert solution(['5']) == \"Error: Please enter a valid integer N.\\n\"\nassert solution(['5', '5']) == \"Error: Please enter a valid integer N.\\n\"",
        "num_ids_2": 39,
        "num_ids_4": 99
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == [1, 8, 27, 64, 125]\nassert solution(10) == [1, 2, 4, 8, 16, 32, 64, 125, 250, 512]",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10') == ['36', '216', '1440']\nassert solution('15') == ['2816', '14080', '109520']",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(N=10) == [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880]",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [1, 8, 27, 64, 125]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n<root> <p>1</p> <p>2</p> <p>3</p> <p>4</p> </root>\") == \"4\"\nassert solution(\"4\\n<root><p>1</p><p>2</p><p>3</p><p>4</p></root>\") == \"4\"\nassert solution(\"5\\n<root><p>1</p><p>2</p><p>3</p><p>4</p></root>\") == \"5\"\nassert solution(\"6\\n<root><p>1</p><p>2</p><p>3</p><p>4</p></root>\") == \"5\"\nassert solution(\"7\\n<root><p>1</p><p>2</p><p>3</p><p>4</p></root>\") == \"5\"",
        "num_ids_2": 85,
        "num_ids_4": 165
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n<root><a><b><c><d><e><f><g><h><i><j><k><l><m><n><o><p><q><r><s><t><u><v><w><x><y><z><aaa><bbb><ccc><ddd><eee><fff><gggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"<?xml version='1.0'?>\\n<root><child1><subchild1>text</subchild1></child1><child2><subchild2>text</subchild2></child2></root>\") == 2\nassert solution(\"<?xml version='1.0'?>\\n<root><child1><subchild1>text</subchild1></child1><child2><subchild2>text</subchild2><subchild3><subsubchild>text</subsub3></subchild2></child2></root>\") == 3\nassert solution(\"<?xml version='1.0'?>\\n<root><child1><subchild1>text</subchild1></child1><child2><subchild2>text</subchild2><subchild3><subsubchild>text</subsub3></subchild3></child2></root>\") == 2\nassert solution(\"<?xml version='1.0'?>\\n<root><child1><subchild1>text</subchild1></child1><child2><subchild2>text</subchild2></child2></root>\") == 1\nassert solution(\"<?xml version='1.0'?>\\n<root><child1><subchild1>text</subchild1></child1></root>\") == 0",
        "num_ids_2": 128,
        "num_ids_4": 256
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person id=\\\"1\\\" name=\\\"John\\\"/><person id=\\\"2\\\" name=\\\"Jane\\\"/><person id=\\\"3\\\" name=\\\"Bob\\\"/></root>\") == 3\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person id=\\\"1\\\" name=\\\"John\\\"/><person id=\\\"2\\\" name=\\\"Jane\\\"/><person id=\\\"3\\\" name=\\\"Bob\\\"/><person id=\\\"4\\\" name=\\\"David\\\"/></root>\") == 4\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person id=\\\"1\\\" name=\\\"John\\\"/><person id=\\\"2\\\" name=\\\"Jane\\\"/><person id=\\\"3\\\" name=\\\"Bob\\\"/><person id=\\\"4\\\" name=\\\"David\\\"/><person id=\\\"5\\\" name=\\\"Emma\\\"/></root>\") == 4\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person id=\\\"1\\\" name=\\\"John\\\"/><person id=\\\"2\\\" name=\\\"Jane\\\"/><person id=\\\"3\\\" name=\\\"Bob\\\"/><person id=\\\"4\\\" name=\\\"David\\\"/><person id=\\\"5\\\" name=\\\"Emma\\\"/><person id=\\\"6\\\" name=\\\"David\\\"/></root>\") == 5\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person id=\\\"1\\\" name=\\\"John\\\"/><person id=\\\"2\\\" name=\\\"Jane\\\"/><person id=\\\"3\\\" name=\\\"Bob\\\"/><person id=\\\"4\\\" name=\\\"David\\\"/><person id=\\\"5\\\" name=\\\"Emma\\\"/><person id=\\\"6\\\" name=\\\"David\\\"/><person id=\\\"7\\\" name=\\\"Eva\\\"/></root>\") == 5\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root><person id=\\\"1\\\" name=\\\"John\\\"/><person id=\\\"2\\\" name=\\\"Jane\\\"/><person id=\\\"3\\\" name=\\\"Bob\\\"/><person id=\\\"4\\\" name=\\\"David\\\"/><person id=\\\"5\\\" name=\\\"Emma\\\"/><person id=\\\"6\\\" name=\\\"David\\\"/><person id=\\\"7\\\" name=\\\"Eva\\\"/><person id=\\\"8\\\" name=\\\"Emma\\\"/></root>\") == 6",
        "num_ids_2": 130,
        "num_ids_4": 302
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"<?xml version=\"1.0\"?>\n<root>\n    <level1>\n        <level2>\n            <level3>\n                <level4>\n                    <level5>Content</level5>\n                </level4>\n            </level3>\n        </level2>\n    </level1>\n</root>\n\"\"\") == 4\nassert solution(\"\"\"<?xml version=\"1.0\"?>\n<root>\n    <level1>\n        <level2>\n            <level3>\n                <level4>\n                    <level5>Content1</level5>\n                </level4>\n                <level4>\n                    <level5>Content2</level5>\n                </level4>\n            </level3>\n        </level2>\n    </level1>\n</root>\n\"\"\") == 4\nassert solution(\"\"\"<?xml version=\"1.0\"?>\n<root>\n    <level1>\n        <level2>\n            <level3>\n                <level4>\n                    <level5>Content1</level5>\n                </level4>\n                <level4>\n                    <level5>Content2</level5>\n                </level4>\n                <level4>\n                    <level5>Content3</level5>\n                </level4>\n            </level3>\n        </level2>\n    </level1>\n</root>\n\"\"\") == 4\nassert solution(\"\"\"<?xml version=\"1.0\"?>\n<root>\n    <level1>\n        <level2>\n            <level3>\n                <level4>\n                    <level5>Content1</level5>\n                </level4>\n                <level4>\n                    <level5>Content2</level5>\n                </level4>\n                <level4>\n                    <level5>Content3</level5>\n                </level4>\n                <level4>\n                    <level5>Content4</level5>\n                </level4>\n            </level3>\n        </level2>\n    </level1>\n</root>\n\"\"\") == 5",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('<?xml version=\"1.0\"?>\\n<root><a><b><c><d/></c></b></a></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><a><b><c/></b></a><a/><a/></root>') == 2\nassert solution('<?xml version=\"1.0\"?>\\n<root></root>') == 0\nassert solution('<?xml version=\"1.0\"?>\\n<root><a><b><c><d/></c></b></a><a><b><c/></b></a></root>') == 3\nassert solution('<?xml version=\"1.0\"?>\\n<root><a><b/></a><a/><a/></root>') == 0\nassert solution('<?xml version=\"1.0\"?>\\n<root><a><b/></a></root>') == 1\nassert solution('<?xml version=\"1.0\"?>\\n<root><a><b><c><d/></c></b></a><a/><a/></root>') == 3",
        "num_ids_2": 72,
        "num_ids_4": 140
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"test.xml\") == 1\nassert solution(\"nested.xml\") == 2\nassert solution(\"very_nested.xml\") == 3\nassert solution(\"larger_document.xml\") == 4\nassert solution(\"empty.xml\") == 0",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1>test</grandchild1>\\n        <grandchild2>test</grandchild2>\\n    </child1>\\n    <child2>\\n        <grandchild3>test</grandchild3>\\n        <grandchild4>test</grandchild4>\\n    </child2>\\n</root>\") == 4, \"Invalid solution\"\nprint(solution(\"1\\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <child1>\\n        <grandchild1>test</grandchild1>\\n        <grandchild2>test</grandchild2>\\n    </child1>\\n    <child2>\\n        <grandchild3>test</grandchild3>\\n        <grandchild4>test</grandchild4>\\n    </child2>\\n</root>\"))",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 5, \"You are not given the correct input format\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1234567890\\n9876543210\") == \"YES\"\nassert solution(\"123456789\\n9876543210\") == \"NO\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"YES\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123",
        "num_ids_2": 61,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"798101234567890\") == \"YES\"\nassert solution(\"798101234567891\") == \"YES\"\nassert solution(\"798101234567892\") == \"YES\"\nassert solution(\"798101234567893\") == \"YES\"\nassert solution(\"798101234567894\") == \"YES\"\nassert solution(\"798101234567895\") == \"YES\"\nassert solution(\"798101234567896\") == \"YES\"\nassert solution(\"798101234567897\") == \"YES\"\nassert solution(\"798101234567898\") == \"YES\"\nassert solution(\"798101234567899\") == \"YES\"\nassert solution(\"798101234567900\") == \"YES\"\nassert solution(\"798101234567901\") == \"YES\"\nassert solution(\"798101234567902\") == \"YES\"\nassert solution(\"798101234567903\") == \"YES\"\nassert solution(\"798101234567904\") == \"YES\"\nassert solution(\"798101234567905\") == \"YES\"\nassert solution(\"798101234567906\") == \"YES\"\nassert solution(\"798101234567907\") == \"YES\"\nassert solution(\"798101234567908\") == \"YES\"\nassert solution(\"798101234567909\") == \"YES\"\nassert solution(\"798101234567910\") == \"YES\"\nassert solution(\"798101234567911\") == \"YES\"\nassert solution(\"798101234567912\") == \"YES\"\nassert solution(\"798101234567913\") == \"YES\"\nassert solution(\"798101234567914\") == \"YES\"\nassert solution(\"798101234567915\") == \"YES\"\nassert solution(\"798101234567916\") == \"YES\"\nassert solution(\"798101234567917\") == \"YES\"\nassert solution(\"798101234567918\") == \"YES\"\nassert solution(\"798101234567919\") == \"YES\"\nassert solution(\"798101234567920\") == \"YES\"\nassert solution(\"798101234567921\") == \"YES\"\nassert solution(\"798101234567922\") == \"YES\"\nassert solution(\"798101234567923\") == \"YES\"\nassert solution(\"798101234567924\") == \"YES\"\nassert solution(\"798101234567925\") == \"YES\"\nassert solution(\"798101234567926\") == \"YES\"\nassert solution(\"798101234567927\") == \"YES\"\nassert solution(\"798101234567928\") == \"YES\"\nassert solution(\"798101234567929\") == \"YES\"\nassert solution(\"798101234567930\") == \"YES\"\nassert solution(\"798101234567931\") == \"YES\"\nassert solution(\"798101234567932",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"71234567\") == \"YES\"\nassert solution(\"81234567\") == \"YES\"\nassert solution(\"91234567\") == \"YES\"\nassert solution(\"11111111\") == \"NO\"\nassert solution(\"0123456789\") == \"NO\"\nassert solution(\"7123456789\") == \"NO\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1234567890\\n9876543210\\n+919876543210\\n7654321098\\n123456789\\n+919876543210\\n7654321098\\n0987654321\\n+919876543210\\n7654321098\\n+919876543210\\n7654321098') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1234567890\") == \"YES\\n\"\nassert solution(\"1234567891\") == \"NO\\n\"\nassert solution(\"12345678912\") == \"NO\\n\"\nassert solution(\"123456789123\") == \"YES\\n\"\nassert solution(\"1234567891234\") == \"YES\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('12345') == 'YES'\nassert solution('5555555555') == 'YES'\nassert solution('4444444444') == 'NO'\nassert solution('6666666666') == 'YES'\nassert solution('7777777777') == 'NO'\nassert solution('8888888888') == 'YES'\nassert solution('9999999999') == 'NO'",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123\") == \"YES\"\nassert solution(\"4567\") == \"YES\"\nassert solution(\"789\") == \"NO\"\nassert solution(\"1234\") == \"NO\"\nassert solution(\"7890\") == \"YES\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7912345678\") == \"NO\"\nassert solution(\"791234567\") == \"YES\"\nassert solution(\"79123456\") == \"YES\"\nassert solution(\"7912345\") == \"NO\"\nassert solution(\"791234\") == \"NO\"\nassert solution(\"79123\") == \"YES\"\nassert solution(\"7912\") == \"YES\"\nassert solution(\"791\") == \"YES\"\nassert solution(\"79\") == \"YES\"",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1234567890\") == \"YES\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"123456789012\") == \"YES\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"123456789012345\") == \"YES\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"1234567890123456\") == \"YES\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"12345678901234567\") == \"YES\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"123456789012345678\") == \"YES\\nNO\\nYES\\nNO\\nYES\"\nassert solution(\"1234567890123456789\") == \"YES\\nNO\\nYES\\nNO\\nYES\"",
        "num_ids_2": 64,
        "num_ids_4": 137
    },
    {
        "number": 4663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1234567891011121\") == \"YES\"\nassert solution(\"123456789101112\") == \"NO\"\nassert solution(\"12345678910111\") == \"NO\"\nassert solution(\"1234567891011\") == \"YES\"\nassert solution(\"123456789101\") == \"YES\"",
        "num_ids_2": 49,
        "num_ids_4": 94
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '[]\\n'  # Empty set\n\nassert solution() == '[5]\\n'  # Single integer\n\nassert solution() == '[5, 4]\\n'  # Multiple integers\n\nassert solution() == '[5, 4, 9]\\n'  # Duplicates removed\n\nassert solution() == '[5, 4, 9, 11, 12]\\n'  # Symmetric difference\n\nassert solution() == '[5, 4, 9, 11, 12, 2, 3, 4]\\n'  # Intersection and union\n\nassert solution() == '[5, 4, 9, 11, 12, 2, 3, 4, 13, 14]\\n'  # Multiple inputs\n\nassert solution() == '[5, 4, 9, 11, 12, 2, 3, 4, 13, 14, 5, 6, 7, 8, 2, 3, 4]\\n'  # Duplicates and symmetric difference\n\nassert solution() == '[5, 4, 9, 11, 12, 2, 3, 4, 13, 14, 5, 6, 7, 8, 2, 3, 4, 13, 14, 5, 13]\\n'  # All duplicates removed and symmetric difference",
        "num_ids_2": 28,
        "num_ids_4": 66
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 3 2\\n5 4 3 2\\n\") == \"5 4 3 2\"\nassert solution(\"1\\n1\\n\\n\") == \"1\"\nassert solution(\"5\\n4 3 2\\n5 4 3 2\\n1 1\\n\") == \"5 4 3 2\"\nassert solution(\"1\\n1\\n\\n\") == \"1\"",
        "num_ids_2": 51,
        "num_ids_4": 107
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4\n3\n2\n''') == '''\n4\n3\n2\n1\n'''\n\nassert solution('''\n3\n2\n4\n5\n''') == '''\n6\n5\n4\n3\n2\n'''\n\nassert solution('''\n5\n4\n3\n2\n3\n1\n''') == '''\n4\n3\n2\n'''\n\nassert solution('''\n3\n2\n4\n5\n2\n1\n''') == '''\n6\n5\n4\n3\n2\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3 6 8\\n4 7 10\\n5 9 12\\n11 13 14\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n\") == \"1 3 5 7 9\\n1 2 4 6 8\\n\"\nassert solution(\"2 3 4\\n1 2 3\\n5 6 7\\n\") == \"2 3 4\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4\\n3\\n2\\n\") == \"2\\n5\\n1\\n\"\nassert solution(\"5\\n10\\n15\\n5\\n\") == \"10\\n20\\n10\\n5\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"3\\n2\\n1\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 92
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n3\n2 1\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n1\n4\n'''\nassert solution('''\n3\n5 3 4\n4\n2 1 3\n''') == '''\n2\n1\n'''\nassert solution('''\n3",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5\\n4\\n3\\n2\\n'\nassert solution(input()) == '5\\n4\\n3\\n2\\n'\nassert solution(input()) == '5\\n4\\n3\\n2\\n'\nassert solution(input()) == '5\\n4\\n3\\n2\\n'\nassert solution(input()) == '5\\n4\\n3\\n2\\n'",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1\n5\n2\n4\n3\n''') == '''\n5\n4\n3\n2\n'''\n\nassert solution('''\n3\n2\n1\n''') == '''\n1\n2\n3\n'''\n\nassert solution('''\n2\n5\n1\n3\n4\n''') == '''\n1\n2\n3\n4\n5\n'''",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 4 3 2\n4 5 6 7\n1 2 3 4\n\"\"\") == '2 3 5 6 7\\n4 5 6 7'\nassert solution(\"\"\"\n5 4 3 2\n4 5 6 7\n1 2 3 4\n\"\"\") == '2 3 5 6 7\\n4 5 6 7'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nID, MARKS, CLASS, NAME\\n1, 80, Y, John\\n2, 90, T, Jane\\n3, 75, F, Sarah\\n4, 85, T, Bob\\n5, 70, C, Mark\\n6, 95, F, Sarah\\n7, 90, D, Sarah\\n8, 80, C, Sarah\\n9, 75, B, Sarah\\n10, 90, F, Sarah\\n11, 80, C, Sarah') == '92.50'\nassert solution('1\\nID, MARKS, CLASS, NAME\\n1, 80, Y, John\\n2, 90, T, Jane\\n3, 75, F, Sarah\\n4, 85, T, Bob\\n5, 70, C, Mark\\n6, 95, F, Sarah\\n7, 90, D, Sarah\\n8, 80, C, Sarah\\n9, 75, B, Sarah\\n10, 90, F, Sarah\\n11, 80, C, Sarah') == '87.50'\nassert solution('1\\nID, MARKS, CLASS, NAME\\n1, 80, Y, John\\n2, 90, T, Jane\\n3, 75, F, Sarah\\n4, 85, T, Bob\\n5, 70, C, Mark\\n6, 95, F, Sarah\\n7, 90, D, Sarah\\n8, 80, C, Sarah\\n9, 75, B, Sarah\\n10, 90, F, Sarah\\n11, 80, C, Sarah') == '90.00'\nassert solution('1\\nID, MARKS, CLASS, NAME\\n1, 80, Y, John\\n2, 90, T, Jane\\n3, 75, F, Sarah\\n4, 85, T, Bob\\n5, 70, C, Mark\\n6, 95, F, Sarah\\n7, 90, D, Sarah\\n8, 80, C, Sarah\\n9, 75, B, Sarah\\n10, 90, F, Sarah\\n11, 80, C, Sarah') == '85.00'\nassert solution('1\\nID, MARKS, CLASS, NAME\\n1, 80, Y, John\\n2, 90, T, Jane\\n3, 75, F, Sarah\\n4, 85, T, Bob\\n5, 70, C, Mark\\n6, 95, F, Sarah\\n7, 90, D, Sarah\\n8, 80, C, Sarah\\n9, 75, B, Sarah\\n10, 90, F, Sarah\\n11, 80, C, Sarah') == '82.50'",
        "num_ids_2": 310,
        "num_ids_4": 620
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\nnames\\n0\\n0.0\\n1\\n2000\\nJohn\\nFirst\\nLast\\n1\\n1000\\n2\\n3000\\nMary\\nSecond\\nLast\\n3\\n4000\\nSuresh\\nThird\\nLast\\n4\\n5000\\nJohn\\nFourth\\nLast\\n\") == 4000.0\nassert solution(\"0\\nnames\\n0\\n0.0\\n1\\n2000\\nJohn\\nFirst\\nLast\\n1\\n1000\\n2\\n3000\\nMary\\nSecond\\nLast\\n3\\n4000\\nSuresh\\nThird\\nLast\\n4\\n5000\\nJohn\\nFourth\\nLast\\n\") == 3000.0\nassert solution(\"0\\nnames\\n0\\n0.0\\n1\\n2000\\nJohn\\nFirst\\nLast\\n1\\n1000\\n2\\n3000\\nMary\\nSecond\\nLast\\n3\\n4000\\nSuresh\\nThird\\nLast\\n4\\n5000\\nJohn\\nFourth\\nLast\\n\") == 2000.0",
        "num_ids_2": 224,
        "num_ids_4": 336
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution\n",
        "num_ids_2": 3,
        "num_ids_4": 3
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n10\nID,MARKS,CLASS,NAME\n1,50,Math,John\n2,60,English,Mary\n3,80,Science,David\n4,70,Math,William\n5,85,Science,Sarah\n6,90,Science,Emma\n7,80,Math,Judy\n8,95,English,Michael\n9,75,Science,Brian\n10,90,Science,Leonardo\n''') == '54.0'\n\nassert solution(r'''\n2\nID,NAME\n1,Alice\n2,Bob\n3,Charlie\n4,David\n5,Eve\n6,Frank\n7,Grace\n8,Hannah\n9,Ivan\n10,Jack\n''') == '48.0'\n\nassert solution(r'''\n3\nID,NAME,MARKS\n1,Alice,50\n2,Bob,60\n3,Charlie,80\n4,David,70\n5,Eve,85\n6,Frank,90\n7,Grace,80\n8,Hannah,95\n9,Ivan,75\n10,Jack,90\n''') == '46.7'\n\nassert solution(r'''\n2\nID,NAME\n1,Alice,50\n2,Bob,60\n3,Charlie,80\n4,David,70\n5,Eve,85\n6,Frank,90\n7,Grace,80\n8,Hannah,95\n9,Ivan,75\n10,Jack,90\n''') == '48.0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3.33'\nassert solution() == '3.33'\nassert solution() == '3.33'\nassert solution() == '3.33'\nassert solution() == '3.33'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nID,MARKS,CLASS,NAME\\n1,90,Y,John\\n2,80,Y,Jane\\n3,95,X,Bob\\n4,85,X,Sarah') == 92.5\nassert solution('5\\nID,MARKS,CLASS,NAME\\n1,90,Y,John\\n2,80,Y,Jane\\n3,95,X,Bob\\n4,85,X,Sarah') == 92.5",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"The average marks of the list are: 80.0\", \"Incorrect solution\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\nID,MARKS,CLASS,NAME\\n1,25,Science,John\\n2,30,Math,Jane\\n3,27,English,Sarah\\n4,25,Science,David\\n5,30,Math,Tom\\n') == '30.00'\nassert solution('1\\nID,MARKS,CLASS,NAME\\n1,25,Science,John\\n2,30,Math,Jane\\n3,27,English,Sarah\\n4,25,Science,David\\n5,30,Math,Tom\\n') == '25.00'\nassert solution('1\\nID,MARKS,CLASS,NAME\\n1,25,Science,John\\n2,30,Math,Jane\\n3,27,English,Sarah\\n4,25,Science,David\\n5,30,Math,Tom\\n') == '28.00'\nassert solution('1\\nID,MARKS,CLASS,NAME\\n1,25,Science,John\\n2,30,Math,Jane\\n3,27,English,Sarah\\n4,25,Science,David\\n5,30,Math,Tom\\n') == '30.00'",
        "num_ids_2": 156,
        "num_ids_4": 312
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\\nname1,marks1,class1,name2,marks2,class2,name3,marks3,class3\\n1,20,Math,5,20,Science,60,English,70\") == \"35.0\"\nassert solution(\"0\\nname1,marks1,class1,name2,marks2,class2,name3,marks3,class3\\n1,20,Math,5,20,Science,60,English,70\") == \"35.0\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Solution: Answer here'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Weird\"\nassert solution(\"3\") == \"Not Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"13\") == \"Not Weird\"\nassert solution(\"20\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Weird\", \"Test case 1 failed\"\nassert solution(\"3\") == \"Weird\", \"Test case 2 failed\"\nassert solution(\"5\") == \"Not Weird\", \"Test case 3 failed\"\nassert solution(\"123\") == \"Not Weird\", \"Test case 4 failed\"\nassert solution(\"21\") == \"Weird\", \"Test case 5 failed\"\n",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Not Weird\"\nassert solution(\"10\") == \"Not Weird\"\nassert solution(\"15\") == \"Not Weird\"\nassert solution(\"21\") == \"Not Weird\"\nassert solution(\"25\") == \"Weird\"\nassert solution(\"30\") == \"Not Weird\"\nassert solution(\"60\") == \"Weird\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"Weird\" # Check if n is odd\nassert solution(7) == \"Not Weird\" # Check if n is even and in the inclusive range of 2 to 5\nassert solution(11) == \"Weird\" # Check if n is even and in the inclusive range of 6 to 20\nassert solution(21) == \"Not Weird\" # Check if n is even and greater than 20",
        "num_ids_2": 46,
        "num_ids_4": 101
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"Weird\"\nassert solution(15) == \"Weird\"\nassert solution(21) == \"Weird\"\nassert solution(25) == \"Not Weird\"\nassert solution(26) == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"Not Weird\"\nassert solution(\"1\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"34\") == \"Not Weird\"\nassert solution(\"22\") == \"Not Weird\"\nassert solution(\"20\") == \"Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Incorrect output, expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter a positive integer: \")) == \"Not Weird\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Not Weird\"\nassert solution(\"10\") == \"Weird\"\nassert solution(\"21\") == \"Not Weird\"\nassert solution(\"25\") == \"Not Weird\"\nassert solution(\"26\") == \"Not Weird\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Not Weird\"\nassert solution(\"1\") == \"Weird\"\nassert solution(\"3\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"23\") == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Incorrect output\"  # Add your solution here",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"The score of the given XML document is: 11\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0 # Testcase 1\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\") == 0 # Testcase 2\nassert solution(\"<root><element/><element/><element/></root>\") == 5 # Testcase 3\nassert solution(\"<root><element/><element/><element/><element/></root>\") == 13 # Testcase 4\nassert solution(\"<root><element/><element/><element/><element/><element/></root>\") == 21 # Testcase 5",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(XML_DOCUMENT) == 'Score: 3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\") == 19, \"The score of the given XML document is not correct.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>The Hitchhiker's Guide to the Galaxy</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\") == 31, \"The score of the given XML document is not correct.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>The Hitchhiker's Guide to the Galaxy</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\") == 31, \"The score of the given XML document is not correct.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>The Hitchhiker's Guide to the Galaxy</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\") == 31, \"The score of the given XML document is not correct.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>The Hitchhiker's Guide to the Galaxy</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\\n<book>\\n  <title>To Kill a Mockingbird</title>\\n  <author><NAME></author>\\n  <publication_date>July 18, 2001</publication_date>\\n</book>\") == 31, \"The score of the given XML document is not correct.\"",
        "num_ids_2": 237,
        "num_ids_4": 690
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <name>John</name>\\n    <age>25</age>\\n    <city>New York</city>\\n    <country>USA</country>\\n    <address>123 Main St</address>\\n    <phone>555-1234</phone>\\n    <email><EMAIL></email>\\n    <location>\\n        <latitude>40.7128</latitude>\\n        <longitude>-74.0060</longitude>\\n    </location>\\n</root>\") == 12\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <name>John</name>\\n    <age>25</age>\\n    <city>New York</city>\\n    <country>USA</country>\\n    <address>123 Main St</address>\\n    <phone>555-1234</phone>\\n    <email><EMAIL></email>\\n    <location>\\n        <latitude>40.7128</latitude>\\n        <longitude>-74.0060</longitude>\\n        <zip>10021</zip>\\n    </location>\\n</root>\") == 16\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <name>John</name>\\n    <age>25</age>\\n    <city>New York</city>\\n    <country>USA</country>\\n    <address>123 Main St</address>\\n    <phone>555-1234</phone>\\n    <email><EMAIL></email>\\n    <location>\\n        <latitude>40.7128</latitude>\\n        <longitude>-74.0060</longitude>\\n        <zip>10021</zip>\\n        <state>CA</state>\\n    </location>\\n</root>\") == 20\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <name>John</name>\\n    <age>25</age>\\n    <city>New York</city>\\n    <country>USA</country>\\n    <address>123 Main St</address>\\n    <phone>555-1234</phone>\\n    <email><EMAIL></email>\\n    <location>\\n        <latitude>40.7128</latitude>\\n        <longitude>-74.0060</longitude>\\n        <zip>10021</zip>\\n        <state>CA</state>\\n        <city>San Francisco</city>\\n    </location>\\n</root>\") == 25\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <name>John</name>\\n    <age>25</age>\\n    <city>New York</city>\\n    <country>USA</country>\\n    <address>123 Main St</address>\\n    <phone>555-1234</phone>\\n    <email><EMAIL></email>\\n    <location>\\n        <latitude>40.7128</latitude>\\n        <longitude>-74.0060</longitude>\\n        <zip>10021</zip>\\n        <state>CA</state>\\n        <city>San Francisco</city>\\n        <country>Canada</country>\\n    </location>\\n</root>\") == 30\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<root>\\n    <name>John</name>\\n    <age>25</age>\\n    <city>New York</city>\\n    <country>USA</country>\\n    <address>123 Main St</address>\\n    <phone>555-1234</phone>\\n    <email><EMAIL></email>\\n    <location>\\n        <latitude>40.7128</latitude>\\n        <longitude>-74.0060</longitude>\\n        <zip>10021</zip>\\n        <state>CA",
        "num_ids_2": 309,
        "num_ids_4": 659
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<bookstore>\\n<book id=\\\"1\\\" author=\\\"John\\\" title=\\\"The Catcher in the Rye\\\">\\n<price>12.99</price>\\n<category>Fantasy</category>\\n</book>\\n<book id=\\\"2\\\" author=\\\"Jane\\\" title=\\\"To Kill a Mockingbird\\\">\\n<price>9.99</price>\\n<category>Fiction</category>\\n</book>\\n</bookstore>\") == \"29\", \"Solution 1 is incorrect.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<bookstore>\\n<book id=\\\"1\\\" author=\\\"John\\\" title=\\\"The Catcher in the Rye\\\">\\n<price>12.99</price>\\n<category>Fantasy</category>\\n</book>\\n<book id=\\\"2\\\" author=\\\"Jane\\\" title=\\\"To Kill a Mockingbird\\\">\\n<price>9.99</price>\\n<category>Fiction</category>\\n</book>\\n</bookstore>\") == \"18\", \"Solution 2 is incorrect.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<bookstore>\\n<book id=\\\"1\\\" author=\\\"John\\\" title=\\\"The Catcher in the Rye\\\">\\n<price>12.99</price>\\n<category>Fantasy</category>\\n</book>\\n<book id=\\\"2\\\" author=\\\"Jane\\\" title=\\\"To Kill a Mockingbird\\\">\\n<price>9.99</price>\\n<category>Fiction</category>\\n</book>\\n</bookstore>\") == \"37\", \"Solution 3 is incorrect.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<bookstore>\\n<book id=\\\"1\\\" author=\\\"John\\\" title=\\\"The Catcher in the Rye\\\">\\n<price>12.99</price>\\n<category>Fantasy</category>\\n</book>\\n<book id=\\\"2\\\" author=\\\"Jane\\\" title=\\\"To Kill a Mockingbird\\\">\\n<price>9.99</price>\\n<category>Fiction</category>\\n</book>\\n</bookstore>\") == \"54\", \"Solution 4 is incorrect.\"\nassert solution(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<bookstore>\\n<book id=\\\"1\\\" author=\\\"John\\\" title=\\\"The Catcher in the Rye\\\">\\n<price>12.99</price>\\n<category>Fantasy</category>\\n</book>\\n<book id=\\\"2\\\" author=\\\"Jane\\\" title=\\\"To Kill a Mockingbird\\\">\\n<price>9.99</price>\\n<category>Fiction</category>\\n</book>\\n</bookstore>\") == \"67\", \"Solution 5 is incorrect.\"",
        "num_ids_2": 266,
        "num_ids_4": 532
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>To Kill a Mockingbird</title>\\n<author>J.D. Salinger</author>\\n<price>4.99</price>\\n</book>') == 21\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>Animal Farm</title>\\n<author>J.D. Salinger</author>\\n<price>4.99</price>\\n<publisher>HarperCollins</publisher>\\n</book>') == 23\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>Animal Farm</title>\\n<author>J.D. Salinger</author>\\n<price>4.99</price>\\n<publisher>HarperCollins</publisher>\\n<price>3.99</price>\\n</book>') == 23\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>Animal Farm</title>\\n<author>J.D. Salinger</author>\\n<price>4.99</price>\\n<publisher>HarperCollins</publisher>\\n<price>4.99</price>\\n<price>3.99</price>\\n</book>') == 24\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<book>\\n<title>Animal Farm</title>\\n<author>J.D. Salinger</author>\\n<price>4.99</price>\\n<publisher>HarperCollins</publisher>\\n<price>4.99</price>\\n<price>4.99</price>\\n<price>3.99</price>\\n</book>') == 24",
        "num_ids_2": 145,
        "num_ids_4": 332
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('') == 0, 'Empty document should have score of 0'\nassert solution('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n</root>') == 0, 'Empty document should have score of 0'\nassert solution('<root><a/><b/></root>') == 2, 'Element with 2 attributes should have score of 2'\nassert solution('<root><a/><b/><c/></root>') == 3, 'Element with 3 attributes should have score of 3'\nassert solution('<root><a/><b/><c/><d/></root>') == 4, 'Element with 4 attributes should have score of 4'\nassert solution('<root><a/><b/><c/><d/><e/></root>') == 5, 'Element with 5 attributes should have score of 5'",
        "num_ids_2": 59,
        "num_ids_4": 119
    },
    {
        "number": 4667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='val1' attr2='val2'>\\n<grandchild attr3='val3'>\\n<g grandchild1='val4'>\\n</root>\") == 3\n\nassert solution(\"<?xml version='1.0' encoding='UTF-8'?>\\n<root>\\n<child attr1='val1'>\\n<grandchild attr3='val3'>\\n<g grandchild1='val4'>\\n</root>\") == 2",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"31.5\"\nassert solution(\"1 2 3 4 6\") == \"31.5\"\nassert solution(\"1 2 3 4 7\") == \"351.5\"\nassert solution(\"1 2 3 4 8\") == \"351.5\"\nassert solution(\"1 2 3 4 9\") == \"391.5\"",
        "num_ids_2": 42,
        "num_ids_4": 86
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12.34\", \"Test Case 1\"\nassert solution(stdin) == \"36.71\", \"Test Case 2\"\nassert solution(stdin) == \"45.12\", \"Test Case 3\"\nassert solution(stdin) == \"50.00\", \"Test Case 4\"\nassert solution(stdin) == \"0.00\", \"Test Case 5\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"30.00\"\nassert solution(\"1 0 3 4 5\") == \"45.00\"\nassert solution(\"1 3 2 4 5\") == \"15.00\"\nassert solution(\"1 1 3 4 5\") == \"22.50\"\nassert solution(\"1 0 3 4 6\") == \"45.00\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == 12.999999999999999, \"The angle between the plane made by the points A, B, C, and D in degrees(not radians) is not correct.\"\nassert solution('2 3 4 5 6 7 8 9 10') == 66.66666666666667, \"The angle between the plane made by the points A, B, C, and D in degrees(not radians) is not correct.\"\nassert solution('0 0 0 0 0 0 0 0 0') == 0, \"The angle between the plane made by the points A, B, C, and D in degrees(not radians) is not correct.\"\nassert solution('1 0 0 0 0 0 0 0 0') == 180, \"The angle between the plane made by the points A, B, C, and D in degrees(not radians) is not correct.\"\nassert solution('1 1 1 1 1 1 1 1 1') == 45, \"The angle between the plane made by the points A, B, C, and D in degrees(not radians) is not correct.\"",
        "num_ids_2": 142,
        "num_ids_4": 252
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0\") == \"0\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n1\") == \"0\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n2\") == \"0\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n3\") == \"90\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n4\") == \"180\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n5\") == \"270\"",
        "num_ids_2": 108,
        "num_ids_4": 217
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"31.0\"\nassert solution() == \"32.0\"\nassert solution() == \"33.0\"\nassert solution() == \"34.0\"\nassert solution() == \"35.0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.0 4.0 6.0 8.0\") == \"60.0\", \"Output should be 60.0\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"360.0\", \"Output should be 360.0\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"180.0\", \"Output should be 180.0\"\nassert solution(\"-2.0 -4.0 -6.0 -8.0\") == \"-60.0\", \"Output should be -60.0\"\nassert solution(\"0.0 -0.0 -0.0 -0.0\") == \"0.0\", \"Output should be 0.0\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output the angle correct up to two decimal places.', \"The given code is not testing the correctness of solution.\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4 5\") == 45.0\nassert solution(\"1 2 3 4\") == 22.5\nassert solution(\"0 0 0 0\") == 0.0\nassert solution(\"10 5 10 15\") == 25.0\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\napple\\nbanana\\norange\\n\") == \"3\"\nassert solution(\"5\\ncat\\nsand\\nbag\\n\") == \"5\"\nassert solution(\"10\\napple\\nbanana\\norange\\nu\\n\") == \"1\"\nassert solution(\"5\\nbanana\\nsand\\nbag\\n\") == \"5\"\nassert solution(\"5\\napple\\nbanana\\norange\\ny\\n\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}\\nExpected Output: {expected_output}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"15\\n\"\nassert solution(\"apple\") == \"2\\n\"\nassert solution(\"banana\") == \"3\\n\"\nassert solution(\"cherry\") == \"4\\n\"\nassert solution(\"apple banana cherry\") == \"22\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\neveryday\\ncall\\n') == '10'\nassert solution('2\\nthis\\nworld\\n') == '11'\nassert solution('2\\napple\\norange\\n') == '8'\nassert solution('2\\ncat\\ndog\\n') == '7'\nassert solution('2\\nhello\\nworld\\n') == '9'",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"The score of a single word is 2 if the word contains an even number of vowels. Otherwise, the score of this word is 1. The score for the whole list of words is the sum of scores of all words in the list.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\napple\\nbanana\\nbanana\\nbanana\\n\") == 8\nprint(\"Test Passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 3 4 5 2\") == \"2\"\nassert solution(\"2 4 5 3 1\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\napple\\nbanana\\nbanana\\n\") == \"1\\n\"\nassert solution(\"3\\ncat\\ndog\\ndog\\n\") == \"3\\n\"\nassert solution(\"4\\npython\\njavascript\\njava\\npython\\n\") == \"4\\n\"\nassert solution(\"5\\n1234567890\\n1234567890\\n1234567890\\n1234567890\\n\") == \"5\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 136
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\napple\\nbanana\\nbananas\\n\") == \"2\\n1\\n4\\n3\\n\"\nassert solution(\"2\\napple\\nbanana\\n\") == \"1\\n1\\n\"\nassert solution(\"3\\napple\\nbanana\\nbananas\\n\") == \"1\\n3\\n5\\n\"\nassert solution(\"4\\napple\\nbanana\\nbananas\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"5\\napple\\nbanana\\nbananas\\n\") == \"2\\n1\\n4\\n3\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 120
    },
    {
        "number": 4669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\neven\\napple\\norange\\nfive\\nsun\\n\") == \"4\"\nassert solution(\"5\\none\\ntwo\\nthree\\nfive\\nsix\\n\") == \"7\"\nassert solution(\"5\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\") == \"13\"",
        "num_ids_2": 53,
        "num_ids_4": 118
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"I\") == \"True\"\nassert solution(\"II\") == \"True\"\nassert solution(\"III\") == \"True\"\nassert solution(\"IV\") == \"True\"\nassert solution(\"V\") == \"True\"\nassert solution(\"VI\") == \"True\"\nassert solution(\"VII\") == \"True\"\nassert solution(\"VIII\") == \"True\"\nassert solution(\"IX\") == \"True\"\nassert solution(\"X\") == \"True\"\nassert solution(\"XI\") == \"True\"\nassert solution(\"XII\") == \"True\"\nassert solution(\"XIII\") == \"True\"\nassert solution(\"XIV\") == \"True\"\nassert solution(\"XV\") == \"True\"\nassert solution(\"XX\") == \"True\"\nassert solution(\"XXI\") == \"True\"\nassert solution(\"XXII\") == \"True\"\nassert solution(\"XXIII\") == \"True\"\nassert solution(\"XXIV\") == \"True\"\nassert solution(\"XXV\") == \"True\"\nassert solution(\"XXVI\") == \"True\"\nassert solution(\"XXVII\") == \"True\"\nassert solution(\"XXVIII\") == \"True\"\nassert solution(\"XXIX\") == \"True\"\nassert solution(\"XXX\") == \"True\"\nassert solution(\"XXXI\") == \"True\"\nassert solution(\"XXXII\") == \"True\"\nassert solution(\"XXXIII\") == \"True\"\nassert solution(\"XXXIV\") == \"True\"\nassert solution(\"XXXV\") == \"True\"\nassert solution(\"XXXVI\") == \"True\"\nassert solution(\"XXXVII\") == \"True\"\nassert solution(\"XXXVIII\") == \"True\"\nassert solution(\"XXXIX\") == \"True\"\nassert solution(\"XL\") == \"True\"\nassert solution(\"XLI\") == \"True\"\nassert solution(\"XLII\") == \"True\"\nassert solution(\"XLIII\") == \"True\"\nassert solution(\"XLIV\") == \"True\"\nassert solution(\"XLV\") == \"True\"\nassert solution(\"XLIX\") == \"True\"\nassert solution(\"L\") == \"True\"\nassert solution(\"LI\") == \"True\"\nassert solution(\"LII\") == \"True\"\nassert solution(\"LIII\") == \"True\"\nassert solution(\"LIV\") == \"True\"\nassert solution(\"LV\") == \"True\"\nassert solution(\"LIX\") == \"True\"\nassert solution(\"X\") == \"False\"\nassert solution(\"XI\") == \"False\"\nassert solution(\"XII\") == \"False\"\nassert solution(\"XIII\") == \"False\"\nassert solution(\"XIV\") == \"False\"\nassert solution(\"XV\") == \"False\"\nassert solution(\"XX\") == \"False\"\nassert solution(\"XXI\") == \"False\"\nassert solution(\"XXII\") == \"False\"\nassert solution(\"XXIII\") == \"False\"\nassert solution(\"XXIV\") == \"False\"\nassert solution(\"XXV\") == \"False\"\nassert solution(\"XXVI\") == \"False\"\nassert solution(\"XXVII\") == \"False\"\nassert solution(\"XXVIII\") == \"False\"\nassert solution(\"XXIX\") == \"False\"\nassert solution(\"XXX\") == \"False\"\nassert solution(\"XXXI\") == \"False\"\nassert solution(\"XXXII\") == \"False\"\nassert solution(\"XXXIII\") == \"False\"\nassert solution(\"XXXIV\") == \"False\"\nassert solution(\"XXXV\") == \"False\"\nassert solution(\"XXXVI\") == \"False\"\nassert solution(\"XXXVII\") == \"False\"\nassert solution(\"XXXVIII\") == \"False\"\nassert solution(\"XXXIX\") == \"False\"\nassert solution(\"XL\") == \"False\"\nassert solution(\"XLI\") == \"False\"\nassert solution(\"XLII\") == \"False\"\nassert solution(\"XLIII\") == \"False\"\nassert solution(\"XLIV\") == \"False\"\nassert solution(\"XLV\") == \"False\"\nassert solution(\"XLIX\") == \"False\"\nassert solution(\"L\") == \"False\"\nassert solution(\"LI\") == \"False\"\nassert solution(\"LII\") == \"False\"\nassert solution(\"LIII\") == \"False\"\nassert solution(\"LIV\") == \"False\"\nassert solution(\"LV\") == \"False\"\nassert solution(\"LIX\") == \"False\"\nassert solution(\"X\") == \"False\"\nassert solution(\"XI\") == \"False\"\nassert solution(\"XII\") == \"False\"\nassert solution(\"XIII\") == \"False\"\nassert solution(\"XIV\") == \"False\"\nassert solution(\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"IV\") == True, \"Invalid Roman numeral\"\nassert solution(\"IVIII\") == True, \"Invalid Roman numeral\"\nassert solution(\"IX\") == True, \"Invalid Roman numeral\"\nassert solution(\"LVIII\") == False, \"Valid Roman numeral\"\nassert solution(\"MCMXCIV\") == False, \"Invalid Roman numeral\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('III') == True, \"Invalid input\"\nassert solution('IV') == True, \"Invalid input\"\nassert solution('IX') == True, \"Invalid input\"\nassert solution('LVIII') == True, \"Invalid input\"\nassert solution('MCMXCIV') == True, \"Invalid input\"\nassert solution('MCMXCIV') == True, \"Invalid input\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"MCMXCIV\") == True, \"Incorrectly returned False\"\nassert solution(\"MMCMXCIV\") == False, \"Incorrectly returned True\"\nassert solution(\"MMMCMXCIX\") == True, \"Incorrectly returned False\"\nassert solution(\"MMMMMCXCIX\") == False, \"Incorrectly returned True\"\nassert solution(\"MMMCMXCIXIX\") == True, \"Incorrectly returned False\"\nassert solution(\"MMMMMCXCIV\") == False, \"Incorrectly returned True\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"MCMXC\") == True, \"Expected True, got False\"\nassert solution(\"MDCCCLXXIX\") == True, \"Expected True, got False\"\nassert solution(\"MMMCMXCIX\") == True, \"Expected True, got False\"\nassert solution(\"XXXXIX\") == False, \"Expected False, got True\"\nassert solution(\"MCMLXXXIV\") == False, \"Expected False, got True\"",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"I\") == \"True\"\nassert solution(\"V\") == \"True\"\nassert solution(\"X\") == \"True\"\nassert solution(\"L\") == \"True\"\nassert solution(\"C\") == \"False\"\nassert solution(\"M\") == \"False\"\nassert solution(\"D\") == \"False\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"MCMLXXXIV\") == \"True\"\nassert solution(\"MCMLXXXV\") == \"False\"\nassert solution(\"MCMLXXVI\") == \"False\"\nassert solution(\"MMCDXCIX\") == \"True\"\nassert solution(\"MMMCMXCIX\") == \"False\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"III\") == True\nassert solution(\"IV\") == True\nassert solution(\"IX\") == True\nassert solution(\"XL\") == True\nassert solution(\"CD\") == False\nassert solution(\"MCMXCIV\") == True\nassert solution(\"MCMLXXXIV\") == True\nassert solution(\"MMMCMXCIX\") == False",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"MCMXCIV\") == True, \"The string 'MCMXCIV' is not a valid Roman numeral.\"\nassert solution(\"MMMIV\") == True, \"The string 'MMMIV' is not a valid Roman numeral.\"\nassert solution(\"CMX\") == False, \"The string 'CMX' is a valid Roman numeral.\"\nassert solution(\"MM\") == False, \"The string 'MM' is a valid Roman numeral.\"\nassert solution(\"CD\") == False, \"The string 'CD' is a valid Roman numeral.\"",
        "num_ids_2": 56,
        "num_ids_4": 102
    },
    {
        "number": 4670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"MCMXC\") == True\nassert solution(\"MCMLXXXVIII\") == True\nassert solution(\"MCMXCML\") == False\nassert solution(\"MMIX\") == False\nassert solution(\"MMMCMXCIX\") == True",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n91112223333\\n9876543210\") == \"+91 1122 3333\\n9876543210\"\nassert solution(\"2\\n1234567890\\n9876543210\\n+91 1234567890\") == \"+91 1234 5678\\n9876543210\\n+91 1234 5678\"\nassert solution(\"3\\n91112223333\\n9876543210\\n9999999999\\n0\") == \"+91 1122 3333\\n9876543210\\n9999999999\\n0\"\nassert solution(\"4\\n91112223333\\n9876543210\\n9999999999\\n0\\n+91 1234567890\") == \"+91 1234 5678\\n9876543210\\n9999999999\\n0\\n+91 1234 5678\"\nassert solution(\"5\\n91112223333\\n9876543210\\n9999999999\\n0\\n+91 1234567890\\n9999999999\\n0\\n+91 1234 5678\\n9876543210\") == \"+91 1234 5678\\n9876543210\\n9999999999\\n0\\n+91 1234 5678\\n9999999999\"",
        "num_ids_2": 146,
        "num_ids_4": 353
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == [\"+91 123 456\", \"+91 765 4321\", \"+91 987 6543\", \"+91 123 4567\", \"+91 098 7654\", \"+91 456 7890\"]\nassert solution(\"10\") == [\"+91 123456\", \"+91 7654321\", \"+91 9876543\", \"+91 1234567\", \"+91 0987654\", \"+91 4567890\", \"+91 6789012\"]",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '91 xxxxx xxxxx'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1234567890\") == \"+91 1234567890\"\nassert solution(\"0123456789\") == \"0123456789\"\nassert solution(\"1234567891\") == \"+91 1234567891\"\nassert solution(\"9876543210\") == \"+91 9876543210\"",
        "num_ids_2": 59,
        "num_ids_4": 121
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5') == '+91 000 000 000'\nassert solution('9') == '+91 123 456 789'\nassert solution('1') == '000 123 456 789'\nassert solution('3') == '+91 098 765 432'\nassert solution('6') == '+91 000 000 000'",
        "num_ids_2": 46,
        "num_ids_4": 93
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1234567890') == '+91 234567890\\n+91 1234567890\\n+91 0123456789\\n+91 9876543210\\n+91 8765432101\\n'\nassert solution('123456789012345') == '+91 2345678901\\n+91 12345678901\\n+91 01234567891\\n+91 98765432101\\n+91 87654321012\\n'\nassert solution('1234567890123456') == '+91 23456789012\\n+91 123456789012\\n+91 012345678912\\n+91 987654321012\\n+91 876543210123\\n'\nassert solution('12345678901234567') == '+91 234567890123\\n+91 1234567890123\\n+91 0123456789123\\n+91 9876543210123\\n+91 8765432101234\\n'\nassert solution('123456789012345678') == '+91 2345678901234\\n+91 12345678901234\\n+91 01234567891234\\n+91 98765432101234\\n+91 87654321012345\\n'\nassert solution('1234567890123456789') == '+91 23456789012345\\n+91 123456789012345\\n+91 012345678912345\\n+91 987654321012345\\n+91 876543210123456\\n'",
        "num_ids_2": 202,
        "num_ids_4": 432
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''+91 919191 919191\n+91 123456 789012\n+91 098765 432109\n+91 12345678 901234\n+91 555555555555\n+91 1234567890 1234567890\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"91 xxxxx xxxxx\\n91 23456 7890\\n0987654321\\n1234567890\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n+91 1234567890\\n91 1234567890\\n091 1234567890\\n891 1234567890\") == \"91 1234567890\\n891 1234567890\\n+91 1234567890\\n7 1234567890\\n091 1234567890\"\nassert solution(\"2\\n0091 1234567890\\n+91 1234567890\\n91 1234567890\") == \"91 1234567890\\n+91 1234567890\\n0091 1234567890\"",
        "num_ids_2": 250,
        "num_ids_4": 250
    },
    {
        "number": 4671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n+91 1234567890\\n0987654321\\n2345678901\\n+91 5678901234\\n\") == \"0987654321 1234567890 2345678901 +91 5678901234\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution.solution == \"The average of the marks obtained by the particular student correct to 2 decimal places.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name beta\") == \"50.00\"\nassert solution(\"4\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name gamma\") == \"47.50\"\nassert solution(\"4\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name delta\") == \"40.00\"\nassert solution(\"5\\nalpha 20 30 40 50\\nbeta 30 50 70 80\\nquery_name gamma\") == \"47.00\"\nassert solution(\"6\\nalpha 20 30 40 50 60\\nbeta 30 50 70 80 90\\nquery_name gamma\") == \"48.50\"",
        "num_ids_2": 88,
        "num_ids_4": 182
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name beta\\n\") == \"50.00\"\nassert solution(\"1\\nquery_name alpha\\n\") == \"50\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name: beta\\n') == '50.00'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\nalpha: 20 30 40\\nbeta: 30 50 70\\nquery_name: beta\\n') == '50\\n'\nassert solution('2\\nalpha: 20 30 40\\nbeta: 30 50 70\\nquery_name: alpha\\n') == '30.0\\n'",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nalpha: [20,30,40]\\nbeta: [30,50,70]\\nquery_name = beta\\n\\n') == 'The average of the marks obtained by the particular student correct to 2 decimal places.\\n50\\n'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'The average of the marks obtained by the particular student correct to 2 decimal places.\\n', 'The code provided is not correct.'\n\n```python\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\nalpha 20 30 40\\nbeta 30 50 70\\nquery_name beta\\n') == '50.00'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_format) == output_format\n\ninput_format = \"\"\"\n3\nalpha 20\nbeta 30\ngamma 40\nquery_name beta\n\"\"\"\n\noutput_format = \"\"\"\nThe average of the marks obtained by the particular student correct to 2 decimal places.\n\"\"\"\n\nprint(solution(input_format))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 Peter 25 M\n    2 Alice 22 F\n    3 Bob 24 M\n    4 Charlie 21 F\n    5 David 23 M\n    \"\"\"\n) == \"Mr. Henry Davids\\nMs. Mary George\"\n\nassert solution(\n    \"\"\"\n    4\n    1 Peter 25 M\n    2 Alice 22 F\n    3 Bob 24 M\n    4 Charlie 21 F\n    5 David 23 M\n    \"\"\"\n) == \"Ms. Mary George\\nMr. Henry Davids\"\n\nassert solution(\n    \"\"\"\n    2\n    1 Peter 25 M\n    2 Alice 22 F\n    3 Bob 24 M\n    4 Charlie 21 F\n    5 David 23 M\n    \"\"\"\n) == \"Ms. Mary George\\nMs. Mary George\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\nGeorge Fletcher 30\nM\nRoger Smith 20\nF\nHarper Lee 25\nM\nJohnson 25\nF\nJames Garcia 30\nF\nErickson 20\n\"\"\") == \"\"\"\nMr. Henry Davids\nMs. Mary George\n\"\"\"\n\nassert solution(\"\"\"\n2\nAnna Davis 25\nF\nRita Parker 20\nM\nEmily Davis 25\nM\nDoris Salinger 25\n\"\"\") == \"\"\"\nMr. Anna Davis\nMs. Doris Salinger\n\"\"\"\n\nassert solution(\"\"\"\n3\nAndy Brown 25\nM\nEmily Lee 25\nM\nSam Davis 25\n\"\"\") == \"\"\"\nMr. Andy Brown\nMs. Emily Lee\n\"\"\"\n\nassert solution(\"\"\"\n4\nKevin Brown 30\nM\nEmily Lee 30\nM\nSam Davis 30\nF\nSamantha Salinger 25\nF\nEmily Lee 25\nF\nSamantha Salinger 25\n\"\"\") == \"\"\"\nMr. Kevin Brown\nMs. Emily Lee\nMs. Samantha Salinger\n\"\"\"\n\nassert solution(\"\"\"\n5\nMichael Brown 25\nM\nEmily Lee 25\nM\nSam Davis 25\nF\nSamantha Salinger 25\n\"\"\") == \"\"\"\nMr. Michael Brown\nMs. Emily Lee\nMs. Samantha Salinger\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nHenry\\nDavid\\nMary\\nGeorge\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"10\\nEmma\\nJane\\nDavid\\nEmma\\nJohn\\nPeter\\n\") == \"Emma John Peter\\nEmma Jane David\\n\"\nassert solution(\"4\\nAlice\\nBob\\nCharlie\\n\") == \"Alice Bob Charlie\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 115
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Harry Potter\\nAlice\\nBob\\nCharlie\\nDavid\\nEve\") == \"Mr. Henry Davids\\nMr. Mary George\\nMs. Alice\\nMs. Bob\\nMs. Charlie\\nMs. David\\nMs. Eve\\nMs. Harry Potter\"\nassert solution(\"George\\nAlice\\nBob\\nCharlie\\nDavid\\nEve\") == \"Ms. Eve\\nMs. George\\nMr. Alice\\nMr. Bob\\nMr. Charlie\\nMr. David\\nMs. Charlie\\nMs. Eve\\nMs. George\"\nassert solution(\"John\\nMark\\nJane\\nJohn\\nMike\\nJane\") == \"Mr. John\\nMr. Jane\\nMs. Jane\\nMr. Mike\\nMs. John\"\nassert solution(\"Jane\\nMark\\nJohn\\nJane\\nMike\\nJane\") == \"Ms. John\\nMs. Jane\\nMr. Jane\\nMs. Mike\\nMr. John\"",
        "num_ids_2": 155,
        "num_ids_4": 262
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('') == 'Please enter the input'\nassert solution('1\\n') == 'Please enter the input'\nassert solution('2\\nJohn\\nSmith\\n22\\nF\\nJohn\\nSmith\\n20\\nF\\n') == 'Please enter the input'",
        "num_ids_2": 26,
        "num_ids_4": 69
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"Mr. Henry Davids\\nMr. Roger Johnson\\nMr. William Hill\\nMs. David Brown\\nMs. George Lee\\nMs. John Wilson\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Mr. Henry Davids\\nMr. Jane Doe'\nassert solution(input()) == 'Ms. Mary George\\nMs. John Doe'\nassert solution(input()) == 'Mr. John Doe\\nMr. Jane Doe'",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('') == ''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n10\nHenry Davids 25 \nMary George 20\nJohn Doe 25 \nJane Smith 20\n''') == '''\nMr. Henry Davids\nMs. Mary George\n''', \"Test case 1\"\n\nassert solution('''\n5\nAlice 25 F\nBob 25 M\nCharlie 20 F\nDavid 18 M\n''') == '''\nAlice\nBob\nCharlie\nDavid\n''', \"Test case 2\"\n\nassert solution('''\n1\nDavid 25 M\nAlice 25 F\nBob 20 M\nCharlie 20 F\n''') == '''\nDavid\nAlice\nBob\nCharlie\n''', \"Test case 3\"\n\nassert solution('''\n10\nJohn 18 \nEmily 22 \nDavid 25 \nMichael 20 \nJudy 15\nSteve 19 \nKaren 23\nDave 24\nAlex 21\n''') == '''\nMichael 19 \nJohn 23 \nEmily 22 \nDavid 25 \nKaren 23\nDave 24\nAlex 21\nSteve 19\n''', \"Test case 4\"\n\nassert solution('''\n1\nEmily 22 \nDavid 25 \nMichael 20 \nJudy 15\nSteve 19 \nKaren 23\nDave 24\nAlex 21\nJohn 18 \n''') == '''\nMichael 19 \nEmily 22 \nDavid 25 \nKaren 23\nDave 24\nAlex 21\nSteve 19\n''', \"Test case 5\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nHenry\\nDavid\\n2\\nMary\\nGeorge\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\\n\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 2 3') == ['[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]', '[0,0,0],[0,0,1],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,1,0],[1,1,2]', '[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]', '[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,1,0],[1,1,2]']",
        "num_ids_2": 235,
        "num_ids_4": 235
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3\") == [\"[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]\", \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"]\nassert solution(\"1 2 3 4\") == [\"[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\"]\nassert solution(\"1 1 1 3\") == [\"[0,0,0],[0,0,1],[1,0,0],[1,1,0]]\"]\nassert solution(\"2 1 1 3\") == [\"[0,0,0],[0,0,1],[1,0,0],[1,1,0]]\"]\nassert solution(\"1 1 2 4\") == [\"[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\"]",
        "num_ids_2": 214,
        "num_ids_4": 294
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n3\n\"\"\") == '[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]'\n\nassert solution(\"\"\"\n3\n2\n1\n\"\"\") == '[[0,0,0],[0,0,1],[0,0,2],[1,0,0],[1,0,1],[1,0,2],[2,0,0],[2,0,1],[2,1,0],[2,1,1],[2,1,2]]'\n\nassert solution(\"\"\"\n4\n3\n2\n1\n\"\"\") == '[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(x = 1, y = 1, z = 2, n = 3) == [\"[0, 0, 0]\", \"[0, 0, 1]\", \"[0, 0, 2]\", \"[0, 1, 0]\", \"[0, 1, 1]\", \"[0, 1, 2]\", \"[1, 0, 0]\", \"[1, 0, 1]\", \"[1, 0, 2]\", \"[1, 1, 0]\", \"[1, 1, 1]\", \"[1, 1, 2]\"], \"Test case 1 failed\"\n\nassert solution(x = 2, y = 2, z = 2, n = 3) == [\"[0, 0, 0]\", \"[0, 0, 1]\", \"[0, 1, 0]\", \"[0, 1, 1]\", \"[1, 0, 0]\", \"[1, 0, 1]\"], \"Test case 2 failed\"\n\nassert solution(x = 3, y = 3, z = 2, n = 3) == [\"[0, 0, 0]\", \"[0, 0, 1]\", \"[0, 1, 0]\", \"[1, 0, 0]\"], \"Test case 3 failed\"\n\nassert solution(x = 4, y = 4, z = 2, n = 3) == [\"[0, 0, 0]\", \"[0, 1, 0]\", \"[1, 0, 0]\"], \"Test case 4 failed\"\n\nassert solution(x = 5, y = 5, z = 2, n = 3) == [\"[0, 0, 0]\", \"[1, 0, 0]\"], \"Test case 5 failed\"\n\nassert solution(x = 1, y = 1, z = 2, n = 5) == [\"[0, 0, 0]\", \"[0, 0, 1]\", \"[0, 1, 0]\", \"[1, 0, 0]\"], \"Test case 6 failed\"\n\nassert solution(x = 2, y = 2, z = 2, n = 5) == [\"[0, 0, 0]\", \"[0, 1, 0]\", \"[1, 0, 0]\"], \"Test case 7 failed\"\n\nassert solution(x = 3, y = 3, z = 2, n = 5) == [\"[0, 0, 0]\", \"[0, 1, 0]\", \"[1, 0, 0]\"], \"Test case 8 failed\"\n\nassert solution(x = 4, y = 4, z = 2, n = 5) == [\"[0, 0, 0]\", \"[1, 0, 0]\"], \"Test case 9 failed\"\n\nassert solution(x = 5, y = 5, z = 2, n = 5) == [\"[0, 0, 0]\"], \"Test case 10 failed\"",
        "num_ids_2": 230,
        "num_ids_4": 361
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2]]",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\", \"Test case 1\"\n\nassert solution(input()) == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\", \"Test case 2\"\n\nassert solution(input()) == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\", \"Test case 3\"\n\nassert solution(input()) == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\", \"Test case 4\"\n\nassert solution(input()) == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\", \"Test case 5\"",
        "num_ids_2": 272,
        "num_ids_4": 526
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"x = 1\\ny = 1\\nz = 2\\nn = 3\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\nassert solution(\"x = 3\\ny = 4\\nz = 2\\nn = 6\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2],[2,0,0],[2,0,1],[2,1,0],[2,1,1],[2,2,0],[2,2,1],[2,3,0],[2,3,1]]\"",
        "num_ids_2": 212,
        "num_ids_4": 212
    },
    {
        "number": 4674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\"\n\nprint(solution(\"1\\n1\\n2\\n3\\n\"))",
        "num_ids_2": 168,
        "num_ids_4": 168
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1+1i\") == \"1+1i\"\nassert solution(\"1+2i\") == \"1-2i\"\nassert solution(\"1+3i\") == \"3+2i\"\nassert solution(\"1+4i\") == \"4+3i\"\nassert solution(\"1-4i\") == \"1+4i\"\nassert solution(\"1/2i\") == \"0.5+0.5i\"\nassert solution(\"1/4i\") == \"0.25+0.25i\"\nassert solution(\"100+200i\") == \"200.00+400.00i\"\nassert solution(\"0.5+0.5i\") == \"0.50+0.50i\"\nassert solution(\"0.0+0.0i\") == \"0.00+0.00i\"\nassert solution(\"1+0i\") == \"1.00+0.00i\"\nassert solution(\"1-0i\") == \"-1.00+0.00i\"\nassert solution(\"0+0i\") == \"0.00+0.00i\"\nassert solution(\"0-0i\") == \"0.00+0.00i\"\nassert solution(\"0.5-0.5i\") == \"0.50+0.50i\"\nassert solution(\"0.0-0.0i\") == \"0.00+0.00i\"\nassert solution(\"1+0.0i\") == \"1.00+0.00i\"\nassert solution(\"1-0.0i\") == \"-1.00+0.00i\"\nassert solution(\"0+0.0i\") == \"0.00+0.00i\"\nassert solution(\"0-0.0i\") == \"0.00+0.00i\"\nassert solution(\"1+0.5i\") == \"1.00+0.50i\"\nassert solution(\"1-0.5i\") == \"-1.00+0.50i\"\nassert solution(\"0+0.5i\") == \"0.00+0.50i\"\nassert solution(\"0-0.5i\") == \"0.00+0.50i\"\nassert solution(\"1+1i\") == \"1.00+1.00i\"\nassert solution(\"1-1i\") == \"-1.00+1.00i\"\nassert solution(\"0+1i\") == \"0.00+1.00i\"\nassert solution(\"0-1i\") == \"0.00+1.00i\"\nassert solution(\"1+1.5i\") == \"1.00+1.50i\"\nassert solution(\"1-1.5i\") == \"-1.00+1.50i\"\nassert solution(\"0+1.5i\") == \"0.00+1.50i\"\nassert solution(\"0-1.5i\") == \"0.00+1.50i\"\nassert solution(\"1+2i\") == \"2.00+2.00i\"\nassert solution(\"1-2i\") == \"-2.00+2.00i\"\nassert solution(\"0+2i\") == \"0.00+2.00i\"\nassert solution(\"0-2i\") == \"0.00+2.00i\"\nassert solution(\"1+2.5i\") == \"2.00+2.50i\"\nassert solution(\"1-2.5i\") == \"-2.00+2.50i\"\nassert solution(\"0+2.5i\") == \"0.00+2.50i\"\nassert solution(\"0-2.5i\") == \"0.00+2.50i\"\nassert solution(\"1+3i\") == \"3.00+3.00i\"\nassert solution(\"1-3i\") == \"-3.00+3.00i\"\nassert solution(\"0+3i\") == \"0.00+3.00i\"\nassert solution(\"0-3i\") == \"0.00+3.00i\"\nassert solution(\"1+3.5i\") == \"3.00+3.50i\"\nassert solution(\"1-3.5i\")",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1+2i') == '3+2i', 'Test case 1'\nassert solution('2+-1i') == '1+-2i', 'Test case 2'\nassert solution('3*4i') == '12*4i', 'Test case 3'\nassert solution('4/3i') == '2.00+0.33i', 'Test case 4'\nassert solution('123+456i') == '1603-714i', 'Test case 5'",
        "num_ids_2": 44,
        "num_ids_4": 95
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 + 4 5 - 6 7 * 8 9 / 10 11 mod 12 mod 13\") == \"2+3-4*5-6*7+8*9-10*11+12*13-13*12=16+4+11-2-21+17-16i\"\nassert solution(\"4 + -3 - 12 / 7 + 10 i\") == \"4+3+12-10i\"\nassert solution(\"0 1 + 2 3 * 4 i\") == \"0+1-2*3i\"\nassert solution(\"0 -1 + 0 i\") == \"0+1-0i\"",
        "num_ids_2": 128,
        "num_ids_4": 177
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2i\") == \"3.00+2.00i\"\nassert solution(\"3 - 4i\") == \"1.00-2.00i\"\nassert solution(\"2 * 3i\") == \"6.00+1.00i\"\nassert solution(\"4 / 2i\") == \"2.00+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution(\"0 + 0i\") == \"0.00+0.00i\"\nassert solution(\"0 - 0i\") == \"0.00+0.00i\"\nassert solution(\"1 + 0i\") == \"1.00+0.00i\"\nassert solution(\"0 + 1i\") == \"0.00+1.00i\"\nassert solution(\"1 - 1i\") == \"0.00-1.00i\"\nassert solution(\"0 + 0.5i\") == \"0.00+0.50i\"\nassert solution(\"1 + 1i\") == \"2.00+1.00i\"\nassert solution(\"2 - 1i\") == \"1.00-1.00i\"\nassert solution(\"1 - 1.5i\") == \"-0.50+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution(\"3 - 4i\") == \"1.00-2.00i\"\nassert solution(\"4 / 2i\") == \"2.00+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution(\"0 + 0i\") == \"0.00+0.00i\"\nassert solution(\"0 - 0i\") == \"0.00+0.00i\"\nassert solution(\"1 + 0i\") == \"1.00+0.00i\"\nassert solution(\"0 + 1i\") == \"0.00+1.00i\"\nassert solution(\"1 - 1i\") == \"0.00-1.00i\"\nassert solution(\"0 + 0.5i\") == \"0.00+0.50i\"\nassert solution(\"1 + 1i\") == \"2.00+1.00i\"\nassert solution(\"2 - 1i\") == \"1.00-1.00i\"\nassert solution(\"1 - 1.5i\") == \"-0.50+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution(\"3 - 4i\") == \"1.00-2.00i\"\nassert solution(\"4 / 2i\") == \"2.00+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution(\"0 + 0i\") == \"0.00+0.00i\"\nassert solution(\"0 - 0i\") == \"0.00+0.00i\"\nassert solution(\"1 + 0i\") == \"1.00+0.00i\"\nassert solution(\"0 + 1i\") == \"0.00+1.00i\"\nassert solution(\"1 - 1i\") == \"0.00-1.00i\"\nassert solution(\"0 + 0.5i\") == \"0.00+0.50i\"\nassert solution(\"1 + 1i\") == \"2.00+1.00i\"\nassert solution(\"2 - 1i\") == \"1.00-1.00i\"\nassert solution(\"1 - 1.5i\") == \"-0.50+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution(\"3 - 4i\") == \"1.00-2.00i\"\nassert solution(\"4 / 2i\") == \"2.00+0.50i\"\nassert solution(\"2 + 2i\") == \"4.00+2.00i\"\nassert solution",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1+1i\") == \"2+2i\"\nassert solution(\"1.2+3.4i\") == \"4.2+6.8i\"\nassert solution(\"2+0.5i\") == \"-0.5-1.0i\"\nassert solution(\"2-0.5i\") == \"0.5+1.0i\"\nassert solution(\"1+0i\") == \"1+0i\"\nassert solution(\"1+0.5i\") == \"1+0.5i\"\nassert solution(\"1+0.01i\") == \"1+0.01i\"\nassert solution(\"0.5-0.5i\") == \"0.00+0.00i\"\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3+5i\") == \"3+5i\", \"Incorrect output\"\nassert solution(\"4-1i\") == \"4-1i\", \"Incorrect output\"\nassert solution(\"2*3i\") == \"2*3i\", \"Incorrect output\"\nassert solution(\"6/2i\") == \"6/2i\", \"Incorrect output\"\nassert solution(\"7%2i\") == \"7%2i\", \"Incorrect output\"\nassert solution(\"1+2+3i\") == \"1+2+3i\", \"Incorrect output\"\nassert solution(\"1+2i\") == \"1+2i\", \"Incorrect output\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3i\") == \"5+3i\", \"Test Case 1\"\nassert solution(\"2+3i\") == \"2-3i\", \"Test Case 2\"\nassert solution(\"4-1i\") == \"4+1i\", \"Test Case 3\"\nassert solution(\"16-8i\") == \"12+4i\", \"Test Case 4\"\nassert solution(\"12+7i\") == \"13-5i\", \"Test Case 5\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 -1.4 +3.6i\") == \"2.6000000000000005i\"\nassert solution(\"5.0 -3.0i\") == \"4.0000000000000004i\"\nassert solution(\"2.0 -3i\") == \"2.0000000000000002i\"\nassert solution(\"4 +2.0i\") == \"4.0000000000000004i\"\nassert solution(\"0.0i\") == \"0.00000000000000000i\"",
        "num_ids_2": 72,
        "num_ids_4": 138
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1+2i') == '3+2i'\nassert solution('2-3i') == '-1+6i'\nassert solution('12*3i') == '30+12i'\nassert solution('7/2i') == '3+1.5i'\nassert solution('3**2+5**2i') == '11-32i'",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2+3i\") == \"2+3i\", \"Your solution should return 2+3i\"\nassert solution(\"4-1i\") == \"4-1i\", \"Your solution should return 4-1i\"\nassert solution(\"12*3i\") == \"12*3i\", \"Your solution should return 12*3i\"\nassert solution(\"22/3i\") == \"22/3i\", \"Your solution should return 22/3i\"\nassert solution(\"5i\") == \"5+0.00i\", \"Your solution should return 5+0.00i\"\nassert solution(\"1+3i\") == \"1+3i\", \"Your solution should return 1+3i\"",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\", \"Expected output: xaybzc, but got: \" + solution(\"xyz\\nabc\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"xyz\") == \"xaybzc\", \"Incorrect output for sample input\"\nassert solution(\"abc\") == \"xaybzc\", \"Incorrect output for sample input\"\nprint(\"All test cases passed\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\", \"The original password is xaybzc.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"xyz\\nab\") == \"xaybzc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\\n\", \"Testcase failed\"\nassert solution(\"\") == \"\", \"Testcase failed\"\nassert solution(\"x\") == \"\", \"Testcase failed\"\nprint(\"All testcases passed\")",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"B\") == \"B\"\nassert solution(\"A\") == \"A\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('01B0') == '00', \"Test failed: correct output expected\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"01B0\") == \"00\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('01B0') == '00', \"Your code is not correct\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"01B0\") == \"00\", \"Test 1: Expected '00', but got '{}'.\".format(solution(\"01B0\"))\n\nassert solution(\"01B1\") == \"01\", \"Test 2: Expected '01', but got '{}'.\".format(solution(\"01B1\"))\n\nassert solution(\"00B1\") == \"01\", \"Test 3: Expected '01', but got '{}'.\".format(solution(\"00B1\"))\n\nassert solution(\"01B01\") == \"01B0\", \"Test 4: Expected '01B0', but got '{}'.\".format(solution(\"01B01\"))\n\nassert solution(\"01B0B\") == \"01B0\", \"Test 5: Expected '01B0', but got '{}'.\".format(solution(\"01B0B\"))",
        "num_ids_2": 76,
        "num_ids_4": 158
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"00\", \"Test 1\"\nassert solution(\"01B0\") == \"00\", \"Test 2\"\nassert solution(\"11B0\") == \"01\", \"Test 3\"\nassert solution(\"01\") == \"00\", \"Test 4\"\nassert solution(\"B0\") == \"00\", \"Test 5\"\nassert solution(\"110\") == \"01\", \"Test 6\"\nassert solution(\"11\") == \"01\", \"Test 7\"\nassert solution
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00', 'Test 1'\nassert solution('02B1') == '01', 'Test 2'\nassert solution('0B0') == '', 'Test 3'\nassert solution('0B1') == '0', 'Test 4'\nassert solution('0B2') == '1', 'Test 5'",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"01B0\") == \"00\", \"The correct answer is not '00'.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"\n\nN = int(stdin.readline().strip())\nA = list(map(int, stdin.readline().split()))",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n\"  # Expected output: 4\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\", \"Test failed for input [2 1 5 4 3]\"\nprint(\"Test passed\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"5\\n1 2 0 1 2\") == \"1\"\nassert solution(\"1\\n1 2\") == \"0\"\nassert solution(\"1\\n2\") == \"0\"\nassert solution(\"3\\n1 2 3 4\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4\\n', \"Test Case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'B'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aca\\naccc\\nca\\n\") == \"A\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aca\\naccc\\nca\\n\") == \"A\"\nassert solution(\"abcdef\\nxyzabc\\ndef\\n\") == \"C\"\nassert solution(\"a\\nb\\nc\\n\") == \"B\"\nassert solution(\"a\\nb\\nc\\nd\\ne\\n\") == \"B\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\nassert solution(\"aa\") == \"A\"\nassert solution(\"bb\") == \"B\"\nassert solution(\"cc\") == \"C\"\nassert solution(\"aabbc\") == \"A\"\nassert solution(\"aabccd\") == \"B\"\nassert solution(\"aabcccd\") == \"C\"\nassert solution(\"aabcccccd\") == \"B\"\nassert solution(\"aabc\") == \"A\"\nassert solution(\"abc\") == \"B\"\nassert solution(\"abcd\") == \"C\"\nassert solution(\"abcde\") == \"C\"\nassert solution(\"abcdefg\") == \"B\"\nassert solution(\"abcdegh\") == \"C\"\nassert solution(\"abcdeghij\") == \"B\"\nassert solution(\"abcdefgjk\") == \"C\"\nassert solution(\"abcdefghij\") == \"A\"\nassert solution(\"abcdeghij\") == \"B\"\nassert solution(\"abcdeghijk\") == \"C\"\nassert solution(\"abcdefgijk\") == \"A\"\nassert solution(\"abcdeghijk\") == \"B\"\nassert solution(\"abcdeghijkl\") == \"C\"\nassert solution(\"abcdefgijk\") == \"A\"\nassert solution(\"abcdeghijkl\") == \"B\"\nassert solution(\"abcdeghijklm\") == \"C\"\nassert solution(\"abcdefgijk\") == \"A\"\nassert solution(\"abcdeghijk\") == \"B\"\nassert solution(\"abcdeghijklm\") == \"C\"\nassert solution(\"abcdefgijk\") == \"A\"\nassert solution(\"abcdeghijk\") == \"B\"\nassert solution(\"abcdeghijklm\") == \"C\"\nassert solution(\"abcdeghijklmno\") == \"C\"\nassert solution(\"abcdefghijk\") == \"A\"\nassert solution(\"abcdeghijk\") == \"B\"\nassert solution(\"abcdeghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C\"\nassert solution(\"abcdefghijklmno\") == \"A\"\nassert solution(\"abcdefghijklmno\") == \"B\"\nassert solution(\"abcdefghijklmno\") == \"C",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"A\"\nassert solution(input()) == \"B\"\nassert solution(input()) == \"C\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aca') == 'A', \"Solution should be 'A' for input 'aca'.\"\nassert solution('accc') == 'B', \"Solution should be 'B' for input 'accc'.\"\nassert solution('ca') == 'C', \"Solution should be 'C' for input 'ca'.\"",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aca') == 'A', \"The solution should return 'A'\"\nassert solution('accc') == 'B', \"The solution should return 'B'\"\nassert solution('ca') == 'C', \"The solution should return 'C'\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n\nThe solution works as expected. It takes three phrases of length 5, 5 and 7 as input and checks whether they can be constructed by using the given order. If all the phrases are constructed correctly, the function returns YES. Otherwise, it returns NO.",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\n\ninput_str = input()\na, b, c = map(int, input_str.split())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n\nprint(\"OK\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('7 5 5') == 'YES'\nassert solution('5 10 5') == 'NO'\nassert solution('7 5 5') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\\n\"\nassert solution(\"\") == \"0\\n\"\nassert solution(\"3\") == \"4\\n\"\nassert solution(\"10\") == \"55\\n\"\nassert solution(\"11\") == \"11\\n\"\nassert solution(\"86\") == \"1062\\n\"\nassert solution(\"87\") == \"1107\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"11\\n\", \"Test failed: incorrect output\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"11\\n\"\n\nHere's the Python code to implement the solution:\n\n```python\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"29\"\nassert solution(\"100\") == \"6765\"\nassert solution(\"1000000\") == \"277671378485070666977129709599585290200745304975603177430500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "num_ids_2": 23,
        "num_ids_4": 1027
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"11\", \"Incorrect output\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"11\"\nassert solution(20) == \"17\"\nassert solution(30) == \"28\"\nassert solution(40) == \"41\"\nassert solution(50) == \"57\"\nassert solution(60) == \"70\"\nassert solution(70) == \"90\"\nassert solution(80) == \"120\"\nassert solution(90) == \"157\"\nassert solution(100) == \"204\"\nassert solution(110) == \"253\"\nassert solution(120) == \"314\"\nassert solution(130) == \"389\"\nassert solution(140) == \"478\"\nassert solution(150) == \"579\"\nassert solution(160) == \"694\"\nassert solution(170) == \"822\"\nassert solution(180) == \"963\"\nassert solution(190) == \"1118\"\nassert solution(200) == \"1287\"\nassert solution(210) == \"1469\"\nassert solution(220) == \"1664\"\nassert solution(230) == \"1873\"\nassert solution(240) == \"2096\"\nassert solution(250) == \"2333\"\nassert solution(260) == \"2584\"\nassert solution(270) == \"2849\"\nassert solution(280) == \"3128\"\nassert solution(290) == \"3421\"\nassert solution(300) == \"3730\"\nassert solution(310) == \"4055\"\nassert solution(320) == \"4396\"\nassert solution(330) == \"4753\"\nassert solution(340) == \"5126\"\nassert solution(350) == \"5515\"\nassert solution(360) == \"5920\"\nassert solution(370) == \"6341\"\nassert solution(380) == \"6779\"\nassert solution(390) == \"7234\"\nassert solution(400) == \"7706\"\nassert solution(410) == \"8196\"\nassert solution(420) == \"8704\"\nassert solution(430) == \"9230\"\nassert solution(440) == \"9774\"\nassert solution(450) == \"10336\"\nassert solution(460) == \"10916\"\nassert solution(470) == \"11514\"\nassert solution(480) == \"12130\"\nassert solution(490) == \"12765\"\nassert solution(500) == \"13419\"\nassert solution(510) == \"14092\"\nassert solution(520) == \"14784\"\nassert solution(530) == \"15495\"\nassert solution(540) == \"16226\"\nassert solution(550) == \"16977\"\nassert solution(560) == \"17747\"\nassert solution(570) == \"18537\"\nassert solution(580) == \"19347\"\nassert solution(590) == \"20177\"\nassert solution(600) == \"21028\"\nassert solution(610) == \"21900\"\nassert solution(620) == \"22793\"\nassert solution(630) == \"23708\"\nassert solution(640) == \"24645\"\nassert solution(650) == \"25604\"\nassert solution(660) == \"26585\"\nassert solution(670) == \"27588\"\nassert solution(680) == \"28614\"\nassert solution(690) == \"29663\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '11\\n', \"Solution should print the 5-th Lucas number as 11\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"11\\n\", \"Test Case 1 failed\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"11\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"11\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"\nprint(\"All tests passed.\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n2\\n\") == \"7\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\", \"The area of the given trapezoid is not 7.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\\n2\") == \"7\\n\"\nassert solution(\"10\\n5\\n6\") == \"55\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"11\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"25\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"36\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"49\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"56\\n\"\n\nfor T in [3, 4, 5, 6, 7]:\n    with open(f\"sample_test{T}.in\") as f:\n        input = f.readline().strip()\n        output = solution(input)\n        assert output == f\"sample_test{T}.out\\n\", f\"Failed for test {T}\"",
        "num_ids_2": 42,
        "num_ids_4": 92
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"Input Error: Please provide input for the problem.\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '11'\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\", \"Test Case 1: Empty Input\"\nassert solution(\"5\") == \"0\", \"Test Case 2: Input with invalid length\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\", \"Test Case 3: Input with invalid format\"\nassert solution(\"3\\n1 2 3\\n4 5 6\\n\") == \"0\", \"Test Case 4: Input with duplicate values\"\nassert solution(\"3\\n1 2 3\\n4 4 4\\n\") == \"11\", \"Test Case 5: Input with valid input\"\n\nfrom typing import List\n",
        "num_ids_2": 38,
        "num_ids_4": 105
    },
    {
        "number": 4683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"6 3 2\") == \"NO\"\nassert solution(\"7 3 2\") == \"NO\"\nassert solution(\"8 3 2\") == \"NO\"\nassert solution(\"9 3 2\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"2 3 4\") == \"NO\"\nassert solution(\"5 6 7\") == \"NO\"\nassert solution(\"9 8 7\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"YES\", \"Output is wrong.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"YES\\n\", \"Please enter valid input\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nprint(\"NO\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"2 3 4\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"4 3 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nprint(\"NO\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nprint(\"All test cases passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 11 1\") == \"30\"\nassert solution(\"10 5 3 11\") == \"25\"\nassert solution(\"10 15 3 11\") == \"55\"\nassert solution(\"10 15 3 22\") == \"65\"\nassert solution(\"10 15 3 11\") == \"30\"\nassert solution(\"10 5 3 11 10\") == \"30\"",
        "num_ids_2": 37,
        "num_ids_4": 77
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nprint(\"All test cases pass\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"30\\n\", \"Test case 1 failed.\"\nassert solution(input()) == \"30\\n\", \"Test case 2 failed.\"\nassert solution(input()) == \"30\\n\", \"Test case 3 failed.\"\nassert solution(input()) == \"30\\n\", \"Test case 4 failed.\"\nassert solution(input()) == \"30\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11 1\\n\") == \"30\\n\", \"Test Case 1\"\nassert solution(\"5 6 11\\n\") == \"21\\n\", \"Test Case 2\"\nassert solution(\"5 3 22\\n\") == \"47\\n\", \"Test Case 3\"\nassert solution(\"5 3 22 1\\n\") == \"50\\n\", \"Test Case 4\"\nassert solution(\"5 6 11 2\\n\") == \"42\\n\", \"Test Case 5\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"abaccabac\") == \"Yes\", \"Test 2 failed\"\nassert solution(\"abcabc\") == \"Yes\", \"Test 3 failed\"\nassert solution(\"abcd\") == \"No\", \"Test 4 failed\"\nassert solution(\"defghijklmnopqrstuvwxyz\") == \"No\", \"Test 5 failed\"\nprint(\"All tests passed.\")",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"defg\") == \"No\"\nassert solution(\"abcdefghij\") == \"Yes\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"a\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"defghijkl\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Your code is not correct.\"\nassert solution(\"abc\") == \"No\", \"Your code is not correct.\"\nassert solution(\"abcdefg\") == \"No\", \"Your code is not correct.\"\nassert solution(\"aaaaa\") == \"No\", \"Your code is not correct.\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3 4\n1 1\n2 2\n3 3) == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\", \"The output should be 3.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"\nassert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n5 5\") == \"3\\n\"\nassert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n5 5\\n6 6\") == \"6\\n\"\n",
        "num_ids_2": 63,
        "num_ids_4": 102
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\nassert solution(\"2 2\\n3 3\\n4 4\\n\") == \"4\\n\"\nassert solution(\"4 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 88
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\\n\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 2\") == \"2\"\nassert solution(stdin=\"3 2\") == \"4\"\nassert solution(stdin=\"1 3\") == \"6\"\nassert solution(stdin=\"5 3\") == \"12\"\nassert solution(stdin=\"4 5\") == \"24\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\\n\", \"Test 1 failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2 2\") == \"2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n\") == \"2\\n\"\nassert solution(\"3 1\\n\") == \"0\\n\"\nassert solution(\"5 3\\n\") == \"3\\n\"\nassert solution(\"7 4\\n\") == \"4\\n\"\nassert solution(\"9 5\\n\") == \"7\\n\"\nassert solution(\"11 6\\n\") == \"12\\n\"\nassert solution(\"13 7\\n\") == \"14\\n\"\nassert solution(\"15 8\\n\") == \"16\\n\"\nassert solution(\"17 9\\n\") == \"19\\n\"\nassert solution(\"19 10\\n\") == \"32\\n\"\nassert solution(\"21 11\\n\") == \"52\\n\"\nassert solution(\"23 12\\n\") == \"81\\n\"\nassert solution(\"25 13\\n\") == \"133\\n\"\nassert solution(\"27 14\\n\") == \"216\\n\"\nassert solution(\"29 15\\n\") == \"343\\n\"\nassert solution(\"31 16\\n\") == \"544\\n\"\nassert solution(\"33 17\\n\") == \"914\\n\"\nassert solution(\"35 18\\n\") == \"1476\\n\"\nassert solution(\"37 19\\n\") == \"2517\\n\"\nassert solution(\"39 20\\n\") == \"4294\\n\"\nassert solution(\"41 21\\n\") == \"6991\\n\"\nassert solution(\"43 22\\n\") == \"11176\\n\"\nassert solution(\"45 23\\n\") == \"17317\\n\"\nassert solution(\"47 24\\n\") == \"28025\\n\"\nassert solution(\"49 25\\n\") == \"46136\\n\"\nassert solution(\"51 26\\n\") == \"858993\\n\"\nassert solution(\"53 27\\n\") == \"1640441\\n\"\nassert solution(\"55 28\\n\") == \"2952049\\n\"\nassert solution(\"57 29\\n\") == \"5101406\\n\"\nassert solution(\"59 30\\n\") == \"9223372\\n\"\nassert solution(\"61 31\\n\") == \"17179869\\n\"\nassert solution(\"63 32\\n\") == \"32147488\\n\"\nassert solution(\"65 33\\n\") == \"65537792\\n\"\nassert solution(\"67 34\\n\") == \"131073744\\n\"\nassert solution(\"69 35\\n\") == \"262147488\\n\"\nassert solution(\"71 36\\n\") == \"524288000\\n\"\nassert solution(\"73 37\\n\") == \"1048576000\\n\"\nassert solution(\"75 38\\n\") == \"2097152000\\n\"\nassert solution(\"77 39\\n\") == \"4194304000\\n\"\nassert solution(\"79 40\\n\") == \"8388608000\\n\"\nassert solution(\"81 41\\n\") == \"16777216000\\n\"\nassert solution(\"83 42\\n\") == \"33554432000\\n\"\nassert solution(\"85 43\\n\") == \"67108864000\\n\"\nassert solution(\"87 44\\n\") == \"134217728000\\n\"\nassert solution(\"89 45\\n\") == \"268435456000\\n\"\nassert solution(\"91 46\\n\") == \"5368709120",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\\n\"\n\nassert solution(\"3 2\") == \"0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n1\\n2\\n0\\n",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'2 2') == '2\\n', 'Test case 1 failed.'\nassert solution(b'3 3') == '3\\n', 'Test case 2 failed.'\nassert solution(b'4 4') == '6\\n', 'Test case 3 failed.'\nassert solution(b'5 5') == '25862690684436691475930352\\n', 'Test case 4 failed.'\nassert solution(b'6 6') == '1093758045628049871416117029518916293670704189589264\\n', 'Test case 5 failed.'",
        "num_ids_2": 46,
        "num_ids_4": 117
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 3\\n5 10 15') == '10'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"30 5\\n10 20 30\") == \"10\"\nassert solution(\"10 2\\n5 10 15\") == \"10\"\nassert solution(\"2 3\\n5 10 15\") == \"0\"\nassert solution(\"5 2\\n5 10 15\") == \"5\"\nassert solution(\"2 1\\n5 10 15\") == \"5\"\nassert solution(\"1 2\\n5 10 15\") == \"5\"",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\\n\"\nassert solution(\"10 20 30\") == \"2\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nprint(\"All tests passed\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '10\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\nassert solution(\"10 20\") == \"10\"\nassert solution(\"5 10 15\") == \"10\"\nassert solution(\"20 10\") == \"10\"\nassert solution(\"10 5\") == \"10\"",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"15\\n\", \"Testcase failed.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"2 4 3 6\") == \"14\"\nassert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"5 5\") == \"25\"",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Sample Input\"\nassert solution(\"4 5 3 8\") == \"15\", \"Sample Input\"\nassert solution(\"2 3 1 4\") == \"10\", \"Sample Input\"\nassert solution(\"3 5 2 7\") == \"15\", \"Sample Input\"\nassert solution(\"1 2 3 4 5\") == \"10\", \"Sample Input\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1 2 3\") == \"6\"\nassert solution(\"1 2 1 3\") == \"2\"\nassert solution(\"1 1 3 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"The output should be 15, the larger area.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"1. The area of the rectangle with the larger area is not equal to 15.\"\nassert solution(\"1 1 1 1\") == \"1\", \"2. The area of the rectangle with the larger area is not equal to 1.\"\nassert solution(\"1 2 1 3\") == \"3\", \"3. The area of the rectangle with the larger area is not equal to 3.\"\nassert solution(\"2 3 2 4\") == \"4\", \"4. The area of the rectangle with the larger area is not equal to 4.\"\nassert solution(\"1 1 2 2\") == \"4\", \"5. The area of the rectangle with the larger area is not equal to 4.\"\n\nprint(\"All test cases passed.\")",
        "num_ids_2": 72,
        "num_ids_4": 142
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 2 7\") == \"15\\n\", \"The output should be 15, the larger area.\"\nassert solution(\"1 2\") == \"1\\n\", \"The output should be 1, the area of the rectangle with the larger area.\"\nassert solution(\"5 5\") == \"5\\n\", \"The output should be 5, the area of the rectangle with the larger area.\"\nassert solution(\"10000000000000000000\") == \"10000000000000000000\\n\", \"The output should be 10000000000000000000, the area of the rectangle with the larger area.\"\nassert solution(\"10000000000000000000\") == \"10000000000000000000\\n\", \"The output should be 10000000000000000000, the area of the rectangle with the larger area.\"\nassert solution(\"1 2 3 4 5\") == \"10\\n\", \"The output should be 10, the area of the rectangle with the larger area.\"\nassert solution(\"1 2 3 4 5\") == \"5\\n\", \"The output should be 5, the area of the rectangle with the larger area.\"",
        "num_ids_2": 64,
        "num_ids_4": 183
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Test 1 failed\"\nassert solution(\"1 2 3 4 5\") == \"10\", \"Test 2 failed\"\nassert solution(\"6 7 8 9 10\") == \"14\", \"Test 3 failed\"\nassert solution(\"1 1 1 1 1\") == \"1\", \"Test 4 failed\"\nassert solution(\"1 2 3 4 5\") == \"10\", \"Test 5 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 5 2 7\") == \"15\\n\", \"Incorrect output\"\n\nassert solution(stdin=\"3 5 2 6\") == \"14\\n\", \"Incorrect output\"\n\nassert solution(stdin=\"4 5 3 7\") == \"14\\n\", \"Incorrect output\"\n\nassert solution(stdin=\"5 5 3 7\") == \"15\\n\", \"Incorrect output\"\n\nassert solution(stdin=\"6 5 3 7\") == \"15\\n\", \"Incorrect output\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2 7\") == \"15\", \"Incorrect output\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nassert solution('5\\nRE\\nTLE\\nRE\\n') == 'RE x 1\\nTLE x 0\\n'\nassert solution('3\\nRE\\nAC\\nTLE\\n') == 'AC x 0\\nTLE x 2\\n'",
        "num_ids_2": 83,
        "num_ids_4": 115
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed with input: {input_data}\\nExpected output: {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"\nassert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(21) == \"27\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(21) == 27, \"Error: Incorrect output\"\nprint(\"Correct output\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"21\") == \"27\", \"Test failed\"\nassert solution(\"12\") == \"25\", \"Test failed\"\nassert solution(\"24\") == \"0\", \"Test failed\"\nassert solution(\"0\") == \"0\", \"Test failed\"\nassert solution(\"25\") == \"26\", \"Test failed\"",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(21) == \"27\", \"Incorrect Output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"21\") == \"27\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(21) == 27, \"Test case failed!\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"24\") == \"0\"\nassert solution(\"25\") == \"0\"\nassert solution(\"26\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '27', 'Test failed' # Test failed",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"27\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'21\\n') == b'27\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"6 3\\n\") == \"9\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"4 5\") == \"error\"\nassert solution(\"10 10\") == \"error\"\nassert solution(\"100 100\") == \"error\"\nassert solution(\"1000 1000\") == \"error\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"5 3\") == \"error\\n\"\nassert solution(\"10 3\") == \"error\\n\"\nassert solution(\"11 3\") == \"11\\n\"\nassert solution(\"0 3\") == \"error\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 5\") == \"error\"\nassert solution(\"0 0\") == \"error\"\nassert solution(\"-6 3\") == \"error\"\nassert solution(\"10 10\") == \"error\"\nassert solution(\"10 6\") == \"error\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"9 4\") == \"error\\n\"\nassert solution(\"10 10\") == \"error\\n\"\nassert solution(\"15 12\") == \"17\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"10 3\") == \"error\\n\"\nassert solution(\"5 5\") == \"error\\n\"\nassert solution(\"9 9\") == \"error\\n\"\nassert solution(\"6 6\") == \"error\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 10\") == \"error\"\nassert solution(\"10 5\") == \"error\"\nassert solution(\"10 2\") == \"error\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3') == '9\\n'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"9\\n\"\nassert solution(\"1 10\") == \"error\\n\"\nassert solution(\"0 0\") == \"error\\n\"\nassert solution(\"6 10\") == \"10\\n\"\nassert solution(\"10 10\") == \"error\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\\n\"\nassert solution(\"5\\na_1 a_2... a_N\") == \"3\\n\"\nassert solution(\"6\\na_1 a_2... a_N\") == \"2\\n\"\nassert solution(\"7\\na_1 a_2... a_N\") == \"0\\n\"\nassert solution(\"8\\na_1 a_2... a_N\") == \"5\\n\"\nassert solution(\"9\\na_1 a_2... a_N\") == \"1\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 7 9\") == \"7\\n\"\nassert solution(\"4 2 3 7\") == \"7\\n\"\nassert solution(\"4 5 1 2 3\") == \"3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\"\nassert solution(\"4\\n100000 100000 100000 100000\") == \"100000\\n\"\nassert solution(\"4\\n-1 -1 -1 -1\") == \"Infinity\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"2\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 110
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '7'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na_1 a_2... a_N\") == \"7\\n\", \"The minimum distance to be traveled is 7\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"Test case 1\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"4\\n\", \"Test case 2\"\n\nassert solution(\"6\\n2 3 4 5 6\") == \"4\\n\", \"Test case 3\"\n\nassert solution(\"7\\n1 2 3 4 5\") == \"7\\n\", \"Test case 4\"\n\nassert solution(\"8\\n1 2 3 4 5\") == \"7\\n\", \"Test case 5\"",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"Test failed\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\\n\", \"Test Case 1 failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"10\\n\", \"Test Case 2 failed\"\nassert solution(\"6\\n1 2 3 4 5\") == \"10\\n\", \"Test Case 3 failed\"\nassert solution(\"7\\n2 3 7 9\") == \"7\\n\", \"Test Case 4 failed\"\nassert solution(\"8\\n1 2 3 4 5\") == \"10\\n\", \"Test Case 5 failed\"\n",
        "num_ids_2": 59,
        "num_ids_4": 118
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 7 9\\n\") == \"7\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 7 9') == '7'\n\nprint(solution('4\\n2 3 7 9'))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"2 3\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"3 3\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"4 3\") == \"Yes\", \"The output should be Yes\"\nassert solution(\"5 3\") == \"Yes\", \"The output should be Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes\\n', \"The correct solution is: Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"Yes\\n\"\nassert solution(\"2 4\") == \"No\\n\"\nassert solution(\"1 1\") == \"Yes\\n\"\nassert solution(\"2 1\") == \"No\\n\"\nassert solution(\"3 3\") == \"Yes\\n\"\nassert solution(\"4 4\") == \"No\\n\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1 3\\n') == 'Yes\\n'\nassert solution(stdin='1 1\\n') == 'No\\n'\nassert solution(stdin='1 11\\n') == 'No\\n'\nassert solution(stdin='1 12\\n') == 'Yes\\n'\nassert solution(stdin='1 0\\n') == 'No\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"5 7\") == \"Yes\"\nassert solution(\"1 12\") == \"Yes\"\nassert solution(\"13 12\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"Test Case 1\"\nassert solution(\"2 3\") == \"Yes\", \"Test Case 2\"\nassert solution(\"3 3\") == \"Yes\", \"Test Case 3\"\nassert solution(\"4 3\") == \"No\", \"Test Case 4\"\nassert solution(\"5 3\") == \"No\", \"Test Case 5\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"5 10\") == \"No\"\nassert solution(\"7 11\") == \"Yes\"\nassert solution(\"13 15\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"3 5\") == \"No\"\nassert solution(\"4 6\") == \"No\"\nassert solution(\"5 7\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Test 1\"\nassert solution(\"2 3\") == \"Odd\", \"Test 2\"\nassert solution(\"5 6\") == \"Odd\", \"Test 3\"\nassert solution(\"7 8\") == \"Even\", \"Test 4\"\nassert solution(\"1 1\") == \"Even\", \"Test 5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"Enter the value of a: \")) == \"Odd\", \"Incorrect output\"\nassert solution(input(\"Enter the value of b: \")) == \"Even\", \"Incorrect output\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'Even'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Even\", \"Invalid input format\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Even\"\nprint(\"odd\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Even\", \"Incorrect output\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Even', 'Expected \"Even\", but got \"{}\".'.format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 6\") == \"Odd\"\nassert solution(\"1 2\") == \"Odd\"\nassert solution(\"7 8\") == \"Even\"\nassert solution(\"9 10\") == \"Odd\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Even\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\"\nprint(\"Odd\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2', \"Solution is incorrect\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Expected 2, got \" + str(solution())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 6\\n\") == \"2\\n\"\nassert solution(\"2 6\\n\") == \"2\\n\"\nassert solution(\"3 6\\n\") == \"2\\n\"\nassert solution(\"4 6\\n\") == \"2\\n\"\nassert solution(\"5 6\\n\") == \"2\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\\n\", \"Snuke loves puzzles.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 6\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"1 7\") == \"2\\n\", \"Test case 2 failed\"\nassert solution(\"2 1\") == \"3\\n\", \"Test case 3 failed\"\nassert solution(\"3 3\") == \"4\\n\", \"Test case 4 failed\"\nassert solution(\"5 10\") == \"4\\n\", \"Test case 5 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"The output should be 2.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6\") == \"2\\n\", \"The expected output is not provided.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 6\") == \"2\\n\", \"Test 1\"\nassert solution(\"2 4\") == \"1\\n\", \"Test 2\"\nassert solution(\"3 4\") == \"0\\n\", \"Test 3\"\nassert solution(\"10 5\") == \"1\\n\", \"Test 4\"\nassert solution(\"10 10\") == \"2\\n\", \"Test 5\"",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 6\\n\") == \"2\\n\"\nassert solution(\"2 3\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"2\\n\"\nassert solution(\"1 3\\n\") == \"2\\n\"\nassert solution(\"1 4\\n\") == \"3\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"5\\n1 1 1 1 1\\n2\\n1 1\\n2 3\\n1 1\") == \"6\\n9\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6\\n9'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\"\nassert solution(\"4\\n2 1 2\\n1\\n1 1\\n2 2\\n\") == \"6\\n6\"\nassert solution(\"5\\n1 1 2\\n2\\n1 1\\n2 2\\n\") == \"6\\n6\"",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\\n\") == \"6\\n9\"\nassert solution(\"2\\n2 1 2\\n\") == \"1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"1\\n1\\n2\\n1\\n2\") == \"6\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n'\nprint('All tests passed.')",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2000\"\nprint(\"She dislikes all digits except 0 and 2.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\\nShe dislikes all digits except 0 and 2.\\nThe smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 10\\n1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 6\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 12\\n1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 8\\n1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 6\\n1 3 4 5 6 7 8 9\") == \"1000\"\nassert solution(\"1000 12\\n1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1000 10\\n1 2 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 73,
        "num_ids_4": 146
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 9\\n1 2 3 4 5 6 7 8 9') == '1000'\nassert solution('1000 8\\n1 3 4 5 6 7 8 9\\n2 4 6 8 10 12') == '1000'\nassert solution('1000 8\\n1 3 4 5 6 7 8 9\\n2 4 6 8 10 12\\n0 2 4 6 8') == '2000'",
        "num_ids_2": 72,
        "num_ids_4": 183
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2000\"\nassert solution(input()) == \"2000\"\nassert solution(input()) == \"2000\"\nassert solution(input()) == \"2000\"\nassert solution(input()) == \"2000\"\nassert solution(input()) == \"2000\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2000\"\nprint(\"She dislikes all digits except 0 and 2.\")\nprint(\"The smallest integer equal to or greater than N=1000 whose decimal notation contains only 0 and 2, is 2000.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2000', 'Output is incorrect.'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Invalid output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 1\\n2 3 4\") == \"0\"\nassert solution(\"10 10\") == \"0\"",
        "num_ids_2": 55,
        "num_ids_4": 69
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('') == ''\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 391
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"",
        "num_ids_2": 76,
        "num_ids_4": 152
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nfor _ in range(test_cases):\n    input_ = list(map(int, input().split()))\n    N, M = input_\n    H_list = input_\n    A_list, B_list = [], []\n    for h in H_list:\n        A_list.append(h)\n        B_list.append(h)\n    for i in range(M):\n        A_i, B_i = map(int, input().split())\n        A_list.append(A_i)\n        B_list.append(B_i)\n    N_good = sum([1 for i in range(N) if H_list[i] > max(H_list[:i])])\n    print(N_good)",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n3') == '10\\n', \"The value will be minimized when the operations are performed in the following order: A, A, B, B.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\\n\"\nassert solution(\"2\\n5\\n\") == \"15\\n\"\nassert solution(\"4\\n5\\n\") == \"20\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\"\nassert solution(\"3\\n5\\n\") == \"17\\n\"\nassert solution(\"6\\n5\\n\") == \"35\\n\"\nassert solution(\"1\\n2\\n\") == \"3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '10', \"Incorrect solution\"\nprint(\"Correct solution\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '10', 'Test failed'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\\n\"\nassert solution(\"5\\n5\\n\") == \"10\\n\"\nassert solution(\"1\\n5\\n\") == \"5\\n\"\nassert solution(\"1\\n5\\n\") == \"5\\n\"\nassert solution(\"1\\n5\\n\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\\n\") == \"10\\n\", \"Test case 1 failed.\"\nassert solution(\"5\\n6\\n\") == \"120\\n\", \"Test case 2 failed.\"\nassert solution(\"7\\n2\\n\") == \"330\\n\", \"Test case 3 failed.\"\nassert solution(\"8\\n2\\n\") == \"660\\n\", \"Test case 4 failed.\"\nassert solution(\"9\\n3\\n\") == \"1090\\n\", \"Test case 5 failed.\"",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"10\"\nassert solution(\"2 4\") == \"12\"\nassert solution(\"1 2\") == \"11\"\nassert solution(\"6 2\") == \"14\"\nassert solution(\"8 5\") == \"18\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '10\\n', 'Please provide the input values.'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nprint(\"All tests pass!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0\nassert solution(0) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '0'\nassert solution(0) == '1'\nprint('All test cases passed')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\", \"There are 4 formulas that can be obtained: 125, 1+25, 12+5 and 1+2+5. When each formula is evaluated, - 125 - 1+25=26 - 12+5=17 - 1+2+5=8. Thus, the sum is 125+26+17+8=176.\"\n\nSolution:\nThe problem requires us to evaluate a formula S, where we insert a letter + into the positions between two letters in S. We can do this by considering all possible formulas that can be obtained by inserting a letter + into the positions between two letters in S. We can use recursion to solve this problem and print the sum of the results.\n\nHere's a possible implementation of the solution in Python:\n\n```python\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"125\") == \"176\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"9101\") == \"18209\"\nassert solution(\"1101\") == \"11001\"\nassert solution(\"5100\") == \"5100\"\nassert solution(\"1234\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"125\") == \"176\", \"Incorrect result\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"176\", \"There are 4 formulas that can be obtained: 125, 1+25, 12+5 and 1+2+5. When each formula is evaluated, \\n - 125\\n - 1+25=26\\n - 12+5=17\\n - 1+2+5=8\\nThus, the sum is 125+26+17+8=176.\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"125\") == \"176\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Solution not correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\na_1 a_2... a_{N}\\n\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\",
        "num_ids_2": 52,
        "num_ids_4": 1027
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Incorrect output for input 1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Incorrect output for input 2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Incorrect output for input 3\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Incorrect output for input 4\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Incorrect output for input 5\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\", \"Incorrect output for input 6\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\\n\"\nassert solution(\"4\\n3 2 1 4\\n\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\\n\"\nassert solution(\"2\\n3 2 1\\n\") == \"2\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"6\\n1 2 3 4 5 6\") == \"1\\n\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\\n\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"15800\", \"The correct output for N = 20 is: 15800\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"15800\", \"Expected output: 15800\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\", \"Incorrect output\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"N\")) == \"15800\\n\", \"Test case 1 failed\"\nassert solution(input(\"N\")) == \"15800\\n\", \"Test case 2 failed\"\nassert solution(input(\"N\")) == \"15800\\n\", \"Test case 3 failed\"\nassert solution(input(\"N\")) == \"15800\\n\", \"Test case 4 failed\"\nassert solution(input(\"N\")) == \"15800\\n\", \"Test case 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"15800\", \"The correctness of the solution is not checked.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"15800\\n\", \"Incorrect answer\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"15800\", \"Test case failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20\") == \"15800\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"15800\", \"The correct answer is 15800.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20\") == \"15800\", \"Test failed\"\nassert solution(\"10\") == \"1600\", \"Test failed\"\nassert solution(\"0\") == \"0\", \"Test failed\"\nassert solution(\"-1\") == \"0\", \"Test failed\"",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ant\\nobe\\rec\\n\") == \"abc\", \"The output should be abc\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ant\\nobe\\nrec\") == \"abc\", \"The letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid are a, b and c from top-right to bottom-left. Concatenate these letters and print abc.\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\", \"The solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ant\") == \"abc\", \"Test failed\"\nassert solution(\"obe\") == \"def\", \"Test failed\"\nassert solution(\"rec\") == \"ghi\", \"Test failed\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ant\\nobe\\rec\") == \"abc\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"2\", \"Your solution is incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('101') == '2', \"The solution should be 2.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\", \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"2\\n\", \"Snuke has a grid consisting of three squares numbered 1, 2 and 3. In each square, either 0 or 1 is written. The number written in Square i is s_i. Snuke will place a marble on each square that says 1. Find the number of squares on which Snuke will place a marble.\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"2\", \"The solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\", \"Testcase 1 failed\"\nassert solution(\"101\") == \"2\", \"Testcase 2 failed\"\nassert solution(\"1011\") == \"2\", \"Testcase 3 failed\"\nassert solution(\"001\") == \"2\", \"Testcase 4 failed\"\nassert solution(\"110\") == \"2\", \"Testcase 5 failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\\n\", \"Your code is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"48000\", \"The accommodation fee is not correct.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\\n\"\nassert solution(\"5\\n3\\n10001\\n9000\") == \"48001\\n\"\nassert solution(\"5\\n3\\n10000\\n9001\") == \"48001\\n\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\\n\"\nassert solution(\"5\\n3\\n10001\\n9001\") == \"48002\\n\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Solution returned {solution(input_str)} but expected {expected_output}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5\\n3\\n10000\\n9000\") == \"48000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"48000\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"5 + -3\") == \"4\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 - 2\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\", \"Error: The result of the formula is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n\nHere, I have defined the `solution` function that takes input from standard input. The function first reads the input from standard input using the `readline()` function. It then checks if the input is a valid input format using the `assert` statement. If the input is not a valid input, it returns an error message.\n\nThe function then evaluates the formula using the `eval()` function and prints the result.\n\nSample Input:\n1 + 2\n\nSample Output:\n3\n\nThis is the correct output.",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 3, \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"2 - 3\") == \"1\"\nassert solution(\"2 * 3\") == \"6\"\nassert solution(\"2 / 3\") == \"0.6666666666666667\"\nassert solution(\"-2 + 3\") == \"1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 69
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"5 - 3\") == \"8\"\nassert solution(\"2 + 2\") == \"4\"\nassert solution(\"1 - 1\") == \"0\"\nassert solution(\"0 + 0\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\nassert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 + 2 + 3\") == \"6\"\nassert solution(\"1 - 2 * 3\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\", \"Output should be 3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"5000\") == \"ARC\"\nassert solution(\"3000\") == \"ABC\"\nassert solution(\"1200\") == \"ABC\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1000) == \"ABC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"ABC\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"500\") == \"ARC\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"ABC\"\n\nprint(\"Smeke's current rating is less than 1200, thus the output should be ABC.\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1000') == 'ABC'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"1500\") == \"ARC\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"ABC\", \"Your code is incorrect. Please provide the correct solution.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"ABC\", \"The output should be ABC\"\nassert solution(\"2000\") == \"ARC\", \"The output should be ARC\"\nassert solution(\"3000\") == \"ABC\", \"The output should be ABC\"\nassert solution(\"4000\") == \"ARC\", \"The output should be ARC\"\nassert solution(\"5000\") == \"ABC\", \"The output should be ABC\"\n\nassert solution(\"6000\") == \"ABC\", \"The output should be ABC\"\nassert solution(\"7000\") == \"ARC\", \"The output should be ARC\"\nassert solution(\"8000\") == \"ABC\", \"The output should be ABC\"\nassert solution(\"9000\") == \"ABC\", \"The output should be ABC\"\nassert solution(\"10000\") == \"ARC\", \"The output should be ARC\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"900 800 1100\") == \"2300\"\nassert solution(\"1000 500 550\") == \"1550\"\nassert solution(\"800 800 800\") == \"1600\"\nassert solution(\"900 800 800\") == \"1800\"",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'The minimum total price of two different bells is 1300 yen.'\nassert solution(input()) == 'The minimum total price of two different bells is 1480 yen.'\nassert solution(input()) == 'The minimum total price of two different bells is 1380 yen.'\nprint('The minimum total price of two different bells is 1300 yen.')",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"700 600 780\") == \"1300\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\\n\", \"Testcase 1 Failed\"\nassert solution(\"800 600 800\") == \"1200\\n\", \"Testcase 2 Failed\"\nassert solution(\"600 700 800\") == \"1300\\n\", \"Testcase 3 Failed\"\nassert solution(\"600 700 600\") == \"1000\\n\", \"Testcase 4 Failed\"\nassert solution(\"1000 200 300\") == \"900\\n\", \"Testcase 5 Failed\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"\n#####\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\na\\nabc\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2 3\\nabc\\narc\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2 3\\nabc\\nabc\\narc\") == \"#####\\n#abc#\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2 3\\nabc\\nabc\\nabc\\narc\") == \"#####\\n#abc#\\n#abc#\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2 3\\nabc\\nabc\\nabc\\nabc\\narc\") == \"#####\\n#abc#\\n#abc#\\n#abc#\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2 3\\nabc\\nabc\\nabc\\nabc\\nabc\\narc\") == \"#####\\n#abc#\\n#abc#\\n#abc#\\n#abc#\\n#abc#\\n#####\"\nassert solution(\"2 3\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\narc\") == \"#####\\n#abc#\\n#abc#\\n#abc#\\n#abc#\\n#abc#\\n#abc#\\n#####\"\n",
        "num_ids_2": 57,
        "num_ids_4": 136
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\na\\nb\\nc\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"\n#####\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nabc\\narc\") == \"\"\"\n#####\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"\"\"#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == '''#####\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nabc\\narc\") == \"\"\"#####\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nabc\\narc\\n\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"3 4\\nabc\\ndef\\nghij\\n\") == \"#####\\n#abc#\\n#def#\\n#ghij#\\n#####\"\nassert solution(\"5 6\\nabc\\ndef\\nghij\\nklmno\\n\") == \"#####\\n#abc#\\n#def#\\n#ghi#\\n#klm#\\n#no#\\n#####\"\nassert solution(\"7 8\\nabc\\ndef\\nghij\\nklmno\\npqrst\\n\") == \"#####\\n#abc#\\n#def#\\n#ghi#\\n#klm#\\n#no#\\n#pq#\\n#rst#\\n#####\"\nassert solution(\"9 10\\nabc\\ndef\\nghij\\nklmno\\npqrst\\nuvwxyz\\n\") == \"#####\\n#abc#\\n#def#\\n#ghi#\\n#klm#\\n#no#\\n#pq#\\n#rst#\\n#vw#\\n#xyz#\\n#####\"",
        "num_ids_2": 70,
        "num_ids_4": 186
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"3\\nIDID\") == \"0\"\nassert solution(\"4\\nIDID\") == \"1\"\nassert solution(\"5\\nIDDI\") == \"1\"\nassert solution(\"6\\nIDDI\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nIIDID\\n\") == \"2\\n\"\nassert solution(\"1\\nIDID\\n\") == \"2\\n\"\nassert solution(\"2\\nIDID\\n\") == \"4\\n\"\nassert solution(\"3\\nIDID\\n\") == \"4\\n\"\nassert solution(\"4\\nIDID\\n\") == \"5\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"The maximum value taken by x during the operations is not 2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\\n\", \"Test 1\"\nassert solution(\"5\\nDIIDD\") == \"2\\n\", \"Test 2\"\nassert solution(\"5\\nDIIDD\") == \"2\\n\", \"Test 3\"\nassert solution(\"5\\nDIIDD\") == \"2\\n\", \"Test 4\"\nassert solution(\"5\\nDIIDD\") == \"2\\n\", \"Test 5\"",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2', \"The maximum value taken by x during the operations should be 2.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2', \"Expected output '2', but got '{}' instead\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2', \"Incorrect output. Expected '2', but got '{}'.\".format(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\\n\", \"Output should be 4.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"100 100\") == \"0\"\nassert solution(\"1000 1000\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 11\") == \"0\"\nassert solution(\"11 10\") == \"0\"\nassert solution(\"10 100\") == \"0\"\nassert solution(\"100000 100000\") == \"0\"\nassert solution(\"1000000000 1000000000\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('5 2 6') == '6'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"The output is not as expected.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n' # Expected output: \"3\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Test failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Your solution is incorrect\"\nprint(\"All tests passed\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4\") == \"3\\n\", \"Solution should return 3\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 4') == '3\\n', \"Invalid solution\"\nprint(\"All test cases passed successfully\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string, f\"Test failed for input {input_string}, expected output {output_string}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == '12'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nprint(\"All tests passed!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {i + 1} failed.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"B\"\nprint(\"All good!\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 7\") == \"B\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2 7') == 'B'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 7') == 'B'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\\n\", \"Test failed for Snuke's closest store: store B is closer\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2017/01/07') == '2018/01/07'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\", \"Solution must return 2018/01/07\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2018/12/31\") == \"2018/12/31\"\nassert solution(\"2018/01/23\") == \"2018/01/23\"\nassert solution(\"2017/01/01\") == \"2018/01/07\"\nassert solution(\"2017/02/29\") == \"2018/02/29\"\nassert solution(\"2017/01/2018\") == \"2018/01/23\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n\nSolution:\n\nWe can solve the problem by modifying the first four characters of the given string \"2017/01/07\" and printing it. The solution is to convert the given string to a datetime object and then format the datetime object to a string in yyyy/mm/dd format. We can then replace the first four characters in the string with \"2018\" and print the modified string.\n\nHere's the code:\n\n```python\nimport datetime",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(\"All test cases pass\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac\\n'\nassert solution('5\\nS1\\nS2\\nS3\\nS4\\nS5\\n') == ''\nassert solution('1\\nS1\\n') == 'S1\\n'\nassert solution('5\\nS1\\nS2\\nS3\\nS4\\nS5\\nS6\\n') == 'S6\\n'\n",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\"\nprint(\"All tests passed!\")",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\\n\"\nassert solution(\"5\\nabc\\ndef\\nghi\\njkl\\nmnopqrstuvwxyz\\nuvwxyz\\n\") == \"hijkl\\n\"\nassert solution(\"1\\nqwerty\\n\\n\\n\\n\\n\") == \"qwerty\\n\"\nassert solution(\"2\\nxyz\\nyz\\nxyz\\nxyz\\n\") == \"yz\\n\"\nassert solution(\"1\\n\") == \"\"\n",
        "num_ids_2": 62,
        "num_ids_4": 115
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\"\nprint(\"All tests pass!\")",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\ncbaa\\ndaac\\nacacac') == 'aac'\nassert solution('4\\nabc\\ndef\\nghi\\nxyz') == ''\nassert solution('6\\nabc\\ndef\\nghi\\nxyz\\nuvw\\nxyz\\n') == 'uvwxyz'",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"aac\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\ncaba\\naaab\\naaaab\\n\") == \"aac\"\nassert solution(\"4\\nhello\\nworld\\n\") == \"\"\nassert solution(\"1\\n\") == \"a\"\nassert solution(\"1\\nhello\\nworld\\n\") == \"a\"\nassert solution(\"5\\npaper\\ncutting\\nnewspaper\\nheadline\\n\") == \"aac\"\nassert solution(\"3\\nabc\\ndef\\nghi\\njkl\\n\") == \"cab\"\nassert solution(\"4\\nabc\\ndef\\nghi\\nklm\\n\") == \"abc\"\nassert solution(\"5\\npaper\\ncutting\\nnewspaper\\nheadline\\n\") == \"aac\"\nassert solution(\"1\\n\") == \"a\"\nassert solution(\"1\\nhello\\nworld\\n\") == \"a\"",
        "num_ids_2": 39,
        "num_ids_4": 69
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\ncba\\ncaa\\n\") == \"aac\"\nassert solution(\"5\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\n\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\"\nassert solution(\"1\\ncbaa\\ndaacc\\nacacac\\n\") == \"aa\"\nassert solution(\"5\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\naaabbbcccdddddeeeee\\n\") == \"acaa\"",
        "num_ids_2": 66,
        "num_ids_4": 114
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\"\nassert solution(\"2\\naaa\\nbbbb\\nccc\\n\") == \"aaa\"\nassert solution(\"1\\nabcd\\n\") == \"abcd\"\nassert solution(\"5\\nabcd\\npqr\\nstu\\nxyz\\n\") == \"\"",
        "num_ids_2": 45,
        "num_ids_4": 82
    },
    {
        "number": 4719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"3\\n1 2\\n2\\n\") == \"1\\n\"\nassert solution(\"1000\\n\") == \"1000\\n\"\nassert solution(\"100001\\n100002\\n100003\\n100004\\n100005\\n100006\\n100007\\n100008\\n100009\\n100010\\n\") == \"100007\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 159
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"7\\n\", \"Test Case 1\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"6\\n\", \"Test Case 2\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"10\\n\", \"Test Case 3\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"11\\n\", \"Test Case 4\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"5\\n\", \"Test Case 5\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n24 30\") == \"7\"\nassert solution(\"2\\n5 10\\n20 25\") == \"10\"\nassert solution(\"3\\n15 20\\n25 30\") == \"16\"\nassert solution(\"4\\n1000 2000\\n15000 25000\") == \"100000\"\nassert solution(\"5\\n500 750\\n12500 17500\\n25000 30000\") == \"150000\"",
        "num_ids_2": 41,
        "num_ids_4": 105
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\\n\", \"Solution should output 7, not {}\".format(solution(input()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\\n\"\nassert solution(\"1\\n3 4\\n\") == \"0\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"1\\n1 100\\n\") == \"1\\n\"\nassert solution(\"1\\n10 100\\n\") == \"10\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7', \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n24 30\\n') == '7\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\", \"Joisino is working as a receptionist at a theater.\\nThe theater has 100000 seats, numbered from 1 to 100000. \\nAccording to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive).\\nHow many people are sitting at the theater now?\\n\\n-----Constraints-----\\n - 1\u2264N\u22641000\\n - 1\u2264l_i\u2264r_i\u2264100000\\n - No seat is occupied by more than one person.\\n - All input values are integers.\\n\\n-----Input-----\\nInput is given from Standard Input in the following format:\\nN\\nl_1 r_1\\n: \\nl_N r_N\\n\\n-----Output-----\\nPrint the number of people sitting at the theater.\\n\\n-----Sample Input-----\\n1\\n24 30\\n\\n-----Sample Output-----\\n7\\n\\nThere are 7 people, sitting at Seat 24,25,26,27,28,29 and 30.\"",
        "num_ids_2": 312,
        "num_ids_4": 312
    },
    {
        "number": 4720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n24 30\") == \"7\\n\"\nassert solution(\"2\\n1 10\") == \"10\\n\"\nassert solution(\"10\\n10 10\") == \"1\\n\"\nassert solution(\"1\\n100 100\") == \"0\\n\"\nassert solution(\"1\\n1 1\") == \"0\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"5 6\") == \"12\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"100 100\") == \"500\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"6\\n\", \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"6\"\nprint(\"All tests passed\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6\\n'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4') == '6', 'Your code is incorrect.'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\\n\", \"Expected: 6\\nGot: %s\" % solution(stdin)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"5 5\") == \"12\"\n\nfrom collections import Counter",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\", \"The number of blocks in K-city is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"Possible\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"5 6\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"9 10\") == \"Impossible\"\nassert solution(\"1 1\") == \"Impossible\"\nassert solution(\"1 10\") == \"Impossible\"\nassert solution(\"0 0\") == \"Impossible\"\nassert solution(\"0 1\") == \"Impossible\"",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 7\") == \"Impossible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 7\") == \"Impossible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 7\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Possible\"\nassert solution(\"4 5\\n\") == \"Possible\"\nassert solution(\"3 4\\n\") == \"Impossible\"\nassert solution(\"5 4\\n\") == \"Impossible\"\nassert solution(\"1 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"Impossible\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"2 3\") == \"Impossible\"\nassert solution(\"1 1\") == \"Possible\"\nassert solution(\"1 2\") == \"Possible\"\nassert solution(\"1 3\") == \"Impossible\"\nassert solution(\"2 3\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"Possible\", \"Please provide valid input\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"6 4\") == \"Impossible\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\nassert solution('?tc????\\ncoder\\n') == 'atcoder'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('?tc????') == 'atcoder', \"Testcase 1 failed\"\nassert solution('coder') == 'atcoder', \"Testcase 2 failed\"\nassert solution('aaaaaa?bbbbbb') == 'atcoder', \"Testcase 3 failed\"\nassert solution('ccdefghij') == 'UNRESTORABLE', \"Testcase 4 failed\"\nassert solution('aa?bc') == 'UNRESTORABLE', \"Testcase 5 failed\"\nassert solution('') == 'UNRESTORABLE', \"Testcase 6 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 83
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution('?tc????\\ncoder') == 'atcoder'\nassert solution",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"S\")) == \"atcoder\"\nassert solution(input(\"T'\")) == \"atcoder\"\nassert solution(input(\"?tc????\")) == \"atcoder\"\nassert solution(input(\"coder\")) == \"atcoder\"\nassert solution(\"?tc????\") == \"atcoder\"\nprint(\"UNRESTORABLE\")",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"?tc????\\ncoder\") == \"atcoder\\n\"\nassert solution(\"?tc????\\ncoder\\n\") == \"atcoder\\n\"\nassert solution(\"?tc????\\ncoder\\n123\") == \"atcoder\\n\"\nassert solution(\"?tc????\\ncoder\\nabcd\") == \"UNRESTORABLE\\n\"\nassert solution(\"?tc????\\ncoder\\nabcdefghijklmnopqrstuvwxyz\") == \"UNRESTORABLE\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"???\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('not a string') == 'UNRESTORABLE'",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"?tc????\") == \"atcoder\", \"E869120 found a chest which is likely to contain treasure.\"\nassert solution(\"coder\") == \"atcoder\", \"The chest is locked. In order to open it, he needs to enter a string S consisting of lowercase English letters.\"\nassert solution(\"notrestorable\") == \"UNRESTORABLE\", \"The chest is locked. In order to open it, he needs to enter a string S consisting of lowercase English letters.\"\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 111
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"notrestorable\") == \"UNRESTORABLE\"",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"?tc????\\ncoder\\n\") == \"atcoder\"\nassert solution(\"\") == \"UNRESTORABLE\"\nassert solution(\"1\\n?t\\n\") == \"UNRESTORABLE\"\nassert solution(\"??\\n?t\\n\") == \"UNRESTORABLE\"\nassert solution(\"?t\\n?\\n\") == \"UNRESTORABLE\"\nassert solution(\"?t\\n?t\\n\") == \"atcoder\"\nassert solution(\"?t\\n?t\\n\\n\") == \"UNRESTORABLE\"",
        "num_ids_2": 29,
        "num_ids_4": 67
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"R\")) == \"2032\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\\n\"\nassert solution(\"2002\\n2032\\n\") == \"2032\\n\"\nassert solution(\"2017\\n2002\\n\") == \"2032\\n\"\nassert solution(\"2002\\n2032\\n\") == \"2032\\n\"\nassert solution(\"2017\\n2032\\n\") == \"2032\\n\"\n\nprint(\"All test cases pass\")",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2002\\n2017') == '2032\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2002\\n2017') == '2032\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2002\\n2017\\n\") == \"2032\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the current rating: \")) == \"2032\"\nprint(\"The performance required to achieve the objective is 2032.\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the sample input and output.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 4, \"The correct answer is 4.\"\nassert solution(\"letter\") == 2, \"The correct answer is 2.\"\nassert solution(\"aaaaaa\") == 0, \"The correct answer is 0.\"\nassert solution(\"uncopyrightable\") == 13, \"The correct answer is 13.\"\nassert solution(\"ambidextrously\") == 12, \"The correct answer is 12.\"\nassert solution(\"assesses\") == 1, \"The correct answer is 1.\"",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"string\") == 4, \"Test Case 1 failed\"\nassert solution(\"letter\") == 2, \"Test Case 2 failed\"\nassert solution(\"aaaaaa\") == 0, \"Test Case 3 failed\"\nassert solution(\"uncopyrightable\") == 13, \"Test Case 4 failed\"\nassert solution(\"ambidextrously\") == 12, \"Test Case 5 failed\"\nassert solution(\"assesses\") == 1, \"Test Case 6 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('string') == 4\nassert solution('letter') == 2\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\nassert solution('assesses') == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"string\") == 4\nassert solution(\"letter\") == 2\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\nassert solution(\"assesses\") == 1\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test {case} failed: expected '{output}', got '{solution(input())}'\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"AC\"\nassert solution() == \"TLE\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"100000000 500 3\\n\"\n) == \"TLE\"\n\nassert solution(\n    \"100000000 50 3\\n\"\n) == \"AC\"\n\nassert solution(\n    \"100000000 10001 5\\n\"\n) == \"TLE\"\n\nassert solution(\n    \"100000000 10000 5\\n\"\n) == \"AC\"\n\nassert solution(\n    \"19931568 1000000 6\\n\"\n) == \"TLE\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 47,
        "num_ids_4": 99
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n2\\n4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n1024 0 0 0\\n4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n1024 0 0 0\\n\"",
        "num_ids_2": 211,
        "num_ids_4": 211
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 203,
        "num_ids_4": 406
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''.strip()\n\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '''\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''.strip()\n\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '''\n0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n'''.strip()\n\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '''\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n'''.strip()\n\nassert solution('2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0') == '''\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n'''.strip()\n\nassert solution('') == ''",
        "num_ids_2": 108,
        "num_ids_4": 216
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"",
        "num_ids_2": 199,
        "num_ids_4": 398
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\n\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\n\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"\n",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"",
        "num_ids_2": 195,
        "num_ids_4": 390
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin), \"Test failed.\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\nH 2\nO\n'''\n) == '0\\n'\n\nassert solution(\n    '''\nC2H6 10\nC3H8\n'''\n) == '6\\n'\n\nassert solution(\n    '''\nCH3OH 1\nCH4\n'''\n) == '1\\n'\n\nassert solution(\n    '''\nC6H6OCH2O 10\nHCN\n'''\n) == '0\\n'\n\nassert solution(\n    '''\nC6H14 10\nC5H10\n'''\n) == '12\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"12\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H 2\\nO\\n\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\\n\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\\n\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\\n\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\\n\") == \"12\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 95
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H 2\\nO\") == \"0\\n\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\\n\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\\n\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\\n\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\\n\"",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"\n",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H 2\\nO\") == \"0\\n\", \"Incorrect output for H 2 O\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\\n\", \"Incorrect output for C2H6 C3H8\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\\n\", \"Incorrect output for CH3OH CH4\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\\n\", \"Incorrect output for C6H6OCH2O HCN\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\\n\", \"Incorrect output for C6H14 C5H10\"",
        "num_ids_2": 63,
        "num_ids_4": 134
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('H 2\\nO') == '0\\n'\nassert solution('C2H6 10\\nC3H8') == '6\\n'\nassert solution('CH3OH 1\\nCH4') == '1\\n'\nassert solution('C6H6OCH2O 10\\nHCN') == '0\\n'\nassert solution('C6H14 10\\nC5H10') == '12\\n'",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\nH 2\nO\n''') == '0\\n'\n\nassert solution(r'''\nC2H6 10\nC3H8\n''') == '6\\n'\n\nassert solution(r'''\nCH3OH 1\nCH4\n''') == '1\\n'\n\nassert solution(r'''\nC6H6OCH2O 10\nHCN\n''') == '0\\n'\n\nassert solution(r'''\nC6H14 10\nC5H10\n''') == '12\\n'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Test 1 failed\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Test 2 failed\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Test 3 failed\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Test 4 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('insecure_inc.in', 'r').read()) == \"PASS\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\", \"Invalid message: ABC HAPPYBIRTHDAYCACEY\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\", \"Invalid message: ABC TRAGICBIRTHDAYCACEY\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\", \"Invalid message: ABC HAPPYBIRTHDAY\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\", \"Invalid message: SECRET SOMECHORESARETOUGH\"",
        "num_ids_2": 72,
        "num_ids_4": 133
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Solution for sample input 1 should be 'PASS'.\"\nassert solution(sample_input_2) == sample_output_2, \"Solution for sample input 2 should be 'FAIL'.\"\nassert solution(sample_input_3) == sample_output_3, \"Solution for sample input 3 should be 'FAIL'.\"\nassert solution(sample_input_4) == sample_output_4, \"Solution for sample input 4 should be 'PASS'.\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the password: \")) == \"PASS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned unexpected output. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(') == '[', 'Incorrect delimiter found'\nassert solution('[') == '{', 'Incorrect delimiter found'\nassert solution('{') == '}', 'Incorrect delimiter found'\nassert solution(')') == '(', 'Incorrect delimiter found'\nassert solution('[') == '{', 'Incorrect delimiter found'\nassert solution('}') == '[', 'Incorrect delimiter found'\nassert solution('}') == ']', 'Incorrect delimiter found'\nassert solution(')') == '(', 'Incorrect delimiter found'",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8') == [(']', 7)]\nassert solution('13') == [('ok so far', 0)]\nassert solution('21') == [(']', 20)]\nassert solution('27') == [('ok so far', 0)]",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt').read()) == 'ok so far'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(() [] [] {})\") == \"] 7\"\nassert solution(\"[[] [] [] [] []]\") == \"] 7\"\nassert solution(\"[[] [] [] [] []]\") == \"ok so far\"\nassert solution(\"[[] [] [] [] [] []]\") == \"] 20\"\nassert solution(\"[[] [] [] [] [] []] () {}\") == \"ok so far\"",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"[] [] ]\") == \"] 7\"\nassert solution(\"(([] [[]] ())\") == \"ok so far\"\nassert solution(\"[{ { () () () () } }]\") == \"] 20\"\nassert solution(\"[{ [[()]] (({})) } ] () {}\") == \"ok so far\"",
        "num_ids_2": 30,
        "num_ids_4": 71
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"[] [] ]\") == (']', 7)\nassert solution(\"(([] [[]] ())\") == ('ok so far',)\nassert solution(\"[ { { () () () } ] ]\") == (']', 20)\nassert solution(\"[ { [[()]] (({})) } ] () {}\") == ('ok so far',)",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'8\\n([] [] ]\\n') == b'] 7\\n'\nassert solution(b'13\\n(([] [[]] ())\\n') == b'ok so far\\n'\nassert solution(b'21\\n[ { { () () () } ]\\n') == b'] 20\\n'\nassert solution(b'27\\n[ { [[()]] (({})) } ] () {}\\n') == b'ok so far\\n'\n",
        "num_ids_2": 51,
        "num_ids_4": 114
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"([]) [] ]\") == \"] 7\\n\"\nassert solution(\"(([] [[]] ())\") == \"ok so far\\n\"\nassert solution(\"([ { { () () () } ] ] ) {}\") == \"] 20\\nok so far\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"([]) [] ]\") == \"]\"\nassert solution(\"(([] [[]] ())\") == \"ok so far\"\nassert solution(\"[ { { () () () } ] ] () {}\") == \"ok so far\"",
        "num_ids_2": 28,
        "num_ids_4": 49
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Fair Game\"\n\nassert solution(stdin) == \"Player 1 lost\"\n\nassert solution(stdin) == \"Player 2 lost\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Fair Game\"\nassert solution(stdin) == \"Player 1 lost\"\nassert solution(stdin) == \"Player 2 lost\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\nextra\\napple') == 'Player 1 lost'\nassert solution('2\\napple\\nneat') == 'Player 2 lost'",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_index + 1} failed\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == 'Fair Game'\nassert solution(sample_input2) == 'Player 1 lost'\nassert solution(sample_input3) == 'Player 2 lost'",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected '{expected_output}', got '{solution(input())}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\\n\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\\n\") == \"Player 2 lost\"",
        "num_ids_2": 50,
        "num_ids_4": 72
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\napple\\nextra\\napple\") == \"Player 2 lost\"\nassert solution(\"3\\napple\\nneat\\nneat\") == \"Player 1 lost\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Fair Game\"\nassert solution(stdin) == \"Player 1 lost\"\nassert solution(stdin) == \"Player 2 lost\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"Player 2 lost\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == 100000\nassert solution(\"10000\") == 100010\nassert solution(\"10\") == 1010",
        "num_ids_2": 35,
        "num_ids_4": 48
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect. Input: {input()}, Output: {output()}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num} failed. Expected output: {expected_output}, Got: {solution(input())}\"\nprint(\"Test passed\")\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1000') == '100000', \"1000\"\nassert solution('10000') == '100100', \"10000\"\nassert solution('10') == '1010', \"10\"",
        "num_ids_2": 50,
        "num_ids_4": 68
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000\") == \"100000\", \"Test 1\"\nassert solution(\"10000\") == \"10010\", \"Test 2\"\nassert solution(\"10\") == \"1010\", \"Test 3\"",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000\\n'\nassert solution('10000\\n+\\n10\\n') == '10010\\n'\nassert solution('10\\n+\\n1000\\n') == '1010\\n'",
        "num_ids_2": 57,
        "num_ids_4": 83
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000') == '100000', \"Test 1\"\nassert solution('10000') == '100100', \"Test 2\"\nassert solution('10') == '10100', \"Test 3\"",
        "num_ids_2": 47,
        "num_ids_4": 67
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"100100\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 37,
        "num_ids_4": 51
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\", \"Incorrect output for 8 out shuffles\"\nassert solution(\"8 in\") == \"6\", \"Incorrect output for 8 in shuffles\"\nassert solution(\"52 out\") == \"8\", \"Incorrect output for 52 out shuffles\"",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3\\n'\nassert solution(input()) == '6\\n'\nassert solution(input()) == '8\\n'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"52 out\") == \"8\"\nassert solution(\"8 in\") == \"6\"\n\nimport random",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='8 out') == '3\\n', \"Solution 1 failed for input 8 out\"\nassert solution(stdin='8 in') == '6\\n', \"Solution 2 failed for input 8 in\"\nassert solution(stdin='52 out') == '8\\n', \"Solution 3 failed for input 52 out\"\nprint(\"All tests passed\")",
        "num_ids_2": 52,
        "num_ids_4": 80
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 out\") == \"3\", \"Invalid output: \" + solution(\"8 out\")\nassert solution(\"8 in\") == \"6\", \"Invalid output: \" + solution(\"8 in\")\nassert solution(\"52 out\") == \"8\", \"Invalid output: \" + solution(\"52 out\")",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 out\") == \"3\", \"Test Case 1\"\nassert solution(\"8 in\") == \"6\", \"Test Case 2\"\nassert solution(\"52 out\") == \"8\", \"Test Case 3\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == f\"Case {input() - 1}: {solution(input())}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test Case {test_case} failed: Expected output {output}, but got {solution(input())}\"\n\ntest_case = 1\noutput = 3\nassert solution(input()) == output, f\"Test Case {test_case} failed: Expected output {output}, but got {solution(input())}\"\n\ntest_case = 2\noutput = 6\nassert solution(input()) == output, f\"Test Case {test_case} failed: Expected output {output}, but got {solution(input())}\"\n\ntest_case = 3\noutput = 8\nassert solution(input()) == output, f\"Test Case {test_case} failed: Expected output {output}, but got {solution(input())}\"",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 out\") == \"3\\n\", \"Error in sample 1\"\nassert solution(\"8 in\") == \"6\\n\", \"Error in sample 2\"\nassert solution(\"52 out\") == \"8\\n\", \"Error in sample 3\"",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"menolaxios mox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"alemaxe maxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"pamoli toxes\"",
        "num_ids_2": 52,
        "num_ids_4": 77
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"The solution for the problem 1 is incorrect.\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"The solution for the problem 2 is incorrect.\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"The solution for the problem 3 is incorrect.\"",
        "num_ids_2": 60,
        "num_ids_4": 89
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Sample Input 1 failed\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Sample Input 2 failed\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Sample Input 3 failed\"",
        "num_ids_2": 52,
        "num_ids_4": 77
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Input 1\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Input 2\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Input 3\"",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Test 1 failed\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Test 2 failed\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Test 3 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 74
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"yes\"\nassert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2018) == \"yes\", \"Sample Input 1\"\nassert solution(2019) == \"no\", \"Sample Input 2\"\nassert solution(2020) == \"yes\", \"Sample Input 3\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"yes\"\nassert solution(sample_input_2) == \"no\"\nassert solution(sample_input_3) == \"yes\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'yes' or solution(stdin) == 'no', \"Invalid input\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2018) == \"yes\"\nassert solution(2019) == \"no\"\nassert solution(2020) == \"yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2018) == 'yes'\nassert solution(2019) == 'no'\nassert solution(2020) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"\n",
        "num_ids_2": 67,
        "num_ids_4": 115
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()}) = {solution(input())}, expected_output = {expected_output}\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 64\nassert solution(3) == 0\nassert solution(10) == 1820000",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"64\"\nassert solution(4) == \"0\"\nassert solution(10) == \"1820000\"",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64\\n'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0\\n'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000\\n'",
        "num_ids_2": 61,
        "num_ids_4": 106
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"\n\nprint(\"All test cases passed\")",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\") == \"1820000\"",
        "num_ids_2": 63,
        "num_ids_4": 109
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"64\", \"The expected output is not found.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=stdin) == \"64\"\nassert solution(stdin=stdin) == \"0\"\nassert solution(stdin=stdin) == \"1820000\"",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330', 'Input 1 failed'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570', 'Input 2 failed'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0', 'Input 3 failed'",
        "num_ids_2": 100,
        "num_ids_4": 148
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Testcase {id} failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == expected, f\"Test failed. Expected {expected}, got {solution()}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 330\"\nassert solution() == \"2 570\"\nassert solution() == \"0 0\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 0\\n30 270 995 996 997 998 999\") == \"2 330\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\"",
        "num_ids_2": 88,
        "num_ids_4": 130
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}!= {output()}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0 0', 'Your solution is incorrect.'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\", \"Invalid test case 1\"\nassert solution(\"abbaabbaabba\") == \"2\", \"Invalid test case 2\"\nassert solution(\"abcdef\") == \"6\", \"Invalid test case 3\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == 1\nassert solution('abbaabbaabba') == 2\nassert solution('abcdef') == 6",
        "num_ids_2": 23,
        "num_ids_4": 32
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\nfrom typing import List",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\"",
        "num_ids_2": 111,
        "num_ids_4": 149
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"1\"\nassert solution(sample_input_3) == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\") == \"2\\n1 2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\") == \"1\\n1\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\\n\") == \"0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 156
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\nSample Output 1:\\n2\\n1 2\\n\") == \"2\\n1 2\\n\"\n\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\nSample Output 2:\\n1\\n1\\n\") == \"1\\n1\\n\"\n\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\\nSample Output 3:\\n0\\n11 12 15 19 24 30\\n\"",
        "num_ids_2": 144,
        "num_ids_4": 208
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=solution1.txt) == solution2.txt\nassert solution(stdin=solution3.txt) == solution4.txt",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Expected '{output_str}', got '{solution(input_str)}'\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 154
    },
    {
        "number": 4739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\\n1 2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\\n1\\n\"\nassert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"0\\n\"",
        "num_ids_2": 114,
        "num_ids_4": 154
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5551212) == 1, \"5551212 should be routed to the directory information operator.\"\nassert solution(5519876) == 0, \"5519876 should not be routed to the directory information operator.\"\nassert solution(5055555) == 0, \"5055555 should not be routed to the directory information operator.\"\n",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5551212) == 1, \"Solution should return 1\"\nassert solution(5519876) == 0, \"Solution should return 0\"\nassert solution(5055555) == 0, \"Solution should return 0\"",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5551212) == 1, \"5551212 should be routed to the directory information operator.\"\nassert solution(5519876) == 0, \"5519876 should not be routed to the directory information operator.\"\nassert solution(5055555) == 0, \"5055555 should not be routed to the directory information operator.\"",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5551212) == 1, \"5551212 is not routed to the directory information operator\"\nassert solution(5519876) == 0, \"5519876 is routed to the directory information operator\"\nassert solution(5055555) == 0, \"5055555 is not routed to the directory information operator\"",
        "num_ids_2": 67,
        "num_ids_4": 101
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Input: {stdin}\\nExpected Output: {expected}\\nOutput: {solution(stdin)}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5551212) == 1\nassert solution(5519876) == 0\nassert solution(5055555) == 0",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n\nfrom sys import stdin",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"32/1\") == \"0/1\"\nassert solution(stdin=\"33/1\") == \"5/9\"\nassert solution(stdin=\"-40/1\") == \"-40/1\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"The output is {solution(stdin)}, expected {expected_output}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32/1\\n\") == \"0/1\\n\"\nassert solution(\"33/1\\n\") == \"5/9\\n\"\nassert solution(\"-40/1\\n\") == \"-40/1\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(32/1) == 0/1, \"32/1 should be 0/1\"\nassert solution(33/1) == 5/9, \"33/1 should be 5/9\"\nassert solution(-40/1) == -40/1, \"Negative 40/1 should be 0/1\"",
        "num_ids_2": 54,
        "num_ids_4": 84
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0/1\"\nassert solution(input()) == \"5/9\"\nassert solution(input()) == \"-40/1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('32/1\\n') == '0/1\\n'\nassert solution('33/1\\n') == '5/9\\n'\nassert solution('-40/1\\n') == '-40/1\\n'",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=f'32/1') == '0/1'\nassert solution(stdin=f'33/1') == '5/9'\nassert solution(stdin=f'-40/1') == '-40/1'",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('32/1') == '0/1', \"Expected 0/1, but got {}\".format(solution('32/1'))\nassert solution('33/1') == '5/9', \"Expected 5/9, but got {}\".format(solution('33/1'))\nassert solution('-40/1') == '-40/1', \"Expected -40/1, but got {}\".format(solution('-40/1'))",
        "num_ids_2": 68,
        "num_ids_4": 104
    },
    {
        "number": 4741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32/1\") == \"0/1\", \"Test case 1 failed\"\nassert solution(\"33/1\") == \"5/9\", \"Test case 2 failed\"\nassert solution(\"-40/1\") == \"-40/1\", \"Test case 3 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(['3', 'C E G', 'D F# A']) == 'Transposition\\n'\nassert solution(['7', 'C C G G A A G', 'C C F F D# D# F']) == 'Inversion\\n'\nassert solution(['7', 'A B C D E F G', 'G F E D C B A']) == 'Retrograde\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 58,
        "num_ids_4": 104
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nC E G\\nD F# A\\n') == 'Transposition\\n'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion\\n'\nassert solution('7\\nA B C D E F G\\nG F E D C B A\\n') == 'Retrograde\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 62,
        "num_ids_4": 109
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    \nC E G\n    \nD F# A\n    \n\"\"\"\n) == \"Transposition\"\n\nassert solution(\n    \"\"\"\n    7\n    \nC C G G A A G\n    \nC C F F D# D# F\n    \n\"\"\"\n) == \"Inversion\"\n\nassert solution(\n    \"\"\"\n    7\n    \nA B C D E F G\n    \nG F E D C B A\n    \n\"\"\"\n) == \"Retrograde\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\nC E G\\nD F# A') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A') == 'Retrograde'",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"Transposition\"\nassert solution(7) == \"Inversion\"\nassert solution(7) == \"Retrograde\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\") == \"Retrograde\"",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Transposition\", \"Expected 'Transposition', got: \" + solution()",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nC E G\\nD F# A\\n\") == \"Transposition\\n\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\\n\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\\ndef solution(stdin: str) -> str:\n    pass\"",
        "num_ids_2": 62,
        "num_ids_4": 103
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1: I love ba-na-na\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2: Cat-a-pil-lar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3: Co-ding is the best\"\n",
        "num_ids_2": 67,
        "num_ids_4": 102
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2 failed\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Gah kove bababa\", \"Test 1 failed\"\nassert solution(input()) == \"Catacillar\", \"Test 2 failed\"\nassert solution(input()) == \"Cociccah gs the bestuh\", \"Test 3 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Test 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Test 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Test 3\"",
        "num_ids_2": 51,
        "num_ids_4": 79
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\", \"Incorrect output for sample input 1\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\", \"Incorrect output for sample input 2\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\", \"Incorrect output for sample input 3\"",
        "num_ids_2": 59,
        "num_ids_4": 91
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed. Output: '{solution(input())}', Expected: '{output}'.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"6\\n\"\nassert solution(\"4\\n\") == \"16\\n\"\nassert solution(\"3\\n\") == \"14\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 6, \"Sample Input 1: 1, Sample Output 1: 6\"\nassert solution(2) == 16, \"Sample Input 2: 2, Sample Output 2: 16\"\nassert solution(3) == 14, \"Sample Input 3: 3, Sample Output 3: 14\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 6, \"Your solution is incorrect. Expected 6, but got {}\".format(solution(1))\nassert solution(2) == 16, \"Your solution is incorrect. Expected 16, but got {}\".format(solution(2))\nassert solution(3) == 14, \"Your solution is incorrect. Expected 14, but got {}\".format(solution(3))",
        "num_ids_2": 60,
        "num_ids_4": 91
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"16\\n\"\nassert solution(stdin) == \"14\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 6\nassert solution(2) == 16\nassert solution(3) == 14",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 6\nassert solution(2) == 16\nassert solution(3) == 14\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"1\\n\") == \"6\\n\"\nassert solution(stdin=\"4\\n\") == \"16\\n\"\nassert solution(stdin=\"3\\n\") == \"14\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 6, \"The correct output for sample case 1 is: 6\"\nassert solution(4) == 16, \"The correct output for sample case 2 is: 16\"\nassert solution(3) == 14, \"The correct output for sample case 3 is: 14\"\n",
        "num_ids_2": 50,
        "num_ids_4": 76
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2'\nassert solution('4 10\\n1 3 1 7\\n') == '4'",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\") == \"4\"\n\nfrom typing import List",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 6\n1 2 3 4 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"5 10\n4 8 1 9 7\n\"\"\") == \"2\"\n\nassert solution(\"\"\"4 10\n1 3 1 7\n\"\"\") == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 23
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3\\n'\n\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '2\\n'\n\nassert solution('''\n4 10\n1 3 1 7\n''') == '4\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 3 4 5\\n\") == \"3\\n\"\nassert solution(\"5 10\\n4 8 1 9 7\\n\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 1 7\\n\") == \"4\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == 'possible'\n\nassert solution(\n\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == 'impossible'\n\nassert solution(\n\"\"\"\n1 2\n0 1 0\n1 0 1\n\"\"\") == 'impossible'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'possible'\nassert solution(open('test_input1.txt', 'r')) == 'possible'\nassert solution(open('test_input2.txt', 'r')) == 'impossible'\nassert solution(open('test_input3.txt', 'r')) == 'impossible'",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\n\nassert solution(r\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\"\n\nassert solution(r\"\"\"\n1 2\n0 1 0\n1 0 1\n\"\"\") == \"impossible\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'possible', \"Error: Solution not implemented\"\nassert solution() == 'possible', \"Error: Solution not implemented\"\nassert solution() == 'possible', \"Error: Solution not implemented\"\nassert solution() == 'possible', \"Error: Solution not implemented\"\nassert solution() == 'impossible', \"Error: Solution not implemented\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible\\n'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible\\n'\nassert solution('1 2\\n0 1 0\\n1 0 1') == 'impossible\\n'",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    1 2\n    0 1 1\n    1 0 0\n    ''') == 'possible'\n\nassert solution('''\n    1 2\n    1 0 0\n    0 1 0\n    ''') == 'impossible'\n\nassert solution('''\n    1 2\n    0 1 0\n    1 0 1\n    ''') == 'impossible'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\\n\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\\n\") == \"impossible\"\n",
        "num_ids_2": 57,
        "num_ids_4": 86
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n2 3\\n6 2') == '1\\n2.0'\nassert solution('1 3\\n2 4\\n3 1\\n4 5\\n5 2') == '1.5'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == '5.5'",
        "num_ids_2": 61,
        "num_ids_4": 95
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n2 3\\n6 2\") == \"1\\n1.875\\n4.25\"\nassert solution(\"1 100\\n1 1\") == \"1\"\nassert solution(\"2 100\\n1 100\") == \"1.875\"\nassert solution(\"6 100\\n1 1\") == \"4.25\"",
        "num_ids_2": 54,
        "num_ids_4": 101
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"1\"\nassert solution(sample_input2) == \"1.875\"\nassert solution(sample_input3) == \"4.25\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.875\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"The expected output is '{expected}', but the output is '{solution(stdin)}'.\"\nfor i in range(10):\n    n, k = map(int, input().split())\n    expected = expected_output[i]\n    assert solution(stdin) == expected, f\"The expected output is '{expected}', but the output is '{solution(stdin)}'.\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=''), 'No input provided'\n\nn, k = map(int, stdin.split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1.875\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"The expected output for Sample Input 1 is 1.\"\nassert solution(stdin) == \"1.875\\n\", \"The expected output for Sample Input 2 is 1.875.\"\nassert solution(stdin) == \"4.25\\n\", \"The expected output for Sample Input 3 is 4.25.\"",
        "num_ids_2": 58,
        "num_ids_4": 89
    },
    {
        "number": 4747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"2 3\") == \"1.875\\n\"\nassert solution(\"6 2\") == \"4.25\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"0 0\", \"Sample Input 2\"\nassert solution(4) == \"1 4\", \"Sample Input 2\"\nassert solution(3) == \"1 6\", \"Sample Input 3\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0 0\\n1 4\\n1 6\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1,1,0) == \"0 0\"\nassert solution(4,2,7) == \"1 4\"\nassert solution(3,0,0) == \"1 6\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0 0\\n1 4'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1, 1) == 1\nassert solution(3, 1, 2) == 1\nassert solution(3, 1, 3) == 2\nassert solution(3, 1, 4) == 2\nassert solution(3, 1, 5) == 3\nassert solution(3, 1, 6) == 4\nassert solution(3, 1, 7) == 5\nassert solution(3, 1, 8) == 6\nassert solution(3, 1, 9) == 7\nassert solution(3, 1, 10) == 8\nassert solution(3, 1, 11) == 9\nassert solution(3, 1, 12) == 10\nassert solution(3, 1, 13) == 11\nassert solution(3, 1, 14) == 12\nassert solution(3, 1, 15) == 13\nassert solution(3, 1, 16) == 14\nassert solution(3, 1, 17) == 15\nassert solution(3, 1, 18) == 16\nassert solution(3, 1, 19) == 17\nassert solution(3, 1, 20) == 18\nassert solution(3, 1, 21) == 19\nassert solution(3, 1, 22) == 20\nassert solution(3, 1, 23) == 21\nassert solution(3, 1, 24) == 22\nassert solution(3, 1, 25) == 23\nassert solution(3, 1, 26) == 24\nassert solution(3, 1, 27) == 25\nassert solution(3, 1, 28) == 26\nassert solution(3, 1, 29) == 27\nassert solution(3, 1, 30) == 28\nassert solution(3, 1, 31) == 29\nassert solution(3, 1, 32) == 30\nassert solution(3, 1, 33) == 31\nassert solution(3, 1, 34) == 32\nassert solution(3, 1, 35) == 33\nassert solution(3, 1, 36) == 34\nassert solution(3, 1, 37) == 35\nassert solution(3, 1, 38) == 36\nassert solution(3, 1, 39) == 37\nassert solution(3, 1, 40) == 38\nassert solution(3, 1, 41) == 39\nassert solution(3, 1, 42) == 40\nassert solution(3, 1, 43) == 41\nassert solution(3, 1, 44) == 42\nassert solution(3, 1, 45) == 43\nassert solution(3, 1, 46) == 44\nassert solution(3, 1, 47) == 45\nassert solution(3, 1, 48) == 46\nassert solution(3, 1, 49) == 47\nassert solution(3, 1, 50) == 48\nassert solution(3, 1, 51) == 49\nassert solution(3, 1, 52) == 50\nassert solution(3, 1, 53) == 51\nassert solution(3, 1, 54) == 52\nassert solution(3, 1, 55) == 53\nassert solution(3, 1, 56) == 54\nassert solution(3, 1, 57) == 55\nassert solution(3, 1, 58) == 56\nassert solution(3, 1, 59) == 57\nassert solution(3, 1, 60) == 58\nassert solution(3, 1, 61) == 59\nassert solution(3, 1, ",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 0\") == \"0 0\\n\"\nassert solution(\"4 2 7\") == \"1 4\\n\"\nassert solution(\"3 0 0\") == \"1 6\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 0\nassert solution(4) == 1\nassert solution(7) == 4",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Expected {output()}, got {solution(input())}.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\"\nassert solution(\"4\\nBWWB\\nBWBB\\nWBBW\\nWBWW\\n\") == \"0\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 107
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\", \"Test case 1 failed\"\nassert solution() == \"0\", \"Test case 2 failed\"\nassert solution() == \"0\", \"Test case 3 failed\"\nassert solution() == \"0\", \"Test case 4 failed\"\nassert solution() == \"0\", \"Test case 5 failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nBWWB\\nBWB\\nBWWB\") == \"1\\n\"\nassert solution(\"4\\nWBBW\\nWBWB\\nBWWB\") == \"0\\n\"\nassert solution(\"4\\nBWWB\\nWBWB\\nBWWB\") == \"1\\n\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 115
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == expected, f\"Test failed for function solution: {solution()}\"\nprint(f\"Test passed for function solution\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())} should be {output}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output\\n2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution}\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\\n\", \"Test Failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '2\\n3\\n3\\n1\\n3\\n3\\n'\nassert solution(4) == '2\\n3\\n3\\n1\\n3\\n3\\n'\nassert solution(5) == '2\\n3\\n3\\n1\\n3\\n3\\n'\nassert solution(6) == '2\\n3\\n3\\n1\\n3\\n3\\n'\nassert solution(7) == '2\\n3\\n3\\n1\\n3\\n3\\n'\nassert solution(8) == '2\\n3\\n3\\n1\\n3\\n3\\n'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output:\\n2\\n3\\n3\\n1\\n3\\n\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"2 3\\n3 2\"\nassert solution(4) == \"3 2\"\nassert solution(5) == \"3 2\"\nassert solution(6) == \"1 2\\n3 4\"\nassert solution(7) == \"3 2\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 2, 0, -4], 1) == True\nassert solution([1, 2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 34,
        "num_ids_4": 45
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input: head = [3,2,0,-4], pos = 1\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\", \"Input: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\").__name__ == \"__main__\"\nassert solution(\"Input: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node.\").__name__ == \"__main__\"\nassert solution(\"Input: head = [1], pos = -1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\").__name__ == \"__main__\"",
        "num_ids_2": 162,
        "num_ids_4": 204
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 2, 0, -4]) == True\nassert solution([1, 2]) == True\nassert solution([1]) == False\nassert solution([-1]) == False\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('[3,2,0,-4]') == 'true'\nassert solution('[1,2]') == 'true'\nassert solution('[1]') == 'false'\nassert solution('[1,2,3]') == 'false'\nassert solution('[3,2,0,-4,null,null,null,1]') == 'true'",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input: head = [3,2,0,-4], pos = 1\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).\") == \"true\"\nassert solution(\"Input: head = [1,2], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node. \") == \"true\"\nassert solution(\"Input: head = [1], pos = -1\\nOutput: false\\nExplanation: There is no cycle in the linked list.\") == \"false\"\nassert solution(\"Input: head = [1,2,3,4,5], pos = 2\\nOutput: false\\nExplanation: There is no cycle in the linked list.\") == \"false\"\nassert solution(\"Input: head = [], pos = 0\\nOutput: true\\nExplanation: There is a cycle in the linked list, where the tail connects to the 0th node. \") == \"true\"\nassert solution(\"Input: head = [1], pos = 0\\nOutput: false\\nExplanation: There is no cycle in the linked list. \") == \"false\"",
        "num_ids_2": 110,
        "num_ids_4": 192
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\nassert solution([1], 1) == False\nassert solution([1], 0) == False\nassert solution([1,2], 1) == False\nassert solution([1,2,3], 0) == False\nassert solution([1,2], -1) == False",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3,2,0,-4], 1) == True\nassert solution([1,2], 0) == True\nassert solution([1], -1) == False\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2,7,11,15\") == [0, 1]",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2,7,11,15,1\") == [0, 1], \"Test case 1 failed\"\nassert solution(\"2,7,11,15,2\") == [1, 2], \"Test case 2 failed\"\nassert solution(\"2,7,11,15,3\") == [2, 3], \"Test case 3 failed\"\nassert solution(\"2,7,11,15,4\") == [3, 4], \"Test case 4 failed\"\nassert solution(\"2,7,11,15,5\") == [4, 5], \"Test case 5 failed\"",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([\"2\", \"7\", \"11\", \"15\"], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\nassert solution([3, 2, 4]) == [0, 1]\nassert solution([2, 2, 2, 2]) == [1, 2]\nassert solution([2, 2, 2, 2, 2, 2, 2]) == [4, 5]\nassert solution([1, 2, 3, 4, 5]) == [2, 4]",
        "num_ids_2": 43,
        "num_ids_4": 96
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 7 11 15 9\\n\") == \"[0, 1]\\n\"\n\nassert solution(stdin=\"1 2 3 4 5\\n\") == \"[1, 2]\\n\"\n\nassert solution(stdin=\"1 2 3\\n\") == \"[0, 1]\\n\"\n\nassert solution(stdin=\"1 2\\n\") == \"[0, 1]\\n\"\n\nassert solution(stdin=\"1 2 3 4\\n\") == \"[0, 1]\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 100
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\nassert solution([2, 3, 1, 4, 5]) == [0, 1]\nassert solution([2, 2, 2, 3, 2, 2]) == [1, 4]\nassert solution([1, 1, 1, 1, 1]) == [0, 4]\nassert solution([5, 4, 3, 2, 1]) == [1, 2]",
        "num_ids_2": 49,
        "num_ids_4": 102
    },
    {
        "number": 4752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, \"Sample Input {0}, Output {1}\".format(stdin, output)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0, \"Sample Input 1\"\nassert solution(4) == 1, \"Sample Input 2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution.__doc__ == \"Find the number of intersections between pairs of diagonals in such a polygon.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == 0\nassert solution(\"4\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 1\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test {case} failed. Expected output: {expected}, got {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 0, \"Test Case 1 failed\"\nassert solution(4) == 1, \"Test Case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3') == 0\nassert solution(stdin='4') == 1",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 0\nassert solution(4) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, \"1 2 2 1\") == 4\nassert solution(2, \"1 2 2 1\") == 4\nassert solution(1, \"1 2 2 1 2 3\") == 3\nassert solution(1, \"1 2 2 1 2 2\") == 2\nassert solution(1, \"1 2 2 1 2 1\") == 2\nassert solution(1, \"1 2 2 1 1 1\") == 2\nassert solution(1, \"1 1 1 1 1 1\") == 2\nassert solution(1, \"1 1 1 1 1 1 1\") == 2",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='1\\n2\\n1 2 2 1\\n2\\n1 2 1\\n1\\n3 7\\n1\\n') == '4\\n'\nassert solution(stdin='2\\n1\\n3 7\\n1\\n2\\n1\\n1\\n') == 'impossible\\n'\nassert solution(stdin='1\\n3 7\\n1\\n2\\n1\\n') == 'impossible\\n'",
        "num_ids_2": 86,
        "num_ids_4": 117
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2 1\") == \"4\"\nassert solution(\"1\\n3 7\") == \"impossible\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"impossible\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution(stdin) = {solution(stdin)}, expected_output = {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abcde') == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\"\nprint(\"impossible\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n3\\n7\\n1\") == \"4\\n\"\nassert solution(\"1\\n3\\n7\\n1\") == \"impossible\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"184 1\\n123450995 1\") == \"180\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input {input()} is incorrect. Expected output {output()}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"184 1\\n123450995 1\") == 180\nassert solution(\"184 2\\n123450995 1\") == 180\nassert solution(\"123450995 2\\n123450995 2\") == 123451000\nassert solution(\"123450995 2\\n123450995 3\") == 123451000\nassert solution(\"123450995 2\\n123450995 4\") == 123451000\nassert solution(\"123450995 2\\n123450995 5\") == 123451000",
        "num_ids_2": 56,
        "num_ids_4": 136
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"184 1\\n123450995 1\") == \"180\\n\"\nassert solution(\"184 2\\n123450995 2\") == \"180\\n\"\nassert solution(\"184 3\\n123450995 3\") == \"180\\n\"\nassert solution(\"184 4\\n123450995 4\") == \"180\\n\"\nassert solution(\"184 5\\n123450995 5\") == \"180\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"184 1\\n\") == \"180\\n\"\nassert solution(\"123450995 1\\n\") == \"123451000\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"184 1\\n123450995 1\\n\") == \"180\\n123451000\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"0.000000\"\nassert solution(sample_input_2) == \"0.000000\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=stdin) == expected\nassert solution(stdin=stdin) == expected",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.000000\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected {output_data}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000000\", \"Solution should return 0.000000\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.000000\"\nassert solution() == \"0.000000\"\nassert solution() == \"0.000000\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\\n\") == \"0.000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.000000, \"Test case 1 failed\"\nassert solution() == 0.000000, \"Test case 2 failed\"\nassert solution() == 0.000000, \"Test case 3 failed\"\nassert solution() == 0.000000, \"Test case 4 failed\"\nassert solution() == 0.000000, \"Test case 5 failed\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['1', '2', '4', '6', '8']",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution is incorrect, expected output: {expected_output}, actual output: {solution}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n4\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1', '2', '4', '6', '8']",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nassert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == \"1\\n2\\n4\\n\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == \"1\\n2\\n6\\n8\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 158
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2\\n4\\n6\\n8\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output all villagers that know all songs, including the bard, one integer per line in ascending order.\\n1\\n2\\n4\\n6\\n8\\n', \"Test 1 failed\"\nassert solution(stdin) == 'Output all villagers that know all songs, including the bard, one integer per line in ascending order.\\n1\\n2\\n4\\n6\\n8\\n', \"Test 2 failed\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == ['1', '2', '4']\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == ['1', '2', '6', '8']",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\") == [\"1\", \"2\", \"4\"]\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\") == [\"1\", \"2\", \"6\", \"8\"]\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\", \"Invalid Input\"\nassert solution(\"2 2 2\") == \"8\\n\", \"Invalid Input\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=r\"3 4 5\") == \"60\"\nassert solution(stdin=r\"2 2 2\") == \"8\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The solution is not correct. Please check the example inputs and the function signature.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"60\\n\"\nassert solution(input()) == \"8\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 5') == '60\\n', \"Invalid Input\"\nassert solution('2 2 2') == '8\\n', \"Invalid Input\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"60\\n\", \"Incorrect output\"\nassert solution(\"2 2 2\") == \"8\\n\", \"Incorrect output\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == 60\nassert solution(\"2 2 2\") == 8",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"60\\n\", \"Solution is incorrect\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1.6666666666666667'\nassert solution() == '2.5'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1.6666666666666667', 'The solution is not correct'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667', 'Sample Input 1'\nassert solution('3\\n1 -1 4') == '2.5', 'Sample Input 2'\nassert solution('4\\n1\\n2\\n3\\n4\\n5') == '1.0', 'Sample Input 3'\nassert solution('3\\n0\\n1\\n2\\n3') == '1.0', 'Sample Input 4'\nassert solution('3\\n0\\n1\\n2\\n3\\n4') == '1.0', 'Sample Input 5'\nassert solution('3\\n1\\n1\\n2\\n2\\n3') == '2.0', 'Sample Input 6'",
        "num_ids_2": 65,
        "num_ids_4": 128
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\", \"Sample Input 1\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\", \"Sample Input 2\"\nassert round(solution(\"3\\n3 0 2\"), 3) == \"1.67\", \"Sample Output 1\"\nassert round(solution(\"3\\n1 -1 4\"), 3) == \"2.50\", \"Sample Output 2\"",
        "num_ids_2": 65,
        "num_ids_4": 127
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1.6666666666666667\nassert solution(3) == 2.5",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1.6666666666666667\nassert solution(3) == 1.6666666666666667\nassert solution(3) == 1.6666666666666667",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\n3 0 2') == '1.6666666666666667'\nassert solution(stdin='3\\n1 -1 4') == '2.5'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the number of at-bats: \")) == \"1.6666666666666667\"\nassert solution(input(\"Enter the number of at-bats: \")) == \"2.5\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 0 2\") == 1.6666666666666667\nassert solution(\"3\\n1 -1 4\") == 2.5\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\", \"The given input is incorrect.\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\", \"The given input is incorrect.\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"Output the 6-th number to be crossed out.\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Please check the code again.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"6\", \"Test 1 failed\"\nassert solution(\"15 12\") == \"7\", \"Test 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3') == '6\\n'\nassert solution('15 12') == '7\\n'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output the 7-th number to be crossed out.\", \"Test failed for input 1.\"\nassert solution(input()) == \"Output the 7-th number to be crossed out.\", \"Test failed for input 2.\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == 6\nassert solution(\"15 12\") == 7",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\\n\", \"7 3 should return 6\"\nassert solution(\"15 12\") == \"7\\n\", \"15 12 should return 7\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n15 12\\n\") == \"7\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7, 3) == 6, \"The solution should be 6\"\nassert solution(15, 12) == 7, \"The solution should be 7\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '1'\nassert solution(sample_input2) == '0'\n\nsample_input1 = \"\"\"123864 123865\"\"\"\nsample_input2 = \"\"\"198765 198769\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123864 123865\") == \"1\\n\", \"Your solution is incorrect.\"\nassert solution(\"198765 198769\") == \"0\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('123864 123865') == '1', \"Incorrect answer\"\nassert solution('198765 198769') == '0', \"Incorrect answer\"\nprint('All tests passed!')",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test Case {test_case_id} Failed\" for test_case_id, input, output in [\n    (1, \"1\"),\n    (2, \"1\"),\n    (3, \"2\"),\n    (4, \"3\"),\n    (5, \"4\"),\n    (6, \"5\"),\n    (7, \"6\"),\n    (8, \"7\"),\n    (9, \"8\"),\n    (10, \"9\"),\n    (11, \"10\"),\n    (12, \"11\"),\n    (13, \"12\"),\n    (14, \"13\"),\n    (15, \"14\"),\n    (16, \"15\"),\n    (17, \"16\"),\n    (18, \"17\"),\n    (19, \"18\"),\n    (20, \"19\"),\n    (21, \"20\"),\n    (22, \"21\"),\n    (23, \"22\"),\n    (24, \"23\"),\n    (25, \"24\"),\n    (26, \"25\"),\n    (27, \"26\"),\n    (28, \"27\"),\n    (29, \"28\"),\n    (30, \"29\"),\n    (31, \"30\"),\n    (32, \"31\"),\n    (33, \"32\"),\n    (34, \"33\"),\n    (35, \"34\"),\n    (36, \"35\"),\n    (37, \"36\"),\n    (38, \"37\"),\n    (39, \"38\"),\n    (40, \"39\"),\n    (41, \"40\"),\n    (42, \"41\"),\n    (43, \"42\"),\n    (44, \"43\"),\n    (45, \"44\"),\n    (46, \"45\"),\n    (47, \"46\"),\n    (48, \"47\"),\n    (49, \"48\"),\n    (50, \"49\"),\n    (51, \"50\"),\n    (52, \"51\"),\n    (53, \"52\"),\n    (54, \"53\"),\n    (55, \"54\"),\n    (56, \"55\"),\n    (57, \"56\"),\n    (58, \"57\"),\n    (59, \"58\"),\n    (60, \"59\"),\n    (61, \"60\"),\n    (62, \"61\"),\n    (63, \"62\"),\n    (64, \"63\"),\n    (65, \"64\"),\n    (66, \"65\"),\n    (67, \"66\"),\n    (68, \"67\"),\n    (69, \"68\"),\n    (70, \"69\"),\n    (71, \"70\"),\n    (72, \"71\"),\n    (73, \"72\"),\n    (74, \"73\"),\n    (75, \"74\"),\n    (76, \"75\"),\n    (77, \"76\"),\n    (78, \"77\"),\n    (79, \"78\"),\n    (80, \"79\"),\n    (81, \"80\"),\n    (82, \"81\"),\n    (83, \"82\"),\n    (84, \"83\"),\n    (85, \"84\"),\n    (86, \"85\"),\n    (87, \"86\"),\n    (88, \"87\"),\n    (89, \"88\"),\n    (90, \"89\"),\n    (91, \"90\"),\n    (92, \"91\"),\n    (93, \"92\"),\n    (94, \"93\"),\n    (95, \"94\"),\n    (96, \"95\"),\n    (97, \"96\"),\n    (98, \"97\"),\n    (99, \"98\"),\n    (100, \"99\"),\n    (101, \"100\"),\n    (102, \"101\"),\n    (103, \"102\"),\n    (104, \"103\"),\n    (105, \"104\"),\n    (106, \"105\"),\n    (107, \"106\"),\n    (108, \"107\"),\n    (109, \"108\"),\n    (110, \"109\"),\n   ",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('123864 123865\\n198765 198769') == '1\\n'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"123864 123865\") == \"1\\n\"\nassert solution(\"198765 198769\") == \"0\\n\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Incorrect output for input {input()}\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(123864, 123865) == 1\nassert solution(198765, 198769) == 0",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\", \"Invalid input\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0.66666667\"\nassert solution(2) == \"0.50000000\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.50000000, \"Output 1 is incorrect\"\nassert solution() == 0.66666667, \"Output 2 is incorrect\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Expected '{output}', got '{solution(stdin=input())}'\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 0.5\nassert solution(3) == 0.66666667",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.50000000'\nassert solution(stdin) == '0.66666667'\n\nfrom typing import List\nimport random",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3') == 0.66666667",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == 0.5, \"Test case 1 failed\"\nassert solution(1000) == 0.011927841091891169, \"Test case 2 failed\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect, expected {output}, but got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '0.50000000'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0.66666667\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(180) == \"triple 20\", \"Test 1: Impossible\"\nassert solution(96) == \"triple 19\", \"Test 2: Impossible\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(180) == \"triple 20\", \"The correct output for the given input is not given.\"\nassert solution(96) == \"triple 19\", \"The correct output for the given input is not given.\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(180) == \"triple 20\\ntriple 20\\ntriple 20\"\nassert solution(96) == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\"  # correct output",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(180) == \"triple 20\"\nassert solution(96) == \"triple 19\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='10 4 7\\n5 2 2\\n') == '168\\n'\nassert solution(stdin='10 4 7\\n5 2 2\\n') == '168\\n'\nassert solution(stdin='10 4 7\\n5 2 2\\n') == '168\\n'\nassert solution(stdin='10 4 7\\n5 2 2\\n') == '168\\n'\nassert solution(stdin='10 4 7\\n5 2 2\\n') == '168\\n'\nassert solution(stdin='10 4 7\\n5 2 2\\n') == '168\\n'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"The provided solution is incorrect. Expected: {output()}, but got: {solution(input())}\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 4 7') == '168', 'Test Case 1 failed'\nassert solution('5 2 2') == '36', 'Test Case 2 failed'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 7\") == \"168\", \"Sample Output 1\"\nassert solution(\"5 2 2\") == \"36\", \"Sample Output 2\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\nfor example in [\n    [\"10 4 7\", \"168\"],\n    [\"5 2 2\", \"36\"],\n]:\n    assert solution(example[0]) == example[1]",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 7\\n') == '168\\n'\nassert solution('5 2 2\\n') == '36\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 7\") == \"168\", \"Sample Input 1\"\nassert solution(\"5 2 2\") == \"36\", \"Sample Input 2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"168\", \"Test 1 failed\"\nassert solution(sample_input2) == \"36\", \"Test 2 failed\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 4 7') == '168', \"Sample Input 1 failed\"\nassert solution('5 2 2') == '36', \"Sample Input 2 failed\"\nassert solution('10 2 2') == '32', \"Sample Input 3 failed\"\nassert solution('5 3 3') == '60', \"Sample Input 4 failed\"\nassert solution('10 1 2') == '18', \"Sample Input 5 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 91
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\\n\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 7\nassert solution(2) == 1",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 10\\n\") == \"7\\n\", \"Output: 7\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\\n\", \"Output: 1\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"7\\n\", \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 10\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 10\\nSample Output 1: 7\\n\") == \"7\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The solution does not match the expected output.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 10\\n\") == 7, \"Test 1\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == 1, \"Test 2\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n3 10') == '7\\n', \"Incorrect output\"\nassert solution('2\\n3 8\\n5 8') == '1\\n', \"Incorrect output\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"4\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"5\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"6\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"7\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"8\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"9\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"10\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"11\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"12\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"13\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"14\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"15\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"16\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"17\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"18\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"19\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"20\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"21\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"22\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"23\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"24\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"25\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 151
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n') =='raise your right hand. raise your left hand.\\n'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \" raise your left hand.\"\nassert solution(input()) == \"Lower your right hand.\"\nassert solution(input()) == \" raise your right hand.\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.Lower your right hand.Simon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\\n\"\nassert solution(\"4\\nSimon says turn around.\\n\") == \" turn around.\\n\"\nassert solution(\"5\\nSimon says stop smiling.\\n\") == \" stop smiling.\\n\"\nassert solution(\"6\\nSimon says play for the whole day.\\n\") == \" play for the whole day.\\n\"\nassert solution(\"7\\nSimon says play for the whole night.\\n\") == \" play for the whole night.\\n\"\nassert solution(\"8\\nSimon says go away from the computer.\\n\") == \" go away from the computer.\\n\"\nassert solution(\"9\\nSimon says play with the fear of death.\\n\") == \" play with the fear of death.\\n\"\nassert solution(\"10\\nSimon says smile again.\\n\") == \" smile again.\\n\"\nassert solution(\"11\\nSimon says play with the fear of failure.\\n\") == \" play with the fear of failure.\\n\"\nassert solution(\"12\\nSimon says go home from the party.\\n\") == \" go home from the party.\\n\"\nassert solution(\"13\\nSimon says play with the fear of success.\\n\") == \" play with the fear of success.\\n\"\nassert solution(\"14\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"15\\nSimon says play for the whole day.\\n\") == \" play for the whole day.\\n\"\nassert solution(\"16\\nSimon says play for the whole night.\\n\") == \" play for the whole night.\\n\"\nassert solution(\"17\\nSimon says go away from the computer.\\n\") == \" go away from the computer.\\n\"\nassert solution(\"18\\nSimon says play with the fear of death.\\n\") == \" play with the fear of death.\\n\"\nassert solution(\"19\\nSimon says smile again.\\n\") == \" smile again.\\n\"\nassert solution(\"20\\nSimon says play with the fear of failure.\\n\") == \" play with the fear of failure.\\n\"\nassert solution(\"21\\nSimon says go home from the party.\\n\") == \" go home from the party.\\n\"\nassert solution(\"22\\nSimon says play with the fear of success.\\n\") == \" play with the fear of success.\\n\"\nassert solution(\"23\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"24\\nSimon says play for the whole day.\\n\") == \" play for the whole day.\\n\"\nassert solution(\"25\\nSimon says play for the whole night.\\n\") == \" play for the whole night.\\n\"\nassert solution(\"26\\nSimon says go away from the computer.\\n\") == \" go away from the computer.\\n\"\nassert solution(\"27\\nSimon says play with the fear of death.\\n\") == \" play with the fear of death.\\n\"\nassert solution(\"28\\nSimon says smile again.\\n\") == \" smile again.\\n\"\nassert solution(\"29\\nSimon says play with the fear of failure.\\n\") == \" play with the fear of failure.\\n\"\nassert solution(\"30\\nSimon says go home from the party.\\n\") == \" go home from the party.\\n\"\nassert solution(\"31\\nSimon says play with the fear of success.\\n\") == \" play with the fear of success.\\n\"\nassert solution(\"32\\nSimon says smile.\\n\") == \" smile.\\n\"\nassert solution(\"33\\nSimon says play for the whole day.\\n\") == \" play for the whole day.\\n\"\nassert solution(\"34\\nSimon says play for the whole night.\\n\") == \" play for the whole night.\\n\"\nassert solution(\"35\\nSimon says go away from the computer.\\n\") == \" go away from the computer.\\n\"\nassert solution(\"36\\nSimon says play with the fear of death.\\n\") == \" play with the fear of death.\\n\"\nassert solution(\"37\\nSimon says smile again.\\n\") == \" smile again.\\n\"\nassert solution",
        "num_ids_2": 68,
        "num_ids_4": 114
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand.\\nSimon says raise your left hand.\\n\") == \" raise your right hand. raise your left hand.\"\nassert solution(\"4\\nSimon says go, go, go.\\n\") == \" go, go, go.\"\nassert solution(\"5\\nSimon says simon says.\\n\") == \" simon says.\"\nassert solution(\"6\\nSimon says touch your nose.\\n\") == \" touch your nose.\"\nassert solution(\"7\\nSimon says stop touching your nose.\\n\") == \" stop touching your nose.\"\nassert solution(\"8\\nSimon says raise your left hand.\\n\") == \" raise your left hand.\"\nassert solution(\"9\\nSimon says stay with me.\\n\") == \" stay with me.\"\nassert solution(\"10\\nSimon says stop touching your nose.\\n\") == \" stop touching your nose.\"",
        "num_ids_2": 63,
        "num_ids_4": 111
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nSimon says smile.\") == \" smile.\"\nassert solution(\"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\") == \" raise your right hand. raise your left hand.\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() =='smile.\\n'\nassert solution() == 'raise your right hand.\\nraise your left hand.\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\nSimon says smile.\\n\"\n) == \" smile.\\n\"\n\nassert solution(\n    \"3\\nSimon says raise your right hand. Lower your right hand. Simon says raise your left hand.\\n\"\n) == \" raise your right hand. raise your left hand.\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5, \"Incorrect output\"\nassert solution(\"1 2 4 6 10 12 16 18\") == 0, \"Incorrect output\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == 5, \"Incorrect output\"\nassert solution('1 2 4 6 10 12 16 18') == 0, \"Incorrect output\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == 5\nassert solution('1 2 4 6 10 12 16 18') == 0\n\nfrom typing import List",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\\n\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == 5\nassert solution(\"1 2 4 6 10 12 16 18\") == 0",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"0 0 4 6 10 12 16 18\") == \"5\\n\"\nassert solution(stdin=\"1 2 4 6 10 12 16 18\") == \"0\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\\n0 1\\n0 2\\n0 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1) == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(3, 2) == \"2\\n0 1\\n0 2\\n0 3\"\n\nfrom typing import List",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(open(\"input2.txt\", \"r\")) == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='4 2\\nA\\nA\\aG\\dT\\nSample Output 1: 3\\n0 1\\n1 2\\n2 3\\n') == '3\\n0 1\\n1 2\\n2 3\\n'\nassert solution(stdin='4 1\\nA\\nA\\aG\\dT\\nSample Output 2: 2\\n0 1\\n0 2\\n0 3\\n') == '2\\n0 1\\n0 2\\n0 3\\n'",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\\n\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\\n\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\\n0 1\\n1 2\\n2 3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\\n0 1\\n0 2\\n0 3\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"3\n0 1\n1 2\n2 3\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == -1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\", \"Solution 1 incorrect\"\nassert solution(\"ab\") == -1, \"Solution 2 incorrect\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'Dr. Chaz will have 100 pieces of chicken left over!'.format(100)\nassert solution(open('input.txt', 'r')) == 'Dr. Chaz needs 3 more piece[s] of chicken!'.format(3)",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\", \"The solution should be 'Dr. Chaz will have 80 pieces of chicken left over!'\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Dr. Chaz will have 80 pieces of chicken left over!\\n\", \"The solution should be correct.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"20 100\"\ninput2 = \"2 3\"\noutput1 = \"Dr. Chaz will have 80 pieces of chicken left over!\"\noutput2 = \"Dr. Chaz will have 1 piece of chicken left over!\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution() == \"Dr. Chaz needs 1 more piece of chicken!\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(20, 100) == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(2, 3) == \"Dr. Chaz will have 1 piece of chicken left over!\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(1, 5):\n    input_data = \" \".join(map(str, [int(x) for x in input().split()]))\n    output_data = \" \".join(map(str, [int(x) for x in solution(input_data).split()]))\n    assert output_data == f\"Sample Output {i}\", f\"Test failed for {i}\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\", \"Your code does not work as expected.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'''\n3 10\n1 1 2\n2 2 2\n3 2 1\n'''\n) == '0\\n'\n\nassert solution(\nr'''\n3 30\n1 1 1\n5 2 3\n5 2 1\n'''\n) == '0\\n'\n\nassert solution(\nr'''\n3 1000\n2 2 2\n3 2 1\n'''\n) == '-2\\n'\n\nassert solution(\nr'''\n3 980\n10 10 10\n10 5 2\n5 3 2\n90 5 2\n'''\n) == '-2\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected_output, f\"Test case {i+1} failed: {solution(input)}!= {expected_output}\" for i, (input, expected_output) in enumerate(tests)\n\nfrom typing import List",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, expected output {output()}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 10\n1 1 2\n2 2 2\n3 2 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 30\n1 1 1\n5 2 3\n5 2 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 10\n1 1 2\n2 2 2\n3 2 1\n\"\"\") == \"-2\"\n\nassert solution(\"\"\"\n3 30\n1 1 1\n5 2 3\n5 2 1\n\"\"\") == \"20\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\") == \"0\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\\n\"\n\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n\") == \"0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output.\\nExpected: {output()}\\nActual: {solution(input())}\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\\n\") == \"as\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"kala\"\nassert solution() == \"as\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"kala\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nlorem\\nipsum\\n\") == \"lorem\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input1) == 'kala', \"Test 1 failed\"\nassert solution(solution_input2) == 'as', \"Test 2 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"kala\"\nassert solution(sample_input_2) == \"as\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"kala\"\nassert solution(input()) == \"as\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#as\\n\") == \"as\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'kala'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Sample Input 1 failed\"\nassert solution(\"NSEW\") == 4, \"Sample Input 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Solution should return 10\"\nassert solution(\"NSEW\") == 4, \"Solution should return 4\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Incorrect solution for sample input 1\"\nassert solution(\"NSEW\") == 4, \"Incorrect solution for sample input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\", \"Your solution is incorrect\"\nassert solution(\"NSEW\") == \"4\", \"Your solution is incorrect\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Your solution is not correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"The solution should be 10 characters.\"\nassert solution(\"NSEW\") == 4, \"The solution should be 4 characters.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('WNEENWEENEENE') == '10'\n\nassert solution('NSEW') == '4'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter a route: \")) == expected_output, \"Incorrect output. Expected: {}, Received: {}\".format(expected_output, solution(input(\"Enter a route: \"))))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10, \"Your implementation is incorrect\"\nassert solution(\"NSEW\") == 4, \"Your implementation is incorrect\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == [\"1 - 2 = 3 - 4\", \"1 / 2 = 3 / 4\"]",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'problems ahead'  # Problems ahead",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == ['1 - 2 = 3 - 4', '1 / 2 = 3 / 4']\nassert solution('0 4 2 2') == ['0 * 4 = 2 - 2', '0 + 4 = 2 * 2', '0 + 4 = 2 + 2', '0 / 4 = 2 - 2']\nassert solution('1 0 0') == ['1 0 = 0']\nassert solution('1 0 1') == ['1 1 = 1']\nassert solution('1 0 2') == ['1 2 = 2']\nassert solution('1 0 3') == ['1 3 = 3']\nassert solution('1 0 4') == ['1 4 = 4']\nassert solution('1 0 5') == ['1 5 = 5']\nassert solution('1 0 6') == ['1 6 = 6']\nassert solution('1 0 7') == ['1 7 = 7']\nassert solution('1 0 8') == ['1 8 = 8']\nassert solution('1 0 9') == ['1 9 = 9']\nassert solution('1 0 10') == ['1 10 = 10']\nassert solution('1 0 11') == ['1 11 = 11']\nassert solution('1 0 12') == ['1 12 = 12']\nassert solution('1 0 13') == ['1 13 = 13']\nassert solution('1 0 14') == ['1 14 = 14']\nassert solution('1 0 15') == ['1 15 = 15']\nassert solution('1 0 16') == ['1 16 = 16']\nassert solution('1 0 17') == ['1 17 = 17']\nassert solution('1 0 18') == ['1 18 = 18']\nassert solution('1 0 19') == ['1 19 = 19']\nassert solution('1 0 20') == ['1 20 = 20']\nassert solution('1 0 21') == ['1 21 = 21']\nassert solution('1 0 22') == ['1 22 = 22']\nassert solution('1 0 23') == ['1 23 = 23']\nassert solution('1 0 24') == ['1 24 = 24']\nassert solution('1 0 25') == ['1 25 = 25']\nassert solution('1 0 26') == ['1 26 = 26']\nassert solution('1 0 27') == ['1 27 = 27']\nassert solution('1 0 28') == ['1 28 = 28']\nassert solution('1 0 29') == ['1 29 = 29']\nassert solution('1 0 30') == ['1 30 = 30']\nassert solution('1 0 31') == ['1 31 = 31']\nassert solution('1 0 32') == ['1 32 = 32']\nassert solution('1 0 33') == ['1 33 = 33']\nassert solution('1 0 34') == ['1 34 = 34']\nassert solution('1 0 35') == ['1 35 = 35']\nassert solution('1 0 36') == ['1 36 = 36']\nassert solution('1 0 37') == ['1 37 = 37']\nassert solution('1 0 38') == ['1 38 = 38']\nassert solution('1 0 39') == ['1 39 = 39']\nassert solution('1 0 40') == ['1 40 = 40']\nassert solution('1 0 41') == ['1 41 = 41']\nassert solution('1 0 42') == ['1 42 = 42']\nassert solution('1 0 43') == ['",
        "num_ids_2": 98,
        "num_ids_4": 136
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n'\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"\nassert solution(\"1 2 3 0\") == \"1 - 2 = 3 - 0\\n1 / 2 = 3 / 0\\n\"\nassert solution(\"1 1 1 1\") == \"1 - 1 = 1 - 1\\n1 / 1 = 1 / 1\\n\"\nassert solution(\"1 1 1 0\") == \"1 - 1 = 1 - 0\\n1 / 1 = 1 / 0\\n\"\nassert solution(\"1 1 0 1\") == \"1 - 1 = 0 - 1\\n1 / 1 = 0 / 1\\n\"\nassert solution(\"1 1 0 0\") == \"1 - 1 = 0 - 0\\n1 / 1 = 0 / 0\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 180
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\\n0 4 2 2\\n\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"\nassert solution(\"0 4 2 2\\n1 3 2 3\\n\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n1 + 3 = 5\\n\"\nassert solution(\"2 5 8 7\\n6 9 4 3\\n\") == \"2 - 5 = 1 + 7\\n6 / 9 = 4 / 3\\n2 * 8 = 16 + 2\\n2 / 8 = 16 / 3\\n\"\nassert solution(\"1 2 3 4\\n\\n\") == \"problems ahead\"",
        "num_ids_2": 181,
        "num_ids_4": 278
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\n\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n\"",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\"\"\n.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\"\"\"\n\nassert solution(\"MAMA TATA\") == \"\"\"\n.T..\nMAMA\n.T..\n.A..\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n'\n\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"PPBDZAM\"\nassert solution(\"MAMA TATA\") == \"TTAMA\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\\n\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"BANANA PIDZAMA\\n\")) == \"P....\\nP....\\nP....\\nA....\\nA....\\nA....\\nI....\\nI....\\nI....\\nI....\\nI....\\nD....\\nD....\\nD....\\nD....\\nD....\\nZ....\\nZ....\\nZ....\\nZ....\\nZ....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\nM....\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Error: {solution(input_str)} is incorrect. Expected {expected_output}, but got {solution(input_str)}\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, f\"Test case failed. Expected: {expected_solution}, Received: {solution}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\", \"Test 1\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\", \"Test 2\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1, \"Incorrect solution\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\", \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"\n\nassert solution(\"2\\n1 365\\n20 28\") == \"365\\n\"\nassert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\"\nassert solution(\"2\\n1 365\\n20 28\") == \"365\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the examples and submit a valid solution.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output\", \"The solution is not correct\"\nprint(\"Output\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"2 3\", \"Function should return '2 3'\"\nassert solution(3) == \"0 1\", \"Function should return '0 1'\"\nassert solution(2) == \"2 0\", \"Function should return '2 0'\"\nassert solution(1) == \"0 0\", \"Function should return '0 0'\"\nassert solution(0) == \"0 0\", \"Function should return '0 0'\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"2 3\"\nassert solution(10) == \"13\"\nassert solution(5) == \"0 1\"\nassert solution(50) == \"0 0\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '0 1', 'Expected output: 0 1'\nassert solution('4') == '2 3', 'Expected output: 2 3'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the prompt and try again.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == '0 1', \"The function should return 0 1\"\nassert solution(4) == '2 3', \"The function should return 2 3\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"0 1\\n\"\nassert solution(\"4\\n\") == \"2 3\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\n\") == \"0 1\\n\"\nassert solution(stdin=\"4\\n\") == \"2 3\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Function should return the expected output\"\nassert solution(sample_input_2) == sample_output_2, \"Function should return the expected output\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0 1\\n\", \"Sample Input 1: Incorrect output\"\nassert solution(\"4\") == \"2 3\\n\", \"Sample Input 2: Incorrect output\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0 1\\n2 3\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n\"\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"",
        "num_ids_2": 195,
        "num_ids_4": 195
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"A\\n197\\nA\\n100\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"\nB 100 49\nA 1 197\nA 49 100\n0.1965897693\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Input {stdin} is incorrect.\\nExpected Output: {expected_output}\\nActual Output: {solution(stdin)}\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693' #sample output\nprint('All test cases passed.')",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'\nassert solution('4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'",
        "num_ids_2": 193,
        "num_ids_4": 193
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, Actual output: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5 3\n    1 100 200\n    2 100 99\n    3 100 50\n    3 100 50\n    2 100 98\n\"\"\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\n\nassert solution(\"\"\"\n    4 4\n    3 100 99\n    2 100 99\n    1 100 99\n    4 100 99\n\"\"\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nsample_input = [(5, 3), (4, 4), (5, 4)]\\nfor case, expected in sample_input:\\n    print(solution(str(case[0]) +'' + str(case[1])) == expected)\\n\"\nprint(assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nsample_input = [(5, 3), (4, 4), (5, 4)]\\nfor case, expected in sample_input:\\n    print(solution(str(case[0]) +'' + str(case[1])) == expected)\\n\")",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49\\nA 1 197\\nA 49 100 0.1965897693\\n'\n\nassert solution(r'''\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99 0.4974874372\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\\n\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1\\n4\\n3\\n5\\n\") == \"168\\n\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Error: Invalid input. Please provide input as a single line.\"\nassert solution(\"5\\n2\\n1\\n4\\n3\\n5\") == \"Error: Invalid input. Please provide input as a single line.\"\nassert solution(\"1\\n2\\n1\") == \"Error: Invalid input. Please provide input as a single line.\"\nassert solution(\"1\\n1\\n1\") == \"Error: Invalid input. Please provide input as a single line.\"\nassert solution(\"5\\n2\\n3\\n4\\n5\") == \"Error: Invalid input. Please provide input as a single line.\"\nassert solution(\"5\\n2\\n1\\n4\\n3\") == \"Error: Invalid input. Please provide input as a single line.\"\nassert solution(\"2\\n1\\n1\") == \"Error: Invalid input. Please provide input as a single line.\"",
        "num_ids_2": 55,
        "num_ids_4": 109
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"168\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(100) == \"100\\n\"\nassert solution(10) == \"10\\n\"\nassert solution(1000) == \"1000\\n\"\nassert solution(1000000) == \"1000000\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output the maximal value of the given expression.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n1\\n4\\n3\\n5\\n\") == \"168\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()} -> {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_number} failed. Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3, 0) == 'CBADEF', 'Test 1 Failed'\nassert solution(3, 3, 2) == 'CDBEAF', 'Test 2 Failed'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 3, \"ABC\"], [0, 2]) == \"CBADEF\"\nassert solution([3, 3, \"ABC\"], [2, 0]) == \"CDBEAF\"\nassert solution([3, 3, \"ABC\"], [2, 2]) == \"CBADEF\"\nassert solution([3, 3, \"ABC\"], [0, 0]) == \"CBADEF\"",
        "num_ids_2": 49,
        "num_ids_4": 97
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0\\n3 3\\nABC\\nDEF\\n2\\n') == 'CDBEAF'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3, \"ABC\", 0) == \"CBADEF\", \"The order of ants after 0 seconds should be CBADEF\"\nassert solution(3, 3, \"ABC\", 2) == \"CDBEAF\", \"The order of ants after 2 seconds should be CDBEAF\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, \"ABC\", 0) == \"CBADEF\"\nassert solution(3, 3, \"ABC\", 2) == \"CDBEAF\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"CBADEF\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"CDBEAF\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 'CBADEF', \"Your solution should return 'CBADEF' for the given sample input 1\"\nassert solution(sample_input_2) == 'CDBEAF', \"Your solution should return 'CDBEAF' for the given sample input 2\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == 'CBADEF', 'Your solution is not correct.'\nassert solution(sample_input_2) == 'CDBEAF', 'Your solution is not correct.'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\\n3 3\\nABC\\nDEF\\n2\\n\") == \"CDBEAF\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\") == \"5\\n\", \"The output is incorrect\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\") == \"4\\n\", \"The output is incorrect\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test failed\"\nfor input_ in [\n    \"\"\"1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n\"\"\",\n    \"\"\"3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n\"\"\"\n]:\n    assert solution(input_) == output, \"Test failed\"\n\nprint(\"Test passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\", \"The function should return '5' as output\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\\n\"\nassert solution(\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\", \"Expected output: 4\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\") == \"5\"\nassert solution(stdin=\"3\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n\") == \"4\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n\"\"\"\n) == \"5\\n\", \"Function should return the correct result.\"\n\nassert solution(\n    \"\"\"\n3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n\"\"\"\n) == \"4\\n\", \"Function should return the correct result.\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n\"\n) == \"5\\n\", \"Expected output: 5\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n6 8') == '22\\n'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n6 8\") == \"6\"\nassert solution(\"6 8\") == \"22\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '6', \"Incorrect output 1\"\nassert solution(sample_input2) == '22', \"Incorrect output 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3') == '6\\n', \"Expected output: 6\\nGot: \" + str(solution('4 3'))\nassert solution('6 8') == '22\\n', \"Expected output: 22\\nGot: \" + str(solution('6 8'))",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2 failed\"\n\nsample_input_1 = \"4 3\"\nsample_input_2 = \"6 8\"\n\nexpected_output_1 = 6\nexpected_output_2 = 22",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"6\\n\"\nassert solution(\"6 8\") == \"22\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"6\\n\"\nassert solution(\"6 8\") == \"22\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 3\\n\") == \"6\\n\"\nassert solution(stdin=\"6 8\\n\") == \"22\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n6 8\\n') == '22'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\nSample Output 1: 6\\n\") == \"6\\n\"\nassert solution(\"6 8\\nSample Output 2: 22\\n\") == \"22\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected 1 but got {}.\".format(solution(stdin))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"The given solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n\", \"Expected 1\"\nassert solution(input()) == \"0\\n\", \"Expected 0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n', \"Expected output 1, but got: {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"The solution should be '1', but it is '{}'\".format(solution())",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"0\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == 1\nassert solution(\"1 4\\n4 3 2 1\") == 0\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"1\\n\"\nassert solution(\"1 4\\n4 3 2 1\") == \"0\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\\n\") == \"28\", \"The first line of input must be the integer X.\"\nassert solution(\"10\\n3\\n10\\n2\\n12\\n\") == \"16\", \"The second line of input must be the integer N.\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Please check the expected output ({expected_output}), but got {solution(input())}.\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 28\nassert solution(4) == 28\nassert solution(6) == 28\nassert solution(2) == 28\nassert solution(10) == 28",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The provided solution is incorrect. Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n3\\n4\\n6\\n2\") == \"28\", \"The correct output for sample input 1 is not: \" + solution(\"10\\n3\\n4\\n6\\n2\")\n\nassert solution(\"10\\n3\\n10\\n2\\n12\") == \"16\", \"The correct output for sample input 2 is not: \" + solution(\"10\\n3\\n10\\n2\\n12\")",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(10)) == '28'\nassert solution(str(10)) == '16'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"28\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"16\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Expected hiss, got '{}'\".format(solution(\"amiss\"))\nassert solution(\"octopuses\") == \"no hiss\", \"Expected no hiss, got '{}'\".format(solution(\"octopuses\"))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\n\nfrom typing import List",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test 1\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Test Case 1 failed\"\nassert solution(\"octopuses\") == \"no hiss\", \"Test Case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"amiss\") == \"hiss\", \"Expected hiss, got: {}\".format(solution(\"amiss\"))\nassert solution(\"octopuses\") == \"no hiss\", \"Expected no hiss, got: {}\".format(solution(\"octopuses\"))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('amiss') == 'hiss', \"Sample Input 1: amiss\"\nassert solution('octopuses') == 'no hiss', \"Sample Input 2: octopuses\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nc++\\nc\\nc#\\n\") == \"3\"\nassert solution(\"5\\ncryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n\") == \"5\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(io.StringIO(\"\"\"\n4\nc++\nC++\nc\nc#\n\"\"\")) == \"3\"\nassert solution(io.StringIO(\"\"\"\n5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n\"\"\")) == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('input_2.txt', 'r')) == '5\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"3\", \"Please provide the correct input.\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nc++\\nc\\nc#\\n\") == \"3\\n\"\nassert solution(\"5\\ncryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux\\n\") == \"5\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\n\nfrom collections import Counter",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"5\"",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3'\nassert solution(open('input2.txt', 'r').read()) == '5'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == 21, \"Solution is incorrect.\"\nassert solution('CCC') == 9, \"Solution is incorrect.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"The correct output is 21.\"\nassert solution(\"CCC\") == \"9\", \"The correct output is 9.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Incorrect output for example 1\"\nassert solution(\"CCC\") == 9, \"Incorrect output for example 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Solution is incorrect for sample input 1.\"\nassert solution(\"CCC\") == 9, \"Solution is incorrect for sample input 2.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == '21', \"Test case 1 failed.\"\nassert solution('CCC') == '9', \"Test case 2 failed.\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('TCGTTC') == '21', \"Expected output: 21, got: {}.\".format(solution('TCGTTC'))  # expected output: 21\nassert solution('CCC') == '9', \"Expected output: 9, got: {}.\".format(solution('CCC'))  # expected output: 9",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == 21, \"Expected 21, got {}\".format(solution(\"TCGTTC\"))\nassert solution(\"CCC\") == 9, \"Expected 9, got {}\".format(solution(\"CCC\"))",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == 21\nassert solution(\"CCC\") == 9",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == \"21\", \"Expected output 1\"\nassert solution(\"CCC\") == \"9\", \"Expected output 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"315\\n45\") == \"90\"\nassert solution(\"180\\n270\") == \"90\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"315\\n45\\nSample Output 1:\\n90\\n\") == \"90\\n\"\nassert solution(\"180\\n270\\nSample Output 2:\\n90\\n\") == \"90\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '90'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\"\nassert solution(\"180\\n270\\n\") == \"90\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\", \"Test case 1 failed\"\nassert solution(\"180\\n270\\n\") == \"90\", \"Test case 2 failed\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"315\\n45\\n\") == \"90\\n\"\nassert solution(\"180\\n270\\n\") == \"90\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('tests/test_cases/test_animation.txt', 'r')) == '180', \"The output should be 180, but got '{}' instead\".format(solution(open('tests/test_cases/test_animation.txt', 'r')))",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"90\", \"The output of the solution should be 90\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\", \"Incorrect Output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == 3\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == 1",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\nprint(\"All tests passed successfully!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    1\n    23\n    18\n    13\n    99\n    ''') == 3\n\nassert solution('''\n    5\n    11\n    20\n    33\n    40\n    55\n    ''') == 1\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nfor i, (input, output) in enumerate(tests):\n    assert solution(input) == output, f\"Test {i+1} failed\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == \"3\"\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == \"1\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99\\n') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55\\n') == '1'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n23\\n18\\n13\\n99\") == 3\nassert solution(\"5\\n11\\n20\\n33\\n40\\n55\") == 1",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"3\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"5 1 23 18 13\") == \"3\"\nassert solution(\"5 1 23 18 13 99\") == \"3\"\nassert solution(\"5 1 23 18 13 99 11 20 33 40 55\") == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 49
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"WWBWBB\") == 1\nassert solution(\"WWWWBBW\") == 0",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test {index + 1} failed: {solution(input())}!= {expected}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('WWBWBB') == 1, \"Invalid Test Case 1\"\nassert solution('WWWWBBW') == 0, \"Invalid Test Case 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"WWBWBB\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"WWBWBB\") == \"1\", \"Test case 1 failed\"\nassert solution(\"WWWWBBW\") == \"0\", \"Test case 2 failed\"\nprint(\"All test cases passed\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 9\nassert solution(1) == 1.299038105676658",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == 9\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.299038105676658\\n\", \"Test case 1 failed\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 3\") == 9.0\nassert solution(\"1 2 1 1\") == 1.299038105676658",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution for {input()} is incorrect. Expected: {output}, got: {solution(input())}\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1.299038105676658\", \"Your solution is incorrect!\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 3 3 3\") == 9\nassert solution(stdin=\"1 2 1 1\") == 1.299038105676658\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1.299038105676658', 'Incorrect Answer'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\", \"The solution is incorrect.\"\nassert solution(\"rooobert\") == \"robert\", \"The solution is incorrect.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert', 'Test Case 1 failed'\nassert solution('rooobert') == 'robert', 'Test Case 2 failed'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"rrrooobbbert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\", \"Test 1: Should return 'robert'\"\nassert solution(\"rooorobert\") == \"robert\", \"Test 2: Should return 'robert'\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('aardvark') == 'aardvark'\nassert solution('arctic') == 'arctic'",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\\n\", \"Sample Input 1\"\nassert solution(\"1000 900 7\") == \"Impossible\\n\", \"Sample Input 2\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\", \"1000 9 7\"\nassert solution(\"1000 900 7\") == \"Impossible\", \"1000 900 7\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\", \"Invalid output 1\"\nassert solution(\"1000 900 7\") == \"Impossible\", \"Invalid output 2\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\", \"Output should be '108 4', not: {}\".format(solution(\"1000 9 7\"))",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())} should be {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"1\\n1\\n2\\n1\\n0\") == \"1\\n1\\n2\\n1\\n0\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == '1\\n1\\n2\\n1\\n0\\n'\nassert solution('4 4\\n....\\n....\\n....\\n....\\n') == '9\\n0\\n0\\n0\\n0\\n'\n\nprint(\"Test passed\")",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\\n\", \"Sample Input 1\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\n\", \"Sample Input 2\"",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n\") == \"1\\n1\\n2\\n1\\n0\\n\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n\") == \"9\\n0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#\\n') == 1\nassert solution('4 4\\n....\\n....\\n....\\n....\\n') == 9\nassert solution('4 4\\n#..#X\\n#XX#X\\n..X#X\\n..X#X\\n') == 12",
        "num_ids_2": 54,
        "num_ids_4": 92
    },
    {
        "number": 4794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\\n1\\n2\\n1\\n0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\") == \"9\\n0\\n0\\n0\\n0\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=stdin) == output\nassert solution(stdin=stdin) == output",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1953566\", \"Test case 1 failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == # Your solution here",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2\\n212\\n1253') == '1953566'\nassert solution(stdin='5\\n23\\n17\\n43\\n52\\n22') == '102'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"1953566\"\nassert solution(sample_input_2) == \"102\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n212\\n1253\\n') == '1953566\\n', 'Sample Input 1'\nassert solution('5\\n23\\n17\\n43\\n52\\n22\\n') == '102\\n', 'Sample Input 2'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1953566, \"Test case 1 failed\"\nassert solution(7) == 102, \"Test case 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n212\\n1253\\n\") == \"1953566\\n\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\\n\") == \"102\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1953566', \"Expected 1953566, but got {}\".format(solution())",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='5\\n23\\n17\\n43\\n52\\n22') == '102'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution mismatch: expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in zip(test_cases, expected_results)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', 'Input 1 test failed'\n\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000', 'Input 2 test failed'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test failed.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution {solution(input())} and expected output don't match. Solution: {solution(input())}, Input: {input()}, Output: {output}\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0.000000 3.000000 6.000000\\n', \"Your code is incorrect\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    10 10 10\n    3 3 3\n    \"\"\"\n) == \"0.000000 0.000000 0.000000\\n\", \"Test case 1 failed.\"\n\nassert solution(\n    \"\"\"\n    9 9 9\n    3 2 1\n    \"\"\"\n) == \"0.000000 3.000000 6.000000\\n\", \"Test case 2 failed.\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\\n\"\nassert solution(\"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\\n\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"forritun\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read().strip()) == 'b'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"forritun\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"forritun\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"Knuth-Morris-Pratt\") == \"KMP\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\", \"Error: The output should be 'MS', not '{}'.\".format(solution(\"Mirko-Slavko\"))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"KMP\") == \"KMP\"\nprint(\"All tests pass!\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nassert solution(\"Knuth-Morris-Pratt\") == \"KMP\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\nprint(\"Great scientific discoveries are often named by the last names of scientists that made them. For example, the most popular asymmetric cryptography system, RSA was discovered by Rivest, Shamir and Adleman. Another notable example is the Knuth-Morris-Pratt algorithm, named by Knuth, Morris and Pratt.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"Estate or Copper\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 1 0\\n2 1 0') == 'Estate or Copper\\n'\nassert solution('2 1 0\\n0 1 0') == 'Province or Gold\\n'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 0\\n2 1 0\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\\n0 1 0\") == \"Estate or Copper\\n\"\nassert solution(\"1 1 1\\n1 1 1\") == \"Gold or Copper\\n\"\nassert solution(\"1 1 1\\n0 1 1\") == \"Gold or Copper\\n\"\nassert solution(\"1 1 1\\n2 1 1\") == \"Gold or Copper\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 106
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"0 1 0\") == \"Estate or Copper\\n\"\nassert solution(stdin=\"2 1 0\") == \"Province or Gold\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\\n\"\nassert solution(\"2 1 0\") == \"Province or Gold\\n\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('4 1 0') == 'Gold or Copper'\nassert solution('5 2 1') == 'Gold or Copper'\nassert solution('6 2 0') == 'Estate or Copper'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Estate or Copper', \"The expected output is 'Estate or Copper', but it is actually '{}'.\".format(solution(input()))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n\nfrom typing import List",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\\n\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    70 50\n    \"\"\"\n) == \"90.00\"\n\nassert solution(\n    \"\"\"\n    10 3\n    80 90\n    \"\"\"\n) == \"75.7142857\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"\nassert solution(\"2 5\\n30 70\\n40 60\\n50 80\\n60 90\\n70 100\\n\") == \"impossible\"\n",
        "num_ids_2": 56,
        "num_ids_4": 107
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {index+1} failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n70 50\\n\") == \"90.00\\n\"\nassert solution(\"10 3\\n80 90\\n\") == \"75.7142857\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n4\n2 3 5 7\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output Here\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output will be provided here\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"First\\n4\\n2 3 5 7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    7\n    2 3 1 5 4 7 6\n    '''\n) == '''\n4\n2 3 5 7\n'''\n\nassert solution(\n    '''\n    5\n    1 2 3 4 5\n    '''\n) == '''\n5\n1 2 3 4 5\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 5 4 7 6\\n\") == \"4\\n2 3 5 7\\n\"\n\nassert solution(\"1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\\n\") == \"4\\n2 3 5 7\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\\n\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Test 1\"\nassert solution(\"0 30\") == \"23 45\", \"Test 2\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 10') == '9 25', \"Input 1 failed\"\nassert solution('0 30') == '23 45', \"Input 2 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"10 10\\n\"\n) == \"9 25\\n\"\n\nassert solution(\n    \"0 30\\n\"\n) == \"23 45\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Test case 1 failed\"\nassert solution(\"0 30\") == \"23 45\", \"Test case 2 failed\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\", \"Sample Input 1\"\nassert solution(\"0 30\") == \"23 45\", \"Sample Input 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\\n\"\nassert solution(\"0 30\") == \"23 45\\n\"\n\nfrom datetime import datetime",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.414214\", \"Your code is correct.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1.414214'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(2):\n    input()\n    output()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1.414214\", \"Incorrect output\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n\nfor i in range(1, 6):\n    input_ = f'Sample Input {i}'\n    output_ = f'Sample Output {i}'\n    assert solution(input_) == output_\n\nprint(\"All tests passed!\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.000000\") == \"1.414214\", \"Test case 1\"\nassert solution(\"1.000000\") == \"1.000000\", \"Test case 2\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2.000000\") == \"1.414214\", \"Output 1\"\nassert solution(stdin=\"1.000000\") == \"1.000000\", \"Output 2\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2.000000') == '1.414214'\nassert solution(stdin='1.000000') == '1.000000'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '1.414214', \"Incorrect answer: \" + solution(sample_input_1)\nassert solution(sample_input_2) == '1.000000', \"Incorrect answer: \" + solution(sample_input_2)",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3:2,1\"\nassert solution(\"50\") == \"50:2,1\\n50:2,2\\n50:3,2\\n50:5,4\\n50:5,5\\n50:6,5\\n50:10,10\\n50:13,12\\n50:17,16\\n50:25,25\"\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3:2,1\\n\"\nassert solution(\"50\") == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"3:2,1\\n\"\nassert solution(50) == \"50:2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('50') == '50'\nassert solution('300') == '300'\nassert solution('51') == '51'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '3:2,1'\nassert solution(50) == '50:2,1\\n50:2,2\\n50:3,2\\n50:5,4\\n50:5,5\\n50:6,5\\n50:10,10\\n50:13,12\\n50:17,16\\n50:25,25'",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"3:\\n2,1\\n\"\nassert solution(\"50\\n\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3:\\n2,1\\n\"\nassert solution(\"50\") == \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n50\\n') == '3:2,1\\n50:2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"3\\n50\") == \"3:\\n2,1\\n50:\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == '3:\\n2,1\\n', 'The function should return \"3:\\n2,1\\n\" for the sample input 1.'\nassert solution('50') == '50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n', 'The function should return \"50:\\n2,1\\n2,2\\n3,2\\n5,4\\n5,5\\n6,5\\n10,10\\n13,12\\n17,16\\n25,25\\n\" for the sample input 2.'",
        "num_ids_2": 187,
        "num_ids_4": 187
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The solution should return yes if there are no repeats, and no if there are repeats.\"\n\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The solution should return no if there are no repeats, and yes if there are repeats.\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Test case 1 failed\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Test case 2 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Input 1 is incorrect\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Input 2 is incorrect\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The function should return 'yes' when input is 'THE RAIN IN SPAIN'.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The function should return 'no' when input is 'IN THE RAIN AND THE SNOW'.\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"yes\", \"The function should return 'yes' when input is 'THE RAIN IN SPAIN IN THE PLAIN'.\"",
        "num_ids_2": 74,
        "num_ids_4": 119
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"Test failed: The phrase 'THE RAIN IN SPAIN' has no repeats.\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"Test failed: The phrase 'IN THE RAIN AND THE SNOW' repeats THE.\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\", \"Test failed: The phrase 'THE RAIN IN SPAIN IN THE PLAIN' repeats THE and IN.\"",
        "num_ids_2": 71,
        "num_ids_4": 116
    },
    {
        "number": 4805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\", \"The solution should return 'yes' if the phrase 'THE RAIN IN SPAIN' does not repeat.\"\n\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\", \"The solution should return 'no' if the phrase 'IN THE RAIN AND THE SNOW' repeats a word.\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"The solution is incorrect. Expected 'SSKKKHHS', got '{0}'.\".format(solution(\"RRBBBLLR\"))\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"The solution is incorrect. Expected 'CHCS', got '{0}'.\".format(solution(\"RBLLLBRR\"))\nprint(\"All tests passed.\")",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"SSKKKHHS\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"CHCS\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\", \"Test 1 Failed\"\nassert solution(\"RBLLLBRR\") == \"CHCS\", \"Test 2 Failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='RRBBBLLR') == 'SSKKKHHS', \"The output should be 'SSKKKHHS', but it is actually '{}'\".format(solution(stdin='RRBBBLLR'))\nassert solution(stdin='RBLLLBRR') == 'CHCS', \"The output should be 'CHCS', but it is actually '{}'\".format(solution(stdin='RBLLLBRR'))\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 3 7\n    2 4 7\n    \"\"\"\n) == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\n\nassert solution(\n    \"\"\"\n    2 4 7\n    4 2 7\n    \"\"\"\n) == \"1\\nFizz\\nFizz\\nFizz\\nFizz\\nFizz\\nFizz\\nFizzBuzz\\n7\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    1 1 2\n    \"\"\"\n) == \"1\\nFizz\\nFizz\\n1\\n1\\n1\\n2\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    3 5 10\n    3 5 15\n    \"\"\"\n) == \"1\\nFizz\\nBuzz\\n1\\nBuzz\\n1\\n1\\nFizz\\n15\\n\"\n\nassert solution(\n    \"\"\"\n    5 10 20\n    10 5 20\n    \"\"\"\n) == \"1\\nFizz\\nBuzz\\n1\\nBuzz\\n1\\n1\\nFizz\\n15\\nFizz\\n35\\nFizz\\n5\\n35\\n5\\n35\\n5\\n\"\n\nassert solution(\n    \"\"\"\n    10 20 30\n    20 10 30\n    \"\"\"\n) == \"1\\nFizz\\nBuzz\\n1\\nBuzz\\n1\\n1\\nFizz\\n15\\nFizz\\n35\\nFizz\\n5\\n35\\n5\\n35\\n5\\nFizz\\n35\\n35\\nFizz\\n35\\nFizz\\n35\\nFizzBuzz\\nFizzBuzz\\nFizzBuzz\\nFizzBuzz\\nFizzBuzz\\nFizzBuzz\\nFizzBuzz\\nFizzBuzz\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nprint(\"Tests passed!\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 7\") == [\"1\", \"Fizz\", \"Buzz\", \"Fizz\", \"5\", \"FizzBuzz\", \"7\"]\nassert solution(\"2 4 7\") == [\"1\", \"Fizz\", \"3\", \"FizzBuzz\", \"5\", \"Fizz\", \"7\"]",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Test 1\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Test 2\"\nassert solution(\"1 10 10\") == \"1\\n1\\nFizz\\n1\\n10\\nFizz\\n10\\n1\\n1\\n\", \"Test 3\"\nassert solution(\"3 10 10\") == \"3\\nFizz\\n3\\n3\\nFizz\\n10\\nFizz\\n10\\nFizz\\n1\\n\", \"Test 4\"\nassert solution(\"1 1 5\") == \"1\\nFizz\\n1\\n1\\nFizz\\n1\\n1\\n1\\n\", \"Test 5\"",
        "num_ids_2": 89,
        "num_ids_4": 196
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter X, Y, and N: \")) == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\", \"Sample Input 1\"\nassert solution(input(\"Enter X, Y, and N: \")) == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\", \"Sample Input 2\"",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 7\\n2 4 7\\n\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\\n\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 7\n2 4 7\n''') == '''\n1\nFizz\nBuzz\nFizz\n5\nFizzBuzz\n7\n'''\n\nassert solution('''\n1 2 3\n2 4 6\n''') == '''\n1\nFizz\n4\nBuzz\nFizz\n6\n'''\n\nassert solution('''\n1 3 5\n3 6 8\n''') == '''\n1\nFizz\n4\nBuzz\nFizz\n7\n'''\n\nassert solution('''\n1 2 3\n2 4 6\n''') == '''\n1\nFizz\n4\nBuzz\nFizz\n6\n'''",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"It hadn't snowed this early in 3 years!\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2, 3, 3, 2) == \"It hadn't snowed this early in 3 years!\\n\"\nassert solution(2, 10, 0, 100) == \"It hadn't snowed this early in 0 years!\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"It hadn't snowed this early in 3 years!\\n\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n3 3 3 2\n''') == 'It hadn\\'t snowed this early in 3 years!'\n\nassert solution('''\n2 10\n0 100\n''') == 'It hadn\\'t snowed this early in 0 years!'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n3 3 3 2\\n2 10\\n0 100') == 'It hadn\\'t snowed this early in 3 years!\\n'\nassert solution('2 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!\\n'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\") == \"2\", \"Sample Input 1\"\nassert solution(\"10 10\") == \"7\", \"Sample Input 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your implementation of the solution is incorrect. Expected output: '{expected_output}', but got '{solution(stdin)}'.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == 'Invalid input'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\") == \"2\", \"The winner of the counting-out game should be 2\"\nassert solution(\"10 10\") == \"7\", \"The winner of the counting-out game should be 7\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '7'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\", \"Sample Input 1\"\nassert solution(\"koaski\") == \"kakosi\", \"Sample Input 2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\", \"Test case 1 failed\"\nassert solution(\"koaski\") == \"kakosi\", \"Test case 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\", \"Sample Input 1 failed\"\nassert solution(\"koaski\") == \"kakosi\", \"Sample Input 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == expected_output_2, \"Incorrect output for sample input 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n6\\n\") == \"8 2\"\nassert solution(\"5\\n4\\n\") == \"8 2\"\nassert solution(\"6\\n3\\n\") == \"8 3\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == '8 2', \"Incorrect output for sample input 1\"\nassert solution(7) == '8 3', \"Incorrect output for sample input 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}\\nGot: {solution(stdin)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == '8 2', 'Your implementation of solution is incorrect. Expected output \"8 2\", but got \"{0}\".'.format(solution(6))\nassert solution(7) == '8 3', 'Your implementation of solution is incorrect. Expected output \"8 3\", but got \"{0}\".'.format(solution(7))\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"8 2\", \"Invalid output\"\nassert solution(4) == \"8 2\", \"Invalid output\"\nassert solution(5) == \"12 2\", \"Invalid output\"\nassert solution(6) == \"16 3\", \"Invalid output\"\nassert solution(7) == \"16 3\", \"Invalid output\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='6') == '8 2\\n'\nassert solution(stdin='7') == '8 3\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == expected, f\"Got '{solution(open('input.txt', 'r').read())}', expected '{expected}'\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '''YES\nYES\nYES\nYES\nNO'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napples and pears\\nplates of meat\\n\") == \"YES\\nNO\"\n\nassert solution(\"drought\\n2\\naught ought aut acht\\nownt oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napples and pears\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\"",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"worried and fraught\") == \"YES\"\nassert solution(\"difficult route\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napples and pears\\nplates of meat') == 'YES\\nNO'\nassert solution('drought\\n2\\naught ought aut acht\\ought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napples and pears') == 'YES\\nYES\\nYES\\nYES\\nNO'",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"stairs\\n2\\nerres airs ears ares aires\\neet eat\\n2\\napples and pears\\nplates of meat\") == \"YES\\NO\"\nassert solution(\"drought\\n2\\naught ought aut acht\\nought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fraught\\nforever in doubt\\napples and pears\") == \"YES\\YES\\YES\\YES\\NO\"",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Output incorrect\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Output incorrect\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: expected {expected_output}, got {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Solution should return WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Solution should return LOSE\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('HANGMAN') == 'WIN', \"Output 1: Expected 'WIN', got {}\".format(solution('HANGMAN'))\nassert solution('BANANA') == 'LOSE', \"Output 2: Expected 'LOSE', got {}\".format(solution('BANANA'))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr'''\nHANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n'''\n) == 'WIN', \"Expected output: WIN, Actual output: \" + solution(r'''\nHANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n'''\n)\n\nassert solution(\nr'''\nBANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n'''\n) == 'LOSE', \"Expected output: LOSE, Actual output: \" + solution(r'''\nBANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n'''\n)",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\", \"Input 1 incorrect\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\", \"Input 2 incorrect\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HANGMAN', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN', 'Sample Input 1'\nassert solution('BANANA', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE', 'Sample Input 2'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HANGMAN\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\", \"Test 1 failed\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\", \"Test 2 failed\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\", \"Test 1 failed\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\", \"Test 2 failed\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'DECREASING', \"Incorrect output\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"JOE\\nBOB\\nANDY\\nAL\\nADAM\\n\") == \"DECREASING\", \"Test 1\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\") == \"NEITHER\", \"Test 2\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"DECREASING\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Sample Input 1: Incorrect output\"\nassert solution(sample_input_2) == expected_output_2, \"Sample Input 2: Incorrect output\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"DECREASING\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"NEITHER\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(['JOE', 'BOB', 'ANDY', 'AL', 'ADAM']) == 'DECREASING'\nassert solution(['HOPE', 'ALI', 'BECKY', 'JULIE', 'MEGHAN', 'LAUREN', 'MORGAN', 'CARLI', 'MEGAN', 'ALEX', 'TOBIN']) == 'NEITHER'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING\\n'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n') == 'NEITHER\\n'",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"DECREASING\", \"Test case 1 failed.\"\n\nassert solution(input()) == \"NEITHER\", \"Test case 2 failed.\"\n\nassert solution(input()) == \"DECREASING\", \"Test case 3 failed.\"\n\nassert solution(input()) == \"NEITHER\", \"Test case 4 failed.\"\n\nassert solution(input()) == \"DECREASING\", \"Test case 5 failed.\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"George wins!\\n\"\n\nassert solution(stdin=\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"George wins!\\nJess wins!\\n\", \"Expected output is incorrect. Please check the code and update it.\"\nprint(\"All tests passed!\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"George wins!\\nJess wins!\\n\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\n'\n\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\n'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n') == 'George wins!\\n'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n') == 'Nina wins!\\nJess wins!\\n'",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 10 13\n    John\n    Kelly\n    George\n    Kelly 1\n    George 2\n    Kelly 1\n    John 2\n    George 1\n    John 3\n    Kelly 3\n    Kelly 1\n    George 3\n    George 1\n    John 3\n    George 3\n    Kelly 1\n    \"\"\"\n) == \"\"\"\nGeorge wins!\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    \"\"\"\n) == \"\"\"\nNina wins!\nJess wins!\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\"\n) == \"George wins!\\n\"\n\nassert solution(\n    \"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\"\n) == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\\nKelly 1\\nGeorge 2\\nKelly 1\\nJohn 2\\nGeorge 1\\nJohn 3\\nKelly 3\\nKelly 1\\nGeorge 3\\nGeorge 1\\nJohn 3\\nGeorge 3\\nKelly 1\\n\") == \"George wins!\\n\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\\n\") == \"Nina wins!\\nJess wins!\\n\"",
        "num_ids_2": 223,
        "num_ids_4": 223
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([7, 3, 0, 0, 5, 4]) == \"2.0\"\nassert solution([6, 0, 0, 2, 7, 6]) == \"2.0\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0\\n', \"Sample Output 1\"\nassert solution('6 0 0 2 7 6') == '2.0\\n', \"Sample Output 2\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == expected, f\"Expected output {expected}, but got {solution(open('input.txt').read())}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}, expected {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(156) == '165', \"Test case 1 failed\"\nassert solution(330) == '0', \"Test case 2 failed\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"156\") == \"165\"\nassert solution(\"330\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(156) == 165\nassert solution(330) == 0",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected {expected_output}, but got {solution(input())}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(156) == \"165\"\nassert solution(330) == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(156) == '165'\nassert solution(330) == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(156) == 165, \"Solution 1\"\nassert solution(330) == 0, \"Solution 2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\"",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution should return {expected_output}, but it returns {solution(stdin)}.\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\\n\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\\n\"",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution, \"No solution provided\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"4\"\nassert solution(sample_input2) == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4\\n'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3\\n'",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\\n\"\nassert solution(\"4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\") == \"3\\n\"",
        "num_ids_2": 151,
        "num_ids_4": 151
    },
    {
        "number": 4818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Output', \"Incorrect solution\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input1.txt', 'r').read().split('\\n')) == '10\\n', 'Sample Input 1'\nassert solution(open('sample_input2.txt', 'r').read().split('\\n')) == '1\\n', 'Sample Input 2'\nassert solution(open('sample_input3.txt', 'r').read().split('\\n')) == '6\\n', 'Sample Input 3'",
        "num_ids_2": 69,
        "num_ids_4": 103
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\\n\", \"Expected Output: '10\\n', Actual Output: {}\".format(solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\"))\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\\n\", \"Expected Output: '1\\n', Actual Output: {}\".format(solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\"))",
        "num_ids_2": 206,
        "num_ids_4": 206
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 10\nassert solution(2) == 1\nassert solution(3) == 6\nassert solution(4) == 4\nassert solution(5) == 3\nassert solution(6) == 2\nassert solution(7) == 1\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 10",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: Expected output {expected_output}, got {solution(input())}\"\n\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\", \"Test 1 failed\"\nassert solution(\"2\") == \"1\", \"Test 2 failed\"\nassert solution(\"3\") == \"6\", \"Test 3 failed\"\nassert solution(\"4\") == \"0\", \"Test 4 failed\"\nassert solution(\"5\") == \"5\", \"Test 5 failed\"\nassert solution(\"6\") == \"7\", \"Test 6 failed\"\nassert solution(\"7\") == \"8\", \"Test 7 failed\"\nassert solution(\"8\") == \"9\", \"Test 8 failed\"\nassert solution(\"9\") == \"10\", \"Test 9 failed\"\nassert solution(\"10\") == \"10\", \"Test 10 failed\"",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10\\n'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1\\n'\nassert solution('39\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n40\\n41\\n0\\n1\\n2\\n4",
        "num_ids_2": 100,
        "num_ids_4": 1027
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"10\\n\", \"The output is incorrect.\"\n\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"1\\n\", \"The output is incorrect.\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n5\\n6\\n7\\n8\\n9\\n10\\n6\\n7\\n8\\n9\\n10\\n7\\n8\\n9\\n10\\n8\\n9\\n10\\n9\\n10\\n10\\n\") == \"6\\n\", \"The output is incorrect.\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n\") == \"10\\n\", \"The output is incorrect.\"",
        "num_ids_2": 112,
        "num_ids_4": 357
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test {i+1} failed: Expected '{expected_output}', got '{solution(input())}'\" for i, (input_, expected_output) in enumerate([\n    (\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\", \"10\"),\n    (\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\", \"1\"),\n])",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '10\\n', \"Solution 1 failed\"\nassert solution(2) == '1\\n', \"Solution 2 failed\"\nassert solution(3) == '6\\n', \"Solution 3 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"yes\"\nprint(\"yes\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {stdin} with input {stdin}, expected output {expected_output}\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13, 3) == \"yes\"\nassert solution(1, 0) == \"yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"yes\", \"Input should be (13 3) or (1 0)\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13, 3) == \"yes\"\nassert solution(1, 0) == \"yes\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"yes\" or solution(stdin) == \"no\", \"Please provide the correct input.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case_index+1} failed. Expected: {expected}, got: {solution(stdin)}\"\nprint(f\"Test {test_case_index+1} passed.\")",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\", \"First Test Case\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\\n\", \"Second Test Case\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Incorrect solution\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Incorrect solution\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"1st test case failed\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"2nd test case failed\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Your function should return the correct output.\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Your function should return the correct output.\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', 'Test 1 failed'\nassert solution('H02H10P11H02') == 'GRESKA', 'Test 2 failed'",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Your solution is incorrect\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Your solution is incorrect\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\", \"Expected '12 12 11 13'\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\", \"Expected 'GRESKA'\"",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"P01K02H03H04\\nH02H10P11H02\") == \"12 12 11 13\\nGRESKA\"\nassert solution(stdin=\"H01H11H02H03\\nP11P09K05P06\\nP11K08H08K07\\nP09T11P09\") == \"11 12 12 12\\n11 11 11 12\"",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\\n\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\\n7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == 1\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == 2\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The output is not as expected. Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5 3\\n.....\\n.*.*.\\n.....\\n') == '1\\n+-+..\\n|*|*.\\n+-+..\\n'\nassert solution('7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n') == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n'\n",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n.....\\n.*.*.\\n.....\\n\") == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\"7 6 4\\n......\\n.*.*.*\\n......\\n.*.*..\\n..*...\\n..*...\\n*....*\\n\") == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*'\nassert solution(open('input2.txt', 'r')) == '2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\\n+-+..\\n|*|*.\\n+-+..\"\nassert solution(sample_input_2) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\"\n\nfrom typing import List",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 5 3\n   .....\n   .*.*.\n  .....\n    \"\"\"\n) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\n\nassert solution(\n    \"\"\"\n    7 6 4\n   ......\n   .*.*.*\n  ......\n   .*.*..\n   ..*...\n   ..*...\n    *....*\n    \"\"\"\n) == \"2\\n......\\n.*.*.*\\n+--+..\\n|*.|..\\n|.*|..\\n+--+..\\n*....*\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\nassert solution(open('test_input_1.txt', 'r')) == '1'\nassert solution(open('test_input_2.txt', 'r')) == '2'",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', 'Incorrect output'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\nprint(\"pass\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"AC AD AH AS KD should result in a strength of 4.\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"2C 4D 4H 2D 2H should result in a strength of 3.\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AC AD AH AS KD') == '4', 'Sample Input 1'\nassert solution('2C 4D 4H 2D 2H') == '3', 'Sample Input 2'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AC AD AH AS KD') == 4, \"Output:4\"\nassert solution('2C 4D 4H 2D 2H') == 3, \"Output:3\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"Expected output: 4, got: \" + solution(\"AC AD AH AS KD\")\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"Expected output: 3, got: \" + solution(\"2C 4D 4H 2D 2H\")",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\", \"The output should be 4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\", \"The output should be 3\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == 5\nassert solution(\"5 1\\n0 0 0 0 0\") == 7\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\\n\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"5\\n\"\nassert solution(sample_input_2) == \"7\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\", \"Test case 1 failed\"\nassert solution(stdin) == \"7\", \"Test case 2 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 5\n    2 1 1 1 0 1\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    0 0 0 0 0\n    \"\"\"\n) == \"7\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\\n\", \"Test failed for the first example\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\\n\", \"Test failed for the second example\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5', 'Test case 1 should return 5'\nassert solution() == '7', 'Test case 2 should return 7'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\", \"Your solution is incorrect. Please provide the correct solution.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"7\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '4'\nassert solution(5) == '5'\nassert solution(6) == '6'\nassert solution(7) == '7'\nassert solution(8) == '8'\nassert solution(9) == '9'\nassert solution(10) == '10'\nassert solution(11) == '11'\nassert solution(12) == '12'\nassert solution(13) == '13'\nassert solution(14) == '14'\nassert solution(15) == '15'\nassert solution(16) == '16'\nassert solution(17) == '17'\nassert solution(18) == '18'\nassert solution(19) == '19'\nassert solution(20) == '20'\nassert solution(21) == '21'\nassert solution(22) == '22'\nassert solution(23) == '23'\nassert solution(24) == '24'\nassert solution(25) == '25'\nassert solution(26) == '26'\nassert solution(27) == '27'\nassert solution(28) == '28'\nassert solution(29) == '29'\nassert solution(30) == '30'\nassert solution(31) == '31'\nassert solution(32) == '32'\nassert solution(33) == '33'\nassert solution(34) == '34'\nassert solution(35) == '35'\nassert solution(36) == '36'\nassert solution(37) == '37'\nassert solution(38) == '38'\nassert solution(39) == '39'\nassert solution(40) == '40'\nassert solution(41) == '41'\nassert solution(42) == '42'\nassert solution(43) == '43'\nassert solution(44) == '44'\nassert solution(45) == '45'\nassert solution(46) == '46'\nassert solution(47) == '47'\nassert solution(48) == '48'\nassert solution(49) == '49'\nassert solution(50) == '50'\nassert solution(51) == '51'\nassert solution(52) == '52'\nassert solution(53) == '53'\nassert solution(54) == '54'\nassert solution(55) == '55'\nassert solution(56) == '56'\nassert solution(57) == '57'\nassert solution(58) == '58'\nassert solution(59) == '59'\nassert solution(60) == '60'\nassert solution(61) == '61'\nassert solution(62) == '62'\nassert solution(63) == '63'\nassert solution(64) == '64'\nassert solution(65) == '65'\nassert solution(66) == '66'\nassert solution(67) == '67'\nassert solution(68) == '68'\nassert solution(69) == '69'\nassert solution(70) == '70'\nassert solution(71) == '71'\nassert solution(72) == '72'\nassert solution(73) == '73'\nassert solution(74) == '74'\nassert solution(75) == '75'\nassert solution(76) == '76'\nassert solution(77) == '77'\nassert solution(78) == '78'\nassert solution(79) == '79'\nassert solution(80) == '80'\nassert solution(81) == '81'\nassert solution(82) == '82'\nassert solution(83) == '83'\nassert solution(84) == '84'\nassert solution(85) == '85'\nassert solution(86) == '86'\nassert solution(87) == '87'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\", \"Test 1\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\", \"Test 2\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\n\"\n\nfrom typing import List",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\\\\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == open(\"output.txt\", \"w\").read(), \"Test Failed\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$. \"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"\n\nfrom typing import List",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\", \\\nf\"Expected output: {solution('All your base are belong to us.')}, got: {solution('All your base are belong to us.')}\"\n\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\", \\\nf\"Expected output: {solution('What's the Frequency, Kenneth?')}, got: {solution('What's the Frequency, Kenneth?')}\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\"\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\"\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\", \"Test case 1\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?def solution(stdin: str) -> str:pass\", \"Test case 2\"",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"Test Failed. Input: {solution_input}, Output: {solution_output}\"\nfor solution_input, solution_output in zip(solution_inputs, solution_outputs):\n    assert solution(solution_input) == solution_output, f\"Test Failed. Input: {solution_input}, Output: {solution_output}\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Alice\"\nassert solution() == \"Bob\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"Alice\"\nassert solution(\"2\\n\") == \"Bob\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"Alice\"\nassert solution(2) == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'Alice'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"Alice\"\nassert solution(\"2\\n1\\n3\\n\") == \"Bob\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Alice\", \"Your code is incorrect.\"\nassert solution(2) == \"Bob\", \"Your code is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"\n5\nthis\nsentence\nhas\n$\nletters\n\"\"\"\n\nsample_input2 = \"\"\"\n7\n$\nis\nthe\nnumber\nof\nletters\nhere\n\"\"\"\n\nsample_output1 = \"\"\"\nthis sentence has thirtyone letters\n\"\"\"\n\nsample_output2 = \"\"\"\nthirty is the number of letters here\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\nletters\\n\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\\n\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$\\nletters\") == \"this sentence has thirtyone letters\\n\"\nassert solution(\"7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\\n\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1\n    2\n    3\n    4\n    5\n    \"\"\"\n) == \"this sentence has $ letters\"\n\nassert solution(\n    \"\"\"\n    7\n    $\n    is\n    the\n    number\n    of\n    letters\n    here\n    \"\"\"\n) == \"thirty is the number of letters here\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"this sentence has thirtyone letters \"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"thirty is the number of letters here\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'this sentence has thirtyone letters ', \"Solution does not match expected output\"\nassert solution(open('example1.txt', 'r').read()) == 'this sentence has thirty one letters ', \"Solution does not match expected output\"\nassert solution(open('example2.txt', 'r').read()) == 'thirty is the number of letters here', \"Solution does not match expected output\"\n",
        "num_ids_2": 67,
        "num_ids_4": 102
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\") == \"thirty is the number of letters here\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nthis\\nsentence\\nhas\\n$\\nletters\\n\") == \"this sentence has thirtyone letters \"\nassert solution(\"7\\n$is\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\"",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == 0, \"Expected 0, got: {}\".format(solution(\"Abcd\"))\nassert solution(\"EaEbFabG\") == 5, \"Expected 5, got: {}\".format(solution(\"EaEbFabG\"))\n\nfrom typing import List",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed\" for i, (input, output) in enumerate([\n    (input1, output1),\n    # Add more test cases here\n])",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"Abcd\\nEaEbFabG\"\n) == 0, \"Invalid output. The program should return 0.\"\n\nassert solution(\n    \"Abcd\\nEaEbFabG\\n\"\n) == 0, \"Invalid output. The program should return 0.\"\n\nassert solution(\n    \"A\\n\\nB\\n\\nC\\n\\nD\\n\\ne\\n\\nf\\n\\ng\\n\\nh\"\n) == 5, \"Invalid output. The program should return 5.\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Abcd') == '0', \"Expected Output: '0', got: '{}'.\".format(solution('Abcd'))\nassert solution('EaEbFabG') == '5', \"Expected Output: '5', got: '{}'.\".format(solution('EaEbFabG'))\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5\nassert solution('abcde') == 1",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Abcd\") == 0, \"Output is not as expected\" # Pass\nassert solution(\"EaEbFabG\") == 5, \"Output is not as expected\" # Pass",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == 0, \"The correct answer is 0.\"\nassert solution(\"EaEbFabG\") == 5, \"The correct answer is 5.\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"Test 1\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"Test 2\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n\nsolution = \"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n\nThe code is almost correct. The only thing missing is the test cases. Here's the updated code:\n\n```python\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Odd 6\", \"Test case 1\"\nassert solution(\"3 3\") == \"Even 6\", \"Test case 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\nfor i, inp in enumerate(test_cases):\n    assert solution(inp) == expected[i], f\"Test Case {i+1} failed.\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6\\n'\nassert solution('3 3') == 'Even 6\\n'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\"\nassert solution(\"3 3\") == \"Even 6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Odd 6\\n\", \"Test 1 failed.\"\nassert solution(\"3 3\") == \"Even 6\\n\", \"Test 2 failed.\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3\\ntomo\\nmono\\ndak\\n6666\\n\") == 1\nassert solution(stdin=\"2\\nja\\nla\\n52\\n\") == 2\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == 1\n\nassert solution(\"2\\nja\\nla\\n52\") == 2",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1, \"The expected output is 1, but it is: {}\".format(solution(3))\nassert solution(2) == 2, \"The expected output is 2, but it is: {}\".format(solution(2))\nassert solution(6666) == 1, \"The expected output is 1, but it is: {}\".format(solution(6666))",
        "num_ids_2": 58,
        "num_ids_4": 93
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\") == \"1\\n\"\nassert solution(\"2\\nja\\nla\\n52\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\ntomo\\nmono\\ndak\\n6666\\n') == '1\\n', 'Solution should return \"1\"'\n\nassert solution('2\\nja\\nla\\n52\\n') == '2\\ndef solution(stdin: str) -> str: pass\\n', 'Solution should return \"2\"'",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\ntomo\\nmono\\ndak\\n6666\\n\") == 1\nassert solution(\"2\\nja\\nla\\n52\\n\") == 2",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"The solution is incorrect. Please fix the function.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\"\nassert solution(open(\"input2.txt\", \"r\")) == \"2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\", \"Sample Input 2\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.#\\nA.#.#..#..\\n..#..\", \"Solution 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n\\tpass\", \"Solution 2\"",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Test case 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\", \"Test case 2\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\\n.A.#\\n.#.#.\\n..#..\\n\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n\", \"Sample Input 2\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"Test case 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\", \"Test case 2\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Test case 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\nA.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\", \"Test case 2\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\n    pass\", \"Sample Input 2\"",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"sample input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\", \"sample input 2\"",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\", \"First case\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test the function with the sample inputs\"",
        "num_ids_2": 107,
        "num_ids_4": 107
    },
    {
        "number": 4831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\nA.#\\n.#.#.\\n..#..\", \"Sample Input 1\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\", \"Sample Input 2\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1\\n21\\n\") == \"1385.442360\\n882.000000\"\nassert solution(stdin=\"1\\n10000\\n\") == \"1.000000\"\nassert solution(stdin=\"1\\n-10000\\n\") == \"1.000000\"\nassert solution(stdin=\"1\\n10001\\n\") == \"2.000000\"\nassert solution(stdin=\"1\\n-10001\\n\") == \"2.000000\"",
        "num_ids_2": 68,
        "num_ids_4": 125
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The input and output are not the same\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3.141593\\n2.000000\"\nassert solution(input()) == \"1385.442360\\n882.000000\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"3.141593\\n2.000000\", \"Test 1 failed\"\nassert solution(5) == \"1385.442360\\n882.000000\", \"Test 2 failed\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 3.141593, \"Output is incorrect\"\nassert solution(21) == 1385.442360, \"Output is incorrect\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3.141593 2.000000\\n1385.442360 882.000000\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"3.141593\\n2.000000\"\nassert solution(\"21\") == \"1385.442360\\n882.000000\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.141593\\n2.000000\\n\"\nassert solution(input()) == \"1385.442360\\n882.000000\\n\"\n\nfrom typing import List\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n21\\n\") == \"3.141593\\n882.000000\\n\"\nassert solution(\"21\\n21\\n\") == \"1385.442360\\n882.000000\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\\n\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"2\"\nassert solution(input2) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\\n\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 -2 3\") == 2\nassert solution(\"5\\n129 44 394 253 147\") == 0",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 -2 3\\n\") == \"2\\n\"\nassert solution(\"5\\n129 44 394 253 147\\n\") == \"0\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 -2 3\n''') == '2'\n\nassert solution('''\n5\n129 44 394 253 147\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 6, \"First example test case fails\"\nassert solution(2) == 8, \"Second example test case fails\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1} failed: {solution(input())}!= {expected_output}\" for i, (input_, expected_output) in enumerate([\n    (\"3\\n2 2 2\\n\", \"6\"),\n    (\"3\\n4 1 2\\n\", \"8\")\n])",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 2\") == \"6\", \"Sample Input 1 incorrect\"\nassert solution(\"3\\n4 1 2\") == \"8\", \"Sample Input 2 incorrect\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2, 2) == 6\nassert solution(3, 4, 1, 2) == 8",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\", \"Your solution should return the correct output.\"\n\nprint(\"5\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\\n\") == \"6\"\nassert solution(\"3\\n4 1 2\\n2\\n\") == \"8\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\\n\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 2\\n\") == \"6\"\nassert solution(\"3\\n4 1 2\\n\") == \"8\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 2 2\\n3\\n4 1 2\") == \"6\\n8\\n\"\n\nassert solution(\"3\\n4 1 2\\n3\\n2 2 2\") == \"6\\n8\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"NOT POSSIBLE\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(test_input1) == \"2\"\nassert solution(test_input2) == \"NOT POSSIBLE\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2\\n'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == 'NOT POSSIBLE\\n'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == 2\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: {solution(input())} should be {expected}, not {solution(input())}.\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"NOT POSSIBLE\"\n\nfrom typing import List",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n2 4 4\n1111\n1S01\n1011\n0U11\n\"\"\".strip()) == \"2\\n\"\n\nassert solution(\nr\"\"\"\n2 4 4\n1111\n1S01\n1011\n0L11\n\"\"\".strip()) == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\\n\"\nassert solution(\"1 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\\n\"",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2\\n'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == 'NOT POSSIBLE\\n'",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"4\\n\", \"The output should be '4'.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\\n7 5\\n1 5 4 3 2 1 1\") == \"4\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.readlines(), stdout.readlines())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"\n3\n5 5\n3 1 2 1 1\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\\n\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\\n\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n3 1 2 1 1') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1') == '3'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"4\"\nassert solution(sample_input_2) == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\") == \"5\\n10\"\nassert solution(\"Sample Input 2\") == \"10\\n15\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n10\\n\", \"Test 1 failed\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"15\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n') == '5\\n10\\n'\nassert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10\\n15\\n'",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\", \"Sample Input 1\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\", \"Sample Input 2\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\\n10\\n\"\nassert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n\") == \"10\\n15\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"still running\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    7\n    11\n    \"\"\"\n) == \"still running\"\n\nassert solution(\n    \"\"\"\n    5\n    2\n    5\n    9\n    10\n    17\n    \"\"\"\n) == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"still running\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\\n6\"\nassert solution(\"2\\n7\\n11\\n\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"still running\"",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"still running\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Test\") == \"still running\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7\\n11\\n\") == \"4\\n\"\nassert solution(\"5\\n2\\n5\\n9\\n10\\n17\\n\") == \"still running\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == '4'\nassert solution(5) =='still running'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n7\\n11\\n') == '4\\n'\nassert solution('5\\n2\\n5\\n9\\n10\\n17\\n') =='still running\\n'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == 0.6, \"Sample Output 1\"\nassert solution(\"2\\n2 2\") == \"impossible\", \"Sample Output 2\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'''\n6\n6 1 3 2 2 3\n''') == '0.6'\n\nassert solution(r'''\n2\n2 2\n''') == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\") == \"impossible\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\") == \"impossible\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2 failed\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\\n\"\nassert solution(\"2\\n2 2\") == \"impossible\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\\n\") == \"0.6\"\nassert solution(\"2\\n2 2\\n\") == \"impossible\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == 0.6\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"2\\n2 2\") == \"impossible\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Gunnar\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma\\n'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Tie\", \"Your solution should return 'Tie' for the given example\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\\n\", \"sample output 1\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\\n\", \"sample output 2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6\\n') == 'Emma\\n'\nassert solution('1 8 1 8\\n1 10 2 5\\n') == 'Tie\\n'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma\\n'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie\\n'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed: Expected {output}, but got {solution(input())}\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == expected_output1, \"Test 1 failed\"\nassert solution(sample_input2) == expected_output2, \"Test 2 failed\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\\n5\\n1 2 3 mumble 5\\n\") == \"makes sense\\n\", \"Test 1 failed\"\nassert solution(b\"\\n8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\\n\", \"Test 2 failed\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\") == \"makes sense\", \"sample test 1 failed\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\", \"sample test 2 failed\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n8\\n1 2 3 mumble mumble 7 mumble 8\") == \"makes sense\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 mumble 5') =='makes sense', \"Test case 1 failed\"\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy', \"Test case 2 failed\"\n\nfrom typing import List",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"makes sense\", \"Solution is incorrect\"\nassert solution(open(\"input2.txt\", \"r\")) == \"something is fishy\", \"Solution is incorrect\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\\n\", \"Incorrect output\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\\n\", \"Incorrect output\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\\n\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input 1') =='makes sense'\nassert solution('Sample Input 2') =='something is fishy'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5, 3, 6, 9, 12, 15) == [1, 18]\nassert solution(4, 9, 25, 49, 81) == [2, 121]",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\\n\", \"Input 1 failed.\"\nassert solution(\"4 9 25 49 81\") == \"2 121\\n\", \"Input 2 failed.\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"Test Case 1 failed\"\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"Test Case 2 failed\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18', \"Test 1 failed.\"\nassert solution('4 9 25 49 81') == '2 121', \"Test 2 failed.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 3 6 9 12 15\n    \"\"\"\n) == \"1 18\"\n\nassert solution(\n    \"\"\"\n    4 9 25 49 81\n    \"\"\"\n) == \"2 121\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 18\\n2 121'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed for given inputs\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(read_input()) == '1 18\\n2 121\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\", \"The first example of the given problem should output '1 18'.\"\n\nassert solution(\"4 9 25 49 81\") == \"2 121\", \"The second example of the given problem should output '2 121'.\"",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin), \"Input and output should be equal\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'CORRECT'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"CORRECT\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"CORRECT\"\nassert solution(sample_input_2) == \"CORRECT\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 'CORRECT', \"The solution to the 'eight queens puzzle' is incorrect\"\nassert solution(sample_input_2) == 'CORRECT', \"The solution to the 'eight queens puzzle' is incorrect\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"\n\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\\n\") == \"CORRECT\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"CORRECT\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"CORRECT\"\nassert solution() == \"CORRECT\"\nassert solution() == \"CORRECT\"\nassert solution() == \"CORRECT\"\nassert solution() == \"CORRECT\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"CORRECT\", \"Incorrect output\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'CORRECT'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\\n\") == \"1 1 1\"\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n\") == \"1 2 3 1 11\"\nprint(\"All tests passed!\")",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 3 1 11\"\nprint(\"All test cases passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test case {i + 1} failed. Expected output: {expected_output}, got {solution(stdin=input())}.\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == [1, 1, 1]\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\") == [1, 2, 3, 1, 11]\nassert solution(\"1\\n0\") == []\nassert solution(\"2\\n0 0 0\") == [0]\nassert solution(\"1\\n1\\n1\") == [1]\nassert solution(\"2\\n1\\n1\\n1\") == [1, 1]",
        "num_ids_2": 115,
        "num_ids_4": 143
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 1 1\\n\", \"Output should be '1 1 1'.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 1\\n1 0 1\\n1 1 0') == '1 1 1'\nassert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 1 1\\n1 1 1\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [1, 1, 1]\nprint(\"All tests passed\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n\nSolution:\n\nTo solve the problem, we need to find the minimum number of bits to destroy all the fields of the matrix in a reasonable amount of time. We can use the GCD algorithm to find the minimum number of bits required to destroy the entire matrix.\n\nHere's the step-by-step approach:\n\n1. Initialize a variable `min_bits` to 0.\n2. Iterate through each element of the matrix, which is represented as a string in base 2.\n3. For each element, extract the corresponding number from the matrix and convert it to base 10.\n4. Find the GCD of the numbers and store it in a variable called `gcd`.\n5. If the number is greater than 0, update `min_bits` by adding the number of bits in the matrix divided by the GCD.\n6. Repeat steps 3-5 until all elements of the matrix have been processed.\n7. Return the `min_bits` value.\n\nLet's implement the solution.<|im_sep|>",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Monday\", \"Test Failed\"\nassert solution(input()) == \"Tuesday\", \"Test Failed\"\nassert solution(input()) == \"Wednesday\", \"Test Failed\"\nassert solution(input()) == \"Thursday\", \"Test Failed\"\nassert solution(input()) == \"Friday\", \"Test Failed\"\nassert solution(input()) == \"Saturday\", \"Test Failed\"\nassert solution(input()) == \"Sunday\", \"Test Failed\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Output 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Output 2\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Thursday\", \"Test case 1\"\nassert solution(\"17 1\") == \"Saturday\", \"Test case 2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n17 1\\n\") == \"Thursday\\nSaturday\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'1\\n100\\n4\\n') == '4\\n40\\n'\nassert solution(r'100\\n500\\n12\\n') == '129\\n480\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n100\\n4') == '4\\n40'\nassert solution('100\\n500\\n12') == '129\\n480'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2\n\ninput1 = \"\"\"\n1\n100\n4\n\"\"\"\ninput2 = \"\"\"\n100\n500\n12\n\"\"\"\n\nexpected1 = \"\"\"\n4\n40\n\"\"\"\nexpected2 = \"\"\"\n129\n480\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\"100\\n500\\n12\\n\") == \"129\\n480\\n\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n40\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n40\\n\", \"Test 1 failed\"\n\nassert solution(stdin) == \"129\\n480\\n\", \"Test 2 failed\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n1\n100\n4\n\"\"\"\nsample_output_1 = \"\"\"\n4\n40\n\"\"\"\n\nsample_input_2 = \"\"\"\n100\n500\n12\n\"\"\"\nsample_output_2 = \"\"\"\n129\n480\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n\nsample_input = \"\"\"1\n100\n4\n\"\"\"\nsample_output = \"\"\"4\n40\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_index + 1} failed.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\\n6.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"4.0\\n3\"\nassert solution == \"6.0\\n3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"4.0\\n3\"\nassert solution(sample_input2) == \"6.0\\n3\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\n\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\"\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4') == '4.0\\n3'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0\\n3'",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\") == \"4.0\\n3\\n\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\") == \"6.0\\n3\\n\"\n\nprint(\"All test cases passed successfully.\")",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1, f\"Solution 1 failed: expected {output_1}, got {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Solution 2 failed: expected {output_2}, got {solution(input_2)}\"\n\ninput_1 = \"\"\"\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\"\n\ninput_2 = \"\"\"\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n\"\"\"\n\noutput_1 = \"\"\"\n4.0\n3\n\"\"\"\n\noutput_2 = \"\"\"\n6.0\n3\n\"\"\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2, \"Incorrect solution\"\nassert solution(30) == 7, \"Incorrect solution\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2, \"Sample Input 1: 3\"\nassert solution(30) == 7, \"Sample Input 2: 30\"\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(30) == 7",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == [1]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\\n\"",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"1\\n\", \"Expected: '1\\n', but got: '{}'.\".format(solution(input1))\nassert solution(input2) == \"HE GOT AWAY!\\n\", \"Expected: 'HE GOT AWAY!\\n', but got: '{}'.\".format(solution(input2))",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == [1]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-INTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\", \"Sample Input 1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\", \"Sample Input 2\"",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == [\"1\"]\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == [\"HE GOT AWAY!\"]",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, got {solution(input())}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"HE GOT AWAY!\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\\n\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\\n\"\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == \"8.0\"\nassert solution(\"2\\n3 3 3\\n4 5 4\") == \"6.843530573929037\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 3 3\\n4 4 5\") == 8.0\nassert solution(\"2\\n3 3 3\\n4 5 4\") == 6.843530573929037",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution(stdin='2\\n3 3 3\\n4 5 4') == '6.843530573929037'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8.0\", \"Test 1 failed\"\nassert solution(stdin) == \"6.843530573929037\", \"Test 2 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8.0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin) == '8.0', 'Incorrect Answer'\nassert solution(stdin) == solution(stdin) == '6.843530573929037', 'Incorrect Answer'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8.0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8.0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Invalid input\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8.0\"\nassert solution() == \"6.843530573929037\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(24) == 24, \"Failed\"\nassert solution(25) == 27, \"Failed\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(24) == 24, \"The solution is incorrect\"\nassert solution(25) == 27, \"The solution is incorrect\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"24\", \"Your code is not correct. It should return '24' for the sample input 1. It should return '27' for the sample input 2.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(24) == 24, \"The solution is not correct\"\nassert solution(25) == 27, \"The solution is not correct\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"24\\n\", \"Test failed.\"\nassert solution(stdin) == \"27\\n\", \"Test failed.\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"The expected output is 7, but got {}\".format(solution(\"1+9+8+4\"))\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"The expected output is 188, but got {}\".format(solution(\"1+2+3+4+5+6+7+8+9\"))\nassert solution(\"123456789012345678901234567890\") == \"101306016953878024857168637650691826690463388786631982926615338535860094535679799108314523663636342540867284184466247602923788752016097983925595320132811569095907129301677642362557310569502885660075377405598384236303897436600015063474376766753463652713316149343312775004717125906877016852656253924850640048303481415625102578125482047265624107745730365284103157375058775069114945877936145922839642716492944184939883372343836873797886199350516183089591432584908425952655890625945455352291341827817069624660043153406049707662771735075292927052751099585262449192052524655375076802427603630624435733357157144512390801551973348765169154142720121569710254447339522383566457262654523593883068628252817156018279284162154794381287886144336841223120906280673350537635873787939255654784679929667610850378611977135028166968576952137972241644446071355980034811554535450484197828214534096339325265208614",
        "num_ids_2": 102,
        "num_ids_4": 1027
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"The solution should return '7' for the input '1+9+8+4'.\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"The solution should return '188' for the input '1+2+3+4+5+6+7+8+9'.\"\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Incorrect solution for 1+9+8+4\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Incorrect solution for 1+2+3+4+5+6+7+8+9\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"The solution should be 7.\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"The solution should be 188.\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"Test 1 failed\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"Test 2 failed\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1+9+8+4\") == \"7\", \"The correct output is not returned.\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\", \"The correct output is not returned.\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution failed. Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"123\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1+2+3\") == \"3\"\nassert solution(\"1+2\") == \"2\"\nassert solution(\"1+2+3+4\") == \"4\"\nassert solution(\"1+2+3+4+5\") == \"5\"\nassert solution(\"1+2+3+4+5+6\") == \"6\"\nassert solution(\"1+2+3+4+5+6+7\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8\") == \"8\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"9\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0\") == \"10\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1\") == \"11\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2\") == \"12\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3\") == \"13\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4\") == \"14\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5\") == \"15\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6\") == \"16\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7\") == \"17\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8\") == \"18\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9\") == \"19\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0\") == \"20\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+1\") == \"21\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+1+2\") == \"22\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+1+2+3\") == \"23\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+1+2+3+4\") == \"24\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+1+2+3+4+5\") == \"25\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6\") == \"26\"\nassert solution(\"1+2+3+4+5+6+7+8+9+0+1+2+3+4+5+6+7+8+9+0+",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\") == \"2 5\\n5 -2 4\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 5\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '2 5\\n'\nassert solution('2 2 -4 5') == '5 -2 4\\n'\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 5\\n5 -2 4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == str(output())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '2 5\\n'\nassert solution('2 2 -4 5') == '5 -2 4\\n'\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == input().strip()",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\\n2 2 -4 5\") == \"2 5\\n5 -2 4\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 5\"\nassert solution() == \"5 -2 4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [2, 2, 2, 1, 1]\nassert solution() == [1, 1, 1, 3, 3, 3, 2, 2, 2]",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1, \"Solution for sample input 1 is incorrect.\"\nassert solution(sample_input2) == sample_output2, \"Solution for sample input 2 is incorrect.\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2 2 2 1 1', \"The output should be '2 2 2 1 1', but it is '{}'\".format(solution(stdin))",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\"\\n'",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\\n\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2 2 2 1 1\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\\n\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\\n\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(38, 24) == 875\nassert solution(1, 100) == 100",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"875\"\nassert solution(stdin) == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"38 24\") == \"875\\n\", \"Invalid input\"\nassert solution(\"1 100\") == \"100\\n\", \"Invalid input\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, \"Expected output: 875\\nGot: {}\".format(solution(input1))\nassert solution(input2) == output2, \"Expected output: 100\\nGot: {}\".format(solution(input2))",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('38 24') == 875\nassert solution('1 100') == 100",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"38 24\") == 875\nassert solution(\"1 100\") == 100",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"734 893\") == \"437\", \"Test 1\"\nassert solution(\"221 231\") == \"132\", \"Test 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\", \"The first number is not greater than the second one\"\nassert solution(\"221 231\") == \"132\", \"The second number is not greater than the first one\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"734 893\") == \"437\\n\"\nassert solution(\"221 231\") == \"132\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test failed.\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"734 893\") == \"437\", \"Test 1\"\nassert solution(\"221 231\") == \"132\", \"Test 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"11 131\") == \"programming\"\nassert solution(stdin=\"7 96\") == \"contest\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"programming\"\nassert solution() == \"contest\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"11 131\"\nsample_output_1 = \"programming\"\n\nsample_input_2 = \"7 96\"\nsample_output_2 = \"contest\"\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'programming'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"11 131\") == \"programming\"\nassert solution(stdin=\"7 96\") == \"contest\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n.^\n--\n\n.^\n--\n\n.^\n--\n\n.^\n--\n\n.^\n--\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed: Expected output: {expected_output}, but got {solution(input())}.\"\ntest_case_number += 1\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"BABABABABABA\") == \"BBBABABABABA\"",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAB\"\nassert solution(\"BABABABABABA\") == \"BBABABABABAB\"",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nassert solution(\"2 3 'B'\") == \"ABC\"\nassert solution(\"5 6 'C'\") == \"AC\"\nassert solution(\"2 1 'D'\") == \"\"\nassert solution(\"3 3 'E'\") == \"E\"\nassert solution(\"1 2 'F'\") == \"F\"\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 'X'\") == \".^\", \"Expected output: '.^'\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\", \"Expected output: 'BBABABABABAC'\"\nassert solution(\"1 12 'a'\") == \"def solution(stdin: str) -> str: pass\", \"Expected output: 'def solution(stdin: str) -> str: pass'\"",
        "num_ids_2": 53,
        "num_ids_4": 95
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 \\'X\\'\\nX^--\\n\\n.X--\\n--\\n\\n2 12 \\'A\\'\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n\\nBABABABABABA\\nBBABABABABAB\\nBABABABABABA\\n\\nBBABABABABAC\\nBBBABABABABA\\nBBABABABABAB\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '''.^--\n--\n.^\n--\n'''",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 'X'\") == '.^' + '\\n' + '--' + '\\n'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC' + '\\n' + 'BBBABABABABA' + '\\n' + 'BBABABABABAB' + '\\n' + 'def solution(stdin: str) -> str:' + '\\n'\nassert solution(\"2 2 'X'\") == '.^' + '\\n' + '--' + '\\n'\nassert solution(\"3 12 'A'\") == 'BBABABABABAC' + '\\n' + 'BBBABABABABA' + '\\n' + 'BBABABABABAB' + '\\n' + 'def solution(stdin: str) -> str:' + '\\n'\n",
        "num_ids_2": 91,
        "num_ids_4": 182
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n\"",
        "num_ids_2": 128,
        "num_ids_4": 128
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 0 4\\n0 3 0\\n1 1 1\\n0\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\"\n",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test case failed!\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n'\n\nfrom typing import List",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n12\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"3\\n12\"\nassert solution(\"1\\n3\\n6\\n12\") == \"1\\n3\\n6\\n12\"\n",
        "num_ids_2": 95,
        "num_ids_4": 171
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == \"1\\n3\\n6\\n12\\n\", \"The output is incorrect.\"\nassert solution('1\\n2\\n3\\n4\\n5') == \"1\\n2\\n3\\n4\\n\", \"The output is incorrect.\"\nassert solution('1\\n100\\n100\\n100\\n100') == \"100\\n\", \"The output is incorrect.\"",
        "num_ids_2": 97,
        "num_ids_4": 137
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\\n\", \"Output 1\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == \"1\\n3\\n6\\n12\\n\", \"Output 2\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == \"1\\n3\\n6\\n12\\n13\\n\", \"Output 3\"",
        "num_ids_2": 116,
        "num_ids_4": 183
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n3\\n6\\n12\"\nassert solution(\"15\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\") == \"No missing numbers found!\\n[15, 20, 30, 40, 50, 60, 70, 80, 90, 100]\"",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n3\\n6\\n12\\n\", \"Test Case 1 failed\"\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"No input provided.\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"Good job!\\n1\\n3\\n6\\n12\\n\", \"Test failed\"\nprint(\"All tests passed\")",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n\") == \"Good job!\\n3\\n6\\n12\\n\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n6\"\nassert solution(\"9\\n15\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n6, 11, 14, 18, 22\"\nassert solution(\"15\\n12\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n15, 14, 13, 12, 11\"\nassert solution(\"15\\n12\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n15, 14, 13, 12, 11\"\nassert solution(\"15\\n12\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"Good job!\\n15, 14, 13, 12, 11\"",
        "num_ids_2": 105,
        "num_ids_4": 231
    },
    {
        "number": 4860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('9\\n2\\n4\\n5\\n7\\n8\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('9\\n2\\n4\\n5\\n7\\n8\\n10\\n11\\n13') == '1\\n3\\n6\\n12'\nassert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12'",
        "num_ids_2": 97,
        "num_ids_4": 194
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"10 8.9 40075000 272.1\"\n) == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.9 40075000 272.1 60\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.9 40075000 272.1 60 30\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.9 40075000 272.1 60 30 20\") == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 123,
        "num_ids_4": 258
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1\nassert solution(4) == 4\nassert solution(6) == 6\nassert solution(9) == 12\nassert solution(15) == 36",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 4\nassert solution(6) == 5\nassert solution(7) == 6\nassert solution(8) == 7\nassert solution(9) == 8\nassert solution(10) == 9\nassert solution(11) == 10\nassert solution(12) == 11\nassert solution(13) == 12\nassert solution(14) == 13\nassert solution(15) == 14\nassert solution(16) == 15\nassert solution(17) == 16\nassert solution(18) == 17\nassert solution(19) == 18\nassert solution(20) == 19\nassert solution(21) == 20\nassert solution(22) == 21\nassert solution(23) == 22\nassert solution(24) == 23\nassert solution(25) == 24\nassert solution(26) == 25\nassert solution(27) == 26\nassert solution(28) == 27\nassert solution(29) == 28\nassert solution(30) == 29\nassert solution(31) == 30\nassert solution(32) == 31\nassert solution(33) == 32\nassert solution(34) == 33\nassert solution(35) == 34\nassert solution(36) == 35\nassert solution(37) == 36\nassert solution(38) == 37\nassert solution(39) == 38\nassert solution(40) == 39\nassert solution(41) == 40\nassert solution(42) == 41\nassert solution(43) == 42\nassert solution(44) == 43\nassert solution(45) == 44\nassert solution(46) == 45\nassert solution(47) == 46\nassert solution(48) == 47\nassert solution(49) == 48\nassert solution(50) == 49\nassert solution(51) == 50\nassert solution(52) == 51\nassert solution(53) == 52\nassert solution(54) == 53\nassert solution(55) == 54\nassert solution(56) == 55\nassert solution(57) == 56\nassert solution(58) == 57\nassert solution(59) == 58\nassert solution(60) == 59\nassert solution(61) == 60\nassert solution(62) == 61\nassert solution(63) == 62\nassert solution(64) == 63\nassert solution(65) == 64\nassert solution(66) == 65\nassert solution(67) == 66\nassert solution(68) == 67\nassert solution(69) == 68\nassert solution(70) == 69\nassert solution(71) == 70\nassert solution(72) == 71\nassert solution(73) == 72\nassert solution(74) == 73\nassert solution(75) == 74\nassert solution(76) == 75\nassert solution(77) == 76\nassert solution(78) == 77\nassert solution(79) == 78\nassert solution(80) == 79\nassert solution(81) == 80\nassert solution(82) == 81\nassert solution(83) == 82\nassert solution(84) == 83\nassert solution(85) == 84\nassert solution(86) == 85\nassert solution(87) == 86\nassert solution(88) == 87\nassert solution(89) == 88\nassert solution(90) == 89\nassert solution(91) == 90\nassert solution(92) == 91\nassert solution(93) == 92\nassert solution(94) == 93\nassert solution(95) == 94\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"4\"\nassert solution(3) == \"8\"\nassert solution(4) == \"16\"\nassert solution(5) == \"32\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 0, \"Your solution is not correct.\"\nassert solution(2) == 0, \"Your solution is not correct.\"\nassert solution(3) == 0, \"Your solution is not correct.\"\nassert solution(4) == 0, \"Your solution is not correct.\"\nassert solution(5) == 4, \"Your solution is not correct.\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 0\nassert solution(5) == 4\nassert solution(7) == 12\nassert solution(8) == 15\nassert solution(9) == 18",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 0, \"Output must be 0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == '0' # no relationships\nassert solution(3) == '4' # one relationship\nassert solution(4) == '14' # two relationships\nassert solution(5) == '30' # three relationships",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, \"A\", \"A\", \"A\", \"A\") == 3\nprint(\"All tests passed!\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\nassert solution(\"4\\nA\\nA\\A\\A\") == \"3\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"3\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"3\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"3\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"3\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\nA\") == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=solution.py) == '3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3, \"The correct answer is 3, but the output is: \" + solution(3)\nprint(\"All tests passed!\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\nx.x\\nx.x\\nx.x\") == \"..xx..\\nxx..xx\\n..xx..\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nsolution('3 3 1 2\\n.x.\\nx.x\\n.x.') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\nfor i in range(R):\n    for j in range(C):\n        assert solution(input())[i*Z_R+j] == expected[i*C+j]\nprint(\"All tests passed\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 3 1 2\n.x.\nx.x\n.x.''') == '..xx..\\nxx..xx\\n..xx..'\n\nassert solution('''2 3 1 2\n.x.\nx.x\n.x.''') == '..xx..\\nxx..xx\\n..xx..'\n\nassert solution('''4 4 1 2\n.x.\nx.x\n.x.''') == '..xx..\\nxx..xx\\n..xx..'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '....xx..\\nxxxxxx..\\n....xx..\\n.def'",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \".......\\n.......\\n.......\\n\"\nassert solution(input()) == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(input()) == \".......\\n.......\\n.......\\n\"\nassert solution(input()) == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(input()) == \".......\\n.......\\n.......\\n\"\nassert solution(input()) == \"..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 53,
        "num_ids_4": 106
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2\\nx.x\\nx.x\\nx.x') == '..xx..\\nx..xx\\n..xx..'\nassert solution('3 3 1 2\\n.x.x\\n.x.x\\n.x.x') == '..xx..\\nxx..xx\\n..xx..'\nassert solution('3 3 1 2\\nx.x\\nx.x\\nx.x\\n.x.x\\n.x.x\\n.x.x') == '..xx..\\nx..xx\\n..xx..\\n..xx..'",
        "num_ids_2": 81,
        "num_ids_4": 140
    },
    {
        "number": 4864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3 3 1 2\\n.x.\\nx.x\\n.x.\\n') == '..xx..\\nxx..xx\\n..xx..\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('F 60 13 20') == '14 20\\n'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('F 60 13 20') == '14 20'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('tests/input.txt', 'r')) == ['14 20', '23 59']",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nF 60 13 20\") == \"14 20\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Failed: Incorrect output. Expected: {}, Received: {}\".format(output(), solution(input()))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"14 20\", \"Your solution is incorrect. Please check the code.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nF 60 13 20\\n\") == \"14 20\\n\"\nassert solution(\"2\\nF 30 15 20\\n\") == \"14 20\\n\"\nassert solution(\"3\\nB 60 13 20\\n\") == \"15 20\\n\"\nassert solution(\"4\\nB 30 15 20\\n\") == \"15 20\\n\"\nassert solution(\"5\\nB 60 15 20\\n\") == \"15 20\\n\"",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\nF 60 13 20') == '14 20'\nassert solution('2\\nB 30 20 0') == '20 20'\nassert solution('3\\nF 40 0 12') == '0 12'\nassert solution('4\\nB 0 0 12') == '24 0'\nassert solution('5\\nF 30 0 10') == '12 10'",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"OCT 31\") == \"yup\\n\", \"Test Case 1 failed\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"yup\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"OCT 31\") == \"yup\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"OCT 31\") == \"yup\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"OCT 31\") == \"yup\\n\"\n\nSolution:",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('DEC 25') == 'yup'\nassert solution('DEC 24') == 'nope'\nassert solution('MAR 25') == 'nope'\nassert solution('OCT 30') == 'nope'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"honi\\n.##.##.##\\n.honi.##\\n##.oker##\\n.nera.#\\n#irak.#\\n#.##.##\\n.##.##.#\\n\"\n\nassert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"honi\\n.##.##.##\\n.honi.##\\n##.oker##\\n.nera.#\\n#irak.#\\n#.##.##\\n.##.##.#\\n\"",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nera\\nirak\\n') == '#.#.#.#.\n.#.#.#.#\n#.honi#.\n.#oker.#\n#.nera#.\n.#irak.#\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"#######.#.#.#######.#.#######.#.#######.#.#\"\nassert solution(sample_input2) == \"#########.#.#.#######.#.#######.#.#######.#.#\"\nassert solution(sample_input3) == \"#########.#.#.#######.#.#######.#.#######.#.#\"\nassert solution(sample_input4) == \"#######.#.#.#######.#.#######.#.#######.#.#\"\nassert solution(sample_input5) == \"#######.#.#.#######.#.#######.#.#######.#.#\"",
        "num_ids_2": 50,
        "num_ids_4": 101
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak') == '#.#.#.#\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#\\n.#.#.#.#\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution('4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak'))\\nprint(solution('4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n'))\\nprint(solution('4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\\n\\n'))\\nprint(solution('4 4\\n2 2 2 2\\nhoni\\oker\\nera\\nirak\\n\\n\\n\\n\\n'))\\n",
        "num_ids_2": 240,
        "num_ids_4": 240
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"#.#.#.#. #.#.#.#.honi#.oker#.nera#.irak#\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test the function with sample input and expected output\\nassert solution(solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\")) == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 756,
        "num_ids_4": 756
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"\n\nprint(\"Test Passed!\")",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n# Test cases\\nassert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n# Test cases\\nassert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|::",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n\"",
        "num_ids_2": 358,
        "num_ids_4": 358
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:||\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:||\\n+---+---+---+---+---+---+---+---+\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:||\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:||\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|.P.|:::|...|:::||\\n+---+---+---+---+---+---+---+---+\\n|:P:|...|:::|...|:::|...|:::|...||\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|",
        "num_ids_2": 728,
        "num_ids_4": 1043
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\\n\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\\n\\n\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\\n\\n\\n\\n\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7",
        "num_ids_2": 410,
        "num_ids_4": 828
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh",
        "num_ids_2": 404,
        "num_ids_4": 808
    },
    {
        "number": 4868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d",
        "num_ids_2": 498,
        "num_ids_4": 1027
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"Diablo is happy!\", \"The provided function does not work.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\nassert solution(\"10.000000 5.000000\") == \"Diablo is happy!\\n\"\nassert solution(\"0.999999 1.000001\") == \"Need more materials!\\n\"\nassert solution(\"100.000001 100.000001\") == \"Need more materials!\\n\"\nassert solution
        "num_ids_2": 63,
        "num_ids_4": 127
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(1.000000) +'' + str(4.000000)) == 'Diablo is happy!\\n'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\n\nimport math",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"\"\"1.000000 4.000000\"\"\") == \"Diablo is happy!\\n\"\nassert solution(f\"\"\"0.800000 4.000000\"\"\") == \"Need more materials!\\n\"\nassert solution(f\"\"\"0.800000 0.800000\"\"\") == \"Diablo is happy!\\n\"\nassert solution(f\"\"\"0.800000 0.900000\"\"\") == \"Need more materials!\\n\"",
        "num_ids_2": 65,
        "num_ids_4": 130
    },
    {
        "number": 4869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(stdin=\"2.000000 100.000000\") == \"Need more materials!\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"9 1 10 10 1\") == \"use the stairs\"\nassert solution(\"10 1 10 3 2\") == \"use the stairs\"\nassert solution(\"10 1 10 1 1\") == \"use the stairs\"\nassert solution(\"10 1 10 1 0\") == \"use the stairs\"\n",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\nprint(\"All test cases passed\")\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\nprint(\"All test cases passed.\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '6'\nprint('All tests passed!')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 10 2 1\") == 6\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\"\nassert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 2 10 1 2\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\") == \"6\"\nassert solution(\"10 10 10 10 1\") == \"6\"\nassert solution(\"10 2 10 10 1\") == \"6\"\nassert solution(\"10 1 10 10 1\")",
        "num_ids_2": 30,
        "num_ids_4": 71
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 1 10 2 1') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"89.06666666666666\", \"The output should be: 89.06666666666666\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\\n89.06666666666666\"\nassert solution(\"3\\n1000\\n2000\\n1000\") == \"666.0\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"128.8\\n89.06666666666666\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    500\n    120\n    75\n    \"\"\"\n) == \"128.8\\n89.06666666666666\"\n\nassert solution(\n    \"\"\"\n    4\n    250\n    120\n    75\n    500\n    \"\"\"\n) == \"494.5333333333333\\n160.0\"\n\nassert solution(\n    \"\"\"\n    5\n    1500\n    120\n    75\n    500\n    600\n    300\n    \"\"\"\n) == \"171.8\\n262.1666666666667\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"89.06666666666666\\n\"\nassert solution(\"4\\n500\\n120\\n75\\n800\") == \"89.06666666666666\\n\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n500\\n120\\n75\") == \"128.8\\n89.06666666666666\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '89.06666666666666', \"Incorrect output\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"89.06666666666666\\n\", \"The correct output should be: 89.06666666666666\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n500\\n120\\n75\\n\") == \"128.8\\n89.06666666666666\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"128.8\\n89.06666666666666\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 45 65 84 346') == 4\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4', 'Test failed'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n45\\n65\\n84\\n346\") == \"4\"\nassert solution(\"1\\n150\\n250\\n350\\n450\") == \"4\"\nassert solution(\"1\\n100\\n125\\n150\\n175\") == \"3\"\nassert solution(\"1\\n150\\n250\\n350\\n450\") == \"4\"\nassert solution(\"1\\n200\\n300\\n400\\n500\") == \"4\"\nassert solution(\"1\\n150\\n250\\n350\\n450\") == \"4\"\nassert solution(\"1\\n100\\n125\\n150\\n175\") == \"3\"\nassert solution(\"1\\n200\\n300\\n400\\n500\") == \"4\"",
        "num_ids_2": 57,
        "num_ids_4": 117
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 45 65 84 346') == 4\n\nSolution:\n\nWe can start by defining the `solution` function that takes the input from the user and returns the output. We will start by reading the input and storing it in variables `n` and `dirty_pushes`. We will then calculate the number of days needed for the cleanup phase based on the given `dirty_pushes` and store it in a variable `days`.\n\nWe can then calculate the total number of cleanup phases needed for Petra to keep the dirtiness strictly below $20$ at all times. We will start by initializing a variable `count` to 0. We will then loop over the `dirty_pushes` and for each dirty push, we will calculate the number of cleanup phases needed by comparing it with the given `days` and adding 1 if the number of days needed is less than or equal to the given `days`. Finally, we will increment the `count` variable by 1 for each dirty push.\n\nHere is the code:\n\n```python\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == 4",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == '4'\nassert solution(stdin: str) == '5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"########\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\n\"\nprint(\"All test cases pass\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('7 5\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '0'\nassert solution('7 6\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '0'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('5 5\\n###########\\n#P#GGGGGG#\\n#..T#GGG#\\n#..T#GGG#\\n###########') == '3'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == 1\nprint('Test Passed')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test Case 1 failed\"\n\nassert solution(\"50 100\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test Case 2 failed\"\n\nassert solution(\"4 4\\n_____$_$______\\n_____$_$______\\n_____$_$______\\n_____$_$______\") == 2, \"Test Case 3 failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test Case 4 failed\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\",
        "num_ids_2": 582,
        "num_ids_4": 915
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test Case 1 is incorrect.\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test Case 2 is incorrect.\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5, \"Test Case 3 is incorrect.\"\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$___$_$__$____$__$___$_$__$__\\n_$____$$____$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$",
        "num_ids_2": 583,
        "num_ids_4": 1021
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 'Invalid input'\n\nassert solution(\"\") == 'Invalid input'\n\nassert solution(\"13 50\") == 'Invalid input'\n\nassert solution(\"1 1\") == 'Invalid input'\n\nassert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 'Invalid input'\n\nprint(\"All test cases pass\")",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5\\n'\nassert solution('''13 50\n_____$$$_______$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n______$$$_________$________$__________$________$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______$$$______$$$________$$$______$$$____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______$$$______$$$________$$$______$$$____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______$$$______$$$________$$$______$$$____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______$$$______$$$________$$$______$$$____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______$$$______$$$________$$$______$$$____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______$$$______$$$________$$$______$$$____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n____$$$______$$$______$$$________$$$______$$$_____\n_____$$$_____$_$$$______$$$________$$$______$$$_____\n_______$$$_______$$$______$$$________$$$______$$$____\n_______$$$_______",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Your solution is incorrect. Please check the code and try again.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == '5\\n'",
        "num_ids_2": 286,
        "num_ids_4": 286
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\") == \"5\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 288,
        "num_ids_4": 288
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$') == 5, \"Test 1 failed\"\nassert solution('2 10\\n_$$$__\\n__$$__\\n__$_$__\\n___$$\\n_____\\n_____') == 1, \"Test 2 failed\"\nassert solution('10 10\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________\\n________",
        "num_ids_2": 336,
        "num_ids_4": 1026
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\") == 5",
        "num_ids_2": 283,
        "num_ids_4": 283
    },
    {
        "number": 4874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Test Case {i+1} failed. Expected output: {expected_output}, but got: {solution(input_str)}\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nHere's the code for the solution:\n\n```python\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nfrom typing import List\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nimport re",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"i cant speak pig latin\nthere is a dog\nhello world\nhow are you?\ngoodbye cruel world\nhappy new year\"\"\"\n) == \"iyay atnlay antay nayehtay elayay ehtay ayayatay ihayay onayay olayay arayayorayay ehayay olayay arayayorayay irayay ayayatay tayay otayay onayay olayay orayay elayay arayayorayay ohayay otayay olayay arayayorayay ehayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay ohayay otayay olayay arayayorayay ehayay otayay onayay olayay arayayorayay o",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\nsolution(\"A friend of yours was frustrated with everyone writing in Pig Latin and has asked you to write a program to translate to Pig Latin for him. Ouldway youyay ebay osay indkay otay oday ityay?\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"a nice day for everyone\") == \"anay ebay oday esay indkay otay oday itay\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"Tay ickay brwny eflx ovrshy lzy dgbay ohtay\"\nassert solution(\"This is the start of a very long line\\nwith some text\") == \"Itay sihtay otay ihtay ohtay onay oday ohtay otay ohtay ohtay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay ot",
        "num_ids_2": 58,
        "num_ids_4": 1027
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"odorant\") == \"odoray odday oday oday\"\nassert solution(\"yay\") == \"yay\"\nassert solution(\"and\") == \"and\"\nassert solution(\"a\") == \"ay\"",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\ni cant speak pig latin\n\"\"\"\n) == \"\"\"\niyay antcay eakspay igpay atinlay\n\"\"\"\n\nassert solution(\n    \"\"\"\nAnd I'm a skilled pig latinator\n\"\"\"\n) == \"\"\"\nAnd i'm a skilled pig latinatoray\n\"\"\"\n\nassert solution(\n    \"\"\"\nI love watching pig pig movies\n\"\"\"\n) == \"\"\"\nI love watching pig pig moviay\n\"\"\"\n\nassert solution(\n    \"\"\"\nCan you speak pig latin?\n\"\"\"\n) == \"\"\"\nAble to speak pig latinay\n\"\"\"\n\nassert solution(\n    \"\"\"\nAble to speak pig latin?\n\"\"\"\n) == \"\"\"\nAble to speak pig latinay\n\"\"\"\n\nassert solution(\n    \"\"\"\nHere are the rules:\n - If a word begins with a consonant, take all of the letters before the first vowel and move them to the end of the word, then add ay to the end of the word. Examples: pig $\\to $ igpay, there$\\to $ erethay.\n - If a word begins with a vowel (a, e, i, o, u, or y), simply add yay to the end of the word. For this problem, y is always a vowel. Examples: and $\\to $ andyay, ordinary$\\to $ ordinaryyay.\n\n\"\"\"\n) == \"\"\"\nHere are the rules:\n - If a word begins with a consonant, take all of the letters before the first vowel and move them to the end of the word, then add ay to the end of the word. Examples: pig $\\to $ igpay, there$\\to $ erethay.\n - If a word begins with a vowel (a, e, i, o, u, or y), simply add yay to the end of the word. For this problem, y is always a vowel. Examples: and $\\to $ andyay, ordinary$\\to $ ordinaryyay.\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\nq\\npan\\npan\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\") == \"nymble\"\nassert solution(\"3\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\") == \"nymble\"\nassert solution(\"2\\n2\\npan\\npan\\npan\\npancakes\\nAnywhere is fine I guess\") == \"Anywhere is fine I guess\"\nassert solution(\"3\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\n2\\npan\\npan\\npan\\npancakes\\nAnywhere is fine I guess\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\\nn\\npancakes\\n\\npotatoes\\ns\\npan\\npancakes\\nAnywhere is fine I guess\") == \"nymble\"",
        "num_ids_2": 87,
        "num_ids_4": 201
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\nq\\npancakes\\npancakes\\npancakes\\npancakes\") == \"nymble\"\nassert solution(\"2\\n2\\npancakes\\npancakes\\npancakes\\npancakes\") == \"Anywhere is fine I guess\"\nassert solution(\"3\\nnymble\\npancakes\\npancakes\\npancakes\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 67,
        "num_ids_4": 98
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\nq\\npizza\\n3\\nnYYBB\\npancakes\\npea soup\\npunsch\") == \"nYYBB\"\nassert solution(\"2\\n2\\nq\\npizza\\n3\\nnYYBB\\npancakes\\npea soup\\npunsch\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2\\n2\\nq\\npizza\\n3\\nnYYBB\\npancakes\\npea soup\\npunsch\") == \"Anywhere is fine I guess\"\n",
        "num_ids_2": 90,
        "num_ids_4": 133
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n\\n\\n\\n\") == \"nymble\"\nassert solution(\"2\\n\\n\\npancakes\\n\\n\\n\\n\") == \"nymble\"\nassert solution(\"1\\n\\npanzu\\n\\npancakes\\n\\n\\n\\n\") == \"nymble\"\nassert solution(\"1\\n\\npancakes\\n\\npancakes\\n\\n\\n\\n\") == \"nymble\"\nassert solution(\"2\\n\\npancakes\\n\\npancakes\\n\\n\\n\\n\") == \"nymble\"\nassert solution(\"2\\npancakes\\npancakes\\npancakes\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\npancakes\\npancakes\\npancakes\\npancakes\\n\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 51,
        "num_ids_4": 115
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == 'nymble'\nassert solution(sample_output) == 'def solution(stdin: str) -> str:'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2\\nq\\npasta\\nsandwich\\n3\\nnymph\\npancakes\\nchicken\\nmeat\\npork\\n\") == \"nymble\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\nq\\npancakes\\nsalad\\n3\\nnymble\\npancakes\\npita\") == \"nymble\"\nassert solution(\"2\\n2\\nq\\nchicken\\nbacon\\n3\\nsushi\\nmango\\npancakes\\nchicken\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\n2\\nq\\npancakes\\nspam\\n3\\nnymble\\nchicken\\npita\") == \"nymble\"\nassert solution(\"2\\n2\\nq\\napple pie\\nbanana\\n3\\napple pie\\nnacho\\npancakes\\napple pie\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 84,
        "num_ids_4": 169
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\nq\\npots\\nsalad\\n3\\nnymble\\npancakes\\npea soup\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\npunch\\np",
        "num_ids_2": 1028,
        "num_ids_4": 1028
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2\\n2\\nq\\npan\\npancakes\\n3\\nnyb\\npancakes\\npea soup\\npunsch\\n') == 'nymble\\ndef solution(stdin: str) -> str:\\npass\\n'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"nymble\"\nassert solution(\"1\\npancakes\\n2\\nsandwiches\\n\") == \"Anywhere is fine I guess\"\nassert solution(\"1\\npancakes\\n2\\nsandwiches\\n3\\npeas\\n\") == \"nymble\"\nassert solution(\"1\\npancakes\\n2\\nsandwiches\\n3\\npeas\\n4\\nsandwiches\\n\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 39,
        "num_ids_4": 116
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 0 15\") == \"3\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 0 15') == '3\\n'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"4 2 10\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"7 100 3\") == \"1\"\nassert solution(\"100001 100000 10\") == \"2\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 0 15\") == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 0 15\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 0 15\n    \"\"\"\n) == \"\"\"\n    3\n    \"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 0 15') == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed for sample input {input()}\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 0 15\") == \"3\", \"The solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\", \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11 15') == '19', \"Incorrect Output\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\", \"The number 19 is incorrect\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected: {output}, Received: {solution(input())}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 19, \"The correct solution is: 19\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '19', \"Solution does not return the correct result\"\nprint(\"Test Passed!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='11 15') == '19', \"Incorrect output. Expected: 19, got: {}\".format(solution(stdin='11 15'))",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 15\") == \"19\\n\"\nassert solution(\"3 6\") == \"1\\n\"\nassert solution(\"1 2\") == \"2\\n\"\nassert solution(\"10 7\") == \"5\\n\"\nassert solution(\"-1000 0\") == \"0\\n\"",
        "num_ids_2": 31,
        "num_ids_4": 60
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('South West East') == 'Yes', \"Test case 1 failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"South West East\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"South West East\") == \"No\" # no intersection",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"South West East\") == \"Yes\" #Correct Solution",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"South West East\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal\\n') =='marywasnosyagain\\ndef solution(stdin: str) -> str:\\n    pass'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'\nassert solution('3 8\\nqwertyuiop\\nxyz') == 'xyz'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"marywasnosyagain\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) =='marywasnosyagain', 'Your solution is incorrect'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\nassert solution(\"5 16\\nagain\\npirpumsemoystoal\\n1\\n\") == \"again\"\nassert solution(\"5 16\\nagain\\npirpumsemoystoal\\n1\\n2\\n\") == \"again\"\nassert solution(\"5 16\\nagain\\npirpumsemoystoal\\n1\\n2\\n3\\n\") == \"again\"\nassert solution(\"5 16\\nagain\\npirpumsemoystoal\\n1\\n2\\n3\\n4\\n\") == \"again\"",
        "num_ids_2": 63,
        "num_ids_4": 134
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"marywasnosyagain\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"John likes simple ciphers. He had been using the \\\"Caesar\\\" cipher to encrypt his diary until recently, when he learned a hard lesson about its strength by catching his sister Mary browsing through the diary without any problems.\\nRapidly searching for an alternative, John found a solution: the famous \\\"Autokey\\\" cipher. He uses a version that takes the $26$ lower-case letters 'a'-'z' and internally translates them in alphabetical order to the numbers $0$ to $25$. The encryption key $k$ begins with a secret prefix of $n$ letters. Each of the remaining letters of the key is copied from the letters of the plaintext 'a', so that 'k_{n+i} = a_{i}' for $i \\geq 1$. Encryption of the plaintext 'a' to the ciphertext 'b' follows the formula 'b_ i = a_ i + k_ i \\bmod 26'. Mary is not easily discouraged. She was able to get a peek at the last n letters John typed into his diary on the family computer before he noticed her, quickly encrypted the text document with a click, and left. This could be her chance.\") == \"marywasnosyagain\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 291,
        "num_ids_4": 291
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"marywasnosyagain\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"marywasnosyagain\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Either'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'\nassert solution(7) == 'Either'\nassert solution(8) == 'Even'\nassert solution(9) == 'Odd'\nassert solution(10) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 'Either' # Correctly outputs \"Either\"\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Either'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'\nassert solution(7) == 'Either'\nassert solution(8) == 'Even'\nassert solution(9) == 'Odd'\nassert solution(10) == 'Either'",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Either'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(3) == 'Odd'\nassert solution(4) == 'Either'\nassert solution(5) == 'Even'\nassert solution(6) == 'Odd'\nassert solution(7) == 'Either'\nassert solution(8) == 'Even'\nassert solution(9) == 'Odd'\nassert solution(10) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Even'\nassert solution(101) == 'Odd'\nassert solution(5) == 'Either'\nassert solution(7) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 'Either', \"Function should return 'Either' for input 1\"\nassert solution(2) == 'Odd', \"Function should return 'Odd' for input 2\"\nassert solution(3) == 'Even', \"Function should return 'Even' for input 3\"\nassert solution(4) == 'Even', \"Function should return 'Even' for input 4\"\nassert solution(5) == 'Odd', \"Function should return 'Odd' for input 5\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(3) == 'Even'\nassert solution(5) == 'Even'\nassert solution(8) == 'Odd'\nassert solution(10) == 'Odd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'Either'\nassert solution(2) == 'Either'\nassert solution(3) == 'Either'\nassert solution(4) == 'Either'\nassert solution(5) == 'Either'\nassert solution(6) == 'Even'\nassert solution(7) == 'Even'\nassert solution(8) == 'Even'\nassert solution(9) == 'Even'\nassert solution(10) == 'Even'\nassert solution(11) == 'Odd'\nassert solution(12) == 'Odd'\nassert solution(13) == 'Odd'\nassert solution(14) == 'Odd'\nassert solution(15) == 'Odd'\nassert solution(16) == 'Odd'\nassert solution(17) == 'Odd'\nassert solution(18) == 'Odd'\nassert solution(19) == 'Odd'\nassert solution(20) == 'Odd'\nassert solution(21) == 'Odd'\nassert solution(22) == 'Odd'\nassert solution(23) == 'Odd'\nassert solution(24) == 'Odd'\nassert solution(25) == 'Odd'\nassert solution(26) == 'Odd'\nassert solution(27) == 'Odd'\nassert solution(28) == 'Odd'\nassert solution(29) == 'Odd'\nassert solution(30) == 'Odd'\nassert solution(31) == 'Odd'\nassert solution(32) == 'Odd'\nassert solution(33) == 'Odd'\nassert solution(34) == 'Odd'\nassert solution(35) == 'Odd'\nassert solution(36) == 'Odd'\nassert solution(37) == 'Odd'\nassert solution(38) == 'Odd'\nassert solution(39) == 'Odd'\nassert solution(40) == 'Odd'\nassert solution(41) == 'Odd'\nassert solution(42) == 'Odd'\nassert solution(43) == 'Odd'\nassert solution(44) == 'Odd'\nassert solution(45) == 'Odd'\nassert solution(46) == 'Odd'\nassert solution(47) == 'Odd'\nassert solution(48) == 'Odd'\nassert solution(49) == 'Odd'\nassert solution(50) == 'Odd'\nassert solution(51) == 'Odd'\nassert solution(52) == 'Odd'\nassert solution(53) == 'Odd'\nassert solution(54) == 'Odd'\nassert solution(55) == 'Odd'\nassert solution(56) == 'Odd'\nassert solution(57) == 'Odd'\nassert solution(58) == 'Odd'\nassert solution(59) == 'Odd'\nassert solution(60) == 'Odd'\nassert solution(61) == 'Odd'\nassert solution(62) == 'Odd'\nassert solution(63) == 'Odd'\nassert solution(64) == 'Odd'\nassert solution(65) == 'Odd'\nassert solution(66) == 'Odd'\nassert solution(67) == 'Odd'\nassert solution(68) == 'Odd'\nassert solution(69) == 'Odd'\nassert solution(70) == 'Odd'\nassert solution(71) == 'Odd'\nassert solution(72) == 'Odd'\nassert solution(73) == 'Odd'\nassert solution(74) == 'Odd'\nassert solution(75) == 'Odd'\nassert solution(76) == 'Odd'\nassert solution(77) == 'Odd'\nassert solution(78) == 'Odd'\nassert solution(79) == 'Odd'\nassert solution(80) == 'Odd'\nassert solution(81) == 'Odd'\nassert solution(82) == 'Odd'\nassert solution(83) == 'Odd'\nassert solution(84) == 'Odd'\nassert solution(85) == 'Odd'\nassert solution(86) == 'Odd'\nassert solution(87) == 'Odd'\nassert solution(88) == 'Odd'\nassert solution(89) == 'Odd'\nassert solution(90) == 'Odd'\nassert solution(91) == 'Odd'\nassert solution(92) == 'Odd'\nassert solution(93) == 'Odd'\nassert solution(94) == 'Odd'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Either'\nassert solution(3) == 'Either'\nassert solution(5) == 'Either'\nassert solution(7) == 'Either'\nassert solution(11) == 'Either'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 'Either', \"The solution should return 'Either'\"\n\nassert solution(2) == 'Even', \"The solution should return 'Even'\"\n\nassert solution(4) == 'Odd', \"The solution should return 'Odd'\"\n\nassert solution(5) == 'Even', \"The solution should return 'Even'\"\n\nassert solution(9) == 'Either', \"The solution should return 'Either'\"\n\nassert solution(10) == 'Either', \"The solution should return 'Either'\"\n\nassert solution(11) == 'Even', \"The solution should return 'Even'\"\n\nassert solution(12) == 'Odd', \"The solution should return 'Odd'\"\n\nassert solution(15) == 'Either', \"The solution should return 'Either'\"\n\nassert solution(18) == 'Odd', \"The solution should return 'Odd'\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed. Output does not match the expected output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test failed\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\"\nassert solution(stdin=\"5\\n314\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\\n5\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5\n314\n1\n5926\n5\n35897''') == '3\\n1\\n4\\n1\\n5'",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897\\n') == '3\\n1\\n4\\n1\\n5\\n'\nprint('All tests passed.')",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\", \"Test 1\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the') == 'yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Your implementation of the solution is incorrect.\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\"\nassert solution() == \"no\"\nassert solution() == \"yes\"\nassert solution() == \"yes\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\nyes\nno\nno\nyes\nyes\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=solution.py) == \"\"\"\nyes\nno\nno\nyes\nyes\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The function should return 'yes' for each pair of words that match, and 'no' for all other pairs.\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The function should return 'yes' for each pair of words that match, and 'no' for all other pairs.\"",
        "num_ids_2": 226,
        "num_ids_4": 226
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nw p\\nwe we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\\nno\\nno\\nyes\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 172,
        "num_ids_4": 344
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"\n\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\t f\\nu h\\nw p\\we we\\ncan the\\twork people\\nit of\\out the\") == \"yes\\nno\\nno\\nyes\\nno\"",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution({stdin})!= expected({expected})\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 1\\ncarrots?\\npiglets\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 1\\ncarrots?\\nsnakes\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 1\\ncarrots?\\nsharks\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 1\\ncarrots?\\nmonkey\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 71,
        "num_ids_4": 141
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies') == '1'\nassert solution('2 1\\nsnow leopards') == '0'\nassert solution('3 2\\nlizards') == '0'\nassert solution('5 4\\nfishes') == '2'\nassert solution('6 1\\nbears') == '0'",
        "num_ids_2": 40,
        "num_ids_4": 71
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"The expected output is not present\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == '1'\nassert solution('2 1\\ncarrots?\\n') == '1'\nassert solution('2 1\\ncarrots?\\ncarrots?\\n') == '2'\nassert solution('2 1\\ncarrots?\\ncarrots?\\ncarrots?\\n') == '2'\nassert solution('2 1\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarro",
        "num_ids_2": 43,
        "num_ids_4": 96
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2 1\\ncarrots?\\nhuffle-puff\") == \"1\\ndef solution(stdin: str) -> str:\\nnpass\\n\"\nassert solution(\"2 1\\ncarrots?\\nhuffle-puff\\ndrunkards\") == \"2\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2 1\\ncarrots?\\nhuffle-puff\\ndrunkards\\nwhales\") == \"3\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"2 1\\ncarrots?\\nhuffle-puff\\ndrunkards\\nwhales\\nnarwhals\") == \"6\\ndef solution(stdin: str) -> str:\\npass\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 166
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == 1\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\\n\") == 1, \"carrots: 1\"\nassert solution(\"2 1\\nbunnies\\ncarrots?\\n\") == 1, \"carrots: 1\"\nassert solution(\"2 1\\ncarrots\\nbunnies\\n\") == 1, \"carrots: 1\"\nassert solution(\"2 1\\ncarrots\\ncarrots\\nbunnies\\n\") == 1, \"carrots: 1\"\nassert solution(\"2 1\\ncarrots\\ncarrots\\nbunnies\\ncarrots?\\n\") == 1, \"carrots: 1\"",
        "num_ids_2": 64,
        "num_ids_4": 133
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1', \"Solution should return 1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\nbunnies') == '1'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == 1\nassert solution(\"3 3\\napple\\nbanana\\nbanana\\nbanana\\nbanana\") == 6\nassert solution(\"1 2\\nbanana\\nbanana\\nbanana\\ncherry\\ncherry\\ncherry\") == 4\n",
        "num_ids_2": 51,
        "num_ids_4": 86
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|.P.|:::|...|:::|\n+---+---+---+---+---+---+---+---+---+\n|:P:|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+---+\n|:R:|.N.|:B:|.Q.|:K:|.B.|:::|.R:|\n+---+---+---+---+---+---+---+---+---+\n\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('+-------------------+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8",
        "num_ids_2": 218,
        "num_ids_4": 430
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"...|:::|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"...|:::|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 236,
        "num_ids_4": 236
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.p.|:::|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.n.|:::|.n.|:n:|.n.|:::|.n.|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|.P:|.P.|:::|.P.|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.R.|:::|.R.|:R:|.N:|.Q:|.B:|.K:|.B:|:::|.R:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|...|:::|",
        "num_ids_2": 291,
        "num_ids_4": 608
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"White: \\nBlack: \\n\", \"The function should return an empty string if the input is an empty string.\"\nassert solution(\"....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Kh1,Qh1,Rr1,Rb1,Bg1,Bn1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,h6,a6,b5,a5,c5,d5,e5,f5,g5,h5,a4,c4,d4,e4,f4,g4,h4,a3,b3,c3,d3,e3,f3,g3,h3,a2,b2,c2,d2,e2,f2,g2,h2,a1,b1,c1,d1,e1,f1,g1,h1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,h6,a6,b5,a5,c5,d5,e5,f5,g5,h5,a4,c4,d4,e4,f4,g4,h4,a3,b3,c3,d3,e3,f3,g3,h3,a2,b2,c2,d2,e2,f2,g2,h2,a1,b1,c1,d1,e1,f1,g1,h1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,h6,a6,b5,a5,c5,d5,e5,f5,g5,h5,a4,c4,d4,e4,f4,g4,h4,a3,b3,c3,d3,e3,f3,g3,h3,a2,b2,c2,d2,e2,f2,g2,h2,a1,b1,c1,d1,e1,f1,g1,h1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,h6,a6,b5,a5,c5,d5,e5,f5,g5,h5,a4,c4,d4,e4,f4,g4,h4,a3,b3,c3,d3,e3,f3,g3,h3,a2,b2,c2,d2,e2,f2,g2,h2,a1,b1,c1,d1,e1,f1,g1,h1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,h6,a6,b5,a5,c5,d5,e5,f5,g5,h5,a4,c4,d4,e4,f4,g4,h4,a3,b3,c3,d3,e3,f3,g3,h3,a2,b2,c2,d2,e2,f2,g2,h2,a1,b1,c1,d1,e1,f1,g1,h1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,h6,a6,b5,a5,c5,d5,e5,f5,g5,h5,a4,c4,d4,e4,f4,g4,h4,a3,b3,c3,d3,e3,f3,g3,h3,a2,b2,c2,d2,e2,f2,g2,h2,a1,b1,c1,d1,e1,f1,g1,h1,a8,c8,d8,f8,g8,h8,a7,e6,c6,d6,f6,g6,",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+-------------------------------+\\n|.r..b..q..k..b..n..r. |\\n+-------------------------------+\\n| :p. :p. :p. :p. :p. :p. :p. |\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+-------------------------------+\\n|.r..b..q..k..b..n..r. |\\n+-------------------------------+\\n| :p. :p. :p. :p. :p. :p. :p. |\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+-------------------------------+\\n|.r..b..q..k..b..n..r. |\\n+-------------------------------+\\n| :p. :p. :p. :p. :p. :p. :p. |\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 264,
        "num_ids_4": 568
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+:\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\":\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\":\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\":\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"+:\\n-:\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n|....|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 292,
        "num_ids_4": 584
    },
    {
        "number": 4885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\":p:|.p.|:p:|.p.|:p:|.p.|:::|.p:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"...|:::|.n.|:::|...|:::|...|:p:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\":P:|...|:::|...|:::|...|:::|...|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\".P.|:::|.P.|:P:|...|:P:|.P.|:P:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\":R:|.N.|:B:|.Q:.|.B::::|.R:|\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\n",
        "num_ids_2": 138,
        "num_ids_4": 284
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(8 3) == \"Your wish is granted!\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected output {output}\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\n\"\nassert solution(\"5 3\") == \"Your wish is granted!\\n\"\nassert solution(\"10 3\") == \"Your wish is granted!\\n\"\nassert solution(\"100 3\") == \"Your wish is granted!\\n\"\nassert solution(\"101 3\") == \"Your wish is granted!\\n\"\nassert solution(\"1000000000 3\") == \"Your wish is granted!\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(8) == 'Your wish is granted!'\nassert solution(8, 3) == 'Your wish is granted!'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 3') == 'Your wish is granted!\\n'\nassert solution('10 1') == 'You will become a flying monkey!\\n'\nassert solution('11 2') == 'Your wish is granted!\\n'\nassert solution('11 5') == 'Your wish is granted!\\n'\nassert solution('11 10') == 'Your wish is granted!\\n'\nassert solution('11 15') == 'Your wish is granted!\\n'\nassert solution('12 0') == 'You will become a flying monkey!\\n'",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is not correct.\"\n\nassert solution
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Your wish is granted!\", \"Test case failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\\ndef solution(stdin: str) -> str:\n    return 'Your wish is granted!\\n\"'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(16) == 16",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"16\", \"Test Case 1 failed\"\nassert solution(\"100\") == \"20\", \"Test Case 2 failed\"\nassert solution(\"1000000000\") == \"210\", \"Test Case 3 failed\"\nassert solution(\"1000000001\") == \"211\", \"Test Case 4 failed\"\nassert solution(\"100000000000000000000000000000000\") == \"1164625\", \"Test Case 5 failed\"",
        "num_ids_2": 39,
        "num_ids_4": 95
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('16') == 16, \"Input is not valid.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"16\\n\") == \"16\\n\", \"Sample Output: 16\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"16\", \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"16\") == \"16\\n\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(16) == 16, \"Input 1 is incorrect.\"\nassert solution(18) == 24, \"Input 2 is incorrect.\"\nassert solution(19) == 31, \"Input 3 is incorrect.\"\nassert solution(20) == 38, \"Input 4 is incorrect.\"\nassert solution(21) == 45, \"Input 5 is incorrect.\"\nassert solution(22) == 52, \"Input 6 is incorrect.\"\nassert solution(23) == 59, \"Input 7 is incorrect.\"\nassert solution(24) == 66, \"Input 8 is incorrect.\"\nassert solution(25) == 73, \"Input 9 is incorrect.\"\nassert solution(26) == 80, \"Input 10 is incorrect.\"\nassert solution(27) == 87, \"Input 11 is incorrect.\"\nassert solution(28) == 94, \"Input 12 is incorrect.\"\nassert solution(29) == 101, \"Input 13 is incorrect.\"\nassert solution(30) == 108, \"Input 14 is incorrect.\"\nassert solution(31) == 115, \"Input 15 is incorrect.\"\nassert solution(32) == 122, \"Input 16 is incorrect.\"\nassert solution(33) == 129, \"Input 17 is incorrect.\"\nassert solution(34) == 136, \"Input 18 is incorrect.\"\nassert solution(35) == 143, \"Input 19 is incorrect.\"\nassert solution(36) == 150, \"Input 20 is incorrect.\"\nassert solution(37) == 157, \"Input 21 is incorrect.\"\nassert solution(38) == 164, \"Input 22 is incorrect.\"\nassert solution(39) == 171, \"Input 23 is incorrect.\"\nassert solution(40) == 178, \"Input 24 is incorrect.\"\nassert solution(41) == 185, \"Input 25 is incorrect.\"\nassert solution(42) == 192, \"Input 26 is incorrect.\"\nassert solution(43) == 199, \"Input 27 is incorrect.\"\nassert solution(44) == 206, \"Input 28 is incorrect.\"\nassert solution(45) == 213, \"Input 29 is incorrect.\"\nassert solution(46) == 220, \"Input 30 is incorrect.\"\nassert solution(47) == 227, \"Input 31 is incorrect.\"\nassert solution(48) == 234, \"Input 32 is incorrect.\"\nassert solution(49) == 241, \"Input 33 is incorrect.\"\nassert solution(50) == 248, \"Input 34 is incorrect.\"\nassert solution(51) == 255, \"Input 35 is incorrect.\"\nassert solution(52) == 262, \"Input 36 is incorrect.\"\nassert solution(53) == 269, \"Input 37 is incorrect.\"\nassert solution(54) == 276, \"Input 38 is incorrect.\"\nassert solution(55) == 283, \"Input 39 is incorrect.\"\nassert solution(56) == 290, \"Input 40 is incorrect.\"\nassert solution(57) == 297, \"Input 41 is incorrect.\"\nassert solution(58) == 304, \"Input 42 is incorrect.\"\nassert solution(59) == 311, \"Input 43 is incorrect.\"\nassert solution(60) == 318, \"Input 44 is incorrect.\"\nassert solution(61) == 325, \"Input 45 is incorrect.\"\nassert solution(62) == 332, \"Input 46 is incorrect.\"\nassert solution(63) == 339, \"Input 47 is incorrect.\"\nassert solution(64) == 346, \"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"16\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(16) == \"16\\n\", \"Output should be 16\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\\n\", \"Test case failed\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"4\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nprint(\"Test Passed\")",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"1\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"4\\n\"\nassert solution(sample_input2) == \"2\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == '4', \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Output should be 4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4\\n'\nassert solution('6 180\\n45 30 55 20 80 25') == '5\\n'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"79\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 79\nassert solution(10) == 100\nassert solution(1) == 1\nassert solution(1000000) == 4000000000000000000",
        "num_ids_2": 22,
        "num_ids_4": 64
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 79, \"The correct length of the jumbo javelin is not 79.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 79",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79, \"Expected result is 79, but got {}\".format(solution(\"4\\n21\\n34\\n18\\n9\"))\nprint(\"All tests passed!\")\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"21\\n34\\n18\\n9\") == 79, \"The output is incorrect\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == 79, \"The given solution is incorrect.\"\n\nassert solution(\"10\\n10\\n10\\n10\\n10\") == 100, \"The given solution is incorrect.\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"79\", \"Expected output: 79\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n21\\n34\\n18\\n9\") == \"79\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"79\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"10 5 10 20\\n5 0 0 0\") == \"impossible\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"1 3 4 5\\n3 2 4 6\") == \"impossible\\n\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\\n\"\nassert solution(\"1 3 4 5\\n3 2 4 6\") == \"impossible\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 115
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"2 5 10 10\\n0 1 1 1\") == \"impossible\"\nassert solution(\"5 3 3 5\\n0 2 3 4\") == \"impossible\"\nassert solution(\"5 3 3 3\\n0 2 4 5\") == \"impossible\"\nassert solution(\"5 3 3 2\\n0 2 4 6\") == \"impossible\"",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 3 3 4\n0 1 4''') == '2 3 0'\nassert solution('''5 4 3 4\n0 1 4''') == 'impossible'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 3 0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"impossible\" # You can implement the solution here\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    # TODO: code here\\n\\n    return 'Output\\n\\ndef test_solution():\\n    input = [5, 3, 3, 4]\\n    expected_output = [2, 3, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 4]\\n    expected_output = [0, 2, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 4]\\n    expected_output = [0, 2, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1, 2]\\n    expected_output = [0, 0, 0]\\n    output = solution(input)\\n    assert output == expected_output\\n    assert test_solution()\\n\\n    input = [5, 2, 1",
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"5 3 3 4\\n2 1 4\") == \"2 3 0\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\"\n\nfrom typing import List",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\" # expected output: \"1 0 0 0 0 1\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"The function should return an empty string when given an empty input.\"\nassert solution(\"0\") == \"0\", \"The function should return 0 when given 0 as the input.\"\nassert solution(\"1\") == \"1\", \"The function should return 1 when given 1 as the input.\"\nassert solution(\"10\") == \"10\", \"The function should return 10 when given 10 as the input.\"",
        "num_ids_2": 45,
        "num_ids_4": 99
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1\\n'\nprint('All tests passed!')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    0 1 2 2 2 7\n    \"\"\"\n) == \"\"\"\n1 0 0 0 0 1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4 2 2 2 2 2\n    \"\"\"\n) == \"\"\"\n-1 0 0 0 0 0\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 1 1 1 1 1\n    \"\"\"\n) == \"\"\"\n0 0 0 0 0 0\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1 1 1 1 1 1\n    1 1 1 1 1 1\n    1 1 1 1 1 1\n    1 1 1 1 1 1\n    1 1 1 1 1 1\n    \"\"\"\n) == \"\"\"\n-1 0 0 0 0 0\n-1 0 0 0 0 0\n-1 0 0 0 0 0\n-1 0 0 0 0 0\n-1 0 0 0 0 0\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Expected output: 1 0 0 0 0 1, but got {}\".format(solution(\"0 1 2 2 2 7\"))",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\", \"Incorrect output for sample input 0 1 2 2 2 7\"\nassert solution(\"0 0 0 0 0 0\") == \"0 0 0 0 0 0\", \"Incorrect output for sample input 0 0 0 0 0 0\"\nassert solution(\"1 0 0 0 0 0\") == \"0 0 0 0 0 1\", \"Incorrect output for sample input 1 0 0 0 0 0\"",
        "num_ids_2": 98,
        "num_ids_4": 147
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2\\n123456 0.6666\\nqwerty 0.3334\\n\") == \"1.3334\\n\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.3334\", \"Incorrect solution\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"1.3334\", \"Expected output: 1.3334\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.3334\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n123456 0.6666\\nqwerty 0.3334\") == \"1.3334\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '1.3334'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1.3334\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334\\n'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.3334\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1.3334, \"The output should be 1.3334, but it is {}\".format(solution())",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\nprint(\"All tests passed\")",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 2 4\") == 1\nassert solution(\"5 3\\n5 4 3\\n6 1 2\") == 3\nassert solution(\"4 3\\n1 2 4\") == 1\nassert solution(\"1 1\\n5 3\\n5 4 3\\n6 1 2\") == 3\nassert solution(\"5 3\\n5 4 3\\n6 1 2\\n6 1 2\") == 3\n\nfrom typing import List",
        "num_ids_2": 43,
        "num_ids_4": 91
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"\n\nsolution(\"3 1\\n1 2 4\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(1) == 1\nassert solution(1, 2, 4) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 33
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\\n\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1'\nprint('All tests passed')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 2 4\\n\") == 1\nassert solution(\"100000 100\\n\") == 500000000",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(input())}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('27') == '''\nG:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed for solution({input()}): expected {output}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"G:\\nF: -------------------------------------\\nE:       *   *          *             *   *                   *\\nD: ----*-------**-----*-------------*-------*----------------  *\\nC: * *     *      * *     **    * *           *         ** **  **\\nB: --------------------------**-----------------*-----*------  *\\nA:                                                  *         g: -----------------------------------------------\\nf:                                                            e: ----------------------------------------------------------\\nd:                                                            c:                                                            b:                                                            a: ----------------------------------------------------------\"",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"G:                                                           \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Expected output does not match the actual output.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:\\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                           \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution('27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2'))'\nassert solution('30\\nC C D E F E D2 C C D E C2 B2 C C D E C D C B g A B C2 C3') == 'G:\\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                            \\ne: ----------------------------------------------------------\\nd:                                                            \\nc:                                                            \\nb:                                                            \\na: ----------------------------------------------------------\\nC:                                                            \\nD:                                                            \\ne:                                                            \\nd:                                                            \\ng:                                                            \\nf:                                                            \\nb:                                                            \\na: ----------------------------------------------------------\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution('30\\nC C D E F E D2 C C D E C2 B2 C C D E C D C B g A B C2 C3'))'",
        "num_ids_2": 469,
        "num_ids_4": 469
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"6\\n1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"7\\n1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"11\\n1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"12\\n1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"13\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"14\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"15\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"16\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"17\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"18\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"19\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"21\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"22\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"23\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"24\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"25\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"possible\\n\"\nassert solution(\"26\\n1 1 1 ",
        "num_ids_2": 44,
        "num_ids_4": 96
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'possible'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\n1 1 1\\n') == 'possible'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1\\n') == 'possible\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'possible'\nassert solution(6) == 'definitely not possible'\nassert solution(10) == 'definitely not possible'\nassert solution(2) == 'definitely not possible'",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 1') == 'possible'\nassert solution('2\\n1 2') == 'impossible'\nassert solution('4\\n2 2 3') == 'possible'",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"3\\n4 4 4\") == \"impossible\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"possible\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 1') == 'possible'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 3 2 1 2 2 1 1 3\") == 3\nassert solution(\"10\") == 3\nassert solution(\"100\") == 10\nassert solution(\"2 3 4 5 6 7 8 9 10\") == 3\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == 1",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 3 2 1 2 2 1 1 3\") == 3\nassert solution(\"10\") == 1\nassert solution(\"20\") == 1\nassert solution(\"10000\") == 1\n",
        "num_ids_2": 37,
        "num_ids_4": 60
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3, \"Your solution is incorrect.\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\\n\"\nassert solution(\"10\\n4 3 2 1 1 2 2 1 1 3\") == \"2\\n\"\nassert solution(\"10\\n3 2 1 1 2 2 1 1 3\") == \"1\\n\"\nassert solution(\"10\\n2 1 1 2 2 1 1 3\") == \"0\\n\"\nassert solution(\"10\\n1 1 2 2 1 1 3\") == \"3\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 130
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3, \"Expected 3, got {}.\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 3, 3, 2, 1, 2, 2, 1, 1, 3) == 3",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nprint(\"PASSED\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == 3\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\\n\"\n\nsolution(\"10\\n4 3 3 2 1 2 2 1 1 3\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got {solution(input())}.\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nASHMEADE 9.90 8.85\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.93\\nBOLT 9.58 8.43\\nPOWELL 9.72 8.61\\nFRATER 9.88 8.92\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nASHMEADE 9.90 8.85\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.93\\nBOLT 9.58 8.43\\nPOWELL 9.72 8.61\\nFRATER 9.88 8.92\\nASHMEADE 9.90 8.85\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.93\\nBOLT 9.58 8.43\\nPOWELL 9.72 8.61\\nFRATER 9.88 8.92\\nASHMEADE 9.90 8.85\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.93\\nBOLT 9.58 8.43\\nPOWELL 9.72 8.61\\nFRATER 9.88 8.92\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nASHMEADE 9.90 8.85\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.93\\nBOLT 9.58 8.43\\nPOWELL 9.72 8.61\\nFRATER 9.88 8.92\\n",
        "num_ids_2": 348,
        "num_ids_4": 1019
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\\n\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 217,
        "num_ids_4": 427
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\"\n\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\n\"",
        "num_ids_2": 240,
        "num_ids_4": 240
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"CARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"CARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"CARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"CARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"ASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"CARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 220,
        "num_ids_4": 442
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '''\n35.54\nCARTER\nBOLT\nPOWELL\nBLAKE\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"35.54\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 1, 2, 2, 4, 5, 6]) == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"The correctness of the solution cannot be determined\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\n\nfrom typing import List",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 1, 2, 2, 4, 5, 6]) == 2",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Please implement the function solution()\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Enter the correct input\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\"\nassert solution(\"4\\n1 1\\n2 3\\n3 4\\n4 5\") == \"3\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"4\"",
        "num_ids_2": 55,
        "num_ids_4": 95
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heeey\") == \"heeeey\"\nassert solution(\"heeeeeey\") == \"heeeeeeeey\"",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heey\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heey\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"hey\") == b\"heey\"\nassert solution(b\"hello\") == b\"helo\"\nassert solution(b\"goodbye\") == b\"heey\"\nassert solution(b\"goodbye!\") == b\"heey!\"\nassert solution(b\"happy\") == b\"heey\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heyyyyy\") == \"heeeeeey\"\nassert solution(\"heeeeeeeeeeery\") == \"heeeeeeeeeeeeeeeeeeey\"\nassert solution(\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
        "num_ids_2": 25,
        "num_ids_4": 1027
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heey\") == \"heey\"\nassert solution(\"hello\") == \"heeeeee\"\nassert solution(\"heeeeee\") == \"heeeeee\"\nassert solution(\"helloeey\") == \"heeeeee\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heey\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heey\", \"Your solution is incorrect.\"\nassert solution(\"helllo\") == \"heeeey\", \"Your solution is incorrect.\"\nassert solution(\"goodbye\") == \"heeey\", \"Your solution is incorrect.\"\nassert solution(\"goodness\") == \"heeeey\", \"Your solution is incorrect.\"\nassert solution(\"goodbye world\") == \"heeey\", \"Your solution is incorrect.\"",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"hehe\") == \"heheey\"\nassert solution(\"hehehe\") == \"heheheey\"\nassert solution(\"heeeeeeey\") == \"heeeeeeey\"\nassert solution(\"heeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heyy\") == \"heeeey\"\nassert solution(\"haah\") == \"heeeey\"\nassert solution(\"heeeey\") == \"heeeey\"\nassert solution(\"heeey\") == \"heeeey\"",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"No input provided\"\nassert solution(\"4\") == \"\", \"Input should be a positive integer\"\nassert solution(\"1\\n1\\n1\\n2\") == \"\", \"Invalid input format\"\nassert solution(\"4\\n0\\n1\\n1\\n2\\n0\\n1\\n1\\n2\\n0\\n1\\n1\\n2\\n0\\n1\\n1\\n2\\n0\\n1\\n1\\n2\") == \"1 2\\n1 3\\n1 4\", \"Test cases failed\"",
        "num_ids_2": 27,
        "num_ids_4": 136
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\"\n\ninput_n = int(input())\nroad_map = list(map(int, input().split()))\n\ndistance = [road_map[i-1] + road_map[j-1] for i, j in zip(range(1, input_n), range(1, input_n))]",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 1 1 2\n    1 0 2 3\n    1 2 0 3\n    2 3 3 0\n    \"\"\"\n) == \"1 2\\n1 3\\n1 4\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 0 0 0\n    0 1 0 0\n    0 0 1 0\n    0 0 0 1\n    \"\"\"\n) == \"1 2\\n1 3\\n1 4\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == ['1 2', '1 3', '1 4']\n\nassert solution('0 0\\n1 0\\n1 0\\n1 0') == ['1 1']\n\nassert solution('1 0\\n1 0\\n1 0\\n1 0') == []\n\nassert solution('0 0\\n1 0\\n0 0\\n1 0') == []\n\nassert solution('0 0\\n1 0\\n0 0\\n0 0') == []\n\nassert solution('0 0\\n1 0\\n0 0\\n0 0') == []\n\nassert solution('0 0\\n1 0\\n0 0\\n0 0') == []",
        "num_ids_2": 84,
        "num_ids_4": 134
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\n1 2\n1 3\n1 4\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 2\\n1 3\\n1 4\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"1 1\\n1 2\\n1 3\\n\", \"Test case 2 failed\"\nassert solution(stdin) == \"1 1\\n1 2\\n1 3\\n\", \"Test case 3 failed\"\nassert solution(stdin) == \"1 1\\n1 2\\n1 3\\n\", \"Test case 4 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution({input()})!= expected\\nExpected output: {expected}\\nActual output: {solution(input())}\"\n\nn = int(input())\nroads = []\nfor _ in range(n - 1):\n    a, b = map(int, input().split())\n    roads.append((a, b))",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('EWPGAJRB') == 'ABCD', \"Test Failed\"\nassert solution('abcdef') == 'defg', \"Test Failed\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"LJBKC\") == \"ACDF\"\nassert solution(\"TGFDJDB\") == \"DCEF\"\nassert solution(\"KNJPMR\") == \"AEF\"\nassert solution(\"L2JZJJ\") == \"HFED\"",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abc') == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abc') == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abc') == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abc') == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"abcd\") == 3\nassert solution(\"abac\") == 1\nassert solution(\"cba\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == 2\n\nassert solution(\"abcd\") == 3\n\nassert solution(\"hello\") == 2\n\nassert solution(\"banana\") == 3\n\nassert solution(\"racecar\") == 1\n\nassert solution(\"z\") == 0",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == 2",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"def\") == 3\nassert solution(\"ghi\") == 3\nassert solution(\"jkl\") == 2\nassert solution(\"mnop\") == 2\nassert solution(\"qrst\") == 2\nassert solution(\"uvwxyz\") == 3\nassert solution(\"1234567890\") == 2\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 2\nassert solution(\"123abc\") == 2\nassert solution(\"abc123\") == 2\nassert solution(\"hello world\") == 11\nassert solution(\"A man, a plan, a canal: Panama\") == 17\nassert solution(\"The quick brown fox jumps over the lazy dog.\") == 11\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890\") == 23",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"go\"\nassert solution(\"aah\") == \"go\"\nassert solution(\"aaaaa\") == \"no\"\nassert solution(\"hhh\") == \"no\"\n\nfrom typing import List\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaah\") == \"no\", \"Your code is incorrect\" # should return \"no\"\nassert solution(\"aaaaah\") == \"go\", \"Your code is incorrect\" # should return \"go\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"go\", \"Expected 'go', got '{}'\".format(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaah\") == \"no\", \"Expected 'no', got '{}'.\".format(solution(\"aaah\"))  # expected output: \"no\"\nassert solution(\"aaaaaah\") == \"no\", \"Expected 'no', got '{}'.\".format(solution(\"aaaaaah\"))  # expected output: \"no\"\nassert solution(\"aaaaa\") == \"go\", \"Expected 'go', got '{}'.\".format(solution(\"aaaaa\"))  # expected output: \"go\"",
        "num_ids_2": 72,
        "num_ids_4": 107
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"no\", \"The correct output for the given test case is no.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"go\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A3B1A1B2A3A2A3A2\") == \"A\"\nassert solution(\"A3B1A2B2A3A2A3A1\") == \"A\"\nassert solution(\"A3B1A3B2A3A1A3A2\") == \"A\"\nassert solution(\"A3B1A4B2A3A2A4A1\") == \"A\"\nassert solution(\"A3B1A5B2A4A2A5A1\") == \"A\"\nassert solution(\"A3B1A6B2A5A1A6A1\") == \"A\"\nassert solution(\"A3B1A7B2A6A1A7A1\") == \"A\"\nassert solution(\"A3B1A8B2A7A1A8A1\") == \"A\"\nassert solution(\"A3B1A9B2A8A1A9A1\") == \"A\"\nassert solution(\"A3B1A10B2A9A1A10A1\") == \"A\"\nassert solution(\"A3B1A11B2A10A1A11A1\") == \"A\"\nassert solution(\"A3B1A12B2A11A1A12A1\") == \"A\"\nassert solution(\"A3B1A13B2A12A1A13A1\") == \"A\"\nassert solution(\"A3B1A14B2A13A1A14A1\") == \"A\"\nassert solution(\"A3B1A15B2A14A1A15A1\") == \"A\"\nassert solution(\"A3B1A16B2A15A1A16A1\") == \"A\"\nassert solution(\"A3B1A17B2A16A1A17A1\") == \"A\"\nassert solution(\"A3B1A18B2A17A1A18A1\") == \"A\"\nassert solution(\"A3B1A19B2A18A1A19A1\") == \"A\"\nassert solution(\"A3B1A20B2A19A1A20A1\") == \"A\"\nassert solution(\"A3B1A21B2A20A1A21A1\") == \"A\"\nassert solution(\"A3B1A22B2A21A1A22A1\") == \"A\"\nassert solution(\"A3B1A23B2A22A1A23A1\") == \"A\"\nassert solution(\"A3B1A24B2A23A1A24A1\") == \"A\"\nassert solution(\"A3B1A25B2A24A1A25A1\") == \"A\"\nassert solution(\"A3B1A26B2A25A1A26A1\") == \"A\"\nassert solution(\"A3B1A27B2A26A1A27A1\") == \"A\"\nassert solution(\"A3B1A28B2A27A1A28A1\") == \"A\"\nassert solution(\"A3B1A29B2A28A1A29A1\") == \"A\"\nassert solution(\"A3B1A30B2A29A1A30A1\") == \"A\"\nassert solution(\"A3B1A31B2A30A1A31A1\") == \"A\"\nassert solution(\"A3B1A32B2A31A1A32A1\") == \"A\"\nassert solution(\"A3B1A33B2A32A1A33A1\") == \"A\"\nassert solution(\"A3B1A34B2A33A1A34A1\") == \"A\"\nassert solution(\"A3B1A35B2A34A1A35A1\") == \"A\"\nassert solution(\"A3B1A36B2A35A1A36A1\") == \"A\"\nassert solution(\"A3B1A37B2A36A1A37A",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2B1A2A2A2B2\") == \"A\"\nassert solution(\"B2B2B1B1B1A1B1A1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2B1\") == \"B\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B3B3B3A3B3A3B3\") == \"A\"\nassert solution(\"A3B1A3B1B2B2A3A3A3\") == \"A\"\nassert solution(\"B1A1A1A1A1A2B1A1A1A1\") == \"B\"\nassert solution(\"B1A1A1A1A1A2B1A1A1A1A1\") == \"B\"\n",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\", \"Incorrect output: expected 'A' got '{}'\".format(solution(\"A2B1A2B2A1A2A2A2\"))\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"AB2A1B2A2A1B1A2B2\") == \"B\"\nassert solution(\"AB1A1A1B1A2B1A1B1\") == \"A\"\nassert solution(\"AB2A2A1B1B1B1B1A1B1\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A1\") == \"A\"\n\nfrom typing import List",
        "num_ids_2": 50,
        "num_ids_4": 102
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"AB2A1A1A2B2B1B2A2\") == \"B\"\nassert solution(\"A1A2A1A1A1A1A1A1\") == \"A\"\nassert solution(\"B1B2B1B1B1B1B1B1\") == \"B\"\nassert solution(\"A2A2A2A1A2A2A1A1\") == \"A\"\nassert solution(\"B2B2B2B2B2B2B1B2\") == \"B\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A1B2B3B4B5B6B7B8B9B10B11B12B13B14B15B16B17B18B19B20B21B22B23B24B25B26B27B28B29B30B31B32B33B34B35B36B37B38B39B40B41B42B43B44B45B46B47B48B49B50B51B52B53B54B55B56B57B58B59B60B61B62B63B64B65B66B67B68B69B70B71B72B73B74B75B76B77B78B79B80B81B82B83B84B85B86B87B88B89B90B91B92B93B94B95B96B97B98B99B100B101B102B103B104B105B106B107B108B109B110B111B112B113B114B115B116B117B118B119B120B121B122B123B124B125B126B127B128B129B130B131B132B133B134B135B136B137B138B139B140B141B142B143B144B145B146B147B148B149B150B151B152B153B154B155B156B157B158B159B160B161B162B163B164B165B166B167B168B169B170B171B172B173B174B175B176B177B178B179B180B181B182B183B184B185B186B187B188B189B190B191B192B193B194B195B196B197B198B199B200B201B202B203B204B205B206B207B208B209B210B211B212B213B214B215B216B217B218B219B220B221B222B223B224B225B226B227B228B229B230B231B232B233B234B235B236B237B238B239B240B241B242B243B244B245B246B247B248B249B250B251B252B253B254B255B256B257B258B259B260B261B262B263B264B265B266B267B268B269B270B271B272B273B274B275B276B2",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 21, \"Expected output 21, got {}\".format(solution())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"21\\n\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('1000 10000\\n1 1000 1500 25\\n1 1000 1500 50\\n2 1000 2000 20\\n2 1000 2000 30\\n3 1000 3000 15\\n3 1000 3000 25') == '1000'\nassert solution('2 5\\n1 2 3\\n2 3 4') == '0'\nassert solution('5 3\\n1 2 3\\n2 3 4') == '45'\nassert solution('1 1\\n1 1\\n1 1') == '1'\nassert solution('3 4\\n1 2 3\\n2 3 4') == '125'\nassert solution('1 5\\n1 5\\n1 5') == '5'\nassert solution('2 10\\n1 2 3\\n2 3 4') == '60'\nassert solution('3 10\\n1 2 3\\n2 3 4') == '120'\nassert solution('4 10\\n1 2 3\\n2 3 4') == '180'\nassert solution('5 10\\n1 2 3\\n2 3 4') == '240'\nassert solution('6 10\\n1 2 3\\n2 3 4') == '300'\nassert solution('7 10\\n1 2 3\\n2 3 4') == '360'\nassert solution('8 10\\n1 2 3\\n2 3 4') == '420'\nassert solution('9 10\\n1 2 3\\n2 3 4') == '480'\nassert solution('10 10\\n1 2 3\\n2 3 4') == '540'",
        "num_ids_2": 187,
        "num_ids_4": 240
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    6 5\n    1 6 20 4\n    5 3 2 4\n    1 2 2\n    2 3 8\n    2 4 3\n    3 6 10\n    3 5 15\n''') == '21'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n\") == \"21\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n1 6 20 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == 21",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == 21\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n\nfrom typing import List",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D 1234567890') == '1234567890'\n\nfrom typing import List",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect!\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\n\nfrom typing import List",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2', 'Solution is not correct.'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"Alice\"\nassert solution(4) == \"Alice\"\nassert solution(5) == \"Alice\"\nassert solution(6) == \"Alice\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Alice\\n1\"\nassert solution(\"1\") == \"Bob\\n1\"\nassert solution(\"4\") == \"Alice\\n2\"\nassert solution(\"3\") == \"Alice\\n1\"\nassert solution(\"20\") == \"Alice\\n5\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n\") == \"Bob\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n\") == \"Alice\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\n\") == \"Bob\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'Sample Input\\n') == b'Sample Output\\nAlice\\n1\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n') == 'Alice\\n'\nassert solution('3\\n') == 'Bob\\n'\nassert solution('4\\n') == 'Alice\\n'\nassert solution('5\\n') == 'Bob\\n'\nassert solution('6\\n') == 'Alice\\n'\nassert solution('7\\n') == 'Alice\\n'\nassert solution('8\\n') == 'Bob\\n'\nassert solution('9\\n') == 'Bob\\n'\nassert solution('10\\n') == 'Alice\\n'\nassert solution('11\\n') == 'Alice\\n'\nassert solution('12\\n') == 'Bob\\n'\nassert solution('13\\n') == 'Alice\\n'\nassert solution('14\\n') == 'Bob\\n'\nassert solution('15\\n') == 'Alice\\n'\nassert solution('16\\n') == 'Alice\\n'\nassert solution('17\\n') == 'Alice\\n'\nassert solution('18\\n') == 'Bob\\n'\nassert solution('19\\n') == 'Bob\\n'\nassert solution('20\\n') == 'Alice\\n'\nassert solution('21\\n') == 'Alice\\n'\nassert solution('22\\n') == 'Alice\\n'\nassert solution('23\\n') == 'Alice\\n'\nassert solution('24\\n') == 'Bob\\n'\nassert solution('25\\n') == 'Alice\\n'\nassert solution('26\\n') == 'Alice\\n'\nassert solution('27\\n') == 'Alice\\n'\nassert solution('28\\n') == 'Bob\\n'\nassert solution('29\\n') == 'Bob\\n'\nassert solution('30\\n') == 'Alice\\n'\nassert solution('31\\n') == 'Alice\\n'\nassert solution('32\\n') == 'Alice\\n'\nassert solution('33\\n') == 'Alice\\n'\nassert solution('34\\n') == 'Bob\\n'\nassert solution('35\\n') == 'Alice\\n'\nassert solution('36\\n') == 'Alice\\n'\nassert solution('37\\n') == 'Alice\\n'\nassert solution('38\\n') == 'Bob\\n'\nassert solution('39\\n') == 'Alice\\n'\nassert solution('40\\n') == 'Alice\\n'\nassert solution('41\\n') == 'Alice\\n'\nassert solution('42\\n') == 'Bob\\n'\nassert solution('43\\n') == 'Alice\\n'\nassert solution('44\\n') == 'Alice\\n'\nassert solution('45\\n') == 'Alice\\n'\nassert solution('46\\n') == 'Alice\\n'\nassert solution('47\\n') == 'Alice\\n'\nassert solution('48\\n') == 'Bob\\n'\nassert solution('49\\n') == 'Alice\\n'\nassert solution('50\\n') == 'Alice\\n'\nassert solution('51\\n') == 'Alice\\n'\nassert solution('52\\n') == 'Alice\\n'\nassert solution('53\\n') == 'Alice\\n'\nassert solution('54\\n') == 'Bob\\n'\nassert solution('55\\n') == 'Alice\\n'\nassert solution('56\\n') == 'Alice\\n'\nassert solution('57\\n') == 'Alice\\n'\nassert solution('58\\n') == 'Alice\\n'\nassert solution('59\\n') == 'Alice\\n'\nassert solution('60\\n') == 'Alice\\n'\nassert solution('61\\n') == 'Alice\\n'\nassert solution('62\\n') == 'Alice\\n'\nassert solution('63\\n') == 'Alice\\n'\nassert solution('64\\n') == 'Bob\\n'\nassert solution('65\\n') == 'Alice\\n'\nassert solution('66\\n') == 'Alice\\n'\nassert solution('67\\n') == 'Alice\\n'\nassert solution('68\\n') == 'Bob\\n'\nassert solution('69\\n') == 'Bob\\n'\nassert solution('70\\n') == 'Alice\\n'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Alice\"\nassert solution(\"5\") == \"Bob\"\nassert solution(\"10\") == \"Alice\"\nassert solution(\"12\") == \"Bob\"\nassert solution(\"15\") == \"Alice\"\nassert solution(\"18\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Bob\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"Alice\"\nassert solution(10) == \"Bob\"\nassert solution(5) == \"Alice\"\nassert solution(20) == \"Bob\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Alice'\nassert solution(input()) == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nprint(solution(\"5 3 8\"))  # Output: \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Test case 1\"\nassert solution(\"7 1 2\") == \"7+1=8\", \"Test case 2\"\nassert solution(\"4 7 9\") == \"4+7=12\", \"Test case 3\"\nassert solution(\"5 2 6\") == \"5+2=7\", \"Test case 4\"\nassert solution(\"6 8 4\") == \"6+8=16\", \"Test case 5\"",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Invalid input\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '5+3=8\\n', \"The output should be '5+3=8', but it is: '{}'.\".format(solution(input()))",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"5 2 8\") == \"5-2=6\"\nassert solution(\"3 2 8\") == \"3*2=6\"\nassert solution(\"3 5 7\") == \"3+5=11\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\\n\", \"Input and output should be equal\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"The solution is incorrect.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Test failed\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    8\n    3 2 2 1 1 3 1 1\n    \"\"\"\n) == \"YES\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'\nassert solution('8\\n3 2 2 1 1 3 1 4') == 'NO'\nassert solution('8\\n3 2 2 1 1 3 1 2') == 'NO'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2, 2, 1, 1, 3, 1, 1) == 'YES'\nassert solution(8, 3, 2, 2, 1, 3, 1, 1) == 'NO'\nassert solution(8, 3, 2, 1, 1, 3, 1, 1) == 'YES'\nassert solution(8, 3, 2, 2, 1, 3, 1, 1) == 'YES'",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'YES\\n', 'Test case 1 failed'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 1234567890",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"10\\n3 3 4 5 6 5 4 5\") == \"YES\"\nassert solution(\"11\\n3 2 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"12\\n4 4 4 4 4 4 4 4\") == \"YES\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8\") == \"YES\"\nassert solution(\"14\\n1 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"15\\n1 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"16\\n2 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"17\\n2 2 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"18\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"19\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"20\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"21\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"22\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"23\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"24\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"25\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"26\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"27\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"28\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"29\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"30\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"31\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"32\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"33\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"34\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"35\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"36\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"37\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"38\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"39\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"40\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"41\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"42\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"43\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"44\\n3 1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"45\\n3 1 1 1 1 1 ",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"9\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"10\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"11\\n3 2 2 1 1 3 1 1\") == \"NO\"\nassert solution(\"12\\n3 2 2 1 1 3 1 1\") == \"YES\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == ['def solution(stdin: str) -> str:','   pass']",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"ghost\\nmummy\\nwitch\\ndef\"\nassert solution(stdin) == \"demon\\ndemon\\ndemon\\ndemon\"\nassert solution(stdin) == \"mummy\\ndemon\\ndemon\\ndemon\"\nassert solution(stdin) == \"demon\\ndemon\\ndemon\\ndemon\"\nassert solution(stdin) == \"witch\\ndemon\\ndemon\\ndemon\"\nassert solution(stdin) == \"mummy\\ndemon\\ndemon\\ndemon\"\nassert solution(stdin) == \"mummy\\ndemon\\ndemon\\ndemon\"\n",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"ghost\", \"Your code is not correct\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abc') == 'abc'\nassert solution('aaa') == 'aaa'\nassert solution('aa') == 'aa'\nassert solution('aaaabbbbcccc') == 'aaa'\nassert solution('abcc') == 'ccc'\nassert solution('aaaccccdddddeeee') == 'aa'",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Expected output: {}, got {}\".format(sample_output, solution(sample_input))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n'\n                 'ghost\\nmummy\\n'\n                 'witch\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n') == 'ghost\\nmummy\\n'\n\nassert solution('10\\n'\n                'mummy\\nmummy\\n'\n                 'witch\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n') =='mummy\\nmummy\\n'\n\nassert solution('10\\n'\n                 'witch\\nmummy\\n'\n                 'witch\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n') == 'witch\\nmummy\\n'\n\nassert solution('10\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n') == 'demon\\n'\n\nassert solution('10\\n'\n                 'ghost\\nmummy\\n'\n                 'witch\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n'\n                 'demon\\n') == 'ghost\\nmummy\\n'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"definitely a mummy\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"\nassert solution(stdin=\"10\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"\nassert solution(stdin=\"10\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"\nassert solution(stdin=\"10\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"\nassert solution(stdin=\"10\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"\nassert solution(stdin=\"10\\ndemon\\nmummy\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"demon\"",
        "num_ids_2": 96,
        "num_ids_4": 194
    },
    {
        "number": 4910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == [\"defghlmnopqr\", \"demon\"]",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Tchaikovsky Piano_Favorites November 163\") == \"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\"\nassert solution(\"James_Taylor Dad_Loves_His_Work Hard_Times 192\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\"\nassert solution(\"James_Taylor Dad_Loves_His_Work London_Town 236\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work London_Town 236\"\nassert solution(\"James_Taylor Dad_Loves_His_Work Summers_Here 163\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\"\nassert solution(\"George_Winston Summer Lullaby 215\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\"\nassert solution(\"1 2 3 4 5\") == \"\"\n",
        "num_ids_2": 110,
        "num_ids_4": 236
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"",
        "num_ids_2": 490,
        "num_ids_4": 490
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"",
        "num_ids_2": 426,
        "num_ids_4": 426
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"",
        "num_ids_2": 123,
        "num_ids_4": 123
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n\nassert solution(\"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor",
        "num_ids_2": 850,
        "num_ids_4": 1025
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\n\") == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\n\nassert solution(\"Artist\\n3\\n\") == \"Artist\\n\"\n\nassert solution(\"Artist\\n\") == \"Artist\\n\"\n\nassert solution(\"Artist\\n\") == \"Artist\\n\"\n\nassert solution(\"Artist\\n3\\n\") == \"Artist\\n\"\n\nassert solution(\"3\\n\") == \"3\\n\"\n\nassert solution(\"3\\n\") == \"3\\n\"\n\nassert solution(\"3\\n\") == \"3\\n\"\n\nassert solution(\"3\\n\") == \"3\\n\"\n\nassert solution(\"3\\n\") == \"3\\n\"",
        "num_ids_2": 274,
        "num_ids_4": 302
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Artist Album Song_Title Length_seconds\\n'\n                   '5\\n'\n                   'Tchaikovsky Piano_Favorites November 163\\n'\n                   'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n                   'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n                   'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n                   'George_Winston Summer Lullaby 215\\n'\n                   '3\\n'\n                   'Artist\\n'\n                   'Album\\n'\n                   'Song_Title\\n') == 'Artist Album Song_Title Length_seconds\\n'\n           'George_Winston Summer Lullaby 215\\n'\n           'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n           'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n           'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n           'Tchaikovsky Piano_Favorites November 163\\n'\n           'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n           'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n           'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n           'Tchaikovsky Piano_Favorites November 163\\n'\n           'George_Winston Summer Lullaby 215\\n'\n           'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n           'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n           'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n           'Tchaikovsky Piano_Favorites November 163\\n'\n           'James_Taylor Dad_Loves_His_Work Hard_Times 192\\n'\n           'James_Taylor Dad_Loves_His_Work London_Town 236\\n'\n           'James_Taylor Dad_Loves_His_Work Summers_Here 163\\n'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the list of attributes separated by single spaces: \")) == expected, f\"Expected:\\n{expected}\\nActual:\\n{solution(input(\"Enter the list of attributes separated by single spaces: \"))}\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the input: \")) == output\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"3 10 7\\n5 5 5 5 5 5 5\") == \"NO\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5\\n') == 'YES'\nassert solution('3 10 7\\n5 5 5 5 5 5 5\\n') == 'NO'\nassert solution('4 10 7\\n5 5 5 5 5 5 5\\n') == 'YES'\nassert solution('5 10 7\\n5 5 5 5 5 5 5\\n') == 'YES'\nassert solution('5 10 6\\n5 5 5 5 5 5 5\\n') == 'YES'\nassert solution('5 10 5\\n5 5 5 5 5 5 5\\n') == 'NO'\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\\n\"\nassert solution(\"2 10 8\\n5 5 5 5 5 5 5\") == \"NO\\n\"\nassert solution(\"1 1 10\\n2 2 2 2\") == \"NO\\n\"\nassert solution(\"3 4 20\\n3 4 5 4 5 6 7\") == \"YES\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 122
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES\\n'\nassert solution('4 20 30\\n3 2 3 4 5 6') == 'NO\\n'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"4 3 5\\n2 1 3 5 7\") == \"NO\"\nassert solution(\"7 10 3\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"3 2 5\\n2 1 3 5 7\") == \"YES\"\nassert solution(\"10 10 5\\n1 1 1 1 1 1 1\") == \"NO\"\n",
        "num_ids_2": 55,
        "num_ids_4": 110
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"\"\"\n2 10 7\n5 5 5 5 5 5 5\n\"\"\") == \"YES\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"NO\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Not Effective\\n\", \"Test Case 1 Failed\"\nassert solution() == \"66.666667\\n\", \"Test Case 2 Failed\"\nassert solution() == \"50.000000\\n\", \"Test Case 3 Failed\"",
        "num_ids_2": 44,
        "num_ids_4": 69
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed!\")",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, \"The output is incorrect. Please check your code and input.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\\n50.000000\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Not Effective\\n66.666667\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Not Effective\\n66.666667\\n50.000000\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\"\nassert solution(\"8\\nYNYN\\nYNYN\\nNYNY\\nNYNY\\nNYNY\\nNYNY\\nNYNY\\nNYNY\\nNYNY\\nNYNY\") == \"Not Effective\\n66.666667\"",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\") == \"Not Effective\\n66.666667\\n50.000000\\n\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n') == 'Not Effective\\n66.666667\\n50.000000'\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"\nassert solution(open('sample_input.txt', 'r')) == \"Not Effective\\n66.666667\\n50.000000\"",
        "num_ids_2": 86,
        "num_ids_4": 172
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\\n\"\nassert solution(\"5\\nAAA\") == \"0\\n\"\nassert solution(\"5\\nAAAABBBCCC\") == \"3\\nBruno\\nGoran\\n\"\nassert solution(\"10\\nABCDGHIJKLMNOPQRSTUVWXYZ\") == \"5\\nAdrian\\nGoran\\nBruno\\nDani\\nEmma\\nAlice\\nKate\\nMia\\n\"\nassert solution(\"10\\nABCDGHIJKLMNOPQRSTUVWXYZ\") == \"5\\nAdrian\\nGoran\\nBruno\\nDani\\nEmma\\nAlice\\nKate\\nMia\\n\"",
        "num_ids_2": 35,
        "num_ids_4": 119
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nBAACC\") == \"Bruno\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"\nassert solution(\"4\\nACBCDE\") == \"2\\nAdrian\"\nassert solution(\"3\\nABCDE\") == \"1\\nGoran\"\nassert solution(\"2\\nABCD\") == \"0\\n\"\nassert solution(\"1\\nABC\") == \"0\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 71
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\nBruno\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\nBruno\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Bruno\\n\", \"Expected output is Bruno, got {}\".format(solution(stdin))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nBAACC') == '3\\nBruno\\n'\nassert solution('4\\nABCCC') == '3\\nAdrian\\n'\nassert solution('4\\nABCCC') == '3\\nGoran\\n'\nassert solution('2\\nACCCC') == '3\\nBruno\\n'\nassert solution('3\\nABCCCA') == '3\\nAdrian\\n'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\\nBruno\\n\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    3 E right\n    10 A wrong\n    30 C wrong\n    50 B wrong\n    100 A wrong\n    200 A right\n    250 C wrong\n    300 D right\n    \n-1\n\"\"\") == \"3 543\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3 543'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3 E right\n    10 A wrong\n    30 C wrong\n    50 B wrong\n    100 A wrong\n    200 A right\n    250 C wrong\n    300 D right\n    ''') == '3 543\\n'\n\nassert solution('''\n    7 H right\n    15 B wrong\n    30 E wrong\n    35 E right\n    80 B wrong\n    80 B right\n    100 D wrong\n    100 C wrong\n    300 C right\n    300 D wrong\n    ''') == '4 502\\n'\n\nassert solution('''\n    5 N right\n    3 E wrong\n    10 A right\n    20 B right\n    30 C wrong\n    40 D right\n    50 E right\n    60 F right\n    70 G right\n    80 H right\n    90 I right\n    100 J right\n    110 K right\n    120 L right\n    130 M right\n    140 N right\n    150 O right\n    160 P right\n    170 Q right\n    180 R right\n    190 S right\n    200 T right\n    210 U right\n    220 V right\n    230 W right\n    240 X right\n    250 Y right\n    260 Z right\n    270 A right\n    280 B right\n    290 C right\n    300 D right\n    310 E right\n    320 F right\n    330 G right\n    340 H right\n    350 I right\n    360 J right\n    370 K right\n    380 L right\n    390 M right\n    400 N right\n    410 O right\n    420 P right\n    430 Q right\n    440 R right\n    450 S right\n    460 T right\n    470 U right\n    480 V right\n    490 W right\n    500 X right\n    510 Y right\n    520 Z right\n    530 A right\n    540 B right\n    550 C right\n    560 D right\n    570 E right\n    580 F right\n    590 G right\n    600 H right\n    610 I right\n    620 J right\n    630 K right\n    640 L right\n    650 M right\n    660 N right\n    670 O right\n    680 P right\n    690 Q right\n    700 R right\n    710 S right\n    720 T right\n    730 U right\n    740 V right\n    750 W right\n    760 X right\n    770 Y right\n    780 Z right\n    790 A right\n    800 B right\n    810 C right\n    820 D right\n    830 E right\n    840 F right\n    850 G right\n    860 H right\n    870 I right\n    880 J right\n    890 K right\n    900 L right\n    910 M right\n    920 N right\n    930 O right\n    940 P right\n    950 Q right\n    960 R right\n    970 S right\n    980 T right\n    990 U right\n    1000 V right\n    1010 W right\n    1020 X right\n    1030 Y right\n    1040 Z right\n    1050 A right\n    1060 B right\n    1070 C right\n    1080 D right\n    1090 E right\n    1100 F right\n    1110 G right\n    1120 H right\n    1130 I right\n    1140 J right\n    1150 K right\n    1160 L right\n    1170 M right\n    1180 N right\n    1190 O right\n    1200 P right\n    1210 Q right\n    1220 R right\n    1230 S right\n    1240 T right\n    1250 U right\n    1260 V right\n    1270 W right\n    1280 X right\n    1290 Y right\n    1300 Z right\n    1310 A right\n    1320 B right\n    1330 C right\n    1340 D right\n    1350 E right\n    1360 F right\n    1370 G right\n    1380 H right\n    1390 I right\n    1400 J right\n    1410 K right\n    142",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3 543\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '3 543'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 543\", \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '3 543'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test case failed for {input}\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5, \"Test case 1\"\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5, \"Test case 2\"\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5, \"Test case 3\"\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\") == 5, \"Test case 4\"\n\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1",
        "num_ids_2": 458,
        "num_ids_4": 916
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n\"\"\") == 5",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5\nassert solution() == 5\nassert solution() == 10\nassert solution() == -1",
        "num_ids_2": 14,
        "num_ids_4": 29
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5\n",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == 5",
        "num_ids_2": 224,
        "num_ids_4": 224
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2') == 5\nassert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == 5\nassert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n4 2 4 1 5 4 5 2 4 1\\n5 4 2 1 4 5 3 5 4 2\\n') == 5\nassert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n4 2 4 1 5 4 5 2 4 1\\n5 4 2 1 4 5 3 5 4 2\\n6 3 2 5 4 5 3 4 4 2\\n') == -1\nassert solution('10 5\\n5 1 3 4 2 4 2 1 2 ",
        "num_ids_2": 446,
        "num_ids_4": 999
    },
    {
        "number": 4916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 7\\n5 5\\n\") == \"gunilla has a point\"\nassert solution(\"2\\n1 7\\n5 5\\n\") == \"edward is right\"\nassert solution(\"1\\n5 5\\n\") == \"gunilla has a point\"\nassert solution(\"2\\n5 5\\n\") == \"gunilla has a point\"\nassert solution(\"1\\n100 50\\n\") == \"edward is right\"",
        "num_ids_2": 48,
        "num_ids_4": 90
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"gunilla has a point\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 7\\n5 5\\n') == 'gunilla has a point\\n'\n\nimport math",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 7\\n5 5\") == \"gunilla has a point\\n\"\nprint(\"All tests passed!\")",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 7\\n5 5\") == \"gunilla has a point\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 6\\n5 5\") == \"gunilla has a point\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 5\\n5 5\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 3\\n5 5\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 4\\n5 5\") == \"gunilla has a point\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 4\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 3\\n5 5\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 3\\n5 5\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 3\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 3\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 3\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 3\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 3\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 3\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"2\\n1 2\\n5 4\") == \"edward is right\\n\"\nassert solution(\"3\\n1 2\\n5 1\") == \"gunilla has a point\\n\"\nassert solution(\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 176,
        "num_ids_4": 176
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"The output is incorrect. Expected: {sample_output}, Received: {solution(sample_input)}\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: {input_str}!= {output_str}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 176,
        "num_ids_4": 176
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Test case 1\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Test case 2\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Test case 3\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Test case 4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\", \"Test case 5\"",
        "num_ids_2": 188,
        "num_ids_4": 376
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Expected:\\n{}\\nGot:\\n{}\".format(sample_output, solution(sample_input))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '''\n4\n4\n4\n1\n2\n2\n4\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == expected, f\"Expected output: '{expected}', but got: '{solution()}'\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == '2015\\n1982\\n2016\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2015\\n1982\\n2016\"\nassert solution(\"3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"2016\"",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    Iceland 2016\n    Sweden 2015\n    Iceland 1982\n    Norway 1999\n    3\n    Sweden 1\n    Iceland 1\n    Iceland 2\n    \"\"\"\n) == \"2015\\n1982\\n2016\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015\\n1982\\n2016'\nassert solution('Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\nIceland 2016\\nSweden 2015\\nIceland 19",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Incorrect output: {solution(input())}, expected {output()}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2015\\n1982\\n2016\\n'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n') == '2015\\n1982\\n2016\\n'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015\\n1982\\n2016'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Iceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015\\n1982\\n2016\\n'",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('abbcccddddeeeee') == '10', \"Test 1 failed\"\n\nassert solution('abcdefg') == '1', \"Test 2 failed\"\n\nassert solution('abcxyz') == '2', \"Test 3 failed\"\n\nassert solution('abc') == '0', \"Test 4 failed\"\n\nassert solution('xyz') == '1', \"Test 5 failed\"",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abbcccddddeeeee') == 10, \"Solution should return 10\"\nassert solution('aabbbcddeeeeee') == 18, \"Solution should return 18\"\nassert solution('aaaabbccddee') == 2, \"Solution should return 2\"\nassert solution('abc') == 0, \"Solution should return 0\"",
        "num_ids_2": 47,
        "num_ids_4": 84
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\", \"The correct solution is incorrect.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10\nassert solution(\"aaaa\") == 0\nassert solution(\"aabbc\") == 3\nassert solution(\"aaabbbcc\") == 2\nassert solution(\"abccba\") == 2\nassert solution(\"bbbccc\") == 3\nassert solution(\"cccc\") == 1\nassert solution(\"ddddddeeee\") == 6\nassert solution(\"eeeee\") == 1\nassert solution(\"ff\") == 1\nassert solution(\"gggg\") == 1\nassert solution(\"hhhh\") == 1\nassert solution(\"iiii\") == 1\nassert solution(\"jjjj\") == 1\nassert solution(\"kkkk\") == 1\nassert solution(\"llllll\") == 1\nassert solution(\"mmmmmmm\") == 1\nassert solution(\"nnnnnnnn\") == 1\nassert solution(\"ooooooooooooooooooooo\") == 1\nassert solution(\"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\", \"Test case 1\"\nassert solution(\"bbabcdeeee\") == \"2\", \"Test case 2\"\nassert solution(\"abcdef\") == \"0\", \"Test case 3\"\nassert solution(\"aaaaaabbbb\") == \"10\", \"Test case 4\"\nassert solution(\"bbaaabb\") == \"10\", \"Test case 5\"",
        "num_ids_2": 40,
        "num_ids_4": 75
    },
    {
        "number": 4920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abbcccddddeeeee\") == 10, \"Test 1 failed\"\nassert solution(\"abcdef\") == 0, \"Test 2 failed\"\nassert solution(\"abbb\") == 1, \"Test 3 failed\"\nassert solution(\"abb\") == 0, \"Test 4 failed\"\nassert solution(\"abc\") == 0, \"Test 5 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 70
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == 'Engineering will save the world from inefficiency. Inefficiency is a blight on the world and its humanity. Defense is at the heart of every man.'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('example.txt', 'r')) == 'Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\ndef solution(stdin: str) -> str: \\n\\tinput_text = stdin.read()\\n\\twords = input_text.split()\\n\\tunique_words = []\\n\\tfor word in words:\\n\\t\\tword = word.lower()\\n\\t\\tword = word.replace(' ', '')\\n\\t\\tword = word.replace('.', '')\\n\\t\\tword = word.replace(',', '')\\n\\t\\tword = word.replace('!', '')\\n\\t\\tword = word.replace('?', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('(', '')\\n\\t\\tword = word.replace(')', '')\\n\\t\\tword = word.replace(':', '')\\n\\t\\tword = word.replace('\u201c', '')\\n\\t\\tword = word.replace('\u201d', '')\\n\\t\\tword = word.replace('\u2018', '')\\n\\t\\tword = word.replace('\u2019', '')\\n\\t\\tword = word.replace('\u00ab', '')\\n\\t\\tword = word.replace('\u00bb', '')\\n\\t\\tword = word.replace('[', '')\\n\\t\\tword = word.replace(']', '')\\n\\t\\tword = word.replace('{', '')\\n\\t\\tword = word.replace('}', '')\\n\\t\\tword = word.replace('|', '')\\n\\t\\tword = word.replace('#', '')\\n\\t\\tword = word.replace('%', '')\\n\\t\\tword = word.replace('$', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\u2019', '')\\n\\t\\tword = word.replace('\u201c', '')\\n\\t\\tword = word.replace('\u201d', '')\\n\\t\\tword = word.replace('\u2018', '')\\n\\t\\tword = word.replace('(', '')\\n\\t\\tword = word.replace(')', '')\\n\\t\\tword = word.replace(';', '')\\n\\t\\tword = word.replace(':', '')\\n\\t\\tword = word.replace('`', '')\\n\\t\\tword = word.replace('~', '')\\n\\t\\tword = word.replace('-', '')\\n\\t\\tword = word.replace('_', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('.', '')\\n\\t\\tword = word.replace(',', '')\\n\\t\\tword = word.replace(':', '')\\n\\t\\tword = word.replace(';', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t\\tword = word.replace('\"', '')\\n\\t",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Expected output: {output_data}\\nGot: {solution(input_data)}\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThis is a test of some input\\nto see if the program works\") == \"The quick brown fox jumps over the lazy dog\\nThis is a test of some input\\nto see if the program works\"\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThis is a test of some input\\nto see if the program works\\nThe quick brown fox jumps over the lazy dog\") == \"The quick brown fox jumps over the lazy dog\\nThis is a test of some input\\nto see if the program works\"\nassert solution(\"This is a test of some input\\nto see if the program works\\nThe quick brown fox jumps over the lazy dog\\nThis is a test of some input\\nto see if the program works\") == \"The quick brown fox jumps over the lazy dog\\nThis is a test of some input\\nto see if the program works\"",
        "num_ids_2": 126,
        "num_ids_4": 279
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\ndef solution(stdin: str) -> str:') == 'Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n'\n\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\ndef solution(stdin: str) -> str:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity') == 'Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n'\n\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\ndef solution(stdin: str) -> str:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity') == 'Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n'\n\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\nSample Output:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\ndef solution(stdin: str) -> str:Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity') == 'Engineering will save the world from inefficiency\\n. is a blight on.. and its\\nhumanity\\n'",
        "num_ids_2": 232,
        "num_ids_4": 490
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"\n) == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\"\n\nassert solution(\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\"\n) == \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\"\n\nassert solution(\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\"\n) == \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog. has a problem with the cat\"\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\") == (\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat.\"\n)\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\n\") == (\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\n\"\n)\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\n\") == (\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\n\"\n)\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\n\") == (\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\n\"\n)\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\n\") == (\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\n\"\n)\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\n\") == (\n    \"The quick brown fox jumps over the lazy dog\\nThe lazy dog barks like a raging wagon\\nThe dog has a problem with the cat\\nThe dog has another problem with the cat\\nThe dog has a problem with the cat\\nThe dog has another problem",
        "num_ids_2": 8,
        "num_ids_4": 63
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\\n\"\n\nassert solution(\"The quick brown fox jumps over the lazy dog\\n
        "num_ids_2": 1026,
        "num_ids_4": 1026
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') == 'unsatisfactory'\nassert solution('5 3\\n-1 2 3\\n1 2 3\\n1 2 3\\n') == 'unsatisfactory'\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n') == 'unsatisfactory'\nassert solution('5 3\\n-1 2 3\\n1 2 3\\n1 2 3\\n') == 'unsatisfactory'\n\nprint('satisfactory')",
        "num_ids_2": 91,
        "num_ids_4": 168
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input()) == \"unsatisfactory\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(sample_input)}\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"satisfactory\"\nassert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"unsatisfactory\"  # empty input\nassert solution(\"3 3\") == \"unsatisfactory\"  # invalid input\nassert solution(\"1 3 1 2 3\") == \"unsatisfactory\"  # duplicate literal in clause\nassert solution(\"5 3\") == \"unsatisfactory\"  # less than 3 clauses\nassert solution(\"1 3 1 2 3 1 2 3 1 2 3\") == \"unsatisfactory\"  # more than 2 clauses\nassert solution(\"5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 32,
        "num_ids_4": 79
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'unsatisfactory'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"satisfactory\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory', 'The given solution is not correct'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == 4\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output\nprint(\"All test cases passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('9\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('10\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('11\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('12\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('13\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('14\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('15\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('16\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('17\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('18\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('19\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('20\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('21\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('22\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('23\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('24\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('25\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('26\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('27\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('28\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('29\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('30\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('31\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('32\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('33\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('34\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('35\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('36\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('37\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('38\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('39\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('40\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('41\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('42\\n2 2 2 5 4 3 6 6') == 'none'\nassert solution('43\\n1 1 1 5 4 3 6 6') == 'none'\nassert solution('44\\n2 2 2 5 4 3 6",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"9\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"10\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"11\\n1 1 1 5 3 4 6 6\") == \"5\"\nassert solution(\"12\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"13\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"14\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"15\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"16\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"17\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"18\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"19\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"20\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"21\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"22\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"23\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"24\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"25\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"26\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"27\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"28\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"29\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"30\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"31\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"32\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"33\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"34\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"35\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"36\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"37\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"38\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"39\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"40\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"41\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"42\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"43\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"44\\n1 1 1 5 3 4 6",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\", \"Expected output '4', got '{}'.\".format(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('8\\n1 2 2 5 3 4 6 6') == '4'\nassert solution('8\\n1 1 2 5 3 4 6 6') == '4'\nassert solution('8\\n1 1 1 5 3 4 6 5') == '3'\nassert solution('8\\n1 1 1 5 3 4 6 4') == '3'\nassert solution('8\\n1 1 1 5 3 4 6 3') == '2'\nassert solution('8\\n1 1 1 5 3 4 6 2') == '2'\nassert solution('8\\n1 1 1 5 3 4 6 1') == '1'\nassert solution('8\\n1 1 1 5 3 4 6 0') == 'none'\nassert solution('8\\n1 1 1 5 3 4 5 6') == 'none'\nassert solution('8\\n1 1 1 5 3 4 4 6') == 'none'\nassert solution('8\\n1 1 1 5 3 4 3 6') == 'none'\nassert solution('8\\n1 1 1 5 3 4 2 6') == 'none'\nassert solution('8\\n1 1 1 5 3 4 1 6') == 'none'\nassert solution('8\\n1 1 1 5 3 4 0 6') == 'none'\nassert solution('8\\n1 1 1 5 3 3 6 6') == 'none'\nassert solution('8\\n1 1 1 5 3 2 6 6') == 'none'\nassert solution('8\\n1 1 1 5 3 1 6 6') == 'none'\nassert solution('8\\n1 1 1 5 3 0 6 6') == 'none'\nassert solution('8\\n1 1 1 5 2 6 6 6') == 'none'\nassert solution('8\\n1 1 1 5 1 6 6 6') == 'none'\nassert solution('8\\n1 1 1 5 0 6 6 6') == 'none'\nassert solution('8\\n1 1 1 4 6 6 6 6') == 'none'\nassert solution('8\\n1 1 1 3 6 6 6 6') == 'none'\nassert solution('8\\n1 1 1 2 6 6 6 6') == 'none'\nassert solution('8\\n1 1 1 1 6 6 6 6') == 'none'\nassert solution('8\\n1 1 1 0 6 6 6 6') == 'none'",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 1 1 5 3 4 6 5\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 4\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 3\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 2\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 1\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 5 1\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 5 2\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 5 3\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 5 4\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 5 5\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 5 6\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"none\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\\n\") == \"4\"\nprint(\"All tests pass.\")",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\\n\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20:00:00') == '08:00:00'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\", \"Test case 1 failed\"\nassert solution(\"04:00:00\") == \"08:00:00\", \"Test case 2 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"08:00:00\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"04:00:00\") == \"08:00:00\"\nassert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"24:00:00\") == \"12:00:00\"\nassert solution(\"00:60:00\") == \"00:60:00\"\nassert solution(\"23:60:00\") == \"23:59:59\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"12:00:00\"\nassert solution(\"20:00:00\") == \"16:00:00\"\nassert solution(\"16:00:00\") == \"20:00:00\"\nassert solution(\"08:00:00\") == \"20:00:00\"\nassert solution(\"00:00:01\") == \"08:00:00\"\nassert solution(\"00:00:59\") == \"20:00:00\"\nassert solution(\"24:00:00\") == \"20:00:00\"\nassert solution(\"01:00:00\") == \"08:00:00\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the current time in hh:mm:ss format: \")) == \"08:00:00\\n\"\nassert solution(input(\"Enter the time of the explosion in the same format: \")) == \"08:00:00\\n\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\\n\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('31 6') == '4\\n'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output: 4\\n\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"31 6\") == \"4\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"32 6\") == \"5\"\nassert solution(\"33 6\") == \"6\"\nassert solution(\"34 6\") == \"7\"\nassert solution(\"35 6\") == \"8\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(31, 6) == 4, \"Incorrect output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"31 6\") == \"4\\n\", \"Input should be 31 6\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"100 50\") == \"10\"\nassert solution(\"1000 1000\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"31 6\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"31 6\") == \"4\"\nassert solution(\"10 3\") == \"1\"\nassert solution(\"25 2\") == \"3\"\nassert solution(\"100 5\") == \"10\"\nassert solution(\"1000 10\") == \"100\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"31 6\") == \"4\\n\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 2.6666666666666665, \"Error: Test Case 1 failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2.6666666666666665', \"Your solution is incorrect.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2.6666666666666665",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"Test case 1 failed\"\nassert solution(1000) == \"7.343479301604928\", \"Test case 2 failed\"\nassert solution(1000000) == \"10.686958603209857\", \"Test case 3 failed\"\nassert solution(1000000000) == \"100.02984220070338\", \"Test case 4 failed\"\nassert solution(1000000000000) == \"1000.1427828918462\", \"Test case 5 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 153
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2.6666666666666665\nassert solution(10) == 2.7182818284590452\nassert solution(100) == 2.7182818284590452\n\nassert abs(solution(3) - 2.6666666666666665) < 1e-12\nassert abs(solution(10) - 2.7182818284590452) < 1e-12\nassert abs(solution(100) - 2.7182818284590452) < 1e-12",
        "num_ids_2": 53,
        "num_ids_4": 117
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"Test Case 1 Failed\"\nassert solution(10) == \"7.343867119353448\", \"Test Case 2 Failed\"\nassert solution(100) == \"7.343867119353448\", \"Test Case 3 Failed\"\nassert solution(1000) == \"2.6666666666666665\", \"Test Case 4 Failed\"\nassert solution(1001) == \"2.6666666666666665\", \"Test Case 5 Failed\"",
        "num_ids_2": 68,
        "num_ids_4": 140
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2.6666666666666665",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"Test case 1 failed.\"\nassert solution(10) == \"7.333333333333333\", \"Test case 2 failed.\"\nassert solution(100) == \"100.0\", \"Test case 3 failed.\"\nassert solution(1000) == \"1.234567890123457e+12\", \"Test case 4 failed.\"\nassert solution(10000) == \"2.173435755929396e+22\", \"Test case 5 failed.\"",
        "num_ids_2": 68,
        "num_ids_4": 131
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2.6666666666666665\", \"The solution is incorrect.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2.6666666666666665\nassert solution(10000) == 7",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"paul\"\nassert solution(stdin: str) == \"definitely_opponent\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5, 3, 7) == \"paul\"\nassert solution(6, 3, 7) == \"opponent\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 7\") == \"paul\\n\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 7') == 'paul'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"paul\"\nassert solution(\"5 3 7\") == \"paul\"\nassert solution(\"1 3 7\") == \"paul\"\nassert solution(\"2 3 7\") == \"opponent\"\nassert solution(\"3 3 7\") == \"opponent\"\nassert solution(\"4 3 7\") == \"opponent\"\nassert solution(\"5 3 7\") == \"opponent\"\nassert solution(\"6 3 7\") == \"opponent\"\nassert solution(\"7 3 7\") == \"opponent\"",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 7\") == \"paul\\n\"\nassert solution(\"1 1 0\") == \"paul\\n\"\nassert solution(\"1 1 1\") == \"opponent\\n\"\nassert solution(\"5 5 10\") == \"opponent\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('1 1 1') == 'opponent'\nassert solution('1 2 3') == 'opponent'\nassert solution('2 3 4') == 'opponent'\nassert solution('3 4 5') == 'opponent'",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 3, 7) == 'paul'\nassert solution(10, 10, 10) == 'opponent'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 10 10\") == \"opponent\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 7\") == \"paul\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 2, \"Function should return 2 for the given input\"\nassert solution(\"2\") == 3, \"Function should return 3 for the given input\"\nassert solution(\"3\") == 3, \"Function should return 3 for the given input\"\nassert solution(\"4\") == 3, \"Function should return 3 for the given input\"\nassert solution(\"5\") == 4, \"Function should return 4 for the given input\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"4\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3\nassert solution(10) == 3\nassert solution(15) == 4\nassert solution(20) == 4",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Test failed.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"  # Correct Answer",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 2, \"Your solution is incorrect.\"\nassert solution(10) == 2, \"Your solution is incorrect.\"\nassert solution(100) == 3, \"Your solution is incorrect.\"\nassert solution(1000) == 4, \"Your solution is incorrect.\"\nassert solution(10000) == 5, \"Your solution is incorrect.\"\nassert solution(100000) == 6, \"Your solution is incorrect.\"\nassert solution(1000000) == 7, \"Your solution is incorrect.\"\nassert solution(10000000) == 8, \"Your solution is incorrect.\"\nassert solution(100000000) == 9, \"Your solution is incorrect.\"\nassert solution(1000000000) == 10, \"Your solution is incorrect.\"",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"The solution is not provided.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"456\") == \"No\"\nassert solution(\"def\") == \"No\"\nassert solution(\"A\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"Z\") == \"No\"\nassert solution(\"z\") == \"No\"\nassert solution(\"HELLO\") == \"No\"\nassert solution(\"123456\") == \"Yes\"\nassert solution(\"123457\") == \"No\"\nassert solution(\"a123456\") == \"Yes\"\nassert solution(\"A123456\") == \"Yes\"\nassert solution(\"1234567890\") == \"No\"\nassert solution(\"defg\") == \"No\"\nassert solution(\"12345678901\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\nassert solution(\"Abcdef\") == \"No\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"54321\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"123456789\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\") == \"Yes\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890\") == \"No\"\nassert solution(\"C0deninja5\") == \"Yes\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"c0deninja51\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 78
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abcdefg\") == \"Yes\"\nassert solution(\"c0deninja5\") == \"Yes\"\nassert solution(\"c0deninja51\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('123') == 'Yes'\nassert solution('123a') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"c0deninja\") == \"No\"\nassert solution(\"C0deninja5\") == \"Yes\"\nassert solution(\"c0deninja51\") == \"No\"\nassert solution(\"pa55WORD\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abcdefg\") == \"Yes\"\nassert solution(\"1234567890abcdefg\") == \"No\"\nassert solution(\"1234567890ABCDEFG\") == \"No\"\nassert solution(\"c0deninja5\") == \"No\"\nassert solution(\"c0deninja51\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\") == \"No\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"abcdef\") == \"No\"\nassert solution(\"c0deninja5\") == \"No\"\nassert solution(\"c0Deninja5\") == \"No\"\nassert solution(\"c0deninja51\") == \"No\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Luka is fooling around in chemistry class again! Instead of balancing equations he is writing coded sentences on a piece of paper. Luka modifies every word in a sentence by adding, after each vowel (letters 'a', 'e', 'i', 'o', and 'u'), the letter 'p' and then that same vowel again. For example, the word 'kemija' becomes 'kepemipijapa' and the word 'paprika' becomes 'papapripikapa'. The teacher took Luka's paper with the coded sentences and wants to decode them.\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Solution does not match the expected output.\"\n\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Luka is fooling around in chemistry class again! Instead of balancing equations he is writing coded sentences on a piece of paper. Luka modifies every word in a sentence by adding, after each vowel (letters 'a', 'e', 'i', 'o', and 'u'), the letter 'p' and then that same vowel again. For example, the word 'kemija' becomes 'kepemipijapa' and the word 'paprika' becomes 'papapripikapa'. The teacher took Luka's paper with the coded sentences and wants to decode them.\"\n\nfrom typing import List",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\", \"Test failed.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika', 'The code is not correct. The decoded sentence should be \"zelena paprika\".'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '-32\\n'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"32 2\") == -32, \"Expected -32, but got {}\".format(solution(\"32 2\"))",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '-32\\nIMPOSSIBLE\\nALL GOOD'\n\nHere's the Python code to test the correctness of the solution:\n\n```python\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"32 2\") == \"-32\\n\"\nassert solution(\"32 5\") == \"ALL GOOD\\n\"\nassert solution(\"-2 -5\") == \"IMPOSSIBLE\\n\"\nassert solution(\"0 100\") == \"ALL GOOD\\n\"\nassert solution(\"1 5\") == \"ALL GOOD\\n\"\nassert solution(\"1 10\") == \"ALL GOOD\\n\"\nassert solution(\"100 100\") == \"ALL GOOD\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {solution(stdin)}!= {expected_output}\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"IMPOSSIBLE\"  # Check if the temperature exists\nprint(\"ALL GOOD\")  # If not, output \"ALL GOOD\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 2\") == \"-32\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"-32\"\n\nfrom typing import List",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '-32\\n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3\\n1 3 4') == 'both', 'Output should be \"both\"'\nassert solution('2 2 3 3\\n1 3 1') == 'none', 'Output should be \"none\"'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"2 3 4\") == \"none\"",
        "num_ids_2": 37,
        "num_ids_4": 51
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\nnone\", \"Expected output: both\\none\\nnone\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\", \"Your implementation is incorrect\"\nassert solution(\"3 2 1 3\\n1 3 4\") == \"none\", \"Your implementation is incorrect\"\nassert solution(\"4 2 1 3\\n1 3 4\") == \"def solution(stdin: str) -> str: pass\", \"Your implementation is incorrect\"",
        "num_ids_2": 58,
        "num_ids_4": 97
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\", \"The solution is incorrect\"\nassert solution(\"4 2 3 3\\n1 3 4\") == \"none\", \"The solution is incorrect\"\nassert solution(\"2 2 3 3\\n1 4 4\") == \"none\", \"The solution is incorrect\"\nassert solution(\"2 2 3 3\\n2 2 2\") == \"both\", \"The solution is incorrect\"\nassert solution(\"2 2 3 3\\n2 2 3\") == \"one\", \"The solution is incorrect\"",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(2) +'' + str(2) +'' + str(3) +'' + str(3)) == \"both\\none\\nnone\", \"Expected output: both\\none\\nnone, but got: \" + solution(str(2) +'' + str(2) +'' + str(3) +'' + str(3))",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n1 3 4\") == \"both\\none\\none\"\nassert solution(\"1 2 3 4\") == \"none\\none\\none\"\nassert solution(\"3 2 1 4\") == \"none\\none\\none\"",
        "num_ids_2": 47,
        "num_ids_4": 67
    },
    {
        "number": 4932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 3 3\\n1 3 4') == 'both\\none\\none'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Solution is incorrect.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 8\") == 10, \"Expected Output: 10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6 8\") == 10\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Output: 10\\n\"\nassert solution(\"9 1 4\") == \"4\", \"Output: 4\\n\"\nassert solution(\"-100 100 -50\") == \"50\", \"Output: 50\\n\"\nassert solution(\"0 1 2 3\") == \"0\", \"Output: 0\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 99
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 4 3\") == \"10\"\nassert solution(\"-100 -50 -30\") == \"10\"",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 8\") == 10, \"Test failed\"\nprint(\"All tests passed!\")\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 8\") == \"10\", \"Output should be 10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 6 8') == 10, \"The output should be 10.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"500 70\") == 533, \"The correct output is 533, but it is not\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"500 70\") == \"533\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"533\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(500, 70) == 533\nprint(\"All tests passed\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"533\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"500 70\") == \"533\\n\", \"Test Case 1 failed.\"\n\nh, v = map(int, input().split())\nprint(h + v * 36)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\", \"Incorrect output for sample input.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\\n\") == \"39.0\\n30.0\\n\"\nassert solution(\"3 4\\n123 45\\n789 10\\n\") == \"70.0\\n50.0\\n\"\nassert solution(\"2 1\\n-45 30\\n0 90\\n\") == \"0.0\\n1.0\\n\"",
        "num_ids_2": 81,
        "num_ids_4": 118
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output: {solution(sample_input)}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output: {solution(input())}!= {expected}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\n\nimport math",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 9\n69 60\n100 60\"\"\") == \"\"\"39.0\n30.0\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 9\\n69 60\\n100 60\") == \"39.0\\n30.0\"\nassert solution(\"1 1\\n3 4\\n5 6\") == \"2.0\"\nassert solution(\"2 3\\n7 8\") == \"2.5\"\n",
        "num_ids_2": 60,
        "num_ids_4": 79
    },
    {
        "number": 4935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0\\n30.0'\n\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected {expected}, got {solution(stdin)}\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. Please check the given examples and the constraints.\" for input, output in [\n    (\n        \"5\\n23 27 31 28 30\\n\",\n        \"2\\n28\",\n    ),\n]",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\", \"Test 1 failed\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2 28'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\\n\"\nassert solution(\"3\\n15 20 18 25\\n19 21 22 24\") == \"0 15\\n\"\nassert solution(\"4\\n25 25 25 25\\n25 25 25 25\") == \"1 25\\n\"\nassert solution(\"5\\n23 27 31 28 30\\n20 21 22 23 24\\n26 27 28 29 30\") == \"2 28\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 176
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"2\\n28\"\nassert solution(10) == \"2\\n28\"\nassert solution(15) == \"2\\n28\"\nassert solution(20) == \"1\\n28\"\nassert solution(25) == \"2\\n28\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n23 27 31 28 30\\n\") == \"2 28\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n3 10\n3 7 9 5\n\"\"\") == \"3\"\n\nassert solution(r\"\"\"\n2 10\n1 2\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n3 10\n1 2 3\n4 5 6 7\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n10 10\n1 2 3\n4 5 6 7\n\"\"\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n\") == \"4\\n\"\nassert solution(\"1 10\\n3 4 5 6 7 8 9 10\\n\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 85
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6\\n1 2 3\\n') == '2'\nassert solution('5 6\\n2 3 4\\n') == '2'\nassert solution('5 10\\n2 3 4 5 6\\n') == '4'\n\nfrom typing import List",
        "num_ids_2": 42,
        "num_ids_4": 68
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\"\nassert solution(\"3 6\\n3 2 3\\n\") == \"0\"\nassert solution(\"3 6\\n1 2 3\\n1 4 5\\n\") == \"2\"\nassert solution(\"3 6\\n1 2 3\\n3 2 4\\n\") == \"0\"\nassert solution(\"3 6\\n1 2 3\\n3 2 4\\n2 4 6\\n\") == \"1\"\nprint(\"All test cases pass!\")",
        "num_ids_2": 42,
        "num_ids_4": 98
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 6\n1 2 3''') == '2\\n'\nassert solution('''6 10\n1 2 3 4 5 6''') == '1\\n'\nassert solution('''10 15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15''') == '1\\n'\nassert solution('''15 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '2\\n'\nassert solution('''20 25\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25''') == '3\\n'",
        "num_ids_2": 15,
        "num_ids_4": 33
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 6\\n1 2 3\\n') == '2\\n'\nassert solution('3 6\\n1 2 4\\n') == '1\\n'\nassert solution('3 6\\n1 2 4 5\\n') == '0\\n'\nassert solution('3 6\\n1 2 3 4 5\\n') == '0\\n'\nassert solution('3 6\\n1 2 3 4\\n') == '1\\n'\nassert solution('3 6\\n1 2\\n') == '1\\n'\nassert solution('3 6\\n1\\n') == '0\\n'\nassert solution('3 6\\n2 2 3\\n') == '1\\n'\nassert solution('3 6\\n2 2 4\\n') == '1\\n'\nassert solution('3 6\\n2 2 4 5\\n') == '0\\n'\nassert solution('3 6\\n2 2 3 4 5\\n') == '0\\n'\nassert solution('3 6\\n2 2 3 4\\n') == '0\\n'\nassert solution('3 6\\n2 2\\n') == '0\\n'\nassert solution('3 6\\n2\\n') == '0\\n'\nassert solution('3 6\\n1 2 3 4 5 6\\n') == '1\\n'",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"The output is incorrect. Expected: {expected_output}, but got: {solution(input)}\"\nfor line in solution(input):\n    print(line)\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"\nassert solution(\"3\\nWMWMMWWM\") == \"2\"\nassert solution(\"4\\nMMWMMWWM\") == \"2\"\nassert solution(\"5\\nMMWMMWMW\") == \"3\"\nassert solution(\"6\\nMMWWMWMM\") == \"2\"\nassert solution(\"7\\nWMWWMWMM\") == \"1\"\nassert solution(\"8\\nWWMWWMMM\") == \"0\"\nassert solution(\"9\\nWWMWWMW\") == \"3\"\nassert solution(\"10\\nWMWWMWWM\") == \"5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\\n\"\nassert solution(\"2\\nMMWMWMWWM\\nWMWWMWMW\\nWWMWWMWM\\nWMWMWWMW\") == \"6\\n\"\nassert solution(\"10\\nMWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nWWMWMWWM\\nW",
        "num_ids_2": 59,
        "num_ids_4": 1027
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"\nassert solution(\"2\\nWWMWMMWMW\") == \"1\"\nassert solution(\"3\\nWWMWMWMW\") == \"2\"\nassert solution(\"4\\nWWMWWMW\") == \"3\"\nassert solution(\"5\\nWWMWWM\") == \"4\"\nassert solution(\"6\\nWWMW\") == \"5\"\nassert solution(\"7\\nWMW\") == \"6\"\nassert solution(\"8\\nW\") == \"7\"\nassert solution(\"9\\n\") == \"8\"\nassert solution(\"10\\nWWMWWMWMWWMWM\") == \"9\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == 9\nassert solution(\"1\\nMWMWMWMMWM\") == 9\nassert solution(\"1\\nWMWMWMMWM\") == 9\nassert solution(\"1\\nWWMWMWMMWM\") == 9\nassert solution(\"1\\nWWWMWMMWM\") == 9",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nMWWMWMMWM\") == \"9\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\nMWWMWMMWM') == '9'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 9\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\nMWWMWMMWM\\n\") == \"9\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '9\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\nassert solution(\"5 6\\n-5 1 undo 3 undo 2\") == \"6\\n\"\nassert solution(\"5 2\\n1 undo 3 undo 2\") == \"2\\n\"\nassert solution(\"5 1\\n2 3 undo 2\") == \"1\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 95
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3\\n'\nassert solution('5 4\\n8 -2 3 undo 3') == '4\\n'\nassert solution('5 4\\n8 -2 3 undo 1') == '0\\n'\nassert solution('5 4\\n8 -2 3 undo 5') == '1\\n'\nassert solution('5 4\\n8 -2 3 undo 6') == '2\\n'\nassert solution('5 4\\n8 -2 3 undo 7') == '3\\n'\nassert solution('5 4\\n8 -2 3 undo 8') == '4\\n'",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3\\n'\nassert solution('5 1\\n1 undo 1') == '0\\n'\nassert solution('5 2\\n2 undo 2\\n2 undo 2 undo 2') == '3\\n'\nassert solution('5 3\\n3 undo 3 undo 3 undo 3') == '4\\n'\nassert solution('5 -3\\n-3 undo 3 undo 3 undo 3') == '4\\n'\n",
        "num_ids_2": 44,
        "num_ids_4": 99
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\\n\"\nassert solution(\"5 4\\n1 2 undo 3\\n5 6 undo 4\") == \"2\\n\"\nassert solution(\"5 4\\n1 2 undo 3\\n1 4 undo 5\") == \"3\\n\"\nassert solution(\"5 4\\n1 2 undo 3\\n1 4 undo 5\\n6 8 undo 6\") == \"1\\n\"\n",
        "num_ids_2": 54,
        "num_ids_4": 122
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 1\\n8 -2 3 undo 2\") == \"4\"\nassert solution(\"5 4\\n8 -3 3 undo 1\") == \"4\"\nassert solution(\"5 4\\n8 -2 2 undo 2\") == \"2\"\nassert solution(\"5 4\\n8 -2 3 undo 2\") == \"2\"\nassert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"\"\"6 7\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    # Your code goes here\\n    return \\\"Your solution here\\\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 6\nprint(\"All tests passed!\")",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6 7\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")\nprint()",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7\\n'\nprint(\"All test cases pass\")",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2 3\n1 2 3\n3 2 1\"\"\"\n) == \"\"\"6 7\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"6 7\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3\\n3 2 1\") == \"6 7\\n6 7\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    1 2 3\n    3 2 1\n    \"\"\"\n) == \"6 7\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\"\"\"\n) == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i+1} failed\" for i, sample_input, expected_output in enumerate(tests)",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"als mollen mollen mollen mollen mollen mollen\") == \"64 correct\\n\"\nassert solution(\"mollen mills incorrect\") == \"665 incorrect\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect') == '64 correct\\n665 incorrect\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nalson neemt daar\\n4\\nals when correct\\nmollen molt vind met\\nmollen slaapt goud\\nmollen maakt geestige\\nmollen verliept de kans\") == \"64 correct\\n665 incorrect\\n\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin=input())}\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 4 3') == 7\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 4 3\\n\") == \"7\\n\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"3\\n\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 4 3\") == 7\nassert solution(\"4\\n4 3 5 2\") == 6\nassert solution(\"4\\n3 2 4 3\") == 6\nassert solution(\"4\\n4 3 4 5\") == 6\nassert solution(\"4\\n3 2 4 5\") == 6\nassert solution(\"4\\n3 1 2 4\") == 6\nassert solution(\"4\\n1 3 2 4\") == 6",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 4 3\") == 7\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '7'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 4 3\") == 7\nassert solution(\"5\\n1 1 1 1\") == 1\nassert solution(\"2\\n1 2 1 3\") == 2\nassert solution(\"3\\n2 1 1 3\") == 4\nassert solution(\"4\\n1 1 3 1\") == 5",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\") == 7\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 4 3\\n\") == \"7\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\\n\"\nassert solution(\"5\\n2 3 4 1\\n1 3 4 1\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"7\\n1 2 3 4\\n1 2 3 5\\n1 2 3 6\\n1 2 3 7\\n1 2 3 8\") == \"1\\n\"\nassert solution(\"8\\n1 2 3 4\\n1 2 3 5\\n1 2 3 6\\n1 2 3 7\\n1 2 3 8\\n1 2 3 9\") == \"2\\n\"",
        "num_ids_2": 51,
        "num_ids_4": 138
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n1\\n0 4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n1\\n0 4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n4\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n1\\n0 4\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n1\\n0 4\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n0 1\\n0 3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n4\\n0 1\\n0 3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n1\\n0 4\\n0 1\\n0 3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n1\\n0 4\\n0 1\\n0 3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n0 1\\n0 3\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n4\\n0 1\\n0 3\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2\\n1\\n0 4\\n0 1\\n0 3\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n1\\n0 4\\n0 1\\n0 3\\n0 1') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'",
        "num_ids_2": 104,
        "num_ids_4": 218
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n-5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n5.5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n-5.5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1 0\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1 0.5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 0.5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.1\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.2\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.3\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.5\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.6\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.7\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.8\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n0 0\\n1 1\\n0 2\\n1.1 1.9\\n\") == \"0.0 0",
        "num_ids_2": 108,
        "num_ids_4": 219
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == [0.0, 0.0]",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nassert solution(\"3\\n1 2\\n4 3\\n0 0\") == \"0.0 2.0\\n2.0 2.0\\n4.0 4.0\"\nassert solution(\"1\\n0 0\\n1 0\") == \"0.0 0.0\"\nassert solution(\"1\\n0 0\\n0 1\") == \"0.0 0.0\"\nassert solution(\"1\\n0 0\\n1 1\") == \"0.0 0.0\"\nassert solution(\"1\\n1 1\\n0 0\") == \"0.0 0.0\"\nassert solution(\"1\\n1 1\\n1 0\") == \"1.0 0.0\"\nassert solution(\"1\\n0 0\\n0 1\") == \"0.0 0.0\"\nassert solution(\"1\\n0 0\\n1 1\") == \"0.0 0.0\"",
        "num_ids_2": 101,
        "num_ids_4": 153
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [0.0, 0.0, 2.0, 2.0, 0.0, 4.0]",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"0.0 0.0\n2.0 2.0\n0.0 4.0\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 1\nassert solution(3) == 3\nassert solution(4) == 5\nassert solution(5) == 9\nassert solution(6) == 15\nassert solution(7) == 26\nassert solution(8) == 41\nassert solution(9) == 60\nassert solution(10) == 100",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(5) == 1\nassert solution(10) == 2\nassert solution(100) == 3\nassert solution(1000) == 3\nassert solution(10000) == 4\nassert solution(100000) == 5",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\\n\" # Test case 1\nassert solution(\"2\\n\") == \"2\\n\" # Test case 2\nassert solution(\"3\\n\") == \"3\\n\" # Test case 3\nassert solution(\"4\\n\") == \"4\\n\" # Test case 4\nassert solution(\"5\\n\") == \"5\\n\" # Test case 5",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'1') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Incorrect output for sample input.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(10001) == \"1\\n\"\nassert solution(5000) == \"5\\n\"\nassert solution(100000) == \"10\\n\"\nassert solution(100001) == \"10\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1, 12, 16) == \"34\", \"Test case 1\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"34\", \"The given solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output: 34\\n\") == \"34\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n12 16\\nSample Output:\\n34\\ndef solution(stdin: str) -> str:\\n    pass\") == \"34\"\nassert solution(\"3 1\\n10 16\\nSample Output:\\n0\\ndef solution(stdin: str) -> str:\\n    pass\") == \"0\"\nassert solution(\"3 2\\n8 16\\nSample Output:\\n32\\ndef solution(stdin: str) -> str:\\n    pass\") == \"32\"\nassert solution(\"3 1\\n6 15\\nSample Output:\\n35\\ndef solution(stdin: str) -> str:\\n    pass\") == \"35\"\nassert solution(\"3 5\\n10 5\\nSample Output:\\n0\\ndef solution(stdin: str) -> str:\\n    pass\") == \"0\"\nassert solution(\"3 3\\n8 10\\nSample Output:\\n16\\ndef solution(stdin: str) -> str:\\n    pass\") == \"16\"\nassert solution(\"3 2\\n7 10\\nSample Output:\\n32\\ndef solution(stdin: str) -> str:\\n    pass\") == \"32\"\nassert solution(\"3 2\\n5 10\\nSample Output:\\n10\\ndef solution(stdin: str) -> str:\\n    pass\") == \"10\"\n",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"34\", \"Test case failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(12, 16) == 34\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n12 16\\n') == '34', \"The solution is incorrect.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1, 12, 16) == 34, \"Invalid solution\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '34'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n12 16\\n\") == \"34\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Solution {output} is incorrect!\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3\nprint(\"All tests passed!\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 1\") == \"3\"\nassert solution(\"3\\n1 2 3 1\") == \"2\"\nassert solution(\"5\\n1 2 3 1 2\\n4 3 2 1 3\\n1 4 3 2 2\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 81
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 1\") == \"3\\n3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 0\nassert solution(\"\"\"\n4\n1 2 3 1\n\"\"\") == 3\nassert solution(\"\"\"\n5\n1 2 1 2 3\n\"\"\") == 2\nassert solution(\"\"\"\n6\n1 2 1 2 3 1\n\"\"\") == 2\nassert solution(\"\"\"\n7\n1 2 1 2 3 1 2\n\"\"\") == 3\nassert solution(\"\"\"\n8\n1 2 1 2 3 1 2 1\n\"\"\") == 2",
        "num_ids_2": 13,
        "num_ids_4": 21
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\nassert solution(\"6\\n1 2 3 4 5 6\") == 3\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == 4\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == 5\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == 6\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == 7\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == 8\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == 9\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == 10\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == 11\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == 12\nassert solution(\"26\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == 13\nassert solution(\"28\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\") == 14\nassert solution(\"30\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\") == 15\nassert solution(\"32\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\") == 16\nassert solution(\"34\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34\") == 17\nassert solution(\"36\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 2",
        "num_ids_2": 40,
        "num_ids_4": 98
    },
    {
        "number": 4946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 1\") == 3\nassert solution(\"5\\n1 2 3 2\\n4 5 6 1\") == 3\nassert solution(\"6\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\") == 3\nassert solution(\"7\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\") == 3\nassert solution(\"8\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\") == 3\nassert solution(\"9\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\") == 3\nassert solution(\"10\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20 21 3\") == 3\nassert solution(\"11\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20 21 3\\n22 23 24 3\") == 3\nassert solution(\"12\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20 21 3\\n22 23 24 3\\n25 26 27 3\") == 3\nassert solution(\"13\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20 21 3\\n22 23 24 3\\n25 26 27 3\\n28 29 30 3\") == 3\nassert solution(\"14\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20 21 3\\n22 23 24 3\\n25 26 27 3\\n28 29 30 3\\n31 32 33 3\") == 3\nassert solution(\"15\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20 21 3\\n22 23 24 3\\n25 26 27 3\\n28 29 30 3\\n31 32 33 3\\n34 35 36 3\") == 3\nassert solution(\"16\\n1 2 3 1\\n4 5 6 2\\n7 8 9 3\\n10 11 12 3\\n13 14 15 3\\n16 17 18 3\\n19 20",
        "num_ids_2": 45,
        "num_ids_4": 129
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1.0\") == 1088, \"The answer should be 1088.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1.0\") == 1088, \"Test 1\"\nassert solution(stdin=\"3.0\") == 1000, \"Test 2\"\nassert solution(stdin=\"1234.0\") == 1000, \"Test 3\"\nassert solution(stdin=\"987654321.0\") == 1000, \"Test 4\"\nassert solution(stdin=\"1000000000.0\") == 1000, \"Test 5\"",
        "num_ids_2": 44,
        "num_ids_4": 99
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == \"1088\", \"Test 1 failed\"\nassert solution(\"3.2\") == \"462\", \"Test 2 failed\"\nassert solution(\"1000.2\") == \"10000\", \"Test 3 failed\"\nassert solution(\"1000.0\") == \"10000\", \"Test 4 failed\"\nassert solution
        "num_ids_2": 41,
        "num_ids_4": 91
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"1.5\") == \"1644\"\nassert solution(\"2.0\") == \"2176\"\nassert solution(\"50.0\") == \"5000\"\nassert solution(\"9999.9\") == \"99999\"\nassert solution(\"1000000.0\") == \"9999999999\"",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.0\") == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1.0\") == 1088, \"The output should be 1088.\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution does not match expected output. Input: {stdin}, Expected: {expected}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.0\") == 1088",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.0\") == \"1088\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1.0\") == \"1088\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_case.txt', 'r')) == '25.000000000'\nassert solution(open('test_case.txt', 'r')) == '25.000000000'\nassert solution(open('test_case.txt', 'r')) == '25.000000000'\nassert solution(open('test_case.txt', 'r')) == '25.000000000'\nassert solution(open('test_case.txt', 'r')) == '25.000000000'\nassert solution(open('test_case.txt', 'r')) == '25.000000000'",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '25.000000000'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    0 4\n    2 0 0 0\n    0 0 1 1\n    2 1 1 1\n    0 1 2 2\n    2 2 2 2\n    0 2 3 3\n    2 3 3 3\n    0 3 4 4\n    2 4 4 4\n    ''') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"25.000000000\", \"The output is incorrect\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    0 4\n    2 2 2 2\n    2 4 2 4\n    4 2 2 2\n    0 4\n    2 2 2 2\n    2 4 2 4\n    4 2 2 2\n    ''') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 4\\n0.5 5.5 0.0 5.0\\n1.0 2.0 1.0 0.0\\n1.0 2.0 0.0 2.0\") == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n0 4\n200 100 200 300\n200 100 200 300\n200 100 200 300\n200 100 200 300\n''') == '25.000000000\\n25.000000000\\n25.000000000\\n25.000000000'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"25.000000000\\n25.000000000\\n25.000000000\\n25.000000000\\n\"\n\nfrom math import sqrt",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'DA', 'Test case 1 failed'\nassert solution(stdin) == 'DA', 'Test case 2 failed'\nassert solution(stdin) == 'NE', 'Test case 3 failed'\nassert solution(stdin) == 'NE', 'Test case 4 failed'\nassert solution(stdin) == 'NE', 'Test case 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\\n\"\nassert solution(\"5 1 1\\n10\\n10\\n10\\n10\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\\n\"\nassert solution(\"10 10 10\\n10\\n10\\n10\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"5 3 4\\n2\\n4\\n5\\n6\\n\") == \"DA\\nNE\\nNE\\n\"\nassert solution(\"5 3 4\\n1\\n4\\n5\\n6\\n\") == \"NE\\nNE\\nNE\\n\"",
        "num_ids_2": 91,
        "num_ids_4": 166
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Solution does not match expected output.\\nInput: {input_str}\\nExpected Output: {expected_output}\\nActual Output: {solution(input_str)}\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert len(solution) == 392",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '''DA\nDA\nDA\nNE\nNE\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(input())\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\n    '5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\n\\nassert solution(\\n    '5 3 4\\n1 2 3\\n5\\n6\\n7\\n') == 'NE\\nNE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\\n    '5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\n\\nassert solution(\\n    '5 3 4\\n1 2 3\\n5\\n6\\n7\\n') == 'NE\\nNE\\n')",
        "num_ids_2": 259,
        "num_ids_4": 259
    },
    {
        "number": 4949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\") == \"DA\\nDA\\nDA\\nNE\\nNE\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6, \"The code is not correct. Please check.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0\\n7 42') == '6\\n'\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Your solution is incorrect. Please check your code and make sure to follow the instructions.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == 6\nassert solution(\"3\\n0 0\\n3\\n5 3\") == 2\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2\\n0 0\\n7 42\") == \"6\\n\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == 6\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == 6",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n7 42\") == 6",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n7 42\\n') == 6\nassert solution('2\\n1 1000\\n5 60000\\n') == 300\nassert solution('1\\n0 0\\n0 0\\n0 0\\n') == 0\nassert solution('2\\n1 1000\\n-1 2000\\n10 3000\\n') == 0\nassert solution('2\\n1000 1000\\n5000 5000\\n') == 0\nassert solution('3\\n0 0\\n5 0\\n10 0\\n-5 0\\n') == 0\nassert solution('2\\n1000 1000\\n5000 5000\\n') == 0",
        "num_ids_2": 52,
        "num_ids_4": 115
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"\nassert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\") == \"def solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\\n-> Cat\\n-> Dave\") == \"def solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\\n-> Cat\\n-> Dave\\n-> Eve\") == \"def solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"3\\n-> Alice\\n-> Bob\\nALICE BOB -> Carl\\n-> Cat\\n-> Dave\\n-> Eve\\n-> Ferdie\") == \"def solution(stdin: str) -> str: \\n    pass\"",
        "num_ids_2": 70,
        "num_ids_4": 173
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'correct'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n\") == \"correct\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"correct\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"correct\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\\n1\"\nassert solution(\"4\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\") == \"correct\\n1\"\nassert solution(\"5\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\\nALICE CARL -> GABRIEL\\nALICE GABRIEL -> HENRIETTE\\nALICE HENRIETTE -> IRENE\\nALICE IRENE -> JOHN\") == \"correct\\n1\"\nassert solution(\"6\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\\nALICE CARL -> GABRIEL\\nALICE GABRIEL -> HENRIETTE\\nALICE HENRIETTE -> IRENE\\nALICE IRENE -> JOHN\\nALICE IRENE -> KAROLINA\") == \"correct\\n1\"\nassert solution(\"7\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\\nALICE CARL -> GABRIEL\\nALICE GABRIEL -> HENRIETTE\\nALICE HENRIETTE -> IRENE\\nALICE IRENE -> JOHN\\nALICE IRENE -> KAROLINA\\nALICE KAROLINA -> LAURA\\nALICE LAURA -> MARIA\\nALICE MARIA -> NELSON\\nALICE NELSON -> OLIVE\\nALICE OLIVE -> ROSE\\nALICE ROSE -> SUMMER\\nALICE SUMMER -> TURTLE\") == \"correct\\n1\"\nassert solution(\"8\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\\nALICE CARL -> GABRIEL\\nALICE GABRIEL -> HENRIETTE\\nALICE HENRIETTE -> IRENE\\nALICE IRENE -> JOHN\\nALICE IRENE -> KAROLINA\\nALICE KAROLINA -> LAURA\\nALICE LAURA -> MARIA\\nALICE MARIA -> NELSON\\nALICE NELSON -> OLIVE\\nALICE OLIVE -> ROSE\\nALICE ROSE -> SUMMER\\nALICE SUMMER -> TURTLE\\nALICE SUMMER -> VICTOR\") == \"correct\\n2\"\nassert solution(\"9\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\\nALICE CARL -> GABRIEL\\nALICE GABRIEL -> HENRIETTE\\nALICE HENRIETTE -> IRENE\\nALICE IRENE -> JOHN\\nALICE IRENE -> KAROLINA\\nALICE KAROLINA -> LAURA\\nALICE LAURA -> MARIA\\nALICE MARIA -> NELSON\\nALICE NELSON -> OLIVE\\nALICE OLIVE -> ROSE\\nALICE ROSE -> SUMMER\\nALICE SUMMER -> TURTLE\\nALICE SUMMER -> VICTOR\\nALICE VICTOR -> WILMA\\nALICE WILMA -> XIAO\\nALICE XIAO -> YANG\\nALICE YANG -> ZHANG\") == \"correct\\n2\"\nassert solution(\"10\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> DONNA\\nALICE DONNA -> FRANCISCO\\nALICE CARL -> GABRIEL\\nALICE GABRIEL -> HENRIETTE\\nALICE HENRI",
        "num_ids_2": 89,
        "num_ids_4": 311
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"correct\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n') == 'correct'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\") == \"correct\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"correct\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Penny Franklin\") == \"Connie Froggatt\"\nassert solution(\"Marti Graham\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Bruce Stanger\") == \"Barbara Skinner\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Barbara Skinner\") == \"Barbara Skinner\"\nassert solution(\"***\") == \"Runoff!\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Runoff!\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 208,
        "num_ids_4": 308
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\nprint('All tests passed!')",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    Penny Franklin\n    Marti Graham\n    Connie Froggatt\n    Joseph Ivers\n    Connie Froggatt\n    Penny Franklin\n    Connie Froggatt\n    Bruce Stanger\n    Connie Froggatt\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    '''\n) == 'Connie Froggatt'\n\nassert solution(\n    '''\n    Penny Franklin\n    Marti Graham\n    ***\n    '''\n) == 'Runoff!'\n\nassert solution(\n    '''\n    Penny Franklin\n    Marti Graham\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    '''\n) == 'Barbara Skinner'\n\nassert solution(\n    '''\n    Penny Franklin\n    Marti Graham\n    ***\n    '''\n) == 'Runoff!'\n\nassert solution(\n    '''\n    Penny Franklin\n    Marti Graham\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    '''\n) == 'Barbara Skinner'\n\nassert solution(\n    '''\n    Penny Franklin\n    Marti Graham\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    '''\n) == 'Barbara Skinner'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Penny Franklin') == 'Connie Froggatt'\nassert solution('Marti Graham') == 'Connie Froggatt'\nassert solution('Connie Froggatt') == 'Connie Froggatt'\nassert solution('Joseph Ivers') == 'Connie Froggatt'\nassert solution('Connie Froggatt') == 'Connie Froggatt'\nassert solution('Bruce Stanger') == 'Connie Froggatt'\nassert solution('Barbara Skinner') == 'Connie Froggatt'\n\nfrom typing import List",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt\\n'\nassert solution('Connie Froggatt\\n') == 'Connie Froggatt\\n'\nassert solution('Connie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nConnie Frogg",
        "num_ids_2": 114,
        "num_ids_4": 1027
    },
    {
        "number": 4952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\nassert solution('***') == 'Runoff!'",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == 2\nprint(\"Test Passed\")",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == 2\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\", \"Test Failed\"\nprint(\"Test Passed\")",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"1\\nAlice\\nLuv\\nEve\\nBob\\nCharlie\\n\") == \"1\"\nassert solution(\"1\\nJabba-the-Hutt Huttese\\nBoba-Fett Basic Huttese\\nR2D2 Binary Basic\\n\") == \"2\"\nassert solution(\"1\\nAlice\\nLuv\\nEve\\nBob\\nCharlie\\n\") == \"1\"",
        "num_ids_2": 125,
        "num_ids_4": 201
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"5\\nJabba-the-Hutt\\nChewbacca-star-wars\\nLuke-skywalker\\nGrakchawwaa-the-force-awakens\\nR2-D2-in-space\\n\") == \"1\"\nassert solution(\"7\\nJabba-the-Hutt\\nChewbacca-star-wars\\nLuke-skywalker\\nGrakchawwaa-the-force-awakens\\nR2-D2-in-space\\n\") == \"2\"\nassert solution(\"5\\nJabba-the-Hutt\\nChewbacca-star-wars\\nLuke-skywalker\\nGrakchawwaa-the-force-awakens\\nR2-D2-in-space\\n\") == \"1\"",
        "num_ids_2": 162,
        "num_ids_4": 296
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == 2, \"The output is incorrect.\"",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"1\\nAlice\\nBoba\\nCharlie\\nDavid\\nEve\") == \"0\"\nassert solution(\"5\\nAlice\\nBoba\\nCharlie\\nDavid\\nEve\\nFran\\nIan\") == \"1\"\nassert solution(\"10\\nAlice\\nBoba\\nCharlie\\nDavid\\nEve\\nFran\\nIan\\nFrank\\nJames\\nJohn\\nKaren\\nLuke\") == \"1\"\n",
        "num_ids_2": 123,
        "num_ids_4": 214
    },
    {
        "number": 4953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '3\\n'\nassert solution(input()) == '4\\n'\nassert solution(input()) == '5\\n'\nassert solution(input()) == '6\\n'\nassert solution(input()) == '7\\n'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"stay home\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '900'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n\nfrom typing import List",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    \"\"\"\n) == \"900\"\n\nassert solution(\n    \"\"\"\n    3 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    300\n    \"\"\"\n) == \"stay home\"\n\nassert solution(\n    \"\"\"\n    3 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    500 4 20\n    500 4 10\n    500 4 10\n    \"\"\"\n) == \"900\"\n\nassert solution(\n    \"\"\"\n    3 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    1000 4 20\n    1000 4 10\n    1000 4 10\n    \"\"\"\n) == \"900\"\n\nassert solution(\n    \"\"\"\n    3 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    300\n    500 4 20\n    500 4 10\n    500 4 10\n    \"\"\"\n) == \"900\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == 900\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == '900'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\nassert len(solution) == 123",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    10\n     C D F D C D F F F C \n    \"\"\"\n) == \"A# C D# F\"\n\nassert solution(\n    \"\"\"\n    10\n     C D G D C D G D G G G C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C D G E D C D G D G E G D C \n    \"\"\"\n) == \"C# B B C\"\n\nassert solution(\n    \"\"\"\n    10\n     C D G F D C D G D G F G G C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C D E G D C D E G D E G D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C D E F D C D E G D E F G D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C D F G D C D F G D F G G C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E G D C E G D C E G D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C F G D C F G D C F G D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C G D C G D C C G D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C B D C B D C B D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C D D D D D C D D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C D D D D D D C D D C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E F G C E F G C E F G \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E G F C E G F C E G F \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E G A C E G A C E G A \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E G B C E G B C E G B \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E G C C E G C C E G C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C E G D C E G D C E G D \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C F G D C F G D C F G D \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C G D C G D C G D C G D \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C A C B C A C B C A C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C C C C C C C C C C C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C C C C C C C C C C C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C C C C C C C C C C C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C C C C C C C C C C C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C C C C C C C C C C C \n    \"\"\"\n) == \"A# B C D# G\"\n\nassert solution(\n    \"\"\"\n    10\n     C C C C C C C C C C C \n    \"\"\"\n) == \"A# B C D",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"\nassert solution(\"11\\nC D F D C D F F F C \") == \"C#\"\nassert solution(\"12\\nC D F D C D F F F C \") == \"D#\"\nassert solution(\"13\\nC D F D C D F F F C \") == \"D# F#\"\nassert solution(\"14\\nC D F D C D F F F C \") == \"D# F# C#\"\nassert solution(\"15\\nC D F D C D F F F C \") == \"E#\"\nassert solution(\"16\\nC D F D C D F F F C \") == \"F#\"\nassert solution(\"17\\nC D F D C D F F F C \") == \"G#\"\nassert solution(\"18\\nC D F D C D F F F C \") == \"A#\"\nassert solution(\"19\\nC D F D C D F F F C \") == \"B#\"\nassert solution(\"20\\nC D F D C D F F F C \") == \"C#\"\nassert solution(\"21\\nC D F D C D F F F C \") == \"C# B#\"\nassert solution(\"22\\nC D F D C D F F F C \") == \"D#\"\nassert solution(\"23\\nC D F D C D F F F C \") == \"D# C#\"\nassert solution(\"24\\nC D F D C D F F F C \") == \"D# C# B#\"\nassert solution(\"25\\nC D F D C D F F F C \") == \"E#\"\nassert solution(\"26\\nC D F D C D F F F C \") == \"F#\"\nassert solution(\"27\\nC D F D C D F F F C \") == \"G#\"\nassert solution(\"28\\nC D F D C D F F F C \") == \"A#\"\nassert solution(\"29\\nC D F D C D F F F C \") == \"B#\"\nassert solution(\"30\\nC D F D C D F F F C \") == \"C#\"\nassert solution(\"31\\nC D F D C D F F F C \") == \"C# B#\"\nassert solution(\"32\\nC D F D C D F F F C \") == \"D#\"\nassert solution(\"33\\nC D F D C D F F F C \") == \"D# C#\"\nassert solution(\"34\\nC D F D C D F F F C \") == \"D# C# B#\"\nassert solution(\"35\\nC D F D C D F F F C \") == \"E#\"\nassert solution(\"36\\nC D F D C D F F F C \") == \"F#\"\nassert solution(\"37\\nC D F D C D F F F C \") == \"G#\"\nassert solution(\"38\\nC D F D C D F F F C \") == \"A#\"\nassert solution(\"39\\nC D F D C D F F F C \") == \"B#\"\nassert solution(\"40\\nC D F D C D F F F C \") == \"C#\"\nassert solution(\"41\\nC D F D C D F F F C \") == \"C# B#\"\nassert solution(\"42\\nC D F D C D F F F C \") == \"D#\"\nassert solution(\"43\\nC D F D C D F F F C \") == \"D# C#\"\nassert solution(\"44\\nC D F D C D F F F C \") == \"D# C# B#\"\nassert solution(\"45\\nC D F D C D F F F C \") == \"E#\"\nassert solution(\"46\\nC D F D C D F F F C \") == \"F#\"\nassert solution(\"47\\nC D F D C D F F F C \") == \"G#\"\nassert solution(\"48\\nC D F D C D F F F C \") == \"A#\"\nassert solution(\"49\\nC D F D C D F F F C \") == \"B#\"\nassert solution(\"50\\nC D F D C D F F F C \") == \"C#\"\nassert solution(\"51\\nC D F D C D F F F C \") == \"C# B#\"\nassert solution(\"52\\nC D F D C D F F F C \") == \"D#\"\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\ta: [1, 2, 3, 4, 5]\\n\\tb: [1, 1, 2, 3, 4, 5]\\n\\tc: [1, 2, 3, 4, 5, 6]\\n\\td: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\n\\te: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\\n\\tf: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\\n\\tg: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\\n\\nscales = ['A# C D# F', 'C D# F', 'D# F', 'F', 'G', 'A', 'A#']\\n\\tfor s in scales:\\n\\t\\tprint(s)\\n\\nprint('none')\"",
        "num_ids_2": 1013,
        "num_ids_4": 1013
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(['10', 'C D F D C D F F F C ']) == 'A# C D# F'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nC D F D C D F F F C ') == 'A# C D# F'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nC D F D C D F F F C \") == \"A# C D# F\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\n\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\", \"The solution should return 'dae ae ju traeligt va'.\"\nassert solution(\"h\u00e4t talar vi rikssvenska\") == \"haer talar vi rikssvenska\", \"The solution should return 'haer talar vi rikssvenska'.\"\nassert solution(\"\u00e4nta j\u00e4rrar v\u00e4lja\") == \"\u00e4nta j\u00e4rrar v\u00e4lja\", \"The solution should return '\u00e4nta j\u00e4rrar v\u00e4lja'.\"\nassert solution(\"\u00f6stg\u00f6tska\") == \"dae ae ju traeligt va\", \"The solution should return 'dae ae ju traeligt va'.\"",
        "num_ids_2": 83,
        "num_ids_4": 164
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"dae ae ju traeligt va\"\n) == \"dae ae ju traeligt va\"\n\nassert solution(\n\"haer talar vi rikssvenska\"\n) == \"haer talar vi rikssvenska\"\n\nassert solution(\n\"tack ha anta h\u00e5lla budskap\"\n) == \"haer talar vi rikssvenska\"\n\nassert solution(\n\"haver hu ha mer \u00e4n en j\u00e4mnts\u00e4kerhet\"\n) == \"haer talar vi rikssvenska\"\n\nassert solution(\n\"javer ha olika grupper av elever\"\n) == \"haer talar vi rikssvenska\"\n\nassert solution(\n\"juice ha en liten vara\"\n) == \"haer talar vi rikssvenska\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('\u00e4lskar egna k\u00e4nner') == 'haer talar vi rikssvenska'\nassert solution('\u00e6r\u00f0u') == 'haer talar vi rikssvenska'\nassert solution('\u00e5terkallar r\u00f6r') == 'haer talar vi rikssvenska'\nassert solution('hj\u00e6lpsj\u00e6lps') == 'haer talar vi rikssvenska'\nassert solution('haer talar vi') == 'haer talar vi rikssvenska'\nassert solution('ska ska st\u00e5 rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5s viktig') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5s') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt vi') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt oss') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt efter') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt oss') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt i') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt efterh\u00e5llanden') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt i') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikssvenska'\nassert solution('ska st\u00e5tt jag') == 'haer talar vi rikss",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta ege\") == \"ae geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta ege\"\nassert solution(\"\u00e4geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta egee\") == \"haer geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta egee\"\nassert solution(\"\u00e4geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta egeee\") == \"haer geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta egeee\"\nassert solution(\"\u00e4geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta egeeee\") == \"haer geb\u00e4ra tr\u00e4ta d\u00e4 s\u00e4tta egeeee\"",
        "num_ids_2": 50,
        "num_ids_4": 125
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"definitely not in \u00f6stg\u00f6tska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4\u00e4",
        "num_ids_2": 49,
        "num_ids_4": 540
    },
    {
        "number": 4956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"deformation\") == \"deformation\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"haer talar vi rikssvenska\"\nassert solution(\"A man in a bottle\") == \"haer talar vi rikssvenska\"\nassert solution(\"There is no need to be sorry\") == \"haer talar vi rikssvenska\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"haer talar vi rikssvenska\"",
        "num_ids_2": 36,
        "num_ids_4": 87
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == 'E..E#.\n..E.#E\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n....#.\n....#.\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#. \\n..E.#E \\n#..E.. \\n.E...E \\n##E.E#\"\nprint(\"Correct\")",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"E..E#.E.E.#E..E.E.E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n\") == \"E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..E#.E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n....#\\n....#\\n#.....\\n......\\n##...#\\n') == 'E..E#.E..E#.E..E#E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..E#E..E..E..E..",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"The output should be 12 10 3 8 4 2\"\nprint(\"All tests passed.\")",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Got: {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Test 1\"\nassert solution(\"15 13 20 18 12 10 1 22 8\") == \"12 10 1 8 18 22\", \"Test 2\"\nassert solution(\"22 11 19 10 1 21 20 15 13\") == \"20 12 11 1 13 21 22 8 15\", \"Test 3\"\nassert solution(\"19 10 15 13 12 22 18 21 20\") == \"18 15 22 10 1 21 20 8 12\", \"Test 4\"\nassert solution(\"14 17 11 12 10 16 15 20 18\") == \"14 10 12 11 16 20 18 8 17\", \"Test 5\"",
        "num_ids_2": 97,
        "num_ids_4": 222
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Sample Input: 12 8 2 4 10 3 25 14\\nSample Output: 12 10 3 8 4 2\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\", \"Incorrect output for sample input.\"\n\nassert solution(\"12 25 5 34 23 45 21 3\") == \"12 34 23 21 45 5\", \"Incorrect output for sample input.\"\n\nassert solution(\"4 10 2 15 12 5 3 1\") == \"4 10 2 15 12 3 1\", \"Incorrect output for sample input.\"\n\nassert solution(\"12 50 10 35 15 5 40 12\") == \"50 5 40 12 10 15 35 12\", \"Incorrect output for sample input.\"",
        "num_ids_2": 99,
        "num_ids_4": 207
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2', 'The correct output should be \"12 10 3 8 4 2\".'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 0 3\") == \"4\", \"Incorrect output.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'How many sodas did Tim drink on his extra thirsty day?'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\", \"The expected output is 4.\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str='9 0 3') == '4'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 0 3\") == \"4\", \"Test case 1 failed\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"9 0 3\\n\") == 4, \"Tim should have drank 4 sodas on his extra thirsty day.\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 0 3\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1010\") == \"12\", \"The solution is not correct.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1010\") == \"12\", \"The solution should return '12'.\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"The solution is incorrect.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1010\") == \"12\"\nprint(\"Test passed!\")\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\", \"Slavko's output is incorrect.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1010\") == 12, \"Invalid output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1010\") == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == 2\nassert solution(\"3 3\\n..o\\no..\") == 2\nassert solution(\"5 3\\n..o\\no..\") == 2\nassert solution(\"1 3\\n..o\\no..\") == 2\nassert solution(\"2 3\\noo..\") == 2\nassert solution(\"3 3\\noo..\") == 2\nassert solution(\"5 3\\noo..\") == 2\nassert solution(\"1 3\\noo..\") == 2\nassert solution(\"2 3\\n..o\") == 2\nassert solution(\"3 3\\n..o\") == 2\nassert solution(\"5 3\\n..o\") == 2\nassert solution(\"1 3\\n..o\") == 2\nassert solution(\"2 3\\noo..\") == 2\nassert solution(\"3 3\\noo..\") == 2\nassert solution(\"5 3\\noo..\") == 2\nassert solution(\"1 3\\noo..\") == 2\nassert solution(\"2 3\\n..o\") == 2\nassert solution(\"3 3\\n..o\") == 2\nassert solution(\"5 3\\n..o\") == 2\nassert solution(\"1 3\\n..o\") == 2",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected output {output}, got {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The correct output for the given inputs is not provided\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Incorrect output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"The solution {solution(sample_input)} does not match the expected output {expected_output}\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n..o\\no..\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"LADICA\"\nassert solution(stdin) == \"SMECE\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"5 3\\n2 3\\n1 3\\n2 3\\n1 3\\n1 3\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nSMECE\\n\"\nassert solution(\"5 3\\n1 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 122,
        "num_ids_4": 183
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\"\n) == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 679,
        "num_ids_4": 679
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"SMECE\\nSMECE\\nSMECE\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1",
        "num_ids_2": 97,
        "num_ids_4": 1027
    },
    {
        "number": 4962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0\") == \"1 2\\n\", \"Invalid input.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 2\"\nassert solution(input()) == \"1 2 3\"\nassert solution(input()) == \"1 2 3 4\"\nassert solution(input()) == \"1 2 3 4 5\"\nassert solution(input()) == \"1 2 3 4 5 6\"\nassert solution(input()) == \"1 2 3 4 5 6 7\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0\") == \"1 2\\n\", \"The output is incorrect.\"\n\nfrom typing import List",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1 2\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 2\\n\", \"Your solution is incorrect.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0\") == \"1 2\\n\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0') == '1 2\\n'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0\n''') == '''\n1\n2\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == '1 2\\n', 'Expected output not found'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == 1\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == 1",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\n'\n\nsolution = '''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\", \"Test failed\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\\n\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Invalid output\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\\n\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', got '{solution(sample_input)}'.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\nassert solution(\"1 0 1\\n2 1 2\\n3 1 3\\n4 1 4\\n5 1 5\\n6 2 1\\n7 2 2\\n8 2 3\\n9 2 4\\n10 2 5\") == \"1\"\nassert solution(\"5 1 1\\n6 2 1\\n7 3 1\\n8 4 1\\n9 5 1\\n10 6 1\\n11 7 1\\n12 8 1\\n13 9 1\\n14 10 1\\n15 11 1\\n16 12 1\\n17 13 1\\n18 14 1\\n19 15 1\\n20 16 1\\n21 17 1\\n22 18 1\\n23 19 1\\n24 20 1\\n25 21 1\\n26 22 1\\n27 23 1\\n28 24 1\\n29 25 1\\n30 26 1\\n31 27 1\\n32 28 1\\n33 29 1\\n34 30 1\\n35 31 1\\n36 32 1\\n37 33 1\\n38 34 1\\n39 35 1\\n40 36 1\\n41 37 1\\n42 38 1\\n43 39 1\\n44 40 1\\n45 41 1\\n46 42 1\\n47 43 1\\n48 44 1\\n49 45 1\\n50 46 1\\n51 47 1\\n52 48 1\\n53 49 1\\n54 50 1\\n55 51 1\\n56 52 1\\n57 53 1\\n58 54 1\\n59 55 1\\n60 56 1\\n61 57 1\\n62 58 1\\n63 59 1\\n64 60 1\\n65 61 1\\n66 62 1\\n67 63 1\\n68 64 1\\n69 65 1\\n70 66 1\\n71 67 1\\n72 68 1\\n73 69 1\\n74 70 1\\n75 71 1\\n76 72 1\\n77 73 1\\n78 74 1\\n79 75 1\\n80 76 1\\n81 77 1\\n82 78 1\\n83 79 1\\n84 80 1\\n85 81 1\\n86 82 1\\n87 83 1\\n88 84 1\\n89 85 1\\n90 86 1\\n91 87 1\\n92 88 1\\n93 89 1\\n94 90 1\\n95 91 1\\n96 92 1\\n97 93 1\\n98 94 1\\n99 95 1\\n100 96 1\\n101 97 1\\n102 98 1\\n103 99 1\\n104 100 1\\n105 101",
        "num_ids_2": 124,
        "num_ids_4": 1027
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '4 3 1', \"Expected '4 3 1', got: '{}'.\".format(solution(input()))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4 3 1\"\nassert solution() == \"4 4 1\"\nassert solution() == \"4 1 3\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4 1 2\"\nassert solution() == \"1 2 4\"\nassert solution() == \"2 1 4\"\nassert solution() == \"1 4 2\"\nassert solution() == \"4 2 1\"\nassert solution() == \"2 3 1\"\nassert solution() == \"1 2 3\"\nassert solution() == \"3 2 1\"\nassert solution() == \"1 3 2\"\nassert solution() == \"3 1 2\"\nassert solution() == \"1 4 3\"\nassert solution() == \"4",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"1\\n-5 -3 -2\\n-5 -1 0\\n-4 0 1\") == \"0 1 3\"\nassert solution(\"4\\n1 2 3 4\") == \"4 3 2 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 4 3 2 1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6 5 4 3 2 1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7 6 5 4 3 2 1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8 7 6 5 4 3 2 1\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"9 8 7 6 5 4 3 2 1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10 9 8 7 6 5 4 3 2 1\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"11 10 9 8 7 6 5 4 3 2 1\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"12 11 10 9 8 7 6 5 4 3 2 1\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"13 12 11 10 9 8 7 6 5 4 3 2\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"14 13 12 11 10 9 8 7 6 5 4 3\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"15 14 13 12 11 10 9 8 7 6 5\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"16 15 14 13 12 11 10 9 8 7 6\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"17 16 15 14 13 12 11 10 9 8 7\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"18 17 16 15 14 13 12 11 10 9 8\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"19 18 17 16 15 14 13 12 11 10 9\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12",
        "num_ids_2": 59,
        "num_ids_4": 113
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 4\\n\") == \"4 3 1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    1 3 4\n    2 1 1\n''') == '4 3 1'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4 3 1\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"impossible\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 20 15\\n3 10') == '18.400'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"18.400\", \"The solution is incorrect\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 20 15\\n3 10') == '18.400'\nassert solution('5 2 3\\n1 5') == '1.500'\nassert solution('2 1 10\\n1 2 3 4') == '10.000'",
        "num_ids_2": 50,
        "num_ids_4": 79
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Test Case {test_case} failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"18.400\"\n\nHere is the solution: \n\n```python\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 20 15\\n3 10\\n') == '18.400\\n'\nassert solution('10 1 20\\n1 10 10\\n1 5 5\\n1 10 10\\n1 20 20\\n') == '28.000\\n'\nassert solution('10 1 20\\n1 10 10\\n1 5 5\\n1 10 10\\n1 20 20\\n2 20 15\\n3 10\\n') == '33.200\\n'",
        "num_ids_2": 90,
        "num_ids_4": 164
    },
    {
        "number": 4966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\nfrom typing import List",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5, \"Test failed. Expected: 5, Actual: {}\".format(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5\\n' + '5\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5, \"Test case 1 failed\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5, \"Test case 2 failed\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5, \"Test case 3 failed\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5, \"Test case 4 failed\"\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\") == 5, \"Test case 5 failed\"",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....') == 5, \"The maximum Manhattan distance that any spy has to travel in order to reach the nearest safe house should be 5.\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution failed: expected {output}, got {solution(input())}\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5\nassert solution(\"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\") == 5",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5\nassert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == 5",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output for the sample input {input()} is {solution(input())}, but the expected output is {expected_output}. Please check the sample input and expected output.\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\" # No teams can start the race",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n\nassert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n\nassert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5\\n') == '0\\n'\n\nassert solution('5 2 3\\n2 4\\n1 3 5\\n6 7 8') == '3\\n'\n\nassert solution('5 2 3\\n2 4\\n1 3 5\\n9 10 11') == '4\\n'",
        "num_ids_2": 65,
        "num_ids_4": 102
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\\n\"\nassert solution(\"5 2 4\\n2 1\\n1 3 5\") == \"0\\n\"\nassert solution(\"5 2 4\\n2 3\\n1 3 5\") == \"0\\n\"\nassert solution(\"5 2 4\\n2 4\\n1 3 5\") == \"1\\n\"\nassert solution(\"5 2 4\\n2 1\\n1 3 4\") == \"2\\n\"\nassert solution(\"5 2 4\\n2 3\\n1 3 4\") == \"3\\n\"\nassert solution(\"5 2 4\\n2 4\\n1 3 4\") == \"4\\n\"\nassert solution(\"5 2 4\\n2 1\\n1 3 5\") == \"5\\n\"\nassert solution(\"5 2 4\\n2 3\\n1 3 5\") == \"5\\n\"\nassert solution(\"5 2 4\\n2 4\\n1 3 5\") == \"5\\n\"\nassert solution(\"5 2 4\\n2 1\\n1 3 4\") == \"6\\n\"\nassert solution(\"5 2 4\\n2 3\\n1 3 4\") == \"6\\n\"\nassert solution(\"5 2 4\\n2 4\\n1 3 4\") == \"6\\n\"",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == 0\nassert solution(\"5 2 3\\n2 4\\n3 3\") == 1\nassert solution(\"5 2 3\\n2 4\\n2 3\") == 2\nassert solution(\"5 2 3\\n2 4\\n1 3\") == 3\nassert solution(\"5 2 3\\n2 4\\n5 5\") == 4\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0\\n'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\nassert solution(\"5 2 3\\n2 4\\n1 2 5\") == \"2\"\nassert solution(\"5 2 3\\n2 4\\n1 2 5\") == \"1\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0'\nassert solution('5 2 3\\n2 4\\n1 3 4') == '2'\nassert solution('5 2 3\\n2 4\\n1 3 2') == '4'\nassert solution('5 2 3\\n2 4\\n1 3 5') == '5'",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == 0.000000000",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 0.000000000, \"Your code is incomplete or has some syntax errors.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == 0.000000000",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.000000000\", \"Expected 0.000000000 but got {}\".format(solution(input()))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0.000000000\\n\", \"Incorrect output\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n\nassert solution(\"5 6\") == \"0.000000000\"\n\nassert solution(\"1 10\") == \"0.000000000\"\n\nassert solution(\"2 10\") == \"0.000000000\"\n\nassert solution(\"1 15\") == \"0.000000000\"\n\nassert solution(\"10 10\") == \"0.000000000\"\n\nassert solution(\"10 5\") == \"0.500000000\"\n\nassert solution(\"20 10\") == \"0.500000000\"\n\nassert solution(\"10 15\") == \"0.500000000\"\n\nassert solution(\"10 1\") == \"0.000000000\"\n\nassert solution(\"2 0\") == \"0.000000000\"\n\nassert solution(\"2 1\") == \"0.000000000\"\n\nassert solution(\"2 100\") == \"0.000000000\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"2 2\") == \"0.000000000\"\nassert solution(\"3 3\") == \"0.000000000\"\nassert solution(\"4 4\") == \"0.000000000\"\nassert solution(\"5 5\") == \"0.000000000\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\nprint(\"All tests passed successfully.\")",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"\nassert solution(\"5\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"3\\n\"\nassert solution(\"6\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\\n\"",
        "num_ids_2": 213,
        "num_ids_4": 540
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\\n2\\n\"\nassert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\\n1\\n\"",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100''') == '2'\n\nassert solution('''5\n100 101 102 103 104\n100 200 300 400 200\n103 102 101 488 100\n103 102 488 100 101\n100 101 102 488 100''') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}', got: '{solution(stdin)}'\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1730\") == \"1729\\n\"\nprint(\"All test cases pass.\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1729'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1729\", \"Test failed.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1730\") == \"1729\"\n\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1730) == \"1729\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1729\", \"The output is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"None\"\nassert solution(1000000000) == \"1728\"\nassert solution(2000000000) == \"1729\"\nassert solution(3000000000) == \"1730\"\n\nfrom typing import List",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"none\"\nassert solution(\"\") == \"none\"\nassert solution(\"1\") == \"none\"\nassert solution(\"2\") == \"none\"\nassert solution(\"400001\") == \"none\"\nassert solution(\"400000\") == \"1729\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1730\") == \"1729\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1729\", \"Your solution is incorrect.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(65536) == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(65536) == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(65536) == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(65536) == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65536\") == \"16\"\n\nfrom typing import List",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(65536) == 16",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(34721), \"Test failed: The correct output for X = 34721 is not provided.\"\nassert solution(100), \"Test failed: The correct output for X = 100 is not provided.\"\nassert solution(1000000000), \"Test failed: The correct output for X = 1000000000 is not provided.\"\nassert solution(1000000001), \"Test failed: The correct output for X = 1000000001 is not provided.\"\nassert solution(1000000000000000000), \"Test failed: The correct output for X = 1000000000000000000 is not provided.\"",
        "num_ids_2": 56,
        "num_ids_4": 136
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"Test Case {test_case} failed\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4, \"..\", \"..\", \"..\", \"K\"]) == \"2\"\nassert solution([4, \".\", \".\", \".\", \"K\"]) == \"2\"\nassert solution([4, \".\", \".\", \".\", \"#\"]) == \"-1\"\nassert solution([3, \"K\", \".\", \".\", \"K\"]) == \"2\"\nassert solution([3, \".\", \".\", \".\", \"#\"]) == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\\ndef solution(stdin: str) -> str:\\n    return \\\"-$1\\\"\\n\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '2'\nassert solution(5) == '1'\nassert solution(6) == '2'\nassert solution(7) == '3'\nassert solution(8) == '2'\nassert solution(9) == '1'\nassert solution(10) == '-1'\nassert solution(11) == '-1'\nassert solution(12) == '-1'\nassert solution(13) == '-1'\nassert solution(14) == '-1'\nassert solution(15) == '-1'\nassert solution(16) == '-1'\nassert solution(17) == '-1'\nassert solution(18) == '-1'\nassert solution(19) == '-1'\nassert solution(20) == '-1'\nassert solution(21) == '-1'\nassert solution(22) == '-1'\nassert solution(23) == '-1'\nassert solution(24) == '-1'\nassert solution(25) == '-1'\nassert solution(26) == '-1'\nassert solution(27) == '-1'\nassert solution(28) == '-1'\nassert solution(29) == '-1'\nassert solution(30) == '-1'\nassert solution(31) == '-1'\nassert solution(32) == '-1'\nassert solution(33) == '-1'\nassert solution(34) == '-1'\nassert solution(35) == '-1'\nassert solution(36) == '-1'\nassert solution(37) == '-1'\nassert solution(38) == '-1'\nassert solution(39) == '-1'\nassert solution(40) == '-1'\nassert solution(41) == '-1'\nassert solution(42) == '-1'\nassert solution(43) == '-1'\nassert solution(44) == '-1'\nassert solution(45) == '-1'\nassert solution(46) == '-1'\nassert solution(47) == '-1'\nassert solution(48) == '-1'\nassert solution(49) == '-1'\nassert solution(50) == '-1'\nassert solution(51) == '-1'\nassert solution(52) == '-1'\nassert solution(53) == '-1'\nassert solution(54) == '-1'\nassert solution(55) == '-1'\nassert solution(56) == '-1'\nassert solution(57) == '-1'\nassert solution(58) == '-1'\nassert solution(59) == '-1'\nassert solution(60) == '-1'\nassert solution(61) == '-1'\nassert solution(62) == '-1'\nassert solution(63) == '-1'\nassert solution(64) == '-1'\nassert solution(65) == '-1'\nassert solution(66) == '-1'\nassert solution(67) == '-1'\nassert solution(68) == '-1'\nassert solution(69) == '-1'\nassert solution(70) == '-1'\nassert solution(71) == '-1'\nassert solution(72) == '-1'\nassert solution(73) == '-1'\nassert solution(74) == '-1'\nassert solution(75) == '-1'\nassert solution(76) == '-1'\nassert solution(77) == '-1'\nassert solution(78) == '-1'\nassert solution(79) == '-1'\nassert solution(80) == '-1'\nassert solution(81) == '-1'\nassert solution(82) == '-1'\nassert solution(83) == '-1'\nassert solution(84) == '-1'\nassert solution(85) == '-1'\nassert solution(86) == '-1'\nassert solution(87) == '-1'\nassert solution(88) == '-1'\nassert solution(89) == '-1'\nassert solution(90) == '-1'\nassert solution(91) == '-1'\nassert solution(92) == '-1'\nassert solution(93) == '-1'\nassert solution(94) == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"3\\nabc\"\nassert solution(stdin) == \"4\\n....\\n....\\n....\\nK\"\nassert solution(stdin) == \"5\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n",
        "num_ids_2": 25,
        "num_ids_4": 1027
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4]) == '2'\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2\nassert solution(10) == 10\nassert solution(1) == -1\n",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n3\\n\") == \"too late\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '23'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution and output are different: {solution(input())}!= {output()}\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"23\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '23'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"23\\n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"23\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 5\\n42\\n3\\n2\\n99\\n1') == '23'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"playfair example\\nhide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Test case 1 failed\"\n\nassert solution(\"abc\") == \"ABC\", \"Test case 2 failed\"\n\nassert solution(\"abc def ghi jkl mno pqr stuv xyz\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"Test case 3 failed\"\n\nassert solution(\"abc123\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"Test case 4 failed\"\n\nassert solution(\"a b c\") == \"A\", \"Test case 5 failed\"\n\nassert solution(\"hello world\") == \"HELL\", \"Test case 6 failed\"\n\nassert solution(\"Hello World\") == \"HELL\", \"Test case 7 failed\"",
        "num_ids_2": 59,
        "num_ids_4": 128
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"Your solution is incorrect.\"\n\nfrom typing import List",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"playfair example\\nhide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\", \"The output is incorrect.\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('example.txt', 'r')) == \"The gopher cannot escape.\"\nassert solution(open('example_output.txt', 'r')) == \"The gopher can escape through the hole at (1.500, 1.500).\\nThe gopher can escape through the hole at (2.000, 2.000).\"\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n0.000 1.000\\n\") == \"The gopher cannot escape.\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n1.500 1.500\\n\") == \"The gopher can escape through the hole at (0,1).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n2.000 2.000\\n\") == \"The gopher can escape through the hole at (0,2).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n2.500 2.500\\n\") == \"The gopher can escape through the hole at (0,3).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n3.000 3.000\\n\") == \"The gopher can escape through the hole at (0,4).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n3.500 3.500\\n\") == \"The gopher can escape through the hole at (0,5).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n4.000 4.000\\n\") == \"The gopher can escape through the hole at (0,6).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n4.500 4.500\\n\") == \"The gopher can escape through the hole at (0,7).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n5.000 5.000\\n\") == \"The gopher can escape through the hole at (0,8).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n5.500 5.500\\n\") == \"The gopher can escape through the hole at (0,9).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n6.000 6.000\\n\") == \"The gopher can escape through the hole at (1,0).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n6.500 6.500\\n\") == \"The gopher can escape through the hole at (1,1).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n7.000 7.000\\n\") == \"The gopher can escape through the hole at (1,2).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n7.500 7.500\\n\") == \"The gopher can escape through the hole at (1,3).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n8.000 8.000\\n\") == \"The gopher can escape through the hole at (1,4).\\n\"\nassert solution(\"0.000 1.000 2.000 2.000\\n8.500 8.",
        "num_ids_2": 108,
        "num_ids_4": 232
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n\")) == \"The gopher cannot escape.\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.500 1.500\\n\")) == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.500 1.500\\n1.750 1.750\\n\")) == \"The gopher can escape through the hole at (1.750, 1.750).\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.500 1.500\\n1.750 1.750\\n1.750 1.750\\n\")) == \"The gopher can escape through the hole at (1.750, 1.750).\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.750 1.750\\n1.500 1.500\\n1.750 1.750\\n1.750 1.750\\n1.750 1.750\\n1.750 1.750\\n\")) == \"The gopher can escape through the hole at (1.750, 1.750).\"",
        "num_ids_2": 151,
        "num_ids_4": 384
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 1.000 1.000\\n1.000 1.000\") == \"The gopher can escape through the hole at (1,1).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000\") == \"The gopher can escape through the hole at (-1,-1).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000\") == \"The gopher can escape through the hole at (0,0).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000\") == \"The gopher can escape through the hole at (3,3).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000 4.000 4.000\") == \"The gopher can escape through the hole at (0,4).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000 4.000 4.000 5.000 5.000\") == \"The gopher can escape through the hole at (5,5).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000 4.000 4.000 5.000 5.000 6.000 6.000\") == \"The gopher can escape through the hole at (0,0).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000 4.000 4.000 5.000 5.000 6.000 6.000 7.000 7.000\") == \"The gopher can escape through the hole at (7,7).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000 4.000 4.000 5.000 5.000 6.000 6.000 7.000 7.000 8.000 8.000\") == \"The gopher can escape through the hole at (0,8).\"\nassert solution(\"1.000 1.000 1.000 1.000\\n-1.000 -1.000 2.000 2.000 3.000 3.000 4.000 4.000 5.000 5.000 6.000 6.000 7.000 7.0",
        "num_ids_2": 108,
        "num_ids_4": 238
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.600 1.600\") == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.600 1.600\\n1.700 1.700\") == \"The gopher can escape through the hole at (1.500, 1.500).\"",
        "num_ids_2": 130,
        "num_ids_4": 223
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n\")) == \"The gopher can escape through the hole at (1.500, 1.500).\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500 2.000 2.000\\n\")) == \"The gopher cannot escape.\"\nassert solution(input(\"1.000 1.000 2.000 2.000\\n1.500 1.500 1.000 1.000\\n\")) == \"The gopher can escape through the hole at (1.500, 1.500).\"\n",
        "num_ids_2": 137,
        "num_ids_4": 220
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 1.000).\\n\"\nassert solution(\"1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.500 2.000\") == \"The gopher can escape through the hole at (1.000, 2.000).\\n\"",
        "num_ids_2": 83,
        "num_ids_4": 127
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.000 1.000\") == \"The gopher can escape through the hole at (1.500, 2.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.500 2.000\") == \"The gopher can escape through the hole at (1.000, 2.000).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n2.000 2.000\") == \"The gopher can escape through the hole at (1.000, 2.500).\\n\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.000 1.000\") == \"The gopher can escape through the hole at (1.000, 2.000).\\n\"",
        "num_ids_2": 121,
        "num_ids_4": 259
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\"\n\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at (1.5, 1.5).\"",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500\\n') == 'The gopher cannot escape.\\n'\nassert solution('1.234 1.234\\n1.000 1.000\\n') == 'The gopher can escape through the hole at (1.000, 1.000).\\n'\nassert solution('1.234 1.234\\n1.234 1.234\\n') == 'The gopher can escape through the hole at (1.000, 1.000).\\n'\nassert solution('1.234 1.234\\n1.234 1.235\\n') == 'The gopher can escape through the hole at (1.000, 1.000).\\n'\nassert solution('1.234 1.234\\n1.234 1.234\\n1.234 1.234\\n') == 'The gopher can escape through the hole at (1.000, 1.000).\\n'\n",
        "num_ids_2": 113,
        "num_ids_4": 231
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('6 3\\n5 5\\n2') == 'N\\n'\nassert solution('1 1\\n2 2\\n3') == 'Y\\n'\nassert solution('5 3\\n4 4\\n1') == 'N\\n'\nassert solution('7 2\\n5 3\\n4') == 'Y\\n'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"4 5\\n4 4\\n1\") == \"Y\\n\"\nassert solution(\"3 3\\n4 4\\n4\") == \"N\\n\"\nassert solution(\"3 4\\n5 6\\n2\") == \"N\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"1 1\\n3 3\\n0\") == \"N\\n\"\nassert solution(\"1 1\\n3 4\\n10\") == \"N\\n\"\nassert solution(\"2 1\\n3 3\\n10\") == \"N\\n\"\nassert solution(\"3 3\\n2 1\\n5\") == \"N\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('1 1\\n2 1\\n2') == 'N'\nassert solution('3 1\\n3 2\\n3') == 'N'\nassert solution('4 4\\n5 5\\n5') == 'N'\nassert solution('0 0\\n0 0\\n0') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\\n\"\nassert solution(\"1 1\\n2 2\\n3\") == \"N\\n\"\nassert solution(\"5 5\\n6 6\\n7\") == \"Y\\n\"\nassert solution(\"0 0\\n2 2\\n4\") == \"Y\\n\"\nassert solution(\"1 1\\n2 3\\n4\") == \"N\\n\"\nassert solution(\"5 5\\n6 4\\n7\") == \"N\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('3 4\\n2 2\\n3') == 'N'\nassert solution('3 3\\n4 5\\n6') == 'N'\nassert solution('2 1\\n3 3\\n4') == 'N'\nassert solution('0 0\\n10000 10000\\n1') == 'Y'\nassert solution('5 5\\n0 0\\n10000') == 'N'",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n3 3\\n3\") == \"Y\"\nassert solution(\"3 4\\n3 3\\n5\") == \"N\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3,4) == \"Y\"\nassert solution(3,3) == \"Y\"\nassert solution(3,10) == \"N\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Y\" # correct output\nassert solution(\"3 4\\n3 3\\n3\\n\") == \"Y\" # correct output\nassert solution(\"1 2\\n3 4\\n5 6\\n\") == \"N\" # incorrect output",
        "num_ids_2": 36,
        "num_ids_4": 63
    },
    {
        "number": 4977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y\\n'\nassert solution('4 3\\n3 4\\n3') == 'Y\\n'\nassert solution('3 3\\n4 4\\n3') == 'N\\n'\nassert solution('4 3\\n3 4\\n4') == 'N\\n'\nassert solution('3 4\\n3 3\\n4') == 'N\\n'",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 7\\n...\\n.......\\n.......\\n...#\\n..###\\n') == ['...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass']",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(stdin=sys.stdin.read())\\n\"\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nprint(f\"OK: {result}\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 7\\n....V...\\n.......\\n.......\\n...#...\\n..###..') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7\") == \"...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n...\\n.......\\n.......\\n...#...\\n..###..\\n\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution(input()))\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n\") == \"11\\n\"\nassert solution(\"1000000000\\n\") == \"1\\n\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234",
        "num_ids_2": 39,
        "num_ids_4": 1027
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    13\n\"\"\"\n) == \"11\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"11\", \"Test 1 Failed\"\nassert solution
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"11\\n\", \"Test failed for sample input 1\"\nassert solution(\"123\") == \"123\\n\", \"Test failed for sample input 2\"\nassert solution(\"10\") == \"010\\n\", \"Test failed for sample input 3\"\nassert solution(\"5\") == \"001\\n\", \"Test failed for sample input 4\"\nassert solution(\"0\") == \"000\\n\", \"Test failed for sample input 5\"",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"11\" # Correct solution",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == '9\\nI must watch Star Wars with my daughter'\n\nprint(\"All tests passed\")",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9, \"Output does not match the expected result\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\", \"Output should be 9\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\") == \"9\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"1\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink\\npink",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9, \"The output is incorrect.\"",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\") == 9, \"def solution(stdin: str) -> str: pass\"",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n12\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n''') == '9\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabyPink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n\") == 9\nprint(\"All tests passed!\")",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon') == 9\nassert solution('12\\npink\\ntaquilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nabypink\\nPInKpinkPinK\\nPInkrose\\nlazerlemon\\n6\\npink\\npink\\nrose\\nrose\\npurple\\npink\\norange\\npink\\ngreen\\npink\\nblack\\nred\\nblack\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nblue\\nb",
        "num_ids_2": 1029,
        "num_ids_4": 1029
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5 3\\nABC') == '1 3 5'\nassert solution('3 5 1\\nA\\nC') == '3 5 1'\nassert solution('10 2 3\\n3 2 10') == '10 2 3'\nassert solution('7 10 5\\n5 10 7') == '7 10 5'\nassert solution('5 10 7\\n7 10 5') == '5 10 7'",
        "num_ids_2": 44,
        "num_ids_4": 100
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\", \"Test case 1 failed\"\nassert solution(\"1 3 5\") == \"1 3 5\", \"Test case 2 failed\"\nassert solution(\"1 3 4\") == \"1 4 3\", \"Test case 3 failed\"\nassert solution(\"1 4 3\") == \"1 4 3\", \"Test case 4 failed\"\nassert solution(\"1 5 4\") == \"1 5 4\", \"Test case 5 failed\"",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 3 5\", \"Test failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\\nABC\\n\") == \"1 3 5\\ndef solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    buy 1 15\n    split 3\n    sell 1 5\n    die 4\n    \"\"\"\n) == \"8.00000000\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4\\n') == 8.0",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\ndie 4') == '8.00000000'\nassert solution('buy 2 100\\nsell 2 50\\nsell 2 25\\nsplit 2\\nsell 3 5\\nsell 4 10\\nsell 5 15\\nsell 6 20\\nsell 7 25\\nsell 8 30\\nsell 9 35\\nsell 10 40\\nsell 11 45\\nsell 12 50\\nsell 13 55\\nsell 14 60\\nsell 15 65\\nsell 16 70\\nsell 17 75\\nsell 18 80\\nsell 19 85\\nsell 20 90\\nsell 21 95\\nsell 22 100\\nsell 23 105\\nsell 24 110\\nsell 25 115\\nsell 26 120\\nsell 27 125\\nsell 28 130\\nsell 29 135\\nsell 30 140\\nsell 31 145\\nsell 32 150\\nsell 33 155\\nsell 34 160\\nsell 35 165\\nsell 36 170\\nsell 37 175\\nsell 38 180\\nsell 39 185\\nsell 40 190\\nsell 41 195\\nsell 42 200\\nsell 43 205\\nsell 44 210\\nsell 45 215\\nsell 46 220\\nsell 47 225\\nsell 48 230\\nsell 49 235\\nsell 50 240\\nsell 51 245\\nsell 52 250\\nsell 53 255\\nsell 54 260\\nsell 55 265\\nsell 56 270\\nsell 57 275\\nsell 58 280\\nsell 59 285\\nsell 60 290\\nsell 61 295\\nsell 62 300\\nsell 63 305\\nsell 64 310\\nsell 65 315\\nsell 66 320\\nsell 67 325\\nsell 68 330\\nsell 69 335\\nsell 70 340\\nsell 71 345\\nsell 72 350\\nsell 73 355\\nsell 74 360\\nsell 75 365\\nsell 76 370\\nsell 77 375\\nsell 78 380\\nsell 79 385\\nsell 80 390\\nsell 81 395\\nsell 82 400\\nsell 83 405\\nsell 84 410\\nsell 85 415\\nsell 86 420\\nsell 87 425\\nsell 88 430\\nsell 89 435\\nsell 90 440\\nsell 91 445\\nsell 92 450\\nsell 93 455\\nsell 94 460\\nsell 95 465\\nsell 96 470\\nsell 97 475\\nsell 98 480\\nsell 99 485\\nsell 100 490\\nsell 1",
        "num_ids_2": 1027,
        "num_ids_4": 1027
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8.00000000\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\\n\") == \"8.00000000\\n\"\nassert solution(\"buy 3 5\\nsell 2 10\\ndie 1\\nbuy 1 10\\nsell 1 5\\ndie 3\\nbuy 2 15\\nsell 3 5\\ndie 2\\nbuy 1 15\\nsell 1 5\\ndie 4\\n\") == \"70.00000000\\n\"",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\") == \"8.00000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"buy 1 15\nsplit 3\nsell 1 5\ndie 4\"\"\") == \"8.00000000\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"8.00000000\\n\", \"Incorrect output.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\") == \"8.00000000\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\\n\") == \"8.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsplit 3\\n\") == \"8.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"\nassert solution(\"buy 1 15\\nsell 1 5\\nsell 1 5\\nsplit 3\\nmerge 8\\n\") == \"22.00000000\\n\"",
        "num_ids_2": 80,
        "num_ids_4": 179
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(808) == '8'\nassert solution(2) == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(808) == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(808) == 8, \"Sample Input 1: x = 808\"\n\nassert solution(2) == 2, \"Sample Input 2: x = 2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(808) == '8', \"Test case 1 failed.\"\nassert solution(2) == '2', \"Test case 2 failed.\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(808) == 8, \"Test failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(808) == 8, \"Solution does not work correctly\"\nprint(\"Solution passed\")",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"808\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(808) == 8",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(808) == 8, \"Sample Input: 808\\nSample Output: 8\"\nassert solution(2) == 2, \"Sample Input: 2\\nSample Output: 2\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(808) == 8, \"The solution should return 8 as the result of multiplying the nonzero digits of 808.\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0, \"Expected 0, but got {}\".format(solution(r\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\"))",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\"\nassert solution(\"4 5\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\") == \"3\"\nassert solution(\"4 5\\nLLLRR\\nLLLRR\\nLLLRR\\nLLLRR\") == \"0\"\nassert solution(\"4 5\\nLLLRR\\nLLLRR\\nLLLRR\\nLLLRR\") == \"3\"",
        "num_ids_2": 60,
        "num_ids_4": 124
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n\"\"\"\n) == 0\n\nassert solution(\n\"\"\"\n4 5\nCCLWL\nCCCCC\nCCCCC\nCCCCC\n\"\"\"\n) == 1\n\nassert solution(\n\"\"\"\n4 5\nCCCLWC\nCCCCC\nCCCCC\nCCCCC\n\"\"\"\n) == 1\n\nassert solution(\n\"\"\"\n4 5\nCCCCC\nCCLWL\nCCCCC\nCCCCC\n\"\"\"\n) == 2\n\nassert solution(\n\"\"\"\n4 5\nCCCCC\nCCCCC\nCCLWL\nCCCCC\n\"\"\"\n) == 2\n\nassert solution(\n\"\"\"\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCLWL\n\"\"\"\n) == 3\n\nassert solution(\n\"\"\"\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n\"\"\"\n) == 4\n\nassert solution(\n\"\"\"\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n\"\"\"\n) == 4",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 0\nassert solution(open('example.txt', 'r').read()) == 2",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == 0\nassert solution(\"4 5\\nWWWWW\\nWWWWW\\nWWWWW\\nWWWWW\") == 2\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 3\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == 3\n\nfrom typing import List",
        "num_ids_2": 58,
        "num_ids_4": 120
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == 0\nassert solution('3 5\\nLLLLL\\nRRRRR\\nLLLLL\\nRRRRR') == 1\nassert solution('3 4\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL') == 1\nassert solution('1 1\\nL\\nW\\nL\\nW\\nL') == 1\nassert solution('2 4\\nLDDD\\nWDDD\\nLDDD\\nWDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD') == 5\nassert solution('5 4\\nLDDD\\nWDDD\\nLDDD\\nWDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD') == 5\nassert solution('5 4\\nLDDD\\nWDDD\\nLDDD\\nWDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nLDDD\\nL",
        "num_ids_2": 58,
        "num_ids_4": 115
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\"\n\nassert solution(\"4 5\\nLCCCC\\nLCCCC\\nLCCCC\\nLCCCC\") == \"1\"\n\nassert solution(\"4 5\\nLLLLL\\nLLLLL\\nLLLLL\\nLLLLL\") == \"1\"\n\nassert solution(\"4 5\\nWSSSS\\nWSSSS\\nWSSSS\\nWSSSS\") == \"0\"",
        "num_ids_2": 56,
        "num_ids_4": 116
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Your code is not passing the test case.\"\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\\n\") == 0\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"60\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60\\n'\nprint('All test cases passed')",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 60, \"The expected output is not correct.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 60, \"Your solution is incorrect. Please check it.\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"60\\n\", \"Your implementation is incorrect. Please check the solution provided.\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"60\", \"The output is incorrect\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == 60\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\") == \"60\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '60'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"60\", \"Test case 1 failed\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') == 'def'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') == 'def'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') == 'def'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"this is very annoying\") == \"se\", \"Test case 1\"\nassert solution(\"thiss iss veery annoying\") == \"def\", \"Test case 2\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\") == \"se\", \"The solution should return'se', but got '{}'.\".format(solution(\"this is very annoying\"))\nassert solution(\"thiss iss veery annoying\") == \"def\", \"The solution should return 'def', but got '{}'.\".format(solution(\"thiss iss veery annoying\"))",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"def\"\n\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"The solution is incorrect.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 3, \"Output should be 3, but it is: {}\".format(solution(stdin))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Expected 3, but got {}\".format(solution())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"\nassert solution(10) == \"3\"\nassert solution(100) == \"3\"\nassert solution(1000) == \"3\"\nassert solution(1000000) == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3\nassert solution(\"10 3 0\\n0 0 1 1 2\") == 2\nassert solution(\"10 3 1000000000000\\n0 0 1 1 2\") == 3\nassert solution(\"10 3 0\\n0 0 1 1 2 3\") == 2\nassert solution(\"10 3 0\\n0 0 1 1 2 3 4\") == 1",
        "num_ids_2": 49,
        "num_ids_4": 113
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"\nassert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"\nassert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"\nassert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"\nassert solution(\"5 3 0\\n0 0 1 1 2\\n\") == \"3\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Sample Input does not produce the expected output.\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3, \"Expected output: 3\"\nassert solution(\"5 3 0\\n1 2 3 4 5\") == 4, \"Expected output: 4\"\nassert solution(\"5 3 0\\n0 0 1 1 2\") == 3, \"Expected output: 3\"\nassert solution(\"5 3 0\\n1 2 3 4 5\") == 4, \"Expected output: 4\"\nassert solution(\"5 3 0\\n0 0 1 1 2\") == 3, \"Expected output: 3\"\nassert solution(\"5 3 0\\n1 2 3 4 5\") == 4, \"Expected output: 4\"",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2\\n') == '3\\n'\nassert solution('5 3 0\\n0 0 1 1 3\\n') == '2\\n'\nassert solution('5 3 0\\n0 0 1 1 4\\n') == '4\\n'",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == 3, \"Test 1 failed\"\nassert solution(\"5 4 0\\n0 0 1 1 2\") == 5, \"Test 2 failed\"\nassert solution(\"5 2 0\\n0 0 1 1 2\") == 2, \"Test 3 failed\"\nassert solution(\"5 3 1\\n0 0 1 1 2\") == 6, \"Test 4 failed\"\nassert solution(\"5 3 2\\n0 0 1 1 2\") == 8, \"Test 5 failed\"",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"\nassert solution(\"5\\n\") == \"1\\n\"\nassert solution(\"5\\n1\\n\") == \"1\\n\"\nassert solution(\"5\\n1\\n2\\n\") == \"1\\n2\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"\nassert solution(\"10\\n\") == \"1\\n\"\nassert solution(\"10\\n1\\n\") == \"1\\n\"\nassert solution(\"10\\n1\\n2\\n\") == \"1\\n2\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n10\\n15\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n\") == \"1\\n2\\n3\\n4\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"126\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"6\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"6\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 77
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\"\nassert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\"\nassert solution(\"3\\n1\\n2\\n3\\n4\") == \"1\\n2\\n6\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n\") == \"1\\n2\\n6\"",
        "num_ids_2": 52,
        "num_ids_4": 110
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"\nassert solution(\"10\\n100\\n1000\\n10000\\n\") == \"6\\n\"\nassert solution(\"10\\n\") == \"6\\n\"\nassert solution(\"100\\n\") == \"6\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1236'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\\n\", \"Example 1\"\nassert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\\n\", \"Example 2\"\nassert solution(\"3\\n1\\n2\\n3\") == \"1\\n2\\n6\\n\", \"Example 3\"",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n2\\n3\\n\") == \"1\\n2\\n6\"\nprint(\"All test cases passed\")",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1\\n2\\n6\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1\\n2\\n6\\n', \"Incorrect output for sample input 1\"\nassert solution(stdin) == '1\\n2\\n6\\n', \"Incorrect output for sample input 2\"\nassert solution(stdin) == '1\\n2\\n6\\n', \"Incorrect output for sample input 3\"",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2''') == '4 2\\n'\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\nassert solution('4\\n5 3 1 4') == '12 8'\nassert solution('6\\n7 4 2 5 1') == '25 17'\nassert solution('3\\n1 2') == '2 2'\nassert solution('3\\n1 2\\n3 4 5') == '5 5'",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\\n\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"4 2\", \"Test case failed\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\n\nfrom typing import List",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 2') == '4 2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4 2\\n', 'Your code is incorrect. Please check the solution.'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3\\n3 1 2\\n\") == \"4 2\\n\", \"Input not valid\"\nassert solution(stdin=\"3\\n3 3 1\\n\") == \"6 4\\n\", \"Input not valid\"\nassert solution(stdin=\"1\\n2\\n\") == \"2\\n\", \"Input not valid\"\nassert solution(stdin=\"1\\n3\\n\") == \"3\\n\", \"Input not valid\"\nassert solution(stdin=\"1\\n4\\n\") == \"4\\n\", \"Input not valid\"\nassert solution(stdin=\"1\\n5\\n\") == \"5\\n\", \"Input not valid\"\nassert solution(stdin=\"2\\n3\\n\") == \"5\\n\", \"Input not valid\"\nassert solution(stdin=\"5\\n3\\n\") == \"15\\n\", \"Input not valid\"",
        "num_ids_2": 60,
        "num_ids_4": 108
    },
    {
        "number": 4989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 2\\n\") == \"4 2\\n\", \"Test Case 1\"\nassert solution(\"5\\n3 1 2 3 4\\n\") == \"11 1\\n\", \"Test Case 2\"\nassert solution(\"3\\n10000 10001\\n\") == \"999999999 99998\\n\", \"Test Case 3\"\nassert solution(\"6\\n4 5 6 7 8 9\\n\") == \"181 144 103 66 40 17\\n\", \"Test Case 4\"\nassert solution(\"1\\n1 2 3\\n\") == \"1 2 3\\n\", \"Test Case 5\"",
        "num_ids_2": 63,
        "num_ids_4": 162
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 1\") == \"2\", \"Test Case 1 Failed\"\nassert solution(\"10 10 2\") == \"3\", \"Test Case 2 Failed\"\nassert solution(\"1 3 3\") == \"0\", \"Test Case 3 Failed\"\nassert solution(\"5 2 4\") == \"0\", \"Test Case 4 Failed\"\nassert solution(\"7 5 2\") == \"1\", \"Test Case 5 Failed\"\nprint(\"All Test Cases Pass\")",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\"\nassert solution(\"1 1 1\") == \"0\\n\"\nassert solution(\"3 3 3\") == \"3\\n\"\nassert solution(\"6 4 2\") == \"3\\n\"\nassert solution(\"7 5 3\") == \"6\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\", \"Incorrect output.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '2\\n'\nassert solution('10 3 2') == '3\\n'\nassert solution('1 1 1') == '1\\n'\nassert solution('2 2 2') == '2\\n'\nassert solution('3 3 3') == '3\\n'\nassert solution('4 4 4') == '4\\n'\nassert solution('5 5 5') == '5\\n'",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\nsolution = \"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\") == 2\nassert solution(\"3 2 2\") == 1\nassert solution(\"6 1 2\") == 3\nassert solution(\"1 2 2\") == 4\nassert solution(\"2 3 1\") == 6\nassert solution(\"2 1 3\") == 7\nassert solution(\"3 3 2\") == 9",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == \"2\\n\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 1') == 2, \"Incorrect Output\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5 2 1\\n\") == \"2\\n\"\nassert solution(stdin=\"6 3 2\\n\") == \"3\\n\"\nassert solution(stdin=\"7 4 3\\n\") == \"4\\n\"\nassert solution(stdin=\"8 5 3\\n\") == \"5\\n\"\nassert solution(stdin=\"9 6 4\\n\") == \"6\\n\"\nassert solution(stdin=\"10 7 4\\n\") == \"7\\n\"\nassert solution(stdin=\"11 8 5\\n\") == \"8\\n\"\nassert solution(stdin=\"12 9 5\\n\") == \"9\\n\"\nassert solution(stdin=\"13 10 6\\n\") == \"10\\n\"\nassert solution(stdin=\"14 11 6\\n\") == \"11\\n\"\nassert solution(stdin=\"15 12 7\\n\") == \"12\\n\"\nassert solution(stdin=\"16 13 7\\n\") == \"13\\n\"\nassert solution(stdin=\"17 14 8\\n\") == \"14\\n\"\nassert solution(stdin=\"18 15 8\\n\") == \"15\\n\"\nassert solution(stdin=\"19 16 9\\n\") == \"16\\n\"\nassert solution(stdin=\"20 17 9\\n\") == \"17\\n\"\nassert solution(stdin=\"21 18 10\\n\") == \"18\\n\"\nassert solution(stdin=\"22 19 10\\n\") == \"19\\n\"\nassert solution(stdin=\"23 20 11\\n\") == \"20\\n\"\nassert solution(stdin=\"24 21 11\\n\") == \"21\\n\"\nassert solution(stdin=\"25 22 12\\n\") == \"22\\n\"\nassert solution(stdin=\"26 23 12\\n\") == \"23\\n\"\nassert solution(stdin=\"27 24 13\\n\") == \"24\\n\"\nassert solution(stdin=\"28 25 13\\n\") == \"25\\n\"\nassert solution(stdin=\"29 26 14\\n\") == \"26\\n\"\nassert solution(stdin=\"30 27 14\\n\") == \"27\\n\"\nassert solution(stdin=\"31 28 15\\n\") == \"28\\n\"\nassert solution(stdin=\"32 29 15\\n\") == \"29\\n\"\nassert solution(stdin=\"33 30 16\\n\") == \"30\\n\"\nassert solution(stdin=\"34 31 16\\n\") == \"31\\n\"\nassert solution(stdin=\"35 32 17\\n\") == \"32\\n\"\nassert solution(stdin=\"36 33 17\\n\") == \"33\\n\"\nassert solution(stdin=\"37 34 18\\n\") == \"34\\n\"\nassert solution(stdin=\"38 35 18\\n\") == \"35\\n\"\nassert solution(stdin=\"39 36 19\\n\") == \"36\\n\"\nassert solution(stdin=\"40 37 19\\n\") == \"37\\n\"\nassert solution(stdin=\"41 38 20\\n\") == \"38\\n\"\nassert solution(stdin=\"42 39 20\\n\") == \"39\\n\"\nassert solution(stdin=\"43 40 21\\n\") == \"40\\n\"\nassert solution(stdin=\"44 41 21\\n\") == \"41\\n\"\nassert solution(stdin=\"45 42 22\\n\") == \"42\\n\"\nassert solution(stdin=\"46 43 22\\n\") == \"43\\n\"\nassert solution(stdin=\"47 44 23\\n\") == \"44\\n\"\nassert solution(stdin=\"48 45 23\\n\") == \"45\\n\"\nassert solution(stdin=\"49",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == 36",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"36\", \"Incorrect solution\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"36\", \"Test failed\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"36\", \"Test Case 1 Failed\"\nassert solution(7) == \"288\", \"Test Case 2 Failed\"\nassert solution(0) == \"0\", \"Test Case 3 Failed\"\nassert solution(100) == \"0\", \"Test Case 4 Failed\"\nassert solution(200) == \"0\", \"Test Case 5 Failed\"\nassert solution(2000) == \"0\", \"Test Case 6 Failed\"\nassert solution(4000000000) == \"0\", \"Test Case 7 Failed\"",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"36\\n\", \"The sum of all the values in h(5) should be 36.\"\n\nassert solution(7) == \"288\\n\", \"The sum of all the values in h(7) should be 288.\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 36, \"Expected 36, got {}\".format(solution(5))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"36\", \"Test failed.\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 36, \"The solution should be 36.\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 36, \"Incorrect output for example 5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 36, \"Your solution is incorrect.\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 1\\n4\\n2 3 3 1\") == \"2 3 4 1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2 3 4 1\"\nassert solution(open(\"input_example.txt\", \"r\")) == \"2 3 4 1\"\nassert solution(open(\"input_incorrect.txt\", \"r\")) == \"impossible\"",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"4\\n2 3 2 1\\n\") == \"2 3 2 1\"\nassert solution(\"4\\n2 2 2 1\\n\") == \"2 2 2 1\"\nassert solution(\"4\\n2 3 1 1\\n\") == \"2 3 1 1\"\nassert solution(\"4\\n2 1 1 1\\n\") == \"2 1 1 1\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3 3 1\\n') == '2 3 4 1'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 3 1\\n3 4 5 6\\n\") == \"2 3 4 1 5\"\nassert solution(\"3\\n1 2\\n\") == \"1 2\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2 3 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"",
        "num_ids_2": 65,
        "num_ids_4": 111
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 3 1\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n2 3 3 1\\n4 5 4 2\\n\") == \"2 3 4 1 5\"\nassert solution(\"10\\n2 3 3 1\\n4 5 4 2\\n6 7 4 3\\n8 9 4 3\\n\") == \"2 3 4 1 5 6 7 8 9\"\nassert solution(\"10\\n2 3 3 1\\n4 5 4 2\\n6 7 4 3\\n8 9 4 3\\n10 11 4 3\\n\") == \"2 3 4 1 5 6 7 8 9 10 11\"",
        "num_ids_2": 65,
        "num_ids_4": 212
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n3\\n1\") == \"2 3 4 1\"\nassert solution(\"4\\n2\\n3\\n1\") == \"2 3 4 1\"\nassert solution(\"6\\n2\\n3\\n1\") == \"2 3 4 1\"\nassert solution(\"7\\n3\\n3\\n1\") == \"2 3 4 1\"\nassert solution(\"8\\n3\\n2\\n1\") == \"2 3 4 1\"\nassert solution(\"9\\n4\\n2\\n1\") == \"2 3 4 1\"\nassert solution(\"10\\n4\\n3\\n1\") == \"2 3 4 1\"\nassert solution(\"11\\n4\\n3\\n2\") == \"2 3 4 1\"\nassert solution(\"12\\n4\\n3\\n3\") == \"2 3 4 1\"\nassert solution(\"13\\n4\\n2\\n2\") == \"2 3 4 1\"\nassert solution(\"14\\n4\\n2\\n3\") == \"2 3 4 1\"\nassert solution(\"15\\n4\\n3\\n3\") == \"2 3 4 1\"\nassert solution(\"16\\n4\\n3\\n4\") == \"2 3 4 1\"\nassert solution(\"17\\n4\\n3\\n5\") == \"2 3 4 1\"\nassert solution(\"18\\n4\\n3\\n6\") == \"2 3 4 1\"\nassert solution(\"19\\n4\\n3\\n7\") == \"2 3 4 1\"\nassert solution(\"20\\n4\\n3\\n8\") == \"2 3 4 1\"\nassert solution(\"21\\n4\\n3\\n9\") == \"2 3 4 1\"\nassert solution(\"22\\n4\\n3\\n10\") == \"2 3 4 1\"\nassert solution(\"23\\n4\\n2\\n2\") == \"2 3 4 1\"\nassert solution(\"24\\n4\\n2\\n3\") == \"2 3 4 1\"\nassert solution(\"25\\n4\\n3\\n3\") == \"2 3 4 1\"\nassert solution(\"26\\n4\\n3\\n4\") == \"2 3 4 1\"\nassert solution(\"27\\n4\\n3\\n5\") == \"2 3 4 1\"\nassert solution(\"28\\n4\\n3\\n6\") == \"2 3 4 1\"\nassert solution(\"29\\n4\\n3\\n7\") == \"2 3 4 1\"\nassert solution(\"30\\n4\\n3\\n8\") == \"2 3 4 1\"\nassert solution(\"31\\n4\\n3\\n9\") == \"2 3 4 1\"\nassert solution(\"32\\n4\\n3\\n10\") == \"2 3 4 1\"\nassert solution(\"33\\n4\\n2\\n2\") == \"2 3 4 1\"\nassert solution(\"34\\n4\\n2\\n3\") == \"2 3 4 1\"\nassert solution(\"35\\n4\\n3\\n3\") == \"2 3 4 1\"\nassert solution(\"36\\n4\\n3\\n4\") == \"2 3 4 1\"\nassert solution(\"37\\n4\\n3\\n5\") == \"2 3 4 1\"\nassert solution(\"38\\n4\\n3\\n6\") == \"2 3 4 1\"\nassert solution(\"39\\n4\\n3\\n7\") == \"2 3 4 1\"\nassert solution(\"40\\n4\\n3\\n8\") == \"2 3 4 1\"\nassert solution(\"41\\n4\\n3\\n9\") == \"2 3 4 1\"\nassert solution(\"42\\n4\\n3\\n10\") == \"2 3 4 1\"\nassert solution(\"43\\n4\\n2\\n2\")",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n3 2 5 4 1\") == \"3 2 5 4 1\"\nassert solution(\"4\\n3 2 5 4 1\") == \"2 3 4 1\"\nassert solution(\"5\\n3 2 5 4 1\") == \"3 2 5 4 1\"\nassert solution(\"3\\n3 2 5 4 1\") == \"1\"\nassert solution(\"6\\n3 2 5 4 1\") == \"2 3 4 1\"",
        "num_ids_2": 54,
        "num_ids_4": 110
    },
    {
        "number": 4992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"",
        "num_ids_2": 78,
        "num_ids_4": 156
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nprint(\"All tests passed!\")",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == 4\nassert solution(\"1000 10\\nabc_xyz\\nabc_abc\\nxyz_xyz\\nxyz_abc\") == 20\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\nassert solution('2 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '0'\nassert solution('4 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\nassert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\nassert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\\n\\n\\n\\n\\n\") == \"4\"",
        "num_ids_2": 80,
        "num_ids_4": 170
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"The output is incorrect.\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\n\nassert solution('2 4\\n7 4\\n6 10') == '7 6'\n\nassert solution('3 4\\n6 7\\n10 8') == '9 8'\n\nassert solution('1 1\\n1 1\\n1 1') == '1 1'",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Please check your input and output.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Incorrect output\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Error: Expected output to be '7 7', but got '{}' instead.\".format(solution(\"5 5\\n5 7\\n7 5\"))\nassert solution(\"10 10\\n20 20\\n30 30\") == \"30 30\\n\", \"Error: Expected output to be '30 30', but got '{}' instead.\".format(solution(\"10 10\\n20 20\\n30 30\"))\nassert solution(\"1000 1000\\n1000 1000\\n1000 1000\") == \"1000 1000\\n\", \"Error: Expected output to be '1000 1000', but got '{}' instead.\".format(solution(\"1000 1000\\n1000 1000\\n1000 1000\"))\nassert solution(\"1 1\\n1 1\\n1 1\") == \"1 1\\n\", \"Error: Expected output to be '1 1', but got '{}' instead.\".format(solution(\"1 1\\n1 1\\n1 1\"))",
        "num_ids_2": 138,
        "num_ids_4": 308
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\\n\", \"Input Error\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\\nmeasurement error\\n\"\nassert solution(\"1\\n1 3601\") == \"1.016666667\\nmeasurement error\\n\"\nassert solution(\"1\\n1 60\") == \"1.0\\nmeasurement error\\n\"\nassert solution(\"1\\n1 1\") == \"1.016666667\\nmeasurement error\\n\"",
        "num_ids_2": 66,
        "num_ids_4": 121
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1.016666667\nprint(\"All tests passed!\")",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n1 59\") == \"2.0\"\nassert solution(\"3\\n1 57\") == \"1.5\"\nassert solution(\"4\\n1 55\") == \"2.0\"\nassert solution(\"5\\n1 52\") == \"1.5\"\nassert solution(\"6\\n1 50\") == \"2.0\"",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 61\") == 1.016666667\nassert solution(\"2\\n1 20\\n2 30\\n3 50\") == 0.833333333\nassert solution(\"3\\n1 12\\n2 24\\n3 36\") == 0.75\nassert solution(\"4\\n1 96\\n2 120\\n3 150\\n4 180\") == 0.666666667\nassert solution(\"5\\n1 80\\n2 90\\n3 100\\n4 110\\n5 120\") == 0.6",
        "num_ids_2": 62,
        "num_ids_4": 138
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n2 30\") == \"1.016666667\"\nassert solution(\"3\\n4 20\") == \"1.016666667\"\nassert solution(\"4\\n5 50\") == \"1.016666667\"\nassert solution(\"5\\n6 180\") == \"1.016666667\"\nassert solution(\"6\\n7 300\") == \"1.016666667\"\nassert solution(\"7\\n8 450\") == \"1.016666667\"\nassert solution(\"8\\n9 600\") == \"1.016666667\"\nassert solution(\"9\\n10 750\") == \"1.016666667\"\nassert solution(\"10\\n11 900\") == \"1.016666667\"\nassert solution(\"11\\n12 1050\") == \"1.016666667\"\nassert solution(\"12\\n13 1200\") == \"1.016666667\"\nassert solution(\"13\\n14 1350\") == \"1.016666667\"\nassert solution(\"14\\n15 1500\") == \"1.016666667\"\nassert solution(\"15\\n16 1650\") == \"1.016666667\"\nassert solution(\"16\\n17 1800\") == \"1.016666667\"\nassert solution(\"17\\n18 1950\") == \"1.016666667\"\nassert solution(\"18\\n19 2100\") == \"1.016666667\"\nassert solution(\"19\\n20 2250\") == \"1.016666667\"\nassert solution(\"20\\n21 2400\") == \"1.016666667\"\nassert solution(\"21\\n22 2550\") == \"1.016666667\"\nassert solution(\"22\\n23 2700\") == \"1.016666667\"\nassert solution(\"23\\n24 2850\") == \"1.016666667\"\nassert solution(\"24\\n25 3000\") == \"1.016666667\"\nassert solution(\"25\\n26 3150\") == \"1.016666667\"\nassert solution(\"26\\n27 3300\") == \"1.016666667\"\nassert solution(\"27\\n28 3450\") == \"1.016666667\"\nassert solution(\"28\\n29 3600\") == \"1.016666667\"\nassert solution(\"29\\n30 3750\") == \"1.016666667\"\nassert solution(\"30\\n31 3900\") == \"1.016666667\"\nassert solution(\"31\\n32 4050\") == \"1.016666667\"\nassert solution(\"32\\n33 4200\") == \"1.016666667\"\nassert solution(\"33\\n34 4350\") == \"1.016666667\"\nassert solution(\"34\\n35 4500\") == \"1.016666667\"\nassert solution(\"35\\n36 4650\") == \"1.016666667\"\nassert solution(\"36\\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1.016666667\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('CPMCRYYALBERTA') == 'CALGARY'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPMCRYYALBERTA\") == \"CALGARY\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"CALGARY\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPMCRYYALBERTA\") == \"CALGARY\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPMCRYYALBERTA\") == \"CALGARY\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"CALGARY\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == 3",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\", \"Incorrect output.\"\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AB\") == \"3\"\n\nclass Solution:\n    def solution(self, moves: str) -> int:\n        left = 0\n        right = 0\n        middle = 0\n        \n        for i, move in enumerate(moves):\n            if move == 'A':\n                left += 1\n            elif move == 'B':\n                middle += 1\n            elif move == 'C':\n                right += 1\n                \n        return (left % 3 == right % 3) and (middle % 3 == left % 3)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == \"3\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == \"3\\n\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3\\n'\nassert solution(input()) == '6\\n'\nassert solution(input()) == '7\\n'\nassert solution(input()) == '10\\n'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"3\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"1 2 3 5\") == \"5\"\nassert solution(\"2 3 4 5\") == \"6\"\nassert solution(\"2 4 5 6\") == \"7\"\nassert solution(\"4 5 6 7\") == \"14\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"3\", \"Test failed\"\nassert solution(\"1 1 1 1\") == \"1\", \"Test failed\"\nassert solution(\"5 5 5 5\") == \"5\", \"Test failed\"\nassert solution(\"1 2 3 4 4 4 4\") == \"12\", \"Test failed\"",
        "num_ids_2": 40,
        "num_ids_4": 87
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == 3",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 2 3 4\") == \"3\"\nprint(\"All tests passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 1 1 1') == '4'\nassert solution('1 1 1 2') == '6'\nassert solution('1 1 1 3') == '9'\nassert solution('1 1 1 4') == '12'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"\nprint(\"All test cases passed!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"3\\n\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == 3",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"103 27\") == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('103 27') == 4, 'Test failed'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"103 27\") == \"4\"\nassert solution(\"1000 1000\") == \"4\"\nassert solution(\"0 1\") == \"2\"\nassert solution(\"3 8\") == \"4\"\nassert solution(\"1 5\") == \"2\"",
        "num_ids_2": 33,
        "num_ids_4": 57
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"103 27\") == \"4\\n\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"103 27\") == \"4\", \"Your solution is incorrect.\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('103 27') == '4\\n'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output.\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output: 4\\n\", \"Your function is not correct.\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nfor a in range(1, 10000):\n    for b in range(1, 10000):\n        if a % 2 == 0 and b % 2 == 0:\n            count = 0\n            while a % 2 == 0:\n                a = a // 2\n                count += 1\n            while b % 2 == 0:\n                b = b // 2\n                count += 1\n            if count == 0:\n                print(1)\n                return\nprint(0)\n\nfor a in range(1, 10000):\n    for b in range(1, 10000):\n        if a % 2 == 0 and b % 2 == 0:\n            count = 0\n            while a % 2 == 0:\n                a = a // 2\n                count += 1\n            while b % 2 == 0:\n                b = b // 2\n                count += 1\n            if count == 0:\n                print(1)\n                return\nprint(0)\n\nfor a in range(1, 10000):\n    for b in range(1, 10000):\n        if a % 2 == 0 and b % 2 == 0:\n            count = 0\n            while a % 2 == 0:\n                a = a // 2\n                count += 1\n            while b % 2 == 0:\n                b = b // 2\n                count += 1\n            if count == 0:\n                print(1)\n                return\nprint(0)\n\nfor a in range(1, 10000):\n    for b in range(1, 10000):\n        if a % 2 == 0 and b % 2 == 0:\n            count = 0\n            while a % 2 == 0:\n                a = a // 2\n                count += 1\n            while b % 2 == 0:\n                b = b // 2\n                count += 1\n            if count == 0:\n                print(1)\n                return\nprint(0)",
        "num_ids_2": 14,
        "num_ids_4": 14
    }
]